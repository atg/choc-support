{
    "extendedConfidence": false,
    "items": [
        "Arg",
        "Args",
        "Bool",
        "BoolVar",
        "Duration",
        "DurationVar",
        "Float64",
        "Float64Var",
        "Int",
        "Int64",
        "Int64Var",
        "IntVar",
        "Lookup",
        "NArg",
        "NFlag",
        "NewFlagSet",
        "Parse",
        "Parsed",
        "PrintDefaults",
        "Set",
        "String",
        "StringVar",
        "Uint",
        "Uint64",
        "Uint64Var",
        "UintVar",
        "Var",
        "Visit",
        "VisitAll"
    ],
    "icon": "function",
    "prototypes": [
        " any Arg ( int )",
        " any Args (  )",
        " any Bool ( string , bool , string )",
        " any BoolVar ( *bool , string , bool , string) )",
        " any Duration ( string , time.Duration , string )",
        " any DurationVar ( *time.Duration , string , time.Duration , string) )",
        " any Float64 ( string , float64 , string )",
        " any Float64Var ( *float64 , string , float64 , string) )",
        " any Int ( string , int , string )",
        " any Int64 ( string , int64 , string )",
        " any Int64Var ( *int64 , string , int64 , string) )",
        " any IntVar ( *int , string , int , string) )",
        " any Lookup ( string )",
        " any NArg (  )",
        " any NFlag (  )",
        " any NewFlagSet ( string , ErrorHandling )",
        " any Parse ( ) )",
        " any Parsed (  )",
        " any PrintDefaults ( ) )",
        " any Set ( string , string )",
        " any String ( string , string , string )",
        " any StringVar ( *string , string , string , string) )",
        " any Uint ( string , uint , string )",
        " any Uint64 ( string , uint64 , string )",
        " any Uint64Var ( *uint64 , string , uint64 , string) )",
        " any UintVar ( *uint , string , uint , string) )",
        " any Var ( Value , string , string) )",
        " any Visit ( func(*Flag)) )",
        " any VisitAll ( func(*Flag)) )"
    ],
    "prefix": "flag."
}