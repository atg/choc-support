{
    "extendedConfidence": true,
    "items": [
        "Decode",
        "DecodeConfig",
        "NewAlpha",
        "NewAlpha16",
        "NewGray",
        "NewGray16",
        "NewNRGBA",
        "NewNRGBA64",
        "NewPaletted",
        "NewRGBA",
        "NewRGBA64",
        "NewUniform",
        "NewYCbCr",
        "Pt",
        "Rect",
        "RegisterFormat",
        "ModelFunc",
        "RGBToYCbCr",
        "YCbCrToRGB",
        "Draw",
        "DrawMask",
        "Decode",
        "DecodeAll",
        "DecodeConfig",
        "Decode",
        "DecodeConfig",
        "Encode",
        "Decode",
        "DecodeConfig",
        "Encode"
    ],
    "icon": "function",
    "prototypes": [
        " any Decode ( io.Reader )",
        " any DecodeConfig ( io.Reader )",
        " any NewAlpha ( Rectangle )",
        " any NewAlpha16 ( Rectangle )",
        " any NewGray ( Rectangle )",
        " any NewGray16 ( Rectangle )",
        " any NewNRGBA ( Rectangle )",
        " any NewNRGBA64 ( Rectangle )",
        " any NewPaletted ( Rectangle , color.Palette )",
        " any NewRGBA ( Rectangle )",
        " any NewRGBA64 ( Rectangle )",
        " any NewUniform ( color.Color )",
        " any NewYCbCr ( Rectangle , YCbCrSubsampleRatio )",
        " any Pt ( int , int )",
        " any Rect ( int , int , int , int )",
        " any RegisterFormat ( string , string , func(io.Reader )",
        " any ModelFunc ( func(Color )",
        " any RGBToYCbCr ( uint8 , uint8 , uint8 )",
        " any YCbCrToRGB ( uint8 , uint8 , uint8 )",
        " any Draw ( Image , image.Rectangle , image.Image , image.Point , Op) )",
        " any DrawMask ( Image , image.Rectangle , image.Image , image.Point , image.Image , image.Point , Op) )",
        " any Decode ( io.Reader )",
        " any DecodeAll ( io.Reader )",
        " any DecodeConfig ( io.Reader )",
        " any Decode ( io.Reader )",
        " any DecodeConfig ( io.Reader )",
        " any Encode ( io.Writer , image.Image , *Options )",
        " any Decode ( io.Reader )",
        " any DecodeConfig ( io.Reader )",
        " any Encode ( io.Writer , image.Image )"
    ],
    "prefix": "image."
}