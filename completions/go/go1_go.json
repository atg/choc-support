{
    "extendedConfidence": false,
    "items": [
        "FileExports",
        "FilterDecl",
        "FilterFile",
        "FilterPackage",
        "Fprint",
        "Inspect",
        "IsExported",
        "MergePackageFiles",
        "NewIdent",
        "NewObj",
        "NewPackage",
        "NewScope",
        "NotNilFilter",
        "PackageExports",
        "Print",
        "SortImports",
        "Walk",
        "ArchChar",
        "Import",
        "ImportDir",
        "IsLocalImport",
        "Examples",
        "New",
        "Synopsis",
        "ToHTML",
        "ToText",
        "ParseDir",
        "ParseExpr",
        "ParseFile",
        "Fprint",
        "PrintError",
        "Lookup",
        "NewFileSet"
    ],
    "icon": "function",
    "prototypes": [
        " any FileExports ( *File )",
        " any FilterDecl ( Decl , Filter )",
        " any FilterFile ( *File , Filter )",
        " any FilterPackage ( *Package , Filter )",
        " any Fprint ( io.Writer , *token.FileSet , interface{} , FieldFilter )",
        " any Inspect ( Node , func(Node )",
        " any IsExported ( string )",
        " any MergePackageFiles ( *Package , MergeMode )",
        " any NewIdent ( string )",
        " any NewObj ( ObjKind , string )",
        " any NewPackage ( *token.FileSet , map[string]*File , Importer , *Scope )",
        " any NewScope ( *Scope )",
        " any NotNilFilter ( string , reflect.Value )",
        " any PackageExports ( *Package )",
        " any Print ( *token.FileSet , interface{} )",
        " any SortImports ( *token.FileSet , *File) )",
        " any Walk ( Visitor , Node) )",
        " any ArchChar ( string )",
        " any Import ( string , string , ImportMode )",
        " any ImportDir ( string , ImportMode )",
        " any IsLocalImport ( string )",
        " any Examples ( ...*ast.File )",
        " any New ( *ast.Package , string , Mode )",
        " any Synopsis ( string )",
        " any ToHTML ( io.Writer , string , map[string]string) )",
        " any ToText ( io.Writer , string , string , string , int) )",
        " any ParseDir ( *token.FileSet , string , func(os.FileInfo )",
        " any ParseExpr ( string )",
        " any ParseFile ( *token.FileSet , string , interface{} , Mode )",
        " any Fprint ( io.Writer , *token.FileSet , interface{} )",
        " any PrintError ( io.Writer , error) )",
        " any Lookup ( string )",
        " any NewFileSet (  )"
    ],
    "prefix": "go."
}