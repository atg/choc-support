{"c":[{"snippet":"$$(%{0})","items":["access","alarm","asctime","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","chdir","chmod","chown","close","closedir","creat","ctermid","cuserid","dup","dup2","execl","execle","execlp","execv","execve","execvp","_exit","fcntl","fdopen","fork","fpathconf","fstat","getcwd","getegid","getenv","geteuid","getgid","getgrgid","getgrnam","getgroups","getlogin","getpgrp","getpid","getppid","getpwnam","getpwuid","getuid","isatty","kill","link","longjmp","lseek","mkdir","mkfifo","open","opendir","pathconf","pause","pipe","read","readdir","rename","rewinddir","rmdir","setgid","setjmp","setlocale","setpgid","setuid","sigaction","sigaddset","sigdelset","sigemptyset","sigfillset","sigismember","siglongjmp","sigpending","sigprocmask","sigsetjmp","sigsuspend","sleep","stat","sysconf","tcdrain","tcflow","tcflush","tcgetattr","tcgetpgrp","tcsendbreak","tcsetattr","tcsetpgrp","time","times","ttyname","tzset","umask","uname","unlink","utime","waitpid","write","aio_cancel","aio_error","aio_read","aio_return","aio_suspend","aio_write","clock_getres","clock_gettime","clock_settime","fdatasync","fsync","kill,","lio_listio","mlock","mlockall","mmap","mprotect","mq_close","mq_getattr","mq_notify","mq_open","mq_receive","mq_send","mq_setattr","msync","munlock","munlockall","munmap","nanosleep","sched_get_priority_max","sched_get_priority_min","sched_getparam","sched_getscheduler","sched_rr_get_interval","sched_setparam","sched_setscheduler","sched_yield","sem_close","sem_destroy","sem_getvalue","sem_open","sem_post","sem_unlink","sem_wait,","shm_open","shm_unlink","sigwaitinfosigtimedwait","timer_create","timer_delete","timer_gettime","timer_settime","wait","waitpid","pthread_atfork","pthread_attr_destroy","pthread_attr_getdetachstate","pthread_attr_getinheritsched","pthread_attr_getschedparam","pthread_attr_getschedpolicy","pthread_attr_getscope","pthread_attr_getstackaddr","pthread_attr_getstacksize","pthread_attr_init","pthread_attr_setdetachstate","pthread_attr_setinheritsched","pthread_attr_setschedparam","pthread_attr_setschedpolicy","pthread_attr_setscope","pthread_attr_setstackaddr","pthread_attr_setstacksize","pthread_cancel","pthread_cleanup_pop","pthread_cleanup_push","pthread_condattr_destroy","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setpshared","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_timedwait","pthread_cond_wait","pthread_create","pthread_detach","pthread_equal","pthread_exit","pthread_getschedparam","pthread_getspecific","pthread_join","pthread_key_create","pthread_key_delete","pthread_kill","pthread_mutexattr_destroy","pthread_mutexattr_getprioceiling","pthread_mutexattr_getprotocol","pthread_mutexattr_getpshared","pthread_mutexattr_init","pthread_mutexattr_setprioceiling","pthread_mutexattr_setprotocol","pthread_mutexattr_setpshared","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_once","pthread_self","pthread_setcancelstate","pthread_setcanceltype","pthread_setschedparam","pthread_setspecific","pthread_sigmask","pthread_testcancel"],"icon":"function"},{"snippet":"$$%{0}","items":["EDOM","ERANGE","FLT_RADIX","FLT_ROUNDS","FLT_DIG","DBL_DIG","LDBL_DIG","FLT_EPSILON","DBL_EPSILON","LDBL_EPSILON","FLT_MANT_DIG","DBL_MANT_DIG","LDBL_MANT_DIG","FLT_MAX","DBL_MAX","LDBL_MAX","FLT_MAX_EXP","DBL_MAX_EXP","LDBL_MAX_EXP","FLT_MIN","DBL_MIN","LDBL_MIN","FLT_MIN_EXP","DBL_MIN_EXP","LDBL_MIN_EXP","CHAR_BIT","CHAR_MAX","CHAR_MIN","SCHAR_MAX","SCHAR_MIN","UCHAR_MAX","SHRT_MAX","SHRT_MIN","USHRT_MAX","INT_MAX","INT_MIN","UINT_MAX","LONG_MAX","LONG_MIN","ULONG_MAX","LC_ALL","LC_NUMERIC","LC_MONETARY","LC_COLLATE","LC_CTYPE","LC_TIME","NULL","HUGE_VAL","SIGABRT","SIGFPE","SIGILL","SIGINT","SIGSEGV","SIGTERM","SIG_DFL","SIG_ERR","SIG_IGN","BUFSIZ","EOF","FILENAME_MAX","FOPEN_MAX","SEEK_CUR","SEEK_END","SEEK_SET","TMP_MAX","_IOFBF","_IOLBF","_IONBF","EXIT_FAILURE","EXIT_SUCCESS","RAND_MAX","CLOCKS_PER_SEC"],"icon":"constant"},{"snippet":"$$(%{0})","items":["assert","isalpha","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","toupper","tolower","errno","acos","atan","ceil","cos","cosh","fabs","floor","fmod","frexp","log","modf","sin","sinh","tan","tanh","setjmp","signal","va_start","va_end","fclose","feof","fflush","fgetpos","fopen","fprintf","fputc","fputs","fread","fscanf","fsetpos","fwrite","getchar","gets","perror","putchar","puts","remove","rewind","setbuf","sprintf","sscanf","tmpfile","ungetc","vprintf","vsprintf","abort","abs","atexit","atof","atoi","atol","bsearch","calloc","div","exit","getenv","free","labs","ldiv","malloc","mblen","mbstowcs","mbtowc","qsort","rand","realloc","strtod","strtol","strtoul","srand","system","wctomb","wcstombs","memchr","memcmp","memcpy","memset","strcat","strchr","strcmp","strcoll","strcspn","strlen","strncat","strncmp","strncpy","strpbrk","strspn","strtok","strxfrm","clock","difftime","localtime","strftime","time"],"icon":"function"}],"php":[{"snippet":"$$%{0}","items":["Phar","PharData","PharException","PharFileInfo","amqpconnection","amqpexchange","amqpqueue","apciterator","appenditerator","arrayaccess","arrayiterator","arrayobject","badfunctioncallexception","badmethodcallexception","cachingiterator","cairo","cairoantialias","cairocontent","cairocontext","cairoexception","cairoextend","cairofillrule","cairofilter","cairofontface","cairofontoptions","cairofontslant","cairofonttype","cairofontweight","cairoformat","cairogradientpattern","cairohintmetrics","cairohintstyle","cairoimagesurface","cairolineargradient","cairolinecap","cairolinejoin","cairomatrix","cairooperator","cairopath","cairopattern","cairopatterntype","cairopdfsurface","cairopslevel","cairopssurface","cairoradialgradient","cairoscaledfont","cairosolidpattern","cairostatus","cairosubpixelorder","cairosurface","cairosurfacepattern","cairosurfacetype","cairosvgsurface","cairosvgversion","cairotoyfontface","callbackfilteriterator","chdb","closure","collator","com","countable","dateinterval","dateperiod","datetime","datetimezone","dir","directoryiterator","domainexception","domattr","domcdatasection","domcharacterdata","domcomment","domdocument","domdocumentfragment","domdocumenttype","domelement","domentity","domentityreference","domexception","domimplementation","domnamednodemap","domnode","domnodelist","domnotation","domprocessinginstruction","domtext","domxpath","dotnet","emptyiterator","errorexception","exception","filesystemiterator","filteriterator","gearmanclient","gearmanjob","gearmantask","gearmanworker","globiterator","gmagick","gmagickdraw","gmagickpixel","haruannotation","harudestination","harudoc","haruencoder","haruexception","harufont","haruimage","haruoutline","harupage","httpdeflatestream","httpinflatestream","httpmessage","httpquerystring","httprequest","httprequestpool","httpresponse","imagick","imagickdraw","imagickpixel","imagickpixeliterator","infiniteiterator","intldateformatter","invalidargumentexception","iterator","iteratoraggregate","iteratoriterator","jsonserializable","judy","ktaglib_id3v2_attachedpictureframe","ktaglib_id3v2_frame","ktaglib_id3v2_tag","ktaglib_mpeg_audioproperties","ktaglib_mpeg_file","ktaglib_tag","lengthexception","libxmlerror","limititerator","locale","logicexception","lua","luaclosure","memcache","memcached","messageformatter","mongo","mongobindata","mongocode","mongocollection","mongoconnectionexception","mongocursor","mongocursorexception","mongocursortimeoutexception","mongodate","mongodb","mongodbref","mongoexception","mongogridfs","mongogridfscursor","mongogridfsexception","mongogridfsfile","mongoid","mongoint32","mongoint64","mongolog","mongomaxkey","mongominkey","mongopool","mongoregex","mongotimestamp","multipleiterator","mysqli","mysqli_driver","mysqli_result","mysqli_stmt","mysqli_warning","norewinditerator","normalizer","numberformatter","oauth","oauthexception","oauthprovider","outeriterator","outofboundsexception","outofrangeexception","overflowexception","parentiterator","pdo","pdoexception","pdostatement","quickhashinthash","quickhashintset","quickhashintstringhash","quickhashstringinthash","rangeexception","rararchive","rarentry","rarexception","recursivearrayiterator","recursivecachingiterator","recursivecallbackfilteriterator","recursivedirectoryiterator","recursivefilteriterator","recursiveiterator","recursiveiteratoriterator","recursiveregexiterator","recursivetreeiterator","reflection","reflectionclass","reflectionexception","reflectionextension","reflectionfunction","reflectionfunctionabstract","reflectionmethod","reflectionobject","reflectionparameter","reflectionproperty","reflector","regexiterator","resourcebundle","rrdcreator","rrdgraph","rrdupdater","runtimeexception","seekableiterator","serializable","simplexmlelement","simplexmliterator","snmp","snmpexception","soapclient","soapfault","soapheader","soapparam","soapserver","soapvar","solrclient","solrclientexception","solrdocument","solrdocumentfield","solrexception","solrgenericresponse","solrillegalargumentexception","solrillegaloperationexception","solrinputdocument","solrmodifiableparams","solrobject","solrparams","solrpingresponse","solrquery","solrqueryresponse","solrresponse","solrupdateresponse","solrutils","sphinxclient","splbool","spldoublylinkedlist","splenum","splfileinfo","splfileobject","splfixedarray","splfloat","splheap","splint","splmaxheap","splminheap","splobjectstorage","splobserver","splpriorityqueue","splqueue","splstack","splstring","splsubject","spltempfileobject","spltype","spoofchecker","sqlite3","sqlite3result","sqlite3stmt","stomp","stompexception","stompframe","streamwrapper","svm","svmmodel","swfaction","swfbitmap","swfbutton","swfdisplayitem","swffill","swffont","swffontchar","swfgradient","swfmorph","swfmovie","swfprebuiltclip","swfshape","swfsound","swfsoundinstance","swfsprite","swftext","swftextfield","swfvideostream","tidy","tidynode","tokyotyrant","tokyotyrantquery","tokyotyranttable","transliterator","traversable","underflowexception","unexpectedvalueexception","v8js","v8jsexception","variant","varnishadmin","varnishlog","varnishstat","weakref","xmlreader","xsltprocessor","yaf_action_abstract","yaf_application","yaf_config_abstract","yaf_config_ini","yaf_config_simple","yaf_controller_abstract","yaf_dispatcher","yaf_exception","yaf_loader","yaf_plugin_abstract","yaf_registry","yaf_request_abstract","yaf_request_http","yaf_request_simple","yaf_response_abstract","yaf_route_interface","yaf_route_map","yaf_route_regex","yaf_route_rewrite","yaf_route_simple","yaf_route_static","yaf_route_supervar","yaf_router","yaf_session","yaf_view_interface","yaf_view_simple","ziparchive"],"icon":"class"},{"items":["abs","acos","acosh","addcslashes","addslashes","aggregate_info","aggregate_methods_by_list","aggregate_methods_by_regexp","aggregate_methods","aggregate_properties_by_list","aggregate_properties_by_regexp","aggregate_properties","aggregate","apache_child_terminate","apache_get_modules","apache_get_version","apache_getenv","apache_lookup_uri","apache_note","apache_request_headers","apache_reset_timeout","apache_response_headers","apache_setenv","apc_add","apc_bin_dump","apc_bin_dumpfile","apc_bin_load","apc_bin_loadfile","apc_cache_info","apc_cas","apc_clear_cache","apc_compile_file","apc_dec","apc_define_constants","apc_delete_file","apc_delete","apc_exists","apc_fetch","apc_inc","apc_load_constants","apc_sma_info","apc_store","apd_breakpoint","apd_callstack","apd_clunk","apd_continue","apd_croak","apd_dump_function_table","apd_dump_persistent_resources","apd_dump_regular_resources","apd_echo","apd_get_active_symbols","apd_set_pprof_trace","apd_set_session_trace_socket","apd_set_session_trace","apd_set_session","array_change_key_case","array_chunk","array_combine","array_count_values","array_diff_assoc","array_diff_key","array_diff_uassoc","array_diff_ukey","array_diff","array_fill_keys","array_fill","array_filter","array_flip","array_intersect_assoc","array_intersect_key","array_intersect_uassoc","array_intersect_ukey","array_intersect","array_key_exists","array_keys","array_map","array_merge_recursive","array_merge","array_multisort","array_pad","array_pop","array_product","array_push","array_rand","array_reduce","array_replace_recursive","array_replace","array_reverse","array_search","array_shift","array_slice","array_splice","array_sum","array_udiff_assoc","array_udiff_uassoc","array_udiff","array_uintersect_assoc","array_uintersect_uassoc","array_uintersect","array_unique","array_unshift","array_values","array_walk_recursive","array_walk","array","arsort","asin","asinh","asort","assert_options","assert","atan","atan2","atanh","__autoload","base_convert","base64_decode","base64_encode","basename","bbcode_add_element","bbcode_add_smiley","bbcode_create","bbcode_destroy","bbcode_parse","bbcode_set_arg_parser","bbcode_set_flags","bcadd","bccomp","bcdiv","bcmod","bcmul","bcompiler_load_exe","bcompiler_load","bcompiler_parse_class","bcompiler_read","bcompiler_write_class","bcompiler_write_constant","bcompiler_write_exe_footer","bcompiler_write_file","bcompiler_write_footer","bcompiler_write_function","bcompiler_write_functions_from_file","bcompiler_write_header","bcompiler_write_included_filename","bcpow","bcpowmod","bcscale","bcsqrt","bcsub","bin2hex","bind_textdomain_codeset","bindec","bindtextdomain","bson_decode","bson_encode","bzclose","bzcompress","bzdecompress","bzerrno","bzerror","bzerrstr","bzflush","bzopen","bzread","bzwrite","cairo_create","cairo_font_face_get_type","cairo_font_face_status","cairo_font_options_create","cairo_font_options_equal","cairo_font_options_get_antialias","cairo_font_options_get_hint_metrics","cairo_font_options_get_hint_style","cairo_font_options_get_subpixel_order","cairo_font_options_hash","cairo_font_options_merge","cairo_font_options_set_antialias","cairo_font_options_set_hint_metrics","cairo_font_options_set_hint_style","cairo_font_options_set_subpixel_order","cairo_font_options_status","cairo_format_stride_for_width","cairo_image_surface_create_for_data","cairo_image_surface_create_from_png","cairo_image_surface_create","cairo_image_surface_get_data","cairo_image_surface_get_format","cairo_image_surface_get_height","cairo_image_surface_get_stride","cairo_image_surface_get_width","cairo_matrix_invert","cairo_matrix_multiply","cairo_matrix_rotate","cairo_matrix_transform_distance","cairo_matrix_transform_point","cairo_matrix_translate","cairo_pattern_add_color_stop_rgb","cairo_pattern_add_color_stop_rgba","cairo_pattern_create_for_surface","cairo_pattern_create_linear","cairo_pattern_create_radial","cairo_pattern_create_rgb","cairo_pattern_create_rgba","cairo_pattern_get_color_stop_count","cairo_pattern_get_color_stop_rgba","cairo_pattern_get_extend","cairo_pattern_get_filter","cairo_pattern_get_linear_points","cairo_pattern_get_matrix","cairo_pattern_get_radial_circles","cairo_pattern_get_rgba","cairo_pattern_get_surface","cairo_pattern_get_type","cairo_pattern_set_extend","cairo_pattern_set_filter","cairo_pattern_set_matrix","cairo_pattern_status","cairo_pdf_surface_create","cairo_pdf_surface_set_size","cairo_ps_get_levels","cairo_ps_level_to_string","cairo_ps_surface_create","cairo_ps_surface_dsc_begin_page_setup","cairo_ps_surface_dsc_begin_setup","cairo_ps_surface_dsc_comment","cairo_ps_surface_get_eps","cairo_ps_surface_restrict_to_level","cairo_ps_surface_set_eps","cairo_ps_surface_set_size","cairo_scaled_font_create","cairo_scaled_font_extents","cairo_scaled_font_get_ctm","cairo_scaled_font_get_font_face","cairo_scaled_font_get_font_matrix","cairo_scaled_font_get_font_options","cairo_scaled_font_get_scale_matrix","cairo_scaled_font_get_type","cairo_scaled_font_glyph_extents","cairo_scaled_font_status","cairo_scaled_font_text_extents","cairo_surface_copy_page","cairo_surface_create_similar","cairo_surface_finish","cairo_surface_flush","cairo_surface_get_content","cairo_surface_get_device_offset","cairo_surface_get_font_options","cairo_surface_get_type","cairo_surface_mark_dirty_rectangle","cairo_surface_mark_dirty","cairo_surface_set_device_offset","cairo_surface_set_fallback_resolution","cairo_surface_show_page","cairo_surface_status","cairo_surface_write_to_png","cairo_svg_surface_create","cairo_svg_surface_restrict_to_version","cairo_svg_version_to_string","cal_days_in_month","cal_from_jd","cal_info","cal_to_jd","calcul_hmac","calculhmac","call_user_func_array","call_user_func","call_user_method_array","call_user_method","ceil","chdb_create","chdir","checkdate","checkdnsrr","chgrp","chmod","chown","chr","chroot","chunk_split","class_alias","class_exists","class_implements","class_parents","class_uses","classkit_import","classkit_method_add","classkit_method_copy","classkit_method_redefine","classkit_method_remove","classkit_method_rename","clearstatcache","closedir","closelog","com_addref","com_create_guid","com_event_sink","com_get_active_object","com_invoke","com_isenum","com_load_typelib","com_message_pump","com_print_typeinfo","com_release","compact","connection_aborted","connection_status","connection_timeout","constant","convert_cyr_string","convert_uudecode","convert_uuencode","copy","cos","cosh","count_chars","count","crack_check","crack_closedict","crack_getlastmessage","crack_opendict","crc32","create_function","crypt","ctype_alnum","ctype_alpha","ctype_cntrl","ctype_digit","ctype_graph","ctype_lower","ctype_print","ctype_punct","ctype_space","ctype_upper","ctype_xdigit","cubrid_affected_rows","cubrid_bind","cubrid_client_encoding","cubrid_close_prepare","cubrid_close_request","cubrid_close","cubrid_col_get","cubrid_col_size","cubrid_column_names","cubrid_column_types","cubrid_commit","cubrid_connect_with_url","cubrid_connect","cubrid_current_oid","cubrid_data_seek","cubrid_db_name","cubrid_disconnect","cubrid_drop","cubrid_errno","cubrid_error_code_facility","cubrid_error_code","cubrid_error_msg","cubrid_error","cubrid_execute","cubrid_fetch_array","cubrid_fetch_assoc","cubrid_fetch_field","cubrid_fetch_lengths","cubrid_fetch_object","cubrid_fetch_row","cubrid_fetch","cubrid_field_flags","cubrid_field_len","cubrid_field_name","cubrid_field_seek","cubrid_field_table","cubrid_field_type","cubrid_free_result","cubrid_get_autocommit","cubrid_get_charset","cubrid_get_class_name","cubrid_get_client_info","cubrid_get_db_parameter","cubrid_get_query_timeout","cubrid_get_server_info","cubrid_get","cubrid_insert_id","cubrid_is_instance","cubrid_list_dbs","cubrid_load_from_glo","cubrid_lob_close","cubrid_lob_export","cubrid_lob_get","cubrid_lob_send","cubrid_lob_size","cubrid_lock_read","cubrid_lock_write","cubrid_move_cursor","cubrid_new_glo","cubrid_next_result","cubrid_num_cols","cubrid_num_fields","cubrid_num_rows","cubrid_pconnect_with_url","cubrid_pconnect","cubrid_ping","cubrid_prepare","cubrid_put","cubrid_query","cubrid_real_escape_string","cubrid_result","cubrid_rollback","cubrid_save_to_glo","cubrid_schema","cubrid_send_glo","cubrid_seq_drop","cubrid_seq_insert","cubrid_seq_put","cubrid_set_add","cubrid_set_autocommit","cubrid_set_db_parameter","cubrid_set_drop","cubrid_set_query_timeout","cubrid_unbuffered_query","cubrid_version","curl_close","curl_copy_handle","curl_errno","curl_error","curl_exec","curl_getinfo","curl_init","curl_multi_add_handle","curl_multi_close","curl_multi_exec","curl_multi_getcontent","curl_multi_info_read","curl_multi_init","curl_multi_remove_handle","curl_multi_select","curl_setopt_array","curl_setopt","curl_version","current","cyrus_authenticate","cyrus_bind","cyrus_close","cyrus_connect","cyrus_query","cyrus_unbind","date_default_timezone_get","date_default_timezone_set","date_parse_from_format","date_parse","date_sun_info","date_sunrise","date_sunset","date","db2_autocommit","db2_bind_param","db2_client_info","db2_close","db2_column_privileges","db2_columns","db2_commit","db2_conn_error","db2_conn_errormsg","db2_connect","db2_cursor_type","db2_escape_string","db2_exec","db2_execute","db2_fetch_array","db2_fetch_assoc","db2_fetch_both","db2_fetch_object","db2_fetch_row","db2_field_display_size","db2_field_name","db2_field_num","db2_field_precision","db2_field_scale","db2_field_type","db2_field_width","db2_foreign_keys","db2_free_result","db2_free_stmt","db2_get_option","db2_last_insert_id","db2_lob_read","db2_next_result","db2_num_fields","db2_num_rows","db2_pclose","db2_pconnect","db2_prepare","db2_primary_keys","db2_procedure_columns","db2_procedures","db2_result","db2_rollback","db2_server_info","db2_set_option","db2_special_columns","db2_statistics","db2_stmt_error","db2_stmt_errormsg","db2_table_privileges","db2_tables","dba_close","dba_delete","dba_exists","dba_fetch","dba_firstkey","dba_handlers","dba_insert","dba_key_split","dba_list","dba_nextkey","dba_open","dba_optimize","dba_popen","dba_replace","dba_sync","dbase_add_record","dbase_close","dbase_create","dbase_delete_record","dbase_get_header_info","dbase_get_record_with_names","dbase_get_record","dbase_numfields","dbase_numrecords","dbase_open","dbase_pack","dbase_replace_record","dbplus_add","dbplus_aql","dbplus_chdir","dbplus_close","dbplus_curr","dbplus_errcode","dbplus_errno","dbplus_find","dbplus_first","dbplus_flush","dbplus_freealllocks","dbplus_freelock","dbplus_freerlocks","dbplus_getlock","dbplus_getunique","dbplus_info","dbplus_last","dbplus_lockrel","dbplus_next","dbplus_open","dbplus_prev","dbplus_rchperm","dbplus_rcreate","dbplus_rcrtexact","dbplus_rcrtlike","dbplus_resolve","dbplus_restorepos","dbplus_rkeys","dbplus_ropen","dbplus_rquery","dbplus_rrename","dbplus_rsecindex","dbplus_runlink","dbplus_rzap","dbplus_savepos","dbplus_setindex","dbplus_setindexbynumber","dbplus_sql","dbplus_tcl","dbplus_tremove","dbplus_undo","dbplus_undoprepare","dbplus_unlockrel","dbplus_unselect","dbplus_update","dbplus_xlockrel","dbplus_xunlockrel","dbx_close","dbx_compare","dbx_connect","dbx_error","dbx_escape_string","dbx_fetch_row","dbx_query","dbx_sort","dcgettext","dcngettext","deaggregate","debug_backtrace","debug_print_backtrace","debug_zval_dump","decbin","dechex","decoct","define_syslog_variables","define","defined","deg2rad","delete","dgettext","dio_close","dio_fcntl","dio_open","dio_read","dio_seek","dio_stat","dio_tcsetattr","dio_truncate","dio_write","dir","dirname","disk_free_space","disk_total_space","dl","dngettext","dns_get_record","dom_import_simplexml","name","set_value","specified","value","add_root","create_attribute","create_cdata_section","create_comment","create_element_ns","create_element","create_entity_reference","create_processing_instruction","create_text_node","doctype","document_element","dump_file","dump_mem","get_element_by_id","get_elements_by_tagname","html_dump_mem","xinclude","entities","internal_subset","name","notations","public_id","system_id","get_attribute_node","get_attribute","get_elements_by_tagname","has_attribute","remove_attribute","set_attribute_node","set_attribute","tagname","add_namespace","append_child","append_sibling","attributes","child_nodes","clone_node","dump_node","first_child","get_content","has_attributes","has_child_nodes","insert_before","is_blank_node","last_child","next_sibling","node_name","node_type","node_value","owner_document","parent_node","prefix","previous_sibling","remove_child","replace_child","replace_node","set_content","set_name","set_namespace","unlink_node","data","target","domxml_new_doc","domxml_open_file","domxml_open_mem","domxml_version","domxml_xmltree","domxml_xslt_stylesheet_doc","domxml_xslt_stylesheet_file","domxml_xslt_stylesheet","domxml_xslt_version","process","result_dump_file","result_dump_mem","dotnet_load","each","easter_date","easter_days","echo","eio_busy","eio_cancel","eio_chmod","eio_chown","eio_close","eio_custom","eio_dup2","eio_event_loop","eio_fallocate","eio_fchmod","eio_fchown","eio_fdatasync","eio_fstat","eio_fstatvfs","eio_fsync","eio_ftruncate","eio_futime","eio_get_event_stream","eio_grp_add","eio_grp_cancel","eio_grp_limit","eio_grp","eio_link","eio_lstat","eio_mkdir","eio_mknod","eio_nop","eio_npending","eio_nready","eio_nreqs","eio_nthreads","eio_open","eio_poll","eio_read","eio_readahead","eio_readdir","eio_readlink","eio_realpath","eio_rename","eio_rmdir","eio_seek","eio_sendfile","eio_set_max_idle","eio_set_max_parallel","eio_set_max_poll_reqs","eio_set_max_poll_time","eio_set_min_parallel","eio_stat","eio_statvfs","eio_symlink","eio_sync_file_range","eio_sync","eio_syncfs","eio_truncate","eio_unlink","eio_utime","eio_write","empty","enchant_broker_describe","enchant_broker_dict_exists","enchant_broker_free_dict","enchant_broker_free","enchant_broker_get_error","enchant_broker_init","enchant_broker_list_dicts","enchant_broker_request_dict","enchant_broker_request_pwl_dict","enchant_broker_set_ordering","enchant_dict_add_to_personal","enchant_dict_add_to_session","enchant_dict_check","enchant_dict_describe","enchant_dict_get_error","enchant_dict_is_in_session","enchant_dict_quick_check","enchant_dict_store_replacement","enchant_dict_suggest","end","ereg_replace","ereg","eregi_replace","eregi","error_get_last","error_log","error_reporting","escapeshellarg","escapeshellcmd","eval","event_add","event_base_free","event_base_loop","event_base_loopbreak","event_base_loopexit","event_base_new","event_base_priority_init","event_base_set","event_buffer_base_set","event_buffer_disable","event_buffer_enable","event_buffer_fd_set","event_buffer_free","event_buffer_new","event_buffer_priority_set","event_buffer_read","event_buffer_set_callback","event_buffer_timeout_set","event_buffer_watermark_set","event_buffer_write","event_del","event_free","event_new","event_set","exec","exif_imagetype","exif_read_data","exif_tagname","exif_thumbnail","exit","exp","expect_expectl","expect_popen","explode","expm1","extension_loaded","extract","ezmlm_hash","fam_cancel_monitor","fam_close","fam_monitor_collection","fam_monitor_directory","fam_monitor_file","fam_next_event","fam_open","fam_pending","fam_resume_monitor","fam_suspend_monitor","fbsql_affected_rows","fbsql_autocommit","fbsql_blob_size","fbsql_change_user","fbsql_clob_size","fbsql_close","fbsql_commit","fbsql_connect","fbsql_create_blob","fbsql_create_clob","fbsql_create_db","fbsql_data_seek","fbsql_database_password","fbsql_database","fbsql_db_query","fbsql_db_status","fbsql_drop_db","fbsql_errno","fbsql_error","fbsql_fetch_array","fbsql_fetch_assoc","fbsql_fetch_field","fbsql_fetch_lengths","fbsql_fetch_object","fbsql_fetch_row","fbsql_field_flags","fbsql_field_len","fbsql_field_name","fbsql_field_seek","fbsql_field_table","fbsql_field_type","fbsql_free_result","fbsql_get_autostart_info","fbsql_hostname","fbsql_insert_id","fbsql_list_dbs","fbsql_list_fields","fbsql_list_tables","fbsql_next_result","fbsql_num_fields","fbsql_num_rows","fbsql_password","fbsql_pconnect","fbsql_query","fbsql_read_blob","fbsql_read_clob","fbsql_result","fbsql_rollback","fbsql_rows_fetched","fbsql_select_db","fbsql_set_characterset","fbsql_set_lob_mode","fbsql_set_password","fbsql_set_transaction","fbsql_start_db","fbsql_stop_db","fbsql_table_name","fbsql_username","fbsql_warnings","fclose","fdf_add_doc_javascript","fdf_add_template","fdf_close","fdf_create","fdf_enum_values","fdf_errno","fdf_error","fdf_get_ap","fdf_get_attachment","fdf_get_encoding","fdf_get_file","fdf_get_flags","fdf_get_opt","fdf_get_status","fdf_get_value","fdf_get_version","fdf_header","fdf_next_field_name","fdf_open_string","fdf_open","fdf_remove_item","fdf_save_string","fdf_save","fdf_set_ap","fdf_set_encoding","fdf_set_file","fdf_set_flags","fdf_set_javascript_action","fdf_set_on_import_javascript","fdf_set_opt","fdf_set_status","fdf_set_submit_form_action","fdf_set_target_frame","fdf_set_value","fdf_set_version","feof","fflush","fgetc","fgetcsv","fgets","fgetss","file_exists","file_get_contents","file_put_contents","file","fileatime","filectime","filegroup","fileinode","filemtime","fileowner","fileperms","filepro_fieldcount","filepro_fieldname","filepro_fieldtype","filepro_fieldwidth","filepro_retrieve","filepro_rowcount","filepro","filesize","filetype","filter_has_var","filter_id","filter_input_array","filter_input","filter_list","filter_var_array","filter_var","finfo_buffer","finfo_close","finfo_file","finfo_open","finfo_set_flags","floatval","flock","floor","flush","fmod","fnmatch","fopen","forward_static_call_array","forward_static_call","fpassthru","fprintf","fputcsv","fread","frenchtojd","fribidi_log2vis","fscanf","fseek","fsockopen","fstat","ftell","ftok","ftp_alloc","ftp_cdup","ftp_chdir","ftp_chmod","ftp_close","ftp_connect","ftp_delete","ftp_exec","ftp_fget","ftp_fput","ftp_get_option","ftp_get","ftp_login","ftp_mdtm","ftp_mkdir","ftp_nb_continue","ftp_nb_fget","ftp_nb_fput","ftp_nb_get","ftp_nb_put","ftp_nlist","ftp_pasv","ftp_put","ftp_pwd","ftp_raw","ftp_rawlist","ftp_rename","ftp_rmdir","ftp_set_option","ftp_site","ftp_size","ftp_ssl_connect","ftp_systype","ftruncate","func_get_arg","func_get_args","func_num_args","function_exists","fwrite","gc_collect_cycles","gc_disable","gc_enable","gc_enabled","gd_info","geoip_continent_code_by_name","geoip_country_code_by_name","geoip_country_code3_by_name","geoip_country_name_by_name","geoip_database_info","geoip_db_avail","geoip_db_filename","geoip_db_get_all_info","geoip_id_by_name","geoip_isp_by_name","geoip_org_by_name","geoip_record_by_name","geoip_region_by_name","geoip_region_name_by_code","geoip_time_zone_by_country_and_region","get_browser","get_called_class","get_cfg_var","get_class_methods","get_class_vars","get_class","get_current_user","get_declared_classes","get_declared_interfaces","get_declared_traits","get_defined_constants","get_defined_functions","get_defined_vars","get_extension_funcs","get_headers","get_html_translation_table","get_include_path","get_included_files","get_loaded_extensions","get_magic_quotes_gpc","get_magic_quotes_runtime","get_meta_tags","get_object_vars","get_parent_class","get_resource_type","getallheaders","getcwd","getdate","getenv","gethostbyaddr","gethostbyname","gethostbynamel","gethostname","getimagesize","getimagesizefromstring","getlastmod","getmxrr","getmygid","getmyinode","getmypid","getmyuid","getopt","getprotobyname","getprotobynumber","getrandmax","getrusage","getservbyname","getservbyport","gettext","gettimeofday","gettype","glob","gmdate","gmmktime","gmp_abs","gmp_add","gmp_and","gmp_clrbit","gmp_cmp","gmp_com","gmp_div_q","gmp_div_qr","gmp_div_r","gmp_divexact","gmp_fact","gmp_gcd","gmp_gcdext","gmp_hamdist","gmp_init","gmp_intval","gmp_invert","gmp_jacobi","gmp_legendre","gmp_mod","gmp_mul","gmp_neg","gmp_nextprime","gmp_or","gmp_perfect_square","gmp_popcount","gmp_pow","gmp_powm","gmp_prob_prime","gmp_random","gmp_scan0","gmp_scan1","gmp_setbit","gmp_sign","gmp_sqrt","gmp_sqrtrem","gmp_strval","gmp_sub","gmp_testbit","gmp_xor","gmstrftime","gnupg_adddecryptkey","gnupg_addencryptkey","gnupg_addsignkey","gnupg_cleardecryptkeys","gnupg_clearencryptkeys","gnupg_clearsignkeys","gnupg_decrypt","gnupg_decryptverify","gnupg_encrypt","gnupg_encryptsign","gnupg_export","gnupg_geterror","gnupg_getprotocol","gnupg_import","gnupg_init","gnupg_keyinfo","gnupg_setarmor","gnupg_seterrormode","gnupg_setsignmode","gnupg_sign","gnupg_verify","gopher_parsedir","grapheme_extract","grapheme_stripos","grapheme_stristr","grapheme_strlen","grapheme_strpos","grapheme_strripos","grapheme_strrpos","grapheme_strstr","grapheme_substr","gregoriantojd","gupnp_context_get_host_ip","gupnp_context_get_port","gupnp_context_get_subscription_timeout","gupnp_context_host_path","gupnp_context_new","gupnp_context_set_subscription_timeout","gupnp_context_timeout_add","gupnp_context_unhost_path","gupnp_control_point_browse_start","gupnp_control_point_browse_stop","gupnp_control_point_callback_set","gupnp_control_point_new","gupnp_device_action_callback_set","gupnp_device_info_get_service","gupnp_device_info_get","gupnp_root_device_get_available","gupnp_root_device_get_relative_location","gupnp_root_device_new","gupnp_root_device_set_available","gupnp_root_device_start","gupnp_root_device_stop","gupnp_service_action_get","gupnp_service_action_return_error","gupnp_service_action_return","gupnp_service_action_set","gupnp_service_freeze_notify","gupnp_service_info_get_introspection","gupnp_service_info_get","gupnp_service_introspection_get_state_variable","gupnp_service_notify","gupnp_service_proxy_action_get","gupnp_service_proxy_action_set","gupnp_service_proxy_add_notify","gupnp_service_proxy_callback_set","gupnp_service_proxy_get_subscribed","gupnp_service_proxy_remove_notify","gupnp_service_proxy_set_subscribed","gupnp_service_thaw_notify","gzclose","gzcompress","gzdecode","gzdeflate","gzencode","gzeof","gzfile","gzgetc","gzgets","gzgetss","gzinflate","gzopen","gzpassthru","gzread","gzrewind","gzseek","gztell","gzuncompress","gzwrite","__halt_compiler","hash_algos","hash_copy","hash_file","hash_final","hash_hmac_file","hash_hmac","hash_init","hash_update_file","hash_update_stream","hash_update","hash","header_register_callback","header_remove","header","headers_list","headers_sent","hebrev","hebrevc","hex2bin","hexdec","highlight_file","highlight_string","html_entity_decode","htmlentities","htmlspecialchars_decode","htmlspecialchars","http_build_cookie","http_build_query","http_build_str","http_build_url","http_cache_etag","http_cache_last_modified","http_chunked_decode","http_date","http_deflate","http_get_request_body_stream","http_get_request_body","http_get_request_headers","http_get","http_head","http_inflate","http_match_etag","http_match_modified","http_match_request_header","http_negotiate_charset","http_negotiate_content_type","http_negotiate_language","http_parse_cookie","http_parse_headers","http_parse_message","http_parse_params","http_persistent_handles_clean","http_persistent_handles_count","http_persistent_handles_ident","http_post_data","http_post_fields","http_put_data","http_put_file","http_put_stream","http_redirect","http_request_body_encode","http_request_method_exists","http_request_method_name","http_request_method_register","http_request_method_unregister","http_request","http_response_code","http_send_content_disposition","http_send_content_type","http_send_data","http_send_file","http_send_last_modified","http_send_status","http_send_stream","http_support","http_throttle","hw_array2objrec","hw_changeobject","hw_children","hw_childrenobj","hw_close","hw_connect","hw_connection_info","hw_cp","hw_deleteobject","hw_docbyanchor","hw_docbyanchorobj","hw_document_attributes","hw_document_bodytag","hw_document_content","hw_document_setcontent","hw_document_size","hw_dummy","hw_edittext","hw_error","hw_errormsg","hw_free_document","hw_getanchors","hw_getanchorsobj","hw_getandlock","hw_getchildcoll","hw_getchildcollobj","hw_getchilddoccoll","hw_getchilddoccollobj","hw_getobject","hw_getobjectbyquery","hw_getobjectbyquerycoll","hw_getobjectbyquerycollobj","hw_getobjectbyqueryobj","hw_getparents","hw_getparentsobj","hw_getrellink","hw_getremote","hw_getremotechildren","hw_getsrcbydestobj","hw_gettext","hw_getusername","hw_identify","hw_incollections","hw_info","hw_inscoll","hw_insdoc","hw_insertanchors","hw_insertdocument","hw_insertobject","hw_mapid","hw_modifyobject","hw_mv","hw_new_document","hw_objrec2array","hw_output_document","hw_pconnect","hw_pipedocument","hw_root","hw_setlinkroot","hw_stat","hw_unlock","hw_who","hwapi_attribute_new","hwapi_content_new","hwapi_hgcsp","hwapi_object_new","hypot","ibase_add_user","ibase_affected_rows","ibase_backup","ibase_blob_add","ibase_blob_cancel","ibase_blob_close","ibase_blob_create","ibase_blob_echo","ibase_blob_get","ibase_blob_import","ibase_blob_info","ibase_blob_open","ibase_close","ibase_commit_ret","ibase_commit","ibase_connect","ibase_db_info","ibase_delete_user","ibase_drop_db","ibase_errcode","ibase_errmsg","ibase_execute","ibase_fetch_assoc","ibase_fetch_object","ibase_fetch_row","ibase_field_info","ibase_free_event_handler","ibase_free_query","ibase_free_result","ibase_gen_id","ibase_maintain_db","ibase_modify_user","ibase_name_result","ibase_num_fields","ibase_num_params","ibase_param_info","ibase_pconnect","ibase_prepare","ibase_query","ibase_restore","ibase_rollback_ret","ibase_rollback","ibase_server_info","ibase_service_attach","ibase_service_detach","ibase_set_event_handler","ibase_timefmt","ibase_trans","ibase_wait_event","iconv_get_encoding","iconv_mime_decode_headers","iconv_mime_decode","iconv_mime_encode","iconv_set_encoding","iconv_strlen","iconv_strpos","iconv_strrpos","iconv_substr","iconv","id3_get_frame_long_name","id3_get_frame_short_name","id3_get_genre_id","id3_get_genre_list","id3_get_genre_name","id3_get_tag","id3_get_version","id3_remove_tag","id3_set_tag","idate","idn_to_ascii","idn_to_utf8","ifx_affected_rows","ifx_blobinfile_mode","ifx_byteasvarchar","ifx_close","ifx_connect","ifx_copy_blob","ifx_create_blob","ifx_create_char","ifx_do","ifx_error","ifx_errormsg","ifx_fetch_row","ifx_fieldproperties","ifx_fieldtypes","ifx_free_blob","ifx_free_char","ifx_free_result","ifx_get_blob","ifx_get_char","ifx_getsqlca","ifx_htmltbl_result","ifx_nullformat","ifx_num_fields","ifx_num_rows","ifx_pconnect","ifx_prepare","ifx_query","ifx_textasvarchar","ifx_update_blob","ifx_update_char","ifxus_close_slob","ifxus_create_slob","ifxus_free_slob","ifxus_open_slob","ifxus_read_slob","ifxus_seek_slob","ifxus_tell_slob","ifxus_write_slob","ignore_user_abort","iis_add_server","iis_get_dir_security","iis_get_script_map","iis_get_server_by_comment","iis_get_server_by_path","iis_get_server_rights","iis_get_service_state","iis_remove_server","iis_set_app_settings","iis_set_dir_security","iis_set_script_map","iis_set_server_rights","iis_start_server","iis_start_service","iis_stop_server","iis_stop_service","image_type_to_extension","image_type_to_mime_type","image2wbmp","imagealphablending","imageantialias","imagearc","imagechar","imagecharup","imagecolorallocate","imagecolorallocatealpha","imagecolorat","imagecolorclosest","imagecolorclosestalpha","imagecolorclosesthwb","imagecolordeallocate","imagecolorexact","imagecolorexactalpha","imagecolormatch","imagecolorresolve","imagecolorresolvealpha","imagecolorset","imagecolorsforindex","imagecolorstotal","imagecolortransparent","imageconvolution","imagecopy","imagecopymerge","imagecopymergegray","imagecopyresampled","imagecopyresized","imagecreate","imagecreatefromgd","imagecreatefromgd2","imagecreatefromgd2part","imagecreatefromgif","imagecreatefromjpeg","imagecreatefrompng","imagecreatefromstring","imagecreatefromwbmp","imagecreatefromxbm","imagecreatefromxpm","imagecreatetruecolor","imagedashedline","imagedestroy","imageellipse","imagefill","imagefilledarc","imagefilledellipse","imagefilledpolygon","imagefilledrectangle","imagefilltoborder","imagefilter","imagefontheight","imagefontwidth","imageftbbox","imagefttext","imagegammacorrect","imagegd","imagegd2","imagegif","imagegrabscreen","imagegrabwindow","imageinterlace","imageistruecolor","imagejpeg","imagelayereffect","imageline","imageloadfont","imagepalettecopy","imagepng","imagepolygon","imagepsbbox","imagepsencodefont","imagepsextendfont","imagepsfreefont","imagepsloadfont","imagepsslantfont","imagepstext","imagerectangle","imagerotate","imagesavealpha","imagesetbrush","imagesetpixel","imagesetstyle","imagesetthickness","imagesettile","imagestring","imagestringup","imagesx","imagesy","imagetruecolortopalette","imagettfbbox","imagettftext","imagetypes","imagewbmp","imagexbm","imap_8bit","imap_alerts","imap_append","imap_base64","imap_binary","imap_body","imap_bodystruct","imap_check","imap_clearflag_full","imap_close","imap_createmailbox","imap_delete","imap_deletemailbox","imap_errors","imap_expunge","imap_fetch_overview","imap_fetchbody","imap_fetchheader","imap_fetchmime","imap_fetchstructure","imap_gc","imap_get_quota","imap_get_quotaroot","imap_getacl","imap_getmailboxes","imap_getsubscribed","imap_headerinfo","imap_headers","imap_last_error","imap_list","imap_listscan","imap_lsub","imap_mail_compose","imap_mail_copy","imap_mail_move","imap_mail","imap_mailboxmsginfo","imap_mime_header_decode","imap_msgno","imap_num_msg","imap_num_recent","imap_open","imap_ping","imap_qprint","imap_renamemailbox","imap_reopen","imap_rfc822_parse_adrlist","imap_rfc822_parse_headers","imap_rfc822_write_address","imap_savebody","imap_search","imap_set_quota","imap_setacl","imap_setflag_full","imap_sort","imap_status","imap_subscribe","imap_thread","imap_timeout","imap_uid","imap_undelete","imap_unsubscribe","imap_utf7_decode","imap_utf7_encode","imap_utf8","implode","import_request_variables","in_array","inclued_get_data","inet_ntop","inet_pton","ingres_autocommit_state","ingres_autocommit","ingres_charset","ingres_close","ingres_commit","ingres_connect","ingres_cursor","ingres_errno","ingres_error","ingres_errsqlstate","ingres_escape_string","ingres_execute","ingres_fetch_array","ingres_fetch_assoc","ingres_fetch_object","ingres_fetch_proc_return","ingres_fetch_row","ingres_field_length","ingres_field_name","ingres_field_nullable","ingres_field_precision","ingres_field_scale","ingres_field_type","ingres_free_result","ingres_next_error","ingres_num_fields","ingres_num_rows","ingres_pconnect","ingres_prepare","ingres_query","ingres_result_seek","ingres_rollback","ingres_set_environment","ingres_unbuffered_query","ini_get_all","ini_get","ini_restore","ini_set","inotify_add_watch","inotify_init","inotify_queue_len","inotify_read","inotify_rm_watch","interface_exists","intl_error_name","intl_get_error_code","intl_get_error_message","intl_is_failure","intval","ip2long","iptcembed","iptcparse","is_a","is_array","is_bool","is_callable","is_dir","is_executable","is_file","is_finite","is_float","is_infinite","is_int","is_link","is_nan","is_null","is_numeric","is_object","is_readable","is_resource","is_scalar","is_soap_fault","is_string","is_subclass_of","is_tainted","is_uploaded_file","is_writable","isset","iterator_apply","iterator_count","iterator_to_array","java_last_exception_clear","java_last_exception_get","jddayofweek","jdmonthname","jdtofrench","jdtogregorian","jdtojewish","jdtojulian","jdtounix","jewishtojd","jpeg2wbmp","json_decode","json_encode","json_last_error","judy_type","judy_version","juliantojd","kadm5_chpass_principal","kadm5_create_principal","kadm5_delete_principal","kadm5_destroy","kadm5_flush","kadm5_get_policies","kadm5_get_principal","kadm5_get_principals","kadm5_init_with_password","kadm5_modify_principal","key","krsort","ksort","lcfirst","lcg_value","lchgrp","lchown","ldap_8859_to_t61","ldap_add","ldap_bind","ldap_compare","ldap_connect","ldap_control_paged_result_response","ldap_control_paged_result","ldap_count_entries","ldap_delete","ldap_dn2ufn","ldap_err2str","ldap_errno","ldap_error","ldap_explode_dn","ldap_first_attribute","ldap_first_entry","ldap_first_reference","ldap_free_result","ldap_get_attributes","ldap_get_dn","ldap_get_entries","ldap_get_option","ldap_get_values_len","ldap_get_values","ldap_list","ldap_mod_add","ldap_mod_del","ldap_mod_replace","ldap_modify","ldap_next_attribute","ldap_next_entry","ldap_next_reference","ldap_parse_reference","ldap_parse_result","ldap_read","ldap_rename","ldap_sasl_bind","ldap_search","ldap_set_option","ldap_set_rebind_proc","ldap_sort","ldap_start_tls","ldap_t61_to_8859","ldap_unbind","levenshtein","libxml_clear_errors","libxml_disable_entity_loader","libxml_get_errors","libxml_get_last_error","libxml_set_external_entity_loader","libxml_set_streams_context","libxml_use_internal_errors","link","linkinfo","list","localeconv","localtime","log","log10","log1p","long2ip","lstat","ltrim","lzf_compress","lzf_decompress","lzf_optimized_for","m_checkstatus","m_completeauthorizations","m_connect","m_connectionerror","m_deletetrans","m_destroyconn","m_destroyengine","m_getcell","m_getcellbynum","m_getcommadelimited","m_getheader","m_initconn","m_initengine","m_iscommadelimited","m_maxconntimeout","m_monitor","m_numcolumns","m_numrows","m_parsecommadelimited","m_responsekeys","m_responseparam","m_returnstatus","m_setblocking","m_setdropfile","m_setip","m_setssl_cafile","m_setssl_files","m_setssl","m_settimeout","m_sslcert_gen_hash","m_transactionssent","m_transinqueue","m_transkeyval","m_transnew","m_transsend","m_uwait","m_validateidentifier","m_verifyconnection","m_verifysslcert","mail","mailparse_determine_best_xfer_encoding","mailparse_msg_create","mailparse_msg_extract_part_file","mailparse_msg_extract_part","mailparse_msg_extract_whole_part_file","mailparse_msg_free","mailparse_msg_get_part_data","mailparse_msg_get_part","mailparse_msg_get_structure","mailparse_msg_parse_file","mailparse_msg_parse","mailparse_rfc822_parse_addresses","mailparse_stream_encode","mailparse_uudecode_all","max","maxdb_affected_rows","maxdb_autocommit","maxdb_change_user","maxdb_character_set_name","maxdb_close","maxdb_commit","maxdb_connect_errno","maxdb_connect_error","maxdb_connect","maxdb_data_seek","maxdb_debug","maxdb_disable_reads_from_master","maxdb_disable_rpl_parse","maxdb_dump_debug_info","maxdb_embedded_connect","maxdb_enable_reads_from_master","maxdb_enable_rpl_parse","maxdb_errno","maxdb_error","maxdb_fetch_array","maxdb_fetch_assoc","maxdb_fetch_field_direct","maxdb_fetch_field","maxdb_fetch_fields","maxdb_fetch_lengths","maxdb_fetch_object","maxdb_fetch_row","maxdb_field_count","maxdb_field_seek","maxdb_field_tell","maxdb_free_result","maxdb_get_client_info","maxdb_get_client_version","maxdb_get_host_info","maxdb_get_proto_info","maxdb_get_server_info","maxdb_get_server_version","maxdb_info","maxdb_init","maxdb_insert_id","maxdb_kill","maxdb_master_query","maxdb_more_results","maxdb_multi_query","maxdb_next_result","maxdb_num_fields","maxdb_num_rows","maxdb_options","maxdb_ping","maxdb_prepare","maxdb_query","maxdb_real_connect","maxdb_real_escape_string","maxdb_real_query","maxdb_report","maxdb_rollback","maxdb_rpl_parse_enabled","maxdb_rpl_probe","maxdb_rpl_query_type","maxdb_select_db","maxdb_send_query","maxdb_server_end","maxdb_server_init","maxdb_sqlstate","maxdb_ssl_set","maxdb_stat","maxdb_stmt_affected_rows","maxdb_stmt_bind_param","maxdb_stmt_bind_result","maxdb_stmt_close_long_data","maxdb_stmt_close","maxdb_stmt_data_seek","maxdb_stmt_errno","maxdb_stmt_error","maxdb_stmt_execute","maxdb_stmt_fetch","maxdb_stmt_free_result","maxdb_stmt_init","maxdb_stmt_num_rows","maxdb_stmt_param_count","maxdb_stmt_prepare","maxdb_stmt_reset","maxdb_stmt_result_metadata","maxdb_stmt_send_long_data","maxdb_stmt_sqlstate","maxdb_stmt_store_result","maxdb_store_result","maxdb_thread_id","maxdb_thread_safe","maxdb_use_result","maxdb_warning_count","mb_check_encoding","mb_convert_case","mb_convert_encoding","mb_convert_kana","mb_convert_variables","mb_decode_mimeheader","mb_decode_numericentity","mb_detect_encoding","mb_detect_order","mb_encode_mimeheader","mb_encode_numericentity","mb_encoding_aliases","mb_ereg_match","mb_ereg_replace_callback","mb_ereg_replace","mb_ereg_search_getpos","mb_ereg_search_getregs","mb_ereg_search_init","mb_ereg_search_pos","mb_ereg_search_regs","mb_ereg_search_setpos","mb_ereg_search","mb_ereg","mb_eregi_replace","mb_eregi","mb_get_info","mb_http_input","mb_http_output","mb_internal_encoding","mb_language","mb_list_encodings","mb_output_handler","mb_parse_str","mb_preferred_mime_name","mb_regex_encoding","mb_regex_set_options","mb_send_mail","mb_split","mb_strcut","mb_strimwidth","mb_stripos","mb_stristr","mb_strlen","mb_strpos","mb_strrchr","mb_strrichr","mb_strripos","mb_strrpos","mb_strstr","mb_strtolower","mb_strtoupper","mb_strwidth","mb_substitute_character","mb_substr_count","mb_substr","mcrypt_cbc","mcrypt_cfb","mcrypt_create_iv","mcrypt_decrypt","mcrypt_ecb","mcrypt_enc_get_algorithms_name","mcrypt_enc_get_block_size","mcrypt_enc_get_iv_size","mcrypt_enc_get_key_size","mcrypt_enc_get_modes_name","mcrypt_enc_get_supported_key_sizes","mcrypt_enc_is_block_algorithm_mode","mcrypt_enc_is_block_algorithm","mcrypt_enc_is_block_mode","mcrypt_enc_self_test","mcrypt_encrypt","mcrypt_generic_deinit","mcrypt_generic_end","mcrypt_generic_init","mcrypt_generic","mcrypt_get_block_size","mcrypt_get_cipher_name","mcrypt_get_iv_size","mcrypt_get_key_size","mcrypt_list_algorithms","mcrypt_list_modes","mcrypt_module_close","mcrypt_module_get_algo_block_size","mcrypt_module_get_algo_key_size","mcrypt_module_get_supported_key_sizes","mcrypt_module_is_block_algorithm_mode","mcrypt_module_is_block_algorithm","mcrypt_module_is_block_mode","mcrypt_module_open","mcrypt_module_self_test","mcrypt_ofb","md5_file","md5","mdecrypt_generic","memcache_debug","memory_get_peak_usage","memory_get_usage","metaphone","method_exists","mhash_count","mhash_get_block_size","mhash_get_hash_name","mhash_keygen_s2k","mhash","microtime","mime_content_type","min","ming_keypress","ming_setcubicthreshold","ming_setscale","ming_setswfcompression","ming_useconstants","ming_useswfversion","mkdir","mktime","money_format","move_uploaded_file","mqseries_back","mqseries_begin","mqseries_close","mqseries_cmit","mqseries_conn","mqseries_connx","mqseries_disc","mqseries_get","mqseries_inq","mqseries_open","mqseries_put","mqseries_put1","mqseries_set","mqseries_strerror","msession_connect","msession_count","msession_create","msession_destroy","msession_disconnect","msession_find","msession_get_array","msession_get_data","msession_get","msession_inc","msession_list","msession_listvar","msession_lock","msession_plugin","msession_randstr","msession_set_array","msession_set_data","msession_set","msession_timeout","msession_uniq","msession_unlock","msg_get_queue","msg_queue_exists","msg_receive","msg_remove_queue","msg_send","msg_set_queue","msg_stat_queue","msql_affected_rows","msql_close","msql_connect","msql_create_db","msql_data_seek","msql_db_query","msql_drop_db","msql_error","msql_fetch_array","msql_fetch_field","msql_fetch_object","msql_fetch_row","msql_field_flags","msql_field_len","msql_field_name","msql_field_seek","msql_field_table","msql_field_type","msql_free_result","msql_list_dbs","msql_list_fields","msql_list_tables","msql_num_fields","msql_num_rows","msql_pconnect","msql_query","msql_result","msql_select_db","mssql_bind","mssql_close","mssql_connect","mssql_data_seek","mssql_execute","mssql_fetch_array","mssql_fetch_assoc","mssql_fetch_batch","mssql_fetch_field","mssql_fetch_object","mssql_fetch_row","mssql_field_length","mssql_field_name","mssql_field_seek","mssql_field_type","mssql_free_result","mssql_free_statement","mssql_get_last_message","mssql_guid_string","mssql_init","mssql_min_error_severity","mssql_min_message_severity","mssql_next_result","mssql_num_fields","mssql_num_rows","mssql_pconnect","mssql_query","mssql_result","mssql_rows_affected","mssql_select_db","mt_getrandmax","mt_rand","mt_srand","mysql_affected_rows","mysql_client_encoding","mysql_close","mysql_connect","mysql_create_db","mysql_data_seek","mysql_db_name","mysql_db_query","mysql_drop_db","mysql_errno","mysql_error","mysql_escape_string","mysql_fetch_array","mysql_fetch_assoc","mysql_fetch_field","mysql_fetch_lengths","mysql_fetch_object","mysql_fetch_row","mysql_field_flags","mysql_field_len","mysql_field_name","mysql_field_seek","mysql_field_table","mysql_field_type","mysql_free_result","mysql_get_client_info","mysql_get_host_info","mysql_get_proto_info","mysql_get_server_info","mysql_info","mysql_insert_id","mysql_list_dbs","mysql_list_fields","mysql_list_processes","mysql_list_tables","mysql_num_fields","mysql_num_rows","mysql_pconnect","mysql_ping","mysql_query","mysql_real_escape_string","mysql_result","mysql_select_db","mysql_set_charset","mysql_stat","mysql_tablename","mysql_thread_id","mysql_unbuffered_query","mysqli_disable_rpl_parse","mysqli_enable_reads_from_master","mysqli_enable_rpl_parse","mysqli_get_cache_stats","mysqli_master_query","mysqli_report","mysqli_rpl_parse_enabled","mysqli_rpl_probe","mysqli_slave_query","mysqlnd_ms_get_last_gtid","mysqlnd_ms_get_last_used_connection","mysqlnd_ms_get_stats","mysqlnd_ms_match_wild","mysqlnd_ms_query_is_select","mysqlnd_ms_set_qos","mysqlnd_ms_set_user_pick_server","mysqlnd_qc_clear_cache","mysqlnd_qc_get_available_handlers","mysqlnd_qc_get_cache_info","mysqlnd_qc_get_core_stats","mysqlnd_qc_get_normalized_query_trace_log","mysqlnd_qc_get_query_trace_log","mysqlnd_qc_set_cache_condition","mysqlnd_qc_set_is_select","mysqlnd_qc_set_storage_handler","mysqlnd_qc_set_user_handlers","mysqlnd_uh_convert_to_mysqlnd","mysqlnd_uh_set_connection_proxy","mysqlnd_uh_set_statement_proxy","natcasesort","natsort","ncurses_addch","ncurses_addchnstr","ncurses_addchstr","ncurses_addnstr","ncurses_addstr","ncurses_assume_default_colors","ncurses_attroff","ncurses_attron","ncurses_attrset","ncurses_baudrate","ncurses_beep","ncurses_bkgd","ncurses_bkgdset","ncurses_border","ncurses_bottom_panel","ncurses_can_change_color","ncurses_cbreak","ncurses_clear","ncurses_clrtobot","ncurses_clrtoeol","ncurses_color_content","ncurses_color_set","ncurses_curs_set","ncurses_def_prog_mode","ncurses_def_shell_mode","ncurses_define_key","ncurses_del_panel","ncurses_delay_output","ncurses_delch","ncurses_deleteln","ncurses_delwin","ncurses_doupdate","ncurses_echo","ncurses_echochar","ncurses_end","ncurses_erase","ncurses_erasechar","ncurses_filter","ncurses_flash","ncurses_flushinp","ncurses_getch","ncurses_getmaxyx","ncurses_getmouse","ncurses_getyx","ncurses_halfdelay","ncurses_has_colors","ncurses_has_ic","ncurses_has_il","ncurses_has_key","ncurses_hide_panel","ncurses_hline","ncurses_inch","ncurses_init_color","ncurses_init_pair","ncurses_init","ncurses_insch","ncurses_insdelln","ncurses_insertln","ncurses_insstr","ncurses_instr","ncurses_isendwin","ncurses_keyok","ncurses_keypad","ncurses_killchar","ncurses_longname","ncurses_meta","ncurses_mouse_trafo","ncurses_mouseinterval","ncurses_mousemask","ncurses_move_panel","ncurses_move","ncurses_mvaddch","ncurses_mvaddchnstr","ncurses_mvaddchstr","ncurses_mvaddnstr","ncurses_mvaddstr","ncurses_mvcur","ncurses_mvdelch","ncurses_mvgetch","ncurses_mvhline","ncurses_mvinch","ncurses_mvvline","ncurses_mvwaddstr","ncurses_napms","ncurses_new_panel","ncurses_newpad","ncurses_newwin","ncurses_nl","ncurses_nocbreak","ncurses_noecho","ncurses_nonl","ncurses_noqiflush","ncurses_noraw","ncurses_pair_content","ncurses_panel_above","ncurses_panel_below","ncurses_panel_window","ncurses_pnoutrefresh","ncurses_prefresh","ncurses_putp","ncurses_qiflush","ncurses_raw","ncurses_refresh","ncurses_replace_panel","ncurses_reset_prog_mode","ncurses_reset_shell_mode","ncurses_resetty","ncurses_savetty","ncurses_scr_dump","ncurses_scr_init","ncurses_scr_restore","ncurses_scr_set","ncurses_scrl","ncurses_show_panel","ncurses_slk_attr","ncurses_slk_attroff","ncurses_slk_attron","ncurses_slk_attrset","ncurses_slk_clear","ncurses_slk_color","ncurses_slk_init","ncurses_slk_noutrefresh","ncurses_slk_refresh","ncurses_slk_restore","ncurses_slk_set","ncurses_slk_touch","ncurses_standend","ncurses_standout","ncurses_start_color","ncurses_termattrs","ncurses_termname","ncurses_timeout","ncurses_top_panel","ncurses_typeahead","ncurses_ungetch","ncurses_ungetmouse","ncurses_update_panels","ncurses_use_default_colors","ncurses_use_env","ncurses_use_extended_names","ncurses_vidattr","ncurses_vline","ncurses_waddch","ncurses_waddstr","ncurses_wattroff","ncurses_wattron","ncurses_wattrset","ncurses_wborder","ncurses_wclear","ncurses_wcolor_set","ncurses_werase","ncurses_wgetch","ncurses_whline","ncurses_wmouse_trafo","ncurses_wmove","ncurses_wnoutrefresh","ncurses_wrefresh","ncurses_wstandend","ncurses_wstandout","ncurses_wvline","newt_bell","newt_button_bar","newt_button","newt_centered_window","newt_checkbox_get_value","newt_checkbox_set_flags","newt_checkbox_set_value","newt_checkbox_tree_add_item","newt_checkbox_tree_find_item","newt_checkbox_tree_get_current","newt_checkbox_tree_get_entry_value","newt_checkbox_tree_get_multi_selection","newt_checkbox_tree_get_selection","newt_checkbox_tree_multi","newt_checkbox_tree_set_current","newt_checkbox_tree_set_entry_value","newt_checkbox_tree_set_entry","newt_checkbox_tree_set_width","newt_checkbox_tree","newt_checkbox","newt_clear_key_buffer","newt_cls","newt_compact_button","newt_component_add_callback","newt_component_takes_focus","newt_create_grid","newt_cursor_off","newt_cursor_on","newt_delay","newt_draw_form","newt_draw_root_text","newt_entry_get_value","newt_entry_set_filter","newt_entry_set_flags","newt_entry_set","newt_entry","newt_finished","newt_form_add_component","newt_form_add_components","newt_form_add_hot_key","newt_form_destroy","newt_form_get_current","newt_form_run","newt_form_set_background","newt_form_set_height","newt_form_set_size","newt_form_set_timer","newt_form_set_width","newt_form_watch_fd","newt_form","newt_get_screen_size","newt_grid_add_components_to_form","newt_grid_basic_window","newt_grid_free","newt_grid_get_size","newt_grid_h_close_stacked","newt_grid_h_stacked","newt_grid_place","newt_grid_set_field","newt_grid_simple_window","newt_grid_v_close_stacked","newt_grid_v_stacked","newt_grid_wrapped_window_at","newt_grid_wrapped_window","newt_init","newt_label_set_text","newt_label","newt_listbox_append_entry","newt_listbox_clear_selection","newt_listbox_clear","newt_listbox_delete_entry","newt_listbox_get_current","newt_listbox_get_selection","newt_listbox_insert_entry","newt_listbox_item_count","newt_listbox_select_item","newt_listbox_set_current_by_key","newt_listbox_set_current","newt_listbox_set_data","newt_listbox_set_entry","newt_listbox_set_width","newt_listbox","newt_listitem_get_data","newt_listitem_set","newt_listitem","newt_open_window","newt_pop_help_line","newt_pop_window","newt_push_help_line","newt_radio_get_current","newt_radiobutton","newt_redraw_help_line","newt_reflow_text","newt_refresh","newt_resize_screen","newt_resume","newt_run_form","newt_scale_set","newt_scale","newt_scrollbar_set","newt_set_help_callback","newt_set_suspend_callback","newt_suspend","newt_textbox_get_num_lines","newt_textbox_reflowed","newt_textbox_set_height","newt_textbox_set_text","newt_textbox","newt_vertical_scrollbar","newt_wait_for_key","newt_win_choice","newt_win_entries","newt_win_menu","newt_win_message","newt_win_messagev","newt_win_ternary","next","ngettext","nl_langinfo","nl2br","notes_body","notes_copy_db","notes_create_db","notes_create_note","notes_drop_db","notes_find_note","notes_header_info","notes_list_msgs","notes_mark_read","notes_mark_unread","notes_nav_create","notes_search","notes_unread","notes_version","nsapi_request_headers","nsapi_response_headers","nsapi_virtual","nthmac","number_format","oauth_get_sbs","oauth_urlencode","ob_clean","ob_deflatehandler","ob_end_clean","ob_end_flush","ob_etaghandler","ob_flush","ob_get_clean","ob_get_contents","ob_get_flush","ob_get_length","ob_get_level","ob_get_status","ob_gzhandler","ob_iconv_handler","ob_implicit_flush","ob_inflatehandler","ob_list_handlers","ob_start","ob_tidyhandler","oci_bind_array_by_name","oci_bind_by_name","oci_cancel","oci_client_version","oci_close","oci_commit","oci_connect","oci_define_by_name","oci_error","oci_execute","oci_fetch_all","oci_fetch_array","oci_fetch_assoc","oci_fetch_object","oci_fetch_row","oci_fetch","oci_field_is_null","oci_field_name","oci_field_precision","oci_field_scale","oci_field_size","oci_field_type_raw","oci_field_type","oci_free_statement","oci_internal_debug","oci_lob_copy","oci_lob_is_equal","oci_new_collection","oci_new_connect","oci_new_cursor","oci_new_descriptor","oci_num_fields","oci_num_rows","oci_parse","oci_password_change","oci_pconnect","oci_result","oci_rollback","oci_server_version","oci_set_action","oci_set_client_identifier","oci_set_client_info","oci_set_edition","oci_set_module_name","oci_set_prefetch","oci_statement_type","ocifetchinto","octdec","odbc_autocommit","odbc_binmode","odbc_close_all","odbc_close","odbc_columnprivileges","odbc_columns","odbc_commit","odbc_connect","odbc_cursor","odbc_data_source","odbc_error","odbc_errormsg","odbc_exec","odbc_execute","odbc_fetch_array","odbc_fetch_into","odbc_fetch_object","odbc_fetch_row","odbc_field_len","odbc_field_name","odbc_field_num","odbc_field_scale","odbc_field_type","odbc_foreignkeys","odbc_free_result","odbc_gettypeinfo","odbc_longreadlen","odbc_next_result","odbc_num_fields","odbc_num_rows","odbc_pconnect","odbc_prepare","odbc_primarykeys","odbc_procedurecolumns","odbc_procedures","odbc_result_all","odbc_result","odbc_rollback","odbc_setoption","odbc_specialcolumns","odbc_statistics","odbc_tableprivileges","odbc_tables","openal_buffer_create","openal_buffer_data","openal_buffer_destroy","openal_buffer_get","openal_buffer_loadwav","openal_context_create","openal_context_current","openal_context_destroy","openal_context_process","openal_context_suspend","openal_device_close","openal_device_open","openal_listener_get","openal_listener_set","openal_source_create","openal_source_destroy","openal_source_get","openal_source_pause","openal_source_play","openal_source_rewind","openal_source_set","openal_source_stop","openal_stream","opendir","openlog","openssl_cipher_iv_length","openssl_csr_export_to_file","openssl_csr_export","openssl_csr_get_public_key","openssl_csr_get_subject","openssl_csr_new","openssl_csr_sign","openssl_decrypt","openssl_dh_compute_key","openssl_digest","openssl_encrypt","openssl_error_string","openssl_free_key","openssl_get_cipher_methods","openssl_get_md_methods","openssl_open","openssl_pkcs12_export_to_file","openssl_pkcs12_export","openssl_pkcs12_read","openssl_pkcs7_decrypt","openssl_pkcs7_encrypt","openssl_pkcs7_sign","openssl_pkcs7_verify","openssl_pkey_export_to_file","openssl_pkey_export","openssl_pkey_free","openssl_pkey_get_details","openssl_pkey_get_private","openssl_pkey_get_public","openssl_pkey_new","openssl_private_decrypt","openssl_private_encrypt","openssl_public_decrypt","openssl_public_encrypt","openssl_random_pseudo_bytes","openssl_seal","openssl_sign","openssl_verify","openssl_x509_check_private_key","openssl_x509_checkpurpose","openssl_x509_export_to_file","openssl_x509_export","openssl_x509_free","openssl_x509_parse","openssl_x509_read","ord","output_add_rewrite_var","output_reset_rewrite_vars","overload","override_function","ovrimos_close","ovrimos_commit","ovrimos_connect","ovrimos_cursor","ovrimos_exec","ovrimos_execute","ovrimos_fetch_into","ovrimos_fetch_row","ovrimos_field_len","ovrimos_field_name","ovrimos_field_num","ovrimos_field_type","ovrimos_free_result","ovrimos_longreadlen","ovrimos_num_fields","ovrimos_num_rows","ovrimos_prepare","ovrimos_result_all","ovrimos_result","ovrimos_rollback","pack","parse_ini_file","parse_ini_string","parse_str","parse_url","parsekit_compile_file","parsekit_compile_string","parsekit_func_arginfo","passthru","pathinfo","pclose","pcntl_alarm","pcntl_exec","pcntl_fork","pcntl_getpriority","pcntl_setpriority","pcntl_signal_dispatch","pcntl_signal","pcntl_sigprocmask","pcntl_sigtimedwait","pcntl_sigwaitinfo","pcntl_wait","pcntl_waitpid","pcntl_wexitstatus","pcntl_wifexited","pcntl_wifsignaled","pcntl_wifstopped","pcntl_wstopsig","pcntl_wtermsig","PDF_activate_item","PDF_add_launchlink","PDF_add_locallink","PDF_add_nameddest","PDF_add_note","PDF_add_pdflink","PDF_add_table_cell","PDF_add_textflow","PDF_add_thumbnail","PDF_add_weblink","PDF_arc","PDF_arcn","PDF_attach_file","PDF_begin_document","PDF_begin_font","PDF_begin_glyph","PDF_begin_item","PDF_begin_layer","PDF_begin_page_ext","PDF_begin_page","PDF_begin_pattern","PDF_begin_template_ext","PDF_begin_template","PDF_circle","PDF_clip","PDF_close_image","PDF_close_pdi_page","PDF_close_pdi","PDF_close","PDF_closepath_fill_stroke","PDF_closepath_stroke","PDF_closepath","PDF_concat","PDF_continue_text","PDF_create_3dview","PDF_create_action","PDF_create_annotation","PDF_create_bookmark","PDF_create_field","PDF_create_fieldgroup","PDF_create_gstate","PDF_create_pvf","PDF_create_textflow","PDF_curveto","PDF_define_layer","PDF_delete_pvf","PDF_delete_table","PDF_delete_textflow","PDF_delete","PDF_encoding_set_char","PDF_end_document","PDF_end_font","PDF_end_glyph","PDF_end_item","PDF_end_layer","PDF_end_page_ext","PDF_end_page","PDF_end_pattern","PDF_end_template","PDF_endpath","PDF_fill_imageblock","PDF_fill_pdfblock","PDF_fill_stroke","PDF_fill_textblock","PDF_fill","PDF_findfont","PDF_fit_image","PDF_fit_pdi_page","PDF_fit_table","PDF_fit_textflow","PDF_fit_textline","PDF_get_apiname","PDF_get_buffer","PDF_get_errmsg","PDF_get_errnum","PDF_get_majorversion","PDF_get_minorversion","PDF_get_parameter","PDF_get_pdi_parameter","PDF_get_pdi_value","PDF_get_value","PDF_info_font","PDF_info_matchbox","PDF_info_table","PDF_info_textflow","PDF_info_textline","PDF_initgraphics","PDF_lineto","PDF_load_3ddata","PDF_load_font","PDF_load_iccprofile","PDF_load_image","PDF_makespotcolor","PDF_moveto","PDF_new","PDF_open_ccitt","PDF_open_file","PDF_open_image_file","PDF_open_image","PDF_open_memory_image","PDF_open_pdi_document","PDF_open_pdi_page","PDF_open_pdi","PDF_pcos_get_number","PDF_pcos_get_stream","PDF_pcos_get_string","PDF_place_image","PDF_place_pdi_page","PDF_process_pdi","PDF_rect","PDF_restore","PDF_resume_page","PDF_rotate","PDF_save","PDF_scale","PDF_set_border_color","PDF_set_border_dash","PDF_set_border_style","PDF_set_gstate","PDF_set_info","PDF_set_layer_dependency","PDF_set_parameter","PDF_set_text_pos","PDF_set_value","PDF_setcolor","PDF_setdash","PDF_setdashpattern","PDF_setflat","PDF_setfont","PDF_setgray_fill","PDF_setgray_stroke","PDF_setgray","PDF_setlinecap","PDF_setlinejoin","PDF_setlinewidth","PDF_setmatrix","PDF_setmiterlimit","PDF_setrgbcolor_fill","PDF_setrgbcolor_stroke","PDF_setrgbcolor","PDF_shading_pattern","PDF_shading","PDF_shfill","PDF_show_boxed","PDF_show_xy","PDF_show","PDF_skew","PDF_stringwidth","PDF_stroke","PDF_suspend_page","PDF_translate","PDF_utf16_to_utf8","PDF_utf32_to_utf16","PDF_utf8_to_utf16","pfsockopen","pg_affected_rows","pg_cancel_query","pg_client_encoding","pg_close","pg_connect","pg_connection_busy","pg_connection_reset","pg_connection_status","pg_convert","pg_copy_from","pg_copy_to","pg_dbname","pg_delete","pg_end_copy","pg_escape_bytea","pg_escape_identifier","pg_escape_literal","pg_escape_string","pg_execute","pg_fetch_all_columns","pg_fetch_all","pg_fetch_array","pg_fetch_assoc","pg_fetch_object","pg_fetch_result","pg_fetch_row","pg_field_is_null","pg_field_name","pg_field_num","pg_field_prtlen","pg_field_size","pg_field_table","pg_field_type_oid","pg_field_type","pg_free_result","pg_get_notify","pg_get_pid","pg_get_result","pg_host","pg_insert","pg_last_error","pg_last_notice","pg_last_oid","pg_lo_close","pg_lo_create","pg_lo_export","pg_lo_import","pg_lo_open","pg_lo_read_all","pg_lo_read","pg_lo_seek","pg_lo_tell","pg_lo_unlink","pg_lo_write","pg_meta_data","pg_num_fields","pg_num_rows","pg_options","pg_parameter_status","pg_pconnect","pg_ping","pg_port","pg_prepare","pg_put_line","pg_query_params","pg_query","pg_result_error_field","pg_result_error","pg_result_seek","pg_result_status","pg_select","pg_send_execute","pg_send_prepare","pg_send_query_params","pg_send_query","pg_set_client_encoding","pg_set_error_verbosity","pg_trace","pg_transaction_status","pg_tty","pg_unescape_bytea","pg_untrace","pg_update","pg_version","php_check_syntax","php_ini_loaded_file","php_ini_scanned_files","php_logo_guid","php_sapi_name","php_strip_whitespace","php_uname","phpcredits","phpinfo","phpversion","pi","png2wbmp","popen","posix_access","posix_ctermid","posix_get_last_error","posix_getcwd","posix_getegid","posix_geteuid","posix_getgid","posix_getgrgid","posix_getgrnam","posix_getgroups","posix_getlogin","posix_getpgid","posix_getpgrp","posix_getpid","posix_getppid","posix_getpwnam","posix_getpwuid","posix_getrlimit","posix_getsid","posix_getuid","posix_initgroups","posix_isatty","posix_kill","posix_mkfifo","posix_mknod","posix_setegid","posix_seteuid","posix_setgid","posix_setpgid","posix_setsid","posix_setuid","posix_strerror","posix_times","posix_ttyname","posix_uname","pow","preg_filter","preg_grep","preg_last_error","preg_match_all","preg_match","preg_quote","preg_replace_callback","preg_replace","preg_split","prev","print_r","print","printer_abort","printer_close","printer_create_brush","printer_create_dc","printer_create_font","printer_create_pen","printer_delete_brush","printer_delete_dc","printer_delete_font","printer_delete_pen","printer_draw_bmp","printer_draw_chord","printer_draw_elipse","printer_draw_line","printer_draw_pie","printer_draw_rectangle","printer_draw_roundrect","printer_draw_text","printer_end_doc","printer_end_page","printer_get_option","printer_list","printer_logical_fontheight","printer_open","printer_select_brush","printer_select_font","printer_select_pen","printer_set_option","printer_start_doc","printer_start_page","printer_write","printf","proc_close","proc_get_status","proc_nice","proc_open","proc_terminate","property_exists","ps_add_bookmark","ps_add_launchlink","ps_add_locallink","ps_add_note","ps_add_pdflink","ps_add_weblink","ps_arc","ps_arcn","ps_begin_page","ps_begin_pattern","ps_begin_template","ps_circle","ps_clip","ps_close_image","ps_close","ps_closepath_stroke","ps_closepath","ps_continue_text","ps_curveto","ps_delete","ps_end_page","ps_end_pattern","ps_end_template","ps_fill_stroke","ps_fill","ps_findfont","ps_get_buffer","ps_get_parameter","ps_get_value","ps_hyphenate","ps_include_file","ps_lineto","ps_makespotcolor","ps_moveto","ps_new","ps_open_file","ps_open_image_file","ps_open_image","ps_open_memory_image","ps_place_image","ps_rect","ps_restore","ps_rotate","ps_save","ps_scale","ps_set_border_color","ps_set_border_dash","ps_set_border_style","ps_set_info","ps_set_parameter","ps_set_text_pos","ps_set_value","ps_setcolor","ps_setdash","ps_setflat","ps_setfont","ps_setgray","ps_setlinecap","ps_setlinejoin","ps_setlinewidth","ps_setmiterlimit","ps_setoverprintmode","ps_setpolydash","ps_shading_pattern","ps_shading","ps_shfill","ps_show_boxed","ps_show_xy","ps_show_xy2","ps_show","ps_show2","ps_string_geometry","ps_stringwidth","ps_stroke","ps_symbol_name","ps_symbol_width","ps_symbol","ps_translate","pspell_add_to_personal","pspell_add_to_session","pspell_check","pspell_clear_session","pspell_config_create","pspell_config_data_dir","pspell_config_dict_dir","pspell_config_ignore","pspell_config_mode","pspell_config_personal","pspell_config_repl","pspell_config_runtogether","pspell_config_save_repl","pspell_new_config","pspell_new_personal","pspell_new","pspell_save_wordlist","pspell_store_replacement","pspell_suggest","putenv","px_close","px_create_fp","px_date2string","px_delete_record","px_delete","px_get_field","px_get_info","px_get_parameter","px_get_record","px_get_schema","px_get_value","px_insert_record","px_new","px_numfields","px_numrecords","px_open_fp","px_put_record","px_retrieve_record","px_set_blob_file","px_set_parameter","px_set_tablename","px_set_targetencoding","px_set_value","px_timestamp2string","px_update_record","qdom_error","qdom_tree","quoted_printable_decode","quoted_printable_encode","quotemeta","rad2deg","radius_acct_open","radius_add_server","radius_auth_open","radius_close","radius_config","radius_create_request","radius_cvt_addr","radius_cvt_int","radius_cvt_string","radius_demangle_mppe_key","radius_demangle","radius_get_attr","radius_get_vendor_attr","radius_put_addr","radius_put_attr","radius_put_int","radius_put_string","radius_put_vendor_addr","radius_put_vendor_attr","radius_put_vendor_int","radius_put_vendor_string","radius_request_authenticator","radius_send_request","radius_server_secret","radius_strerror","rand","range","rar_wrapper_cache_stats","rawurldecode","rawurlencode","readdir","readfile","readgzfile","readline_add_history","readline_callback_handler_install","readline_callback_handler_remove","readline_callback_read_char","readline_clear_history","readline_completion_function","readline_info","readline_list_history","readline_on_new_line","readline_read_history","readline_redisplay","readline_write_history","readline","readlink","realpath_cache_get","realpath_cache_size","realpath","recode_file","recode_string","register_shutdown_function","register_tick_function","rename_function","rename","reset","restore_error_handler","restore_exception_handler","restore_include_path","rewind","rewinddir","rmdir","round","rpm_close","rpm_get_tag","rpm_is_valid","rpm_open","rpm_version","rrd_create","rrd_error","rrd_fetch","rrd_first","rrd_graph","rrd_info","rrd_last","rrd_lastupdate","rrd_restore","rrd_tune","rrd_update","rrd_version","rrd_xport","rsort","rtrim","runkit_class_adopt","runkit_class_emancipate","runkit_constant_add","runkit_constant_redefine","runkit_constant_remove","runkit_function_add","runkit_function_copy","runkit_function_redefine","runkit_function_remove","runkit_function_rename","runkit_import","runkit_lint_file","runkit_lint","runkit_method_add","runkit_method_copy","runkit_method_redefine","runkit_method_remove","runkit_method_rename","runkit_return_value_used","runkit_sandbox_output_handler","runkit_superglobals","scandir","sem_acquire","sem_get","sem_release","sem_remove","serialize","session_cache_expire","session_cache_limiter","session_decode","session_destroy","session_encode","session_get_cookie_params","session_id","session_is_registered","session_module_name","session_name","session_pgsql_add_error","session_pgsql_get_error","session_pgsql_get_field","session_pgsql_reset","session_pgsql_set_field","session_pgsql_status","session_regenerate_id","session_register_shutdown","session_register","session_save_path","session_set_cookie_params","session_set_save_handler","session_start","session_status","session_unregister","session_unset","session_write_close","set_error_handler","set_exception_handler","set_include_path","set_magic_quotes_runtime","set_time_limit","setcookie","setlocale","setproctitle","setrawcookie","setthreadtitle","settype","sha1_file","sha1","shell_exec","shm_attach","shm_detach","shm_get_var","shm_has_var","shm_put_var","shm_remove_var","shm_remove","shmop_close","shmop_delete","shmop_open","shmop_read","shmop_size","shmop_write","shuffle","nthmac","similar_text","simplexml_import_dom","simplexml_load_file","simplexml_load_string","sin","sinh","sleep","snmp_get_quick_print","snmp_get_valueretrieval","snmp_read_mib","snmp_set_enum_print","snmp_set_oid_numeric_print","snmp_set_oid_output_format","snmp_set_quick_print","snmp_set_valueretrieval","snmp2_get","snmp2_getnext","snmp2_real_walk","snmp2_set","snmp2_walk","snmp3_get","snmp3_getnext","snmp3_real_walk","snmp3_set","snmp3_walk","snmpget","snmpgetnext","snmprealwalk","snmpset","snmpwalk","snmpwalkoid","socket_accept","socket_bind","socket_clear_error","socket_close","socket_connect","socket_create_listen","socket_create_pair","socket_create","socket_get_option","socket_getpeername","socket_getsockname","socket_import_stream","socket_last_error","socket_listen","socket_read","socket_recv","socket_recvfrom","socket_select","socket_send","socket_sendto","socket_set_block","socket_set_nonblock","socket_set_option","socket_shutdown","socket_strerror","socket_write","solr_get_version","sort","soundex","spl_autoload_call","spl_autoload_extensions","spl_autoload_functions","spl_autoload_register","spl_autoload_unregister","spl_autoload","spl_classes","spl_object_hash","split","spliti","sprintf","sql_regcase","sqlite_array_query","sqlite_busy_timeout","sqlite_changes","sqlite_close","sqlite_column","sqlite_create_aggregate","sqlite_create_function","sqlite_current","sqlite_error_string","sqlite_escape_string","sqlite_exec","sqlite_factory","sqlite_fetch_all","sqlite_fetch_array","sqlite_fetch_column_types","sqlite_fetch_object","sqlite_fetch_single","sqlite_field_name","sqlite_has_more","sqlite_has_prev","sqlite_key","sqlite_last_error","sqlite_last_insert_rowid","sqlite_libencoding","sqlite_libversion","sqlite_next","sqlite_num_fields","sqlite_num_rows","sqlite_open","sqlite_popen","sqlite_prev","sqlite_query","sqlite_rewind","sqlite_seek","sqlite_single_query","sqlite_udf_decode_binary","sqlite_udf_encode_binary","sqlite_unbuffered_query","sqlite_valid","sqlsrv_begin_transaction","sqlsrv_cancel","sqlsrv_client_info","sqlsrv_close","sqlsrv_commit","sqlsrv_configure","sqlsrv_connect","sqlsrv_errors","sqlsrv_execute","sqlsrv_fetch_array","sqlsrv_fetch_object","sqlsrv_fetch","sqlsrv_field_metadata","sqlsrv_free_stmt","sqlsrv_get_config","sqlsrv_get_field","sqlsrv_has_rows","sqlsrv_next_result","sqlsrv_num_fields","sqlsrv_num_rows","sqlsrv_prepare","sqlsrv_query","sqlsrv_rollback","sqlsrv_rows_affected","sqlsrv_send_stream_data","sqlsrv_server_info","sqrt","srand","sscanf","ssdeep_fuzzy_compare","ssdeep_fuzzy_hash_filename","ssdeep_fuzzy_hash","ssh2_auth_hostbased_file","ssh2_auth_none","ssh2_auth_password","ssh2_auth_pubkey_file","ssh2_connect","ssh2_exec","ssh2_fetch_stream","ssh2_fingerprint","ssh2_methods_negotiated","ssh2_publickey_add","ssh2_publickey_init","ssh2_publickey_list","ssh2_publickey_remove","ssh2_scp_recv","ssh2_scp_send","ssh2_sftp_lstat","ssh2_sftp_mkdir","ssh2_sftp_readlink","ssh2_sftp_realpath","ssh2_sftp_rename","ssh2_sftp_rmdir","ssh2_sftp_stat","ssh2_sftp_symlink","ssh2_sftp_unlink","ssh2_sftp","ssh2_shell","ssh2_tunnel","stat","stats_absolute_deviation","stats_cdf_beta","stats_cdf_binomial","stats_cdf_cauchy","stats_cdf_chisquare","stats_cdf_exponential","stats_cdf_f","stats_cdf_gamma","stats_cdf_laplace","stats_cdf_logistic","stats_cdf_negative_binomial","stats_cdf_noncentral_chisquare","stats_cdf_noncentral_f","stats_cdf_poisson","stats_cdf_t","stats_cdf_uniform","stats_cdf_weibull","stats_covariance","stats_den_uniform","stats_dens_beta","stats_dens_cauchy","stats_dens_chisquare","stats_dens_exponential","stats_dens_f","stats_dens_gamma","stats_dens_laplace","stats_dens_logistic","stats_dens_negative_binomial","stats_dens_normal","stats_dens_pmf_binomial","stats_dens_pmf_hypergeometric","stats_dens_pmf_poisson","stats_dens_t","stats_dens_weibull","stats_harmonic_mean","stats_kurtosis","stats_rand_gen_beta","stats_rand_gen_chisquare","stats_rand_gen_exponential","stats_rand_gen_f","stats_rand_gen_funiform","stats_rand_gen_gamma","stats_rand_gen_ibinomial_negative","stats_rand_gen_ibinomial","stats_rand_gen_int","stats_rand_gen_ipoisson","stats_rand_gen_iuniform","stats_rand_gen_noncenral_chisquare","stats_rand_gen_noncentral_f","stats_rand_gen_noncentral_t","stats_rand_gen_normal","stats_rand_gen_t","stats_rand_get_seeds","stats_rand_phrase_to_seeds","stats_rand_ranf","stats_rand_setall","stats_skew","stats_standard_deviation","stats_stat_binomial_coef","stats_stat_correlation","stats_stat_gennch","stats_stat_independent_t","stats_stat_innerproduct","stats_stat_noncentral_t","stats_stat_paired_t","stats_stat_percentile","stats_stat_powersum","stats_variance","stomp_connect_error","stomp_version","str_getcsv","str_ireplace","str_pad","str_repeat","str_replace","str_rot13","str_shuffle","str_split","str_word_count","strcasecmp","strcmp","strcoll","strcspn","stream_bucket_append","stream_bucket_make_writeable","stream_bucket_new","stream_bucket_prepend","stream_context_create","stream_context_get_default","stream_context_get_options","stream_context_get_params","stream_context_set_default","stream_context_set_option","stream_context_set_params","stream_copy_to_stream","stream_encoding","stream_filter_append","stream_filter_prepend","stream_filter_register","stream_filter_remove","stream_get_contents","stream_get_filters","stream_get_line","stream_get_meta_data","stream_get_transports","stream_get_wrappers","stream_is_local","stream_notification_callback","stream_resolve_include_path","stream_select","stream_set_blocking","stream_set_chunk_size","stream_set_read_buffer","stream_set_timeout","stream_set_write_buffer","stream_socket_accept","stream_socket_client","stream_socket_enable_crypto","stream_socket_get_name","stream_socket_pair","stream_socket_recvfrom","stream_socket_sendto","stream_socket_server","stream_socket_shutdown","stream_supports_lock","stream_wrapper_register","stream_wrapper_restore","stream_wrapper_unregister","strftime","strip_tags","stripcslashes","stripos","stripslashes","stristr","strlen","strnatcasecmp","strnatcmp","strncasecmp","strncmp","strpbrk","strpos","strptime","strrchr","strrev","strripos","strrpos","strspn","strstr","strtok","strtolower","strtotime","strtoupper","strtr","strval","substr_compare","substr_count","substr_replace","substr","svn_add","svn_auth_get_parameter","svn_auth_set_parameter","svn_blame","svn_cat","svn_checkout","svn_cleanup","svn_client_version","svn_commit","svn_delete","svn_diff","svn_export","svn_fs_abort_txn","svn_fs_apply_text","svn_fs_begin_txn2","svn_fs_change_node_prop","svn_fs_check_path","svn_fs_contents_changed","svn_fs_copy","svn_fs_delete","svn_fs_dir_entries","svn_fs_file_contents","svn_fs_file_length","svn_fs_is_dir","svn_fs_is_file","svn_fs_make_dir","svn_fs_make_file","svn_fs_node_created_rev","svn_fs_node_prop","svn_fs_props_changed","svn_fs_revision_prop","svn_fs_revision_root","svn_fs_txn_root","svn_fs_youngest_rev","svn_import","svn_log","svn_ls","svn_mkdir","svn_repos_create","svn_repos_fs_begin_txn_for_commit","svn_repos_fs_commit_txn","svn_repos_fs","svn_repos_hotcopy","svn_repos_open","svn_repos_recover","svn_revert","svn_status","svn_update","swf_actiongeturl","swf_actiongotoframe","swf_actiongotolabel","swf_actionnextframe","swf_actionplay","swf_actionprevframe","swf_actionsettarget","swf_actionstop","swf_actiontogglequality","swf_actionwaitforframe","swf_addbuttonrecord","swf_addcolor","swf_closefile","swf_definebitmap","swf_definefont","swf_defineline","swf_definepoly","swf_definerect","swf_definetext","swf_endbutton","swf_enddoaction","swf_endshape","swf_endsymbol","swf_fontsize","swf_fontslant","swf_fonttracking","swf_getbitmapinfo","swf_getfontinfo","swf_getframe","swf_labelframe","swf_lookat","swf_modifyobject","swf_mulcolor","swf_nextid","swf_oncondition","swf_openfile","swf_ortho","swf_ortho2","swf_perspective","swf_placeobject","swf_polarview","swf_popmatrix","swf_posround","swf_pushmatrix","swf_removeobject","swf_rotate","swf_scale","swf_setfont","swf_setframe","swf_shapearc","swf_shapecurveto","swf_shapecurveto3","swf_shapefillbitmapclip","swf_shapefillbitmaptile","swf_shapefilloff","swf_shapefillsolid","swf_shapelinesolid","swf_shapelineto","swf_shapemoveto","swf_showframe","swf_startbutton","swf_startdoaction","swf_startshape","swf_startsymbol","swf_textwidth","swf_translate","swf_viewport","sybase_affected_rows","sybase_close","sybase_connect","sybase_data_seek","sybase_deadlock_retry_count","sybase_fetch_array","sybase_fetch_assoc","sybase_fetch_field","sybase_fetch_object","sybase_fetch_row","sybase_field_seek","sybase_free_result","sybase_get_last_message","sybase_min_client_severity","sybase_min_error_severity","sybase_min_message_severity","sybase_min_server_severity","sybase_num_fields","sybase_num_rows","sybase_pconnect","sybase_query","sybase_result","sybase_select_db","sybase_set_message_handler","sybase_unbuffered_query","symlink","sys_get_temp_dir","sys_getloadavg","syslog","system","taint","tan","tanh","tcpwrap_check","tempnam","textdomain","tidy_access_count","tidy_config_count","tidy_error_count","tidy_get_output","tidy_load_config","tidy_reset_config","tidy_save_config","tidy_set_encoding","tidy_setopt","tidy_warning_count","time_nanosleep","time_sleep_until","time","timezone_name_from_abbr","timezone_version_get","tmpfile","token_get_all","token_name","touch","trader_acos","trader_ad","trader_add","trader_adosc","trader_adx","trader_adxr","trader_apo","trader_aroon","trader_aroonosc","trader_asin","trader_atan","trader_atr","trader_avgprice","trader_bbands","trader_beta","trader_bop","trader_cci","trader_cdl2crows","trader_cdl3blackcrows","trader_cdl3inside","trader_cdl3linestrike","trader_cdl3outside","trader_cdl3starsinsouth","trader_cdl3whitesoldiers","trader_cdlabandonedbaby","trader_cdladvanceblock","trader_cdlbelthold","trader_cdlbreakaway","trader_cdlclosingmarubozu","trader_cdlconcealbabyswall","trader_cdlcounterattack","trader_cdldarkcloudcover","trader_cdldoji","trader_cdldojistar","trader_cdldragonflydoji","trader_cdlengulfing","trader_cdleveningdojistar","trader_cdleveningstar","trader_cdlgapsidesidewhite","trader_cdlgravestonedoji","trader_cdlhammer","trader_cdlhangingman","trader_cdlharami","trader_cdlharamicross","trader_cdlhighwave","trader_cdlhikkake","trader_cdlhikkakemod","trader_cdlhomingpigeon","trader_cdlidentical3crows","trader_cdlinneck","trader_cdlinvertedhammer","trader_cdlkicking","trader_cdlkickingbylength","trader_cdlladderbottom","trader_cdllongleggeddoji","trader_cdllongline","trader_cdlmarubozu","trader_cdlmatchinglow","trader_cdlmathold","trader_cdlmorningdojistar","trader_cdlmorningstar","trader_cdlonneck","trader_cdlpiercing","trader_cdlrickshawman","trader_cdlrisefall3methods","trader_cdlseparatinglines","trader_cdlshootingstar","trader_cdlshortline","trader_cdlspinningtop","trader_cdlstalledpattern","trader_cdlsticksandwich","trader_cdltakuri","trader_cdltasukigap","trader_cdlthrusting","trader_cdltristar","trader_cdlunique3river","trader_cdlupsidegap2crows","trader_cdlxsidegap3methods","trader_ceil","trader_cmo","trader_correl","trader_cos","trader_cosh","trader_dema","trader_div","trader_dx","trader_ema","trader_exp","trader_floor","trader_ht_dcperiod","trader_ht_dcphase","trader_ht_phasor","trader_ht_sine","trader_ht_trendline","trader_ht_trendmode","trader_kama","trader_linearreg_angle","trader_linearreg_intercept","trader_linearreg_slope","trader_linearreg","trader_ln","trader_log10","trader_ma","trader_macd","trader_macdext","trader_macdfix","trader_mama","trader_mavp","trader_max","trader_maxindex","trader_medprice","trader_mfi","trader_midpoint","trader_midprice","trader_min","trader_minindex","trader_minmax","trader_minmaxindex","trader_minus_di","trader_minus_dm","trader_mom","trader_mult","trader_natr","trader_obv","trader_plus_di","trader_plus_dm","trader_ppo","trader_roc","trader_rocp","trader_rocr","trader_rocr100","trader_rsi","trader_sar","trader_sarext","trader_sin","trader_sinh","trader_sma","trader_sqrt","trader_stddev","trader_stoch","trader_stochf","trader_stochrsi","trader_sub","trader_sum","trader_t3","trader_tan","trader_tanh","trader_tema","trader_trange","trader_trima","trader_trix","trader_tsf","trader_typprice","trader_ultosc","trader_var","trader_wclprice","trader_willr","trader_wma","trait_exists","trigger_error","trim","uasort","ucfirst","ucwords","udm_add_search_limit","udm_alloc_agent_array","udm_alloc_agent","udm_api_version","udm_cat_list","udm_cat_path","udm_check_charset","udm_check_stored","udm_clear_search_limits","udm_close_stored","udm_crc32","udm_errno","udm_error","udm_find","udm_free_agent","udm_free_ispell_data","udm_free_res","udm_get_doc_count","udm_get_res_field","udm_get_res_param","udm_hash32","udm_load_ispell_data","udm_open_stored","udm_set_agent_param","uksort","umask","uniqid","unixtojd","unlink","unpack","unregister_tick_function","unserialize","unset","untaint","urldecode","urlencode","use_soap_error_handler","usleep","usort","utf8_decode","utf8_encode","var_dump","var_export","variant_abs","variant_add","variant_and","variant_cast","variant_cat","variant_cmp","variant_date_from_timestamp","variant_date_to_timestamp","variant_div","variant_eqv","variant_fix","variant_get_type","variant_idiv","variant_imp","variant_int","variant_mod","variant_mul","variant_neg","variant_not","variant_or","variant_pow","variant_round","variant_set_type","variant_set","variant_sub","variant_xor","version_compare","vfprintf","virtual","vpopmail_add_alias_domain_ex","vpopmail_add_alias_domain","vpopmail_add_domain_ex","vpopmail_add_domain","vpopmail_add_user","vpopmail_alias_add","vpopmail_alias_del_domain","vpopmail_alias_del","vpopmail_alias_get_all","vpopmail_alias_get","vpopmail_auth_user","vpopmail_del_domain_ex","vpopmail_del_domain","vpopmail_del_user","vpopmail_error","vpopmail_passwd","vpopmail_set_user_quota","vprintf","vsprintf","w32api_deftype","w32api_init_dtype","w32api_invoke_function","w32api_register_function","w32api_set_call_method","wddx_add_vars","wddx_deserialize","wddx_packet_end","wddx_packet_start","wddx_serialize_value","wddx_serialize_vars","win32_continue_service","win32_create_service","win32_delete_service","win32_get_last_control_message","win32_pause_service","win32_ps_list_procs","win32_ps_stat_mem","win32_ps_stat_proc","win32_query_service_status","win32_set_service_status","win32_start_service_ctrl_dispatcher","win32_start_service","win32_stop_service","wincache_fcache_fileinfo","wincache_fcache_meminfo","wincache_lock","wincache_ocache_fileinfo","wincache_ocache_meminfo","wincache_refresh_if_changed","wincache_rplist_fileinfo","wincache_rplist_meminfo","wincache_scache_info","wincache_scache_meminfo","wincache_ucache_add","wincache_ucache_cas","wincache_ucache_clear","wincache_ucache_dec","wincache_ucache_delete","wincache_ucache_exists","wincache_ucache_get","wincache_ucache_inc","wincache_ucache_info","wincache_ucache_meminfo","wincache_ucache_set","wincache_unlock","wordwrap","xattr_get","xattr_list","xattr_remove","xattr_set","xattr_supported","xdiff_file_bdiff_size","xdiff_file_bdiff","xdiff_file_bpatch","xdiff_file_diff_binary","xdiff_file_diff","xdiff_file_merge3","xdiff_file_patch_binary","xdiff_file_patch","xdiff_file_rabdiff","xdiff_string_bdiff_size","xdiff_string_bdiff","xdiff_string_bpatch","xdiff_string_bdiff","xdiff_string_diff","xdiff_string_merge3","xdiff_string_patch_binary","xdiff_string_patch","xdiff_string_bdiff","xhprof_disable","xhprof_enable","xhprof_sample_disable","xhprof_sample_enable","xml_error_string","xml_get_current_byte_index","xml_get_current_column_number","xml_get_current_line_number","xml_get_error_code","xml_parse_into_struct","xml_parse","xml_parser_create_ns","xml_parser_create","xml_parser_free","xml_parser_get_option","xml_parser_set_option","xml_set_character_data_handler","xml_set_default_handler","xml_set_element_handler","xml_set_end_namespace_decl_handler","xml_set_external_entity_ref_handler","xml_set_notation_decl_handler","xml_set_object","xml_set_processing_instruction_handler","xml_set_start_namespace_decl_handler","xml_set_unparsed_entity_decl_handler","xmlrpc_decode_request","xmlrpc_decode","xmlrpc_encode_request","xmlrpc_encode","xmlrpc_get_type","xmlrpc_is_fault","xmlrpc_parse_method_descriptions","xmlrpc_server_add_introspection_data","xmlrpc_server_call_method","xmlrpc_server_create","xmlrpc_server_destroy","xmlrpc_server_register_introspection_callback","xmlrpc_server_register_method","xmlrpc_set_type","endAttribute","endCData","endComment","endDocument","endDTDAttlist","endDTDElement","endDTDEntity","endDTD","endElement","endPI","flush","fullEndElement","openMemory","openURI","outputMemory","setIndentString","setIndent","startAttributeNS","startAttribute","startCData","startComment","startDocument","startDTDAttlist","startDTDElement","startDTDEntity","startDTD","startElementNS","startElement","startPI","text","writeAttributeNS","writeAttribute","writeCData","writeComment","writeDTDAttlist","writeDTDElement","writeDTDEntity","writeDTD","writeElementNS","writeElement","writePI","writeRaw","xpath_eval_expression","xpath_eval","xpath_new_context","xpath_register_ns_auto","xpath_register_ns","xptr_eval","xptr_new_context","xslt_backend_info","xslt_backend_name","xslt_backend_version","xslt_create","xslt_errno","xslt_error","xslt_free","xslt_getopt","xslt_process","xslt_set_base","xslt_set_encoding","xslt_set_error_handler","xslt_set_log","xslt_set_object","xslt_set_sax_handler","xslt_set_sax_handlers","xslt_set_scheme_handler","xslt_set_scheme_handlers","xslt_setopt","yaml_emit_file","yaml_emit","yaml_parse_file","yaml_parse_url","yaml_parse","yaz_addinfo","yaz_ccl_conf","yaz_ccl_parse","yaz_close","yaz_connect","yaz_database","yaz_element","yaz_errno","yaz_error","yaz_es_result","yaz_es","yaz_get_option","yaz_hits","yaz_itemorder","yaz_present","yaz_range","yaz_record","yaz_scan_result","yaz_scan","yaz_schema","yaz_search","yaz_set_option","yaz_sort","yaz_syntax","yaz_wait","yp_all","yp_cat","yp_err_string","yp_errno","yp_first","yp_get_default_domain","yp_master","yp_match","yp_next","yp_order","zend_logo_guid","zend_thread_id","zend_version","zip_close","zip_entry_close","zip_entry_compressedsize","zip_entry_compressionmethod","zip_entry_filesize","zip_entry_name","zip_entry_open","zip_entry_read","zip_open","zip_read","zlib_decode","zlib_encode","zlib_get_coding_type"],"prototypes":[" number abs ( mixed $number )"," float acos ( float $arg )"," float acosh ( float $arg )"," string addcslashes ( string $str , string $charlist )"," string addslashes ( string $str )"," array aggregate_info ( object $object )"," void aggregate_methods_by_list ( object $object , string $class_name , array $methods_list [, bool $exclude = false ] )"," void aggregate_methods_by_regexp ( object $object , string $class_name , string $regexp [, bool $exclude = false ] )"," void aggregate_methods ( object $object , string $class_name )"," void aggregate_properties_by_list ( object $object , string $class_name , array $properties_list [, bool $exclude = false ] )"," void aggregate_properties_by_regexp ( object $object , string $class_name , string $regexp [, bool $exclude = false ] )"," void aggregate_properties ( object $object , string $class_name )"," void aggregate ( object $object , string $class_name )"," bool apache_child_terminate ( void )"," array apache_get_modules ( void )"," string apache_get_version ( void )"," string apache_getenv ( string $variable [, bool $walk_to_top = false ] )"," object apache_lookup_uri ( string $filename )"," string apache_note ( string $note_name [, string $note_value = \"\" ] )"," array apache_request_headers ( void )"," bool apache_reset_timeout ( void )"," array apache_response_headers ( void )"," bool apache_setenv ( string $variable , string $value [, bool $walk_to_top = false ] )"," bool apc_add ( string $key [, mixed $var [, int $ttl = 0 ]] )"," string apc_bin_dump ([ array $files [, array $user_vars ]] )"," int apc_bin_dumpfile ( array $files , array $user_vars , string $filename [, int $flags = 0 [, resource $context ]] )"," bool apc_bin_load ( string $data [, int $flags = 0 ] )"," bool apc_bin_loadfile ( string $filename [, resource $context [, int $flags ]] )"," array apc_cache_info ([ string $cache_type [, bool $limited = false ]] )"," bool apc_cas ( string $key , int $old , int $new )"," bool apc_clear_cache ([ string $cache_type ] )"," mixed apc_compile_file ( string $filename [, bool $atomic = true ] )"," int apc_dec ( string $key [, int $step = 1 [, bool &$success ]] )"," bool apc_define_constants ( string $key , array $constants [, bool $case_sensitive = true ] )"," mixed apc_delete_file ( mixed $keys )"," mixed apc_delete ( string $key )"," mixed apc_exists ( mixed $keys )"," mixed apc_fetch ( mixed $key [, bool &$success ] )"," int apc_inc ( string $key [, int $step = 1 [, bool &$success ]] )"," bool apc_load_constants ( string $key [, bool $case_sensitive = true ] )"," array apc_sma_info ([ bool $limited = false ] )"," bool apc_store ( string $key , mixed $var [, int $ttl = 0 ] )"," bool apd_breakpoint ( int $debug_level )"," array apd_callstack ( void )"," void apd_clunk ( string $warning [, string $delimiter ] )"," bool apd_continue ( int $debug_level )"," void apd_croak ( string $warning [, string $delimiter ] )"," void apd_dump_function_table ( void )"," array apd_dump_persistent_resources ( void )"," array apd_dump_regular_resources ( void )"," bool apd_echo ( string $output )"," array apd_get_active_symbols ( void )"," string apd_set_pprof_trace ([ string $dump_directory [, string $fragment = \"pprof\" ]] )"," bool apd_set_session_trace_socket ( string $tcp_server , int $socket_type , int $port , int $debug_level )"," void apd_set_session_trace ( int $debug_level [, string $dump_directory ] )"," void apd_set_session ( int $debug_level )"," array array_change_key_case ( array $input [, int $case = CASE_LOWER ] )"," array array_chunk ( array $input , int $size [, bool $preserve_keys = false ] )"," array array_combine ( array $keys , array $values )"," array array_count_values ( array $input )"," array array_diff_assoc ( array $array1 , array $array2 [, array $... ] )"," array array_diff_key ( array $array1 , array $array2 [, array $... ] )"," array array_diff_uassoc ( array $array1 , array $array2 [, array $... ], callable $key_compare_func )"," array array_diff_ukey ( array $array1 , array $array2 [, array $ ... ], callable $key_compare_func )"," array array_diff ( array $array1 , array $array2 [, array $... ] )"," array array_fill_keys ( array $keys , mixed $value )"," array array_fill ( int $start_index , int $num , mixed $value )"," array array_filter ( array $input [, callable $callback = \"\" ] )"," array array_flip ( array $trans )"," array array_intersect_assoc ( array $array1 , array $array2 [, array $ ... ] )"," array array_intersect_key ( array $array1 , array $array2 [, array $ ... ] )"," array array_intersect_uassoc ( array $array1 , array $array2 [, array $ ... ], callable $key_compare_func )"," array array_intersect_ukey ( array $array1 , array $array2 [, array $... ], callable $key_compare_func )"," array array_intersect ( array $array1 , array $array2 [, array $ ... ] )"," bool array_key_exists ( mixed $key , array $search )"," array array_keys ( array $input [, mixed $search_value = NULL [, bool $strict = false ]] )"," array array_map ( callable $callback , array $arr1 [, array $... ] )"," array array_merge_recursive ( array $array1 [, array $... ] )"," array array_merge ( array $array1 [, array $... ] )"," bool array_multisort ( array &$arr [, mixed $arg = SORT_ASC [, mixed $arg = SORT_REGULAR [, mixed $... ]]] )"," array array_pad ( array $input , int $pad_size , mixed $pad_value )"," mixed array_pop ( array &$array )"," number array_product ( array $array )"," int array_push ( array &$array , mixed $var [, mixed $... ] )"," mixed array_rand ( array $input [, int $num_req = 1 ] )"," mixed array_reduce ( array $input , callable $function [, mixed $initial = NULL ] )"," array array_replace_recursive ( array $array , array $array1 [, array $... ] )"," array array_replace ( array $array , array $array1 [, array $... ] )"," array array_reverse ( array $array [, bool $preserve_keys = false ] )"," mixed array_search ( mixed $needle , array $haystack [, bool $strict = false ] )"," mixed array_shift ( array &$array )"," array array_slice ( array $array , int $offset [, int $length = NULL [, bool $preserve_keys = false ]] )"," array array_splice ( array &$input , int $offset [, int $length = 0 [, mixed $replacement ]] )"," number array_sum ( array $array )"," array array_udiff_assoc ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func )"," array array_udiff_uassoc ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func , callable $key_compare_func )"," array array_udiff ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func )"," array array_uintersect_assoc ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func )"," array array_uintersect_uassoc ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func , callable $key_compare_func )"," array array_uintersect ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func )"," array array_unique ( array $array [, int $sort_flags = SORT_STRING ] )"," int array_unshift ( array &$array , mixed $var [, mixed $... ] )"," array array_values ( array $input )"," bool array_walk_recursive ( array &$input , callable $funcname [, mixed $userdata = NULL ] )"," bool array_walk ( array &$array , callable $funcname [, mixed $userdata = NULL ] )"," array array ([ mixed $... ] )"," bool arsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )"," float asin ( float $arg )"," float asinh ( float $arg )"," bool asort ( array &$array [, int $sort_flags = SORT_REGULAR ] )"," mixed assert_options ( int $what [, mixed $value ] )"," bool assert ( mixed $assertion )"," float atan ( float $arg )"," float atan2 ( float $y , float $x )"," float atanh ( float $arg )"," void __autoload ( string $class )"," string base_convert ( string $number , int $frombase , int $tobase )"," string base64_decode ( string $data [, bool $strict = false ] )"," string base64_encode ( string $data )"," string basename ( string $path [, string $suffix ] )"," bool bbcode_add_element ( resource $bbcode_container , string $tag_name , array $tag_rules )"," bool bbcode_add_smiley ( resource $bbcode_container , string $smiley , string $replace_by )"," resource bbcode_create ([ array $bbcode_initial_tags ] )"," bool bbcode_destroy ( resource $bbcode_container )"," string bbcode_parse ( resource $bbcode_container , string $to_parse )"," bool bbcode_set_arg_parser ( resource $bbcode_container , resource $bbcode_arg_parser )"," bool bbcode_set_flags ( resource $bbcode_container , int $flags [, int $mode = BBCODE_SET_FLAGS_SET ] )"," string bcadd ( string $left_operand , string $right_operand [, int $scale ] )"," int bccomp ( string $left_operand , string $right_operand [, int $scale ] )"," string bcdiv ( string $left_operand , string $right_operand [, int $scale ] )"," string bcmod ( string $left_operand , string $modulus )"," string bcmul ( string $left_operand , string $right_operand [, int $scale ] )"," bool bcompiler_load_exe ( string $filename )"," bool bcompiler_load ( string $filename )"," bool bcompiler_parse_class ( string $class , string $callback )"," bool bcompiler_read ( resource $filehandle )"," bool bcompiler_write_class ( resource $filehandle , string $className [, string $extends ] )"," bool bcompiler_write_constant ( resource $filehandle , string $constantName )"," bool bcompiler_write_exe_footer ( resource $filehandle , int $startpos )"," bool bcompiler_write_file ( resource $filehandle , string $filename )"," bool bcompiler_write_footer ( resource $filehandle )"," bool bcompiler_write_function ( resource $filehandle , string $functionName )"," bool bcompiler_write_functions_from_file ( resource $filehandle , string $fileName )"," bool bcompiler_write_header ( resource $filehandle [, string $write_ver ] )"," bool bcompiler_write_included_filename ( resource $filehandle , string $filename )"," string bcpow ( string $left_operand , string $right_operand [, int $scale ] )"," string bcpowmod ( string $left_operand , string $right_operand , string $modulus [, int $scale ] )"," bool bcscale ( int $scale )"," string bcsqrt ( string $operand [, int $scale ] )"," string bcsub ( string $left_operand , string $right_operand [, int $scale ] )"," string bin2hex ( string $str )"," string bind_textdomain_codeset ( string $domain , string $codeset )"," number bindec ( string $binary_string )"," string bindtextdomain ( string $domain , string $directory )"," array bson_decode ( string $bson )"," string bson_encode ( mixed $anything )"," int bzclose ( resource $bz )"," mixed bzcompress ( string $source [, int $blocksize = 4 [, int $workfactor = 0 ]] )"," mixed bzdecompress ( string $source [, int $small = 0 ] )"," int bzerrno ( resource $bz )"," array bzerror ( resource $bz )"," string bzerrstr ( resource $bz )"," int bzflush ( resource $bz )"," resource bzopen ( string $filename , string $mode )"," string bzread ( resource $bz [, int $length = 1024 ] )"," int bzwrite ( resource $bz , string $data [, int $length ] )"," CairoContext cairo_create ( CairoSurface $surface )"," int cairo_font_face_get_type ( CairoFontFace $fontface )"," int cairo_font_face_status ( CairoFontFace $fontface )"," CairoFontOptions cairo_font_options_create ( void )"," bool cairo_font_options_equal ( CairoFontOptions $options , CairoFontOptions $other )"," int cairo_font_options_get_antialias ( CairoFontOptions $options )"," int cairo_font_options_get_hint_metrics ( CairoFontOptions $options )"," int cairo_font_options_get_hint_style ( CairoFontOptions $options )"," int cairo_font_options_get_subpixel_order ( CairoFontOptions $options )"," int cairo_font_options_hash ( CairoFontOptions $options )"," void cairo_font_options_merge ( CairoFontOptions $options , CairoFontOptions $other )"," void cairo_font_options_set_antialias ( CairoFontOptions $options , int $antialias )"," void cairo_font_options_set_hint_metrics ( CairoFontOptions $options , int $hint_metrics )"," void cairo_font_options_set_hint_style ( CairoFontOptions $options , int $hint_style )"," void cairo_font_options_set_subpixel_order ( CairoFontOptions $options , int $subpixel_order )"," int cairo_font_options_status ( CairoFontOptions $options )"," int cairo_format_stride_for_width ( int $format , int $width )"," CairoImageSurface cairo_image_surface_create_for_data ( string $data , int $format , int $width , int $height [, int $stride = -1 ] )"," CairoImageSurface cairo_image_surface_create_from_png ( string $file )"," CairoImageSurface cairo_image_surface_create ( int $format , int $width , int $height )"," string cairo_image_surface_get_data ( CairoImageSurface $surface )"," int cairo_image_surface_get_format ( CairoImageSurface $surface )"," int cairo_image_surface_get_height ( CairoImageSurface $surface )"," int cairo_image_surface_get_stride ( CairoImageSurface $surface )"," int cairo_image_surface_get_width ( CairoImageSurface $surface )"," void cairo_matrix_invert ( CairoMatrix $matrix )"," CairoMatrix cairo_matrix_multiply ( CairoMatrix $matrix1 , CairoMatrix $matrix2 )"," void cairo_matrix_rotate ( CairoMatrix $matrix , float $radians )"," array cairo_matrix_transform_distance ( CairoMatrix $matrix , float $dx , float $dy )"," array cairo_matrix_transform_point ( CairoMatrix $matrix , float $dx , float $dy )"," void cairo_matrix_translate ( CairoMatrix $matrix , float $tx , float $ty )"," void cairo_pattern_add_color_stop_rgb ( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue )"," void cairo_pattern_add_color_stop_rgba ( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue , float $alpha )"," CairoPattern cairo_pattern_create_for_surface ( CairoSurface $surface )"," CairoPattern cairo_pattern_create_linear ( float $x0 , float $y0 , float $x1 , float $y1 )"," CairoPattern cairo_pattern_create_radial ( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )"," CairoPattern cairo_pattern_create_rgb ( float $red , float $green , float $blue )"," CairoPattern cairo_pattern_create_rgba ( float $red , float $green , float $blue , float $alpha )"," int cairo_pattern_get_color_stop_count ( CairoGradientPattern $pattern )"," array cairo_pattern_get_color_stop_rgba ( CairoGradientPattern $pattern , int $index )"," int cairo_pattern_get_extend ( string $pattern )"," int cairo_pattern_get_filter ( CairoSurfacePattern $pattern )"," array cairo_pattern_get_linear_points ( CairoLinearGradient $pattern )"," CairoMatrix cairo_pattern_get_matrix ( CairoPattern $pattern )"," array cairo_pattern_get_radial_circles ( CairoRadialGradient $pattern )"," array cairo_pattern_get_rgba ( CairoSolidPattern $pattern )"," CairoSurface cairo_pattern_get_surface ( CairoSurfacePattern $pattern )"," int cairo_pattern_get_type ( CairoPattern $pattern )"," void cairo_pattern_set_extend ( string $pattern , string $extend )"," void cairo_pattern_set_filter ( CairoSurfacePattern $pattern , int $filter )"," void cairo_pattern_set_matrix ( CairoPattern $pattern , CairoMatrix $matrix )"," int cairo_pattern_status ( CairoPattern $pattern )"," CairoPdfSurface cairo_pdf_surface_create ( string $file , float $width , float $height )"," void cairo_pdf_surface_set_size ( CairoPdfSurface $surface , float $width , float $height )"," array cairo_ps_get_levels ( void )"," string cairo_ps_level_to_string ( int $level )"," CairoPsSurface cairo_ps_surface_create ( string $file , float $width , float $height )"," void cairo_ps_surface_dsc_begin_page_setup ( CairoPsSurface $surface )"," void cairo_ps_surface_dsc_begin_setup ( CairoPsSurface $surface )"," void cairo_ps_surface_dsc_comment ( CairoPsSurface $surface , string $comment )"," bool cairo_ps_surface_get_eps ( CairoPsSurface $surface )"," void cairo_ps_surface_restrict_to_level ( CairoPsSurface $surface , int $level )"," void cairo_ps_surface_set_eps ( CairoPsSurface $surface , bool $level )"," void cairo_ps_surface_set_size ( CairoPsSurface $surface , float $width , float $height )"," CairoScaledFont cairo_scaled_font_create ( CairoFontFace $fontface , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $fontoptions )"," array cairo_scaled_font_extents ( CairoScaledFont $scaledfont )"," CairoMatrix cairo_scaled_font_get_ctm ( CairoScaledFont $scaledfont )"," CairoFontFace cairo_scaled_font_get_font_face ( CairoScaledFont $scaledfont )"," CairoFontOptions cairo_scaled_font_get_font_matrix ( CairoScaledFont $scaledfont )"," CairoFontOptions cairo_scaled_font_get_font_options ( CairoScaledFont $scaledfont )"," CairoMatrix cairo_scaled_font_get_scale_matrix ( CairoScaledFont $scaledfont )"," int cairo_scaled_font_get_type ( CairoScaledFont $scaledfont )"," array cairo_scaled_font_glyph_extents ( CairoScaledFont $scaledfont , array $glyphs )"," int cairo_scaled_font_status ( CairoScaledFont $scaledfont )"," array cairo_scaled_font_text_extents ( CairoScaledFont $scaledfont , string $text )"," void cairo_surface_copy_page ( CairoSurface $surface )"," CairoSurface cairo_surface_create_similar ( CairoSurface $surface , int $content , float $width , float $height )"," void cairo_surface_finish ( CairoSurface $surface )"," void cairo_surface_flush ( CairoSurface $surface )"," int cairo_surface_get_content ( CairoSurface $surface )"," array cairo_surface_get_device_offset ( CairoSurface $surface )"," CairoFontOptions cairo_surface_get_font_options ( CairoSurface $surface )"," int cairo_surface_get_type ( CairoSurface $surface )"," void cairo_surface_mark_dirty_rectangle ( CairoSurface $surface , float $x , float $y , float $width , float $height )"," void cairo_surface_mark_dirty ( CairoSurface $surface )"," void cairo_surface_set_device_offset ( CairoSurface $surface , float $x , float $y )"," void cairo_surface_set_fallback_resolution ( CairoSurface $surface , float $x , float $y )"," void cairo_surface_show_page ( CairoSurface $surface )"," int cairo_surface_status ( CairoSurface $surface )"," void cairo_surface_write_to_png ( CairoSurface $surface , resource $stream )"," CairoSvgSurface cairo_svg_surface_create ( string $file , float $width , float $height )"," void cairo_svg_surface_restrict_to_version ( CairoSvgSurface $surface , int $version )"," string cairo_svg_version_to_string ( int $version )"," int cal_days_in_month ( int $calendar , int $month , int $year )"," array cal_from_jd ( int $jd , int $calendar )"," array cal_info ([ int $calendar = -1 ] )"," int cal_to_jd ( int $calendar , int $month , int $day , int $year )"," string calcul_hmac ( string $clent , string $siretcode , string $price , string $reference , string $validity , string $taxation , string $devise , string $language )"," string calculhmac ( string $clent , string $data )"," mixed call_user_func_array ( callable $callback , array $param_arr )"," mixed call_user_func ( callable $callback [, mixed $parameter [, mixed $... ]] )"," mixed call_user_method_array ( string $method_name , object &$obj , array $params )"," mixed call_user_method ( string $method_name , object &$obj [, mixed $parameter [, mixed $... ]] )"," float ceil ( float $value )"," bool chdb_create ( string $pathname , array $data )"," bool chdir ( string $directory )"," bool checkdate ( int $month , int $day , int $year )"," bool checkdnsrr ( string $host [, string $type = \"MX\" ] )"," bool chgrp ( string $filename , mixed $group )"," bool chmod ( string $filename , int $mode )"," bool chown ( string $filename , mixed $user )"," string chr ( int $ascii )"," bool chroot ( string $directory )"," string chunk_split ( string $body [, int $chunklen = 76 [, string $end = \"\\r\\n\" ]] )"," bool class_alias ([ string $original [, string $alias ]] )"," bool class_exists ( string $class_name [, bool $autoload = true ] )"," array class_implements ( mixed $class [, bool $autoload = true ] )"," array class_parents ( mixed $class [, bool $autoload = true ] )"," array class_uses ( mixed $class [, bool $autoload = true ] )"," array classkit_import ( string $filename )"," bool classkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] )"," bool classkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] )"," bool classkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] )"," bool classkit_method_remove ( string $classname , string $methodname )"," bool classkit_method_rename ( string $classname , string $methodname , string $newname )"," void clearstatcache ([ bool $clear_realpath_cache = false [, string $filename ]] )"," void closedir ([ resource $dir_handle ] )"," bool closelog ( void )"," void com_addref ( void )"," string com_create_guid ( void )"," bool com_event_sink ( variant $comobject , object $sinkobject [, mixed $sinkinterface ] )"," variant com_get_active_object ( string $progid [, int $code_page ] )"," mixed com_invoke ( resource $com_object , string $function_name [, mixed $function_parameters ] )"," bool com_isenum ( variant $com_module )"," bool com_load_typelib ( string $typelib_name [, bool $case_insensitive = true ] )"," bool com_message_pump ([ int $timeoutms = 0 ] )"," bool com_print_typeinfo ( object $comobject [, string $dispinterface [, bool $wantsink = false ]] )"," void com_release ( void )"," array compact ( mixed $varname [, mixed $... ] )"," int connection_aborted ( void )"," int connection_status ( void )"," int connection_timeout ( void )"," mixed constant ( string $name )"," string convert_cyr_string ( string $str , string $from , string $to )"," string convert_uudecode ( string $data )"," string convert_uuencode ( string $data )"," bool copy ( string $source , string $dest [, resource $context ] )"," float cos ( float $arg )"," float cosh ( float $arg )"," mixed count_chars ( string $string [, int $mode = 0 ] )"," int count ( mixed $var [, int $mode = COUNT_NORMAL ] )"," bool crack_check ( resource $dictionary , string $password )"," bool crack_closedict ([ resource $dictionary ] )"," string crack_getlastmessage ( void )"," resource crack_opendict ( string $dictionary )"," int crc32 ( string $str )"," string create_function ( string $args , string $code )"," string crypt ( string $str [, string $salt ] )"," bool ctype_alnum ( string $text )"," bool ctype_alpha ( string $text )"," bool ctype_cntrl ( string $text )"," bool ctype_digit ( string $text )"," bool ctype_graph ( string $text )"," bool ctype_lower ( string $text )"," bool ctype_print ( string $text )"," bool ctype_punct ( string $text )"," bool ctype_space ( string $text )"," bool ctype_upper ( string $text )"," bool ctype_xdigit ( string $text )"," int cubrid_affected_rows ([ resource $conn_identifier ] )"," bool cubrid_bind ( resource $req_identifier , int $bind_index , mixed $bind_value [, string $bind_value_type ] )"," string cubrid_client_encoding ([ resource $conn_identifier ] )"," int cubrid_close_prepare ( resource $req_identifier )"," bool cubrid_close_request ( resource $req_identifier )"," bool cubrid_close ([ resource $conn_identifier ] )"," array cubrid_col_get ( resource $conn_identifier , string $oid , string $attr_name )"," int cubrid_col_size ( resource $conn_identifier , string $oid , string $attr_name )"," array cubrid_column_names ( resource $req_identifier )"," array cubrid_column_types ( resource $req_identifier )"," bool cubrid_commit ( resource $conn_identifier )"," resource cubrid_connect_with_url ( string $conn_url [, string $userid [, string $passwd [, bool $new_link = false ]]] )"," resource cubrid_connect ( string $host , int $port , string $dbname [, string $userid [, string $passwd [, bool $new_link = false ]]] )"," string cubrid_current_oid ( resource $req_identifier )"," int cubrid_data_seek ( resource $result , int $row_number )"," string cubrid_db_name ( array $result , int $index )"," bool cubrid_disconnect ( resource $conn_identifier )"," bool cubrid_drop ( resource $conn_identifier , string $oid )"," int cubrid_errno ([ resource $conn_identifier ] )"," int cubrid_error_code_facility ( void )"," int cubrid_error_code ( void )"," string cubrid_error_msg ( void )"," string cubrid_error ([ resource $connection ] )"," resource cubrid_execute ( resource $conn_identifier , string $sql [, int $option ] )"," array cubrid_fetch_array ( resource $result [, int $type = CUBRID_BOTH ] )"," array cubrid_fetch_assoc ( resource $result )"," object cubrid_fetch_field ( resource $result [, int $field_offset = 0 ] )"," array cubrid_fetch_lengths ( resource $result )"," object cubrid_fetch_object ( resource $result [, string $class_name [, array $params ]] )"," array cubrid_fetch_row ( resource $result )"," mixed cubrid_fetch ( resource $result [, int $type = CUBRID_BOTH ] )"," string cubrid_field_flags ( resource $result , int $field_offset )"," int cubrid_field_len ( resource $result , int $field_offset )"," string cubrid_field_name ( resource $result , int $field_offset )"," bool cubrid_field_seek ( resource $result [, int $field_offset = 0 ] )"," string cubrid_field_table ( resource $result , int $field_offset )"," string cubrid_field_type ( resource $result , int $field_offset )"," bool cubrid_free_result ( resource $req_identifier )"," bool cubrid_get_autocommit ( resource $conn_identifier )"," string cubrid_get_charset ( resource $conn_identifier )"," string cubrid_get_class_name ( resource $conn_identifier , string $oid )"," string cubrid_get_client_info ( void )"," array cubrid_get_db_parameter ( resource $conn_identifier )"," int cubrid_get_query_timeout ( resource $req_identifier )"," string cubrid_get_server_info ( resource $conn_identifier )"," mixed cubrid_get ( resource $conn_identifier , string $oid [, mixed $attr ] )"," string cubrid_insert_id ([ resource $conn_identifier ] )"," int cubrid_is_instance ( resource $conn_identifier , string $oid )"," array cubrid_list_dbs ([ resource $conn_identifier ] )"," int cubrid_load_from_glo ( resource $conn_identifier , string $oid , string $file_name )"," bool cubrid_lob_close ( array $lob_identifier_array )"," bool cubrid_lob_export ( resource $conn_identifier , resource $lob_identifier , string $path_name )"," array cubrid_lob_get ( resource $conn_identifier , string $sql )"," bool cubrid_lob_send ( resource $conn_identifier , resource $lob_identifier )"," string cubrid_lob_size ( resource $lob_identifier )"," bool cubrid_lock_read ( resource $conn_identifier , string $oid )"," bool cubrid_lock_write ( resource $conn_identifier , string $oid )"," int cubrid_move_cursor ( resource $req_identifier , int $offset [, int $origin = CUBRID_CURSOR_CURRENT ] )"," string cubrid_new_glo ( resource $conn_identifier , string $class_name , string $file_name )"," bool cubrid_next_result ( resource $result )"," int cubrid_num_cols ( resource $result )"," int cubrid_num_fields ( resource $result )"," int cubrid_num_rows ( resource $result )"," resource cubrid_pconnect_with_url ( string $conn_url [, string $userid [, string $passwd ]] )"," resource cubrid_pconnect ( string $host , int $port , string $dbname [, string $userid [, string $passwd ]] )"," bool cubrid_ping ([ resource $conn_identifier ] )"," resource cubrid_prepare ( resource $conn_identifier , string $prepare_stmt [, int $option = 0 ] )"," int cubrid_put ( resource $conn_identifier , string $oid [, string $attr ], mixed $value )"," resource cubrid_query ( string $query [, resource $conn_identifier ] )"," string cubrid_real_escape_string ( string $unescaped_string [, resource $conn_identifier ] )"," string cubrid_result ( resource $result , int $row [, mixed $field = 0 ] )"," bool cubrid_rollback ( resource $conn_identifier )"," int cubrid_save_to_glo ( resource $conn_identifier , string $oid , string $file_name )"," array cubrid_schema ( resource $conn_identifier , int $schema_type [, string $class_name [, string $attr_name ]] )"," int cubrid_send_glo ( resource $conn_identifier , string $oid )"," bool cubrid_seq_drop ( resource $conn_identifier , string $oid , string $attr_name , int $index )"," bool cubrid_seq_insert ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element )"," bool cubrid_seq_put ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element )"," bool cubrid_set_add ( resource $conn_identifier , string $oid , string $attr_name , string $set_element )"," bool cubrid_set_autocommit ( resource $conn_identifier , bool $mode )"," bool cubrid_set_db_parameter ( resource $conn_identifier , int $param_type , int $param_value )"," bool cubrid_set_drop ( resource $conn_identifier , string $oid , string $attr_name , string $set_element )"," bool cubrid_set_query_timeout ( resource $req_identifier , int $timeout )"," resource cubrid_unbuffered_query ( string $query [, resource $conn_identifier ] )"," string cubrid_version ( void )"," void curl_close ( resource $ch )"," resource curl_copy_handle ( resource $ch )"," int curl_errno ( resource $ch )"," string curl_error ( resource $ch )"," mixed curl_exec ( resource $ch )"," mixed curl_getinfo ( resource $ch [, int $opt = 0 ] )"," resource curl_init ([ string $url = NULL ] )"," int curl_multi_add_handle ( resource $mh , resource $ch )"," void curl_multi_close ( resource $mh )"," int curl_multi_exec ( resource $mh , int &$still_running )"," string curl_multi_getcontent ( resource $ch )"," array curl_multi_info_read ( resource $mh [, int &$msgs_in_queue = NULL ] )"," resource curl_multi_init ( void )"," int curl_multi_remove_handle ( resource $mh , resource $ch )"," int curl_multi_select ( resource $mh [, float $timeout = 1.0 ] )"," bool curl_setopt_array ( resource $ch , array $options )"," bool curl_setopt ( resource $ch , int $option , mixed $value )"," array curl_version ([ int $age = CURLVERSION_NOW ] )"," mixed current ( array &$array )"," void cyrus_authenticate ( resource $connection [, string $mechlist [, string $service [, string $user [, int $minssf [, int $maxssf [, string $authname [, string $password ]]]]]]] )"," bool cyrus_bind ( resource $connection , array $callbacks )"," bool cyrus_close ( resource $connection )"," resource cyrus_connect ([ string $host [, string $port [, int $flags ]]] )"," array cyrus_query ( resource $connection , string $query )"," bool cyrus_unbind ( resource $connection , string $trigger_name )"," string date_default_timezone_get ( void )"," bool date_default_timezone_set ( string $timezone_identifier )"," array date_parse_from_format ( string $format , string $date )"," array date_parse ( string $date )"," array date_sun_info ( int $time , float $latitude , float $longitude )"," mixed date_sunrise ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunrise_zenith\") [, float $gmt_offset = 0 ]]]]] )"," mixed date_sunset ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunset_zenith\") [, float $gmt_offset = 0 ]]]]] )"," string date ( string $format [, int $timestamp = time() ] )"," mixed db2_autocommit ( resource $connection [, bool $value ] )"," bool db2_bind_param ( resource $stmt , int $parameter-number , string $variable-name [, int $parameter-type [, int $data-type = 0 [, int $precision = -1 [, int $scale = 0 ]]]] )"," object db2_client_info ( resource $connection )"," bool db2_close ( resource $connection )"," resource db2_column_privileges ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]] )"," resource db2_columns ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]] )"," bool db2_commit ( resource $connection )"," string db2_conn_error ([ resource $connection ] )"," string db2_conn_errormsg ([ resource $connection ] )"," resource db2_connect ( string $database , string $username , string $password [, array $options ] )"," int db2_cursor_type ( resource $stmt )"," string db2_escape_string ( string $string_literal )"," resource db2_exec ( resource $connection , string $statement [, array $options ] )"," bool db2_execute ( resource $stmt [, array $parameters ] )"," array db2_fetch_array ( resource $stmt [, int $row_number = -1 ] )"," array db2_fetch_assoc ( resource $stmt [, int $row_number = -1 ] )"," array db2_fetch_both ( resource $stmt [, int $row_number = -1 ] )"," object db2_fetch_object ( resource $stmt [, int $row_number = -1 ] )"," bool db2_fetch_row ( resource $stmt [, int $row_number ] )"," int db2_field_display_size ( resource $stmt , mixed $column )"," string db2_field_name ( resource $stmt , mixed $column )"," int db2_field_num ( resource $stmt , mixed $column )"," int db2_field_precision ( resource $stmt , mixed $column )"," int db2_field_scale ( resource $stmt , mixed $column )"," string db2_field_type ( resource $stmt , mixed $column )"," int db2_field_width ( resource $stmt , mixed $column )"," resource db2_foreign_keys ( resource $connection , string $qualifier , string $schema , string $table-name )"," bool db2_free_result ( resource $stmt )"," bool db2_free_stmt ( resource $stmt )"," string db2_get_option ( resource $resource , string $option )"," string db2_last_insert_id ( resource $resource )"," string db2_lob_read ( resource $stmt , int $colnum , int $length )"," resource db2_next_result ( resource $stmt )"," int db2_num_fields ( resource $stmt )"," int db2_num_rows ( resource $stmt )"," bool db2_pclose ( resource $resource )"," resource db2_pconnect ( string $database , string $username , string $password [, array $options ] )"," resource db2_prepare ( resource $connection , string $statement [, array $options ] )"," resource db2_primary_keys ( resource $connection , string $qualifier , string $schema , string $table-name )"," resource db2_procedure_columns ( resource $connection , string $qualifier , string $schema , string $procedure , string $parameter )"," resource db2_procedures ( resource $connection , string $qualifier , string $schema , string $procedure )"," mixed db2_result ( resource $stmt , mixed $column )"," bool db2_rollback ( resource $connection )"," object db2_server_info ( resource $connection )"," bool db2_set_option ( resource $resource , array $options , int $type )"," resource db2_special_columns ( resource $connection , string $qualifier , string $schema , string $table_name , int $scope )"," resource db2_statistics ( resource $connection , string $qualifier , string $schema , string $table-name , bool $unique )"," string db2_stmt_error ([ resource $stmt ] )"," string db2_stmt_errormsg ([ resource $stmt ] )"," resource db2_table_privileges ( resource $connection [, string $qualifier [, string $schema [, string $table_name ]]] )"," resource db2_tables ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $table-type ]]]] )"," void dba_close ( resource $handle )"," bool dba_delete ( string $key , resource $handle )"," bool dba_exists ( string $key , resource $handle )"," string dba_fetch ( string $key , resource $handle )"," string dba_firstkey ( resource $handle )"," array dba_handlers ([ bool $full_info = false ] )"," bool dba_insert ( string $key , string $value , resource $handle )"," mixed dba_key_split ( mixed $key )"," array dba_list ( void )"," string dba_nextkey ( resource $handle )"," resource dba_open ( string $path , string $mode [, string $handler [, mixed $... ]] )"," bool dba_optimize ( resource $handle )"," resource dba_popen ( string $path , string $mode [, string $handler [, mixed $... ]] )"," bool dba_replace ( string $key , string $value , resource $handle )"," bool dba_sync ( resource $handle )"," bool dbase_add_record ( int $dbase_identifier , array $record )"," bool dbase_close ( int $dbase_identifier )"," int dbase_create ( string $filename , array $fields )"," bool dbase_delete_record ( int $dbase_identifier , int $record_number )"," array dbase_get_header_info ( int $dbase_identifier )"," array dbase_get_record_with_names ( int $dbase_identifier , int $record_number )"," array dbase_get_record ( int $dbase_identifier , int $record_number )"," int dbase_numfields ( int $dbase_identifier )"," int dbase_numrecords ( int $dbase_identifier )"," int dbase_open ( string $filename , int $mode )"," bool dbase_pack ( int $dbase_identifier )"," bool dbase_replace_record ( int $dbase_identifier , array $record , int $record_number )"," int dbplus_add ( resource $relation , array $tuple )"," resource dbplus_aql ( string $query [, string $server [, string $dbpath ]] )"," string dbplus_chdir ([ string $newdir ] )"," mixed dbplus_close ( resource $relation )"," int dbplus_curr ( resource $relation , array &$tuple )"," string dbplus_errcode ([ int $errno ] )"," int dbplus_errno ( void )"," int dbplus_find ( resource $relation , array $constraints , mixed $tuple )"," int dbplus_first ( resource $relation , array &$tuple )"," int dbplus_flush ( resource $relation )"," int dbplus_freealllocks ( void )"," int dbplus_freelock ( resource $relation , string $tuple )"," int dbplus_freerlocks ( resource $relation )"," int dbplus_getlock ( resource $relation , string $tuple )"," int dbplus_getunique ( resource $relation , int $uniqueid )"," int dbplus_info ( resource $relation , string $key , array &$result )"," int dbplus_last ( resource $relation , array &$tuple )"," int dbplus_lockrel ( resource $relation )"," int dbplus_next ( resource $relation , array &$tuple )"," resource dbplus_open ( string $name )"," int dbplus_prev ( resource $relation , array &$tuple )"," int dbplus_rchperm ( resource $relation , int $mask , string $user , string $group )"," resource dbplus_rcreate ( string $name , mixed $domlist [, bool $overwrite ] )"," mixed dbplus_rcrtexact ( string $name , resource $relation [, bool $overwrite ] )"," mixed dbplus_rcrtlike ( string $name , resource $relation [, int $overwrite ] )"," array dbplus_resolve ( string $relation_name )"," int dbplus_restorepos ( resource $relation , array $tuple )"," mixed dbplus_rkeys ( resource $relation , mixed $domlist )"," resource dbplus_ropen ( string $name )"," resource dbplus_rquery ( string $query [, string $dbpath ] )"," int dbplus_rrename ( resource $relation , string $name )"," mixed dbplus_rsecindex ( resource $relation , mixed $domlist , int $type )"," int dbplus_runlink ( resource $relation )"," int dbplus_rzap ( resource $relation )"," int dbplus_savepos ( resource $relation )"," int dbplus_setindex ( resource $relation , string $idx_name )"," int dbplus_setindexbynumber ( resource $relation , int $idx_number )"," resource dbplus_sql ( string $query [, string $server [, string $dbpath ]] )"," string dbplus_tcl ( int $sid , string $script )"," int dbplus_tremove ( resource $relation , array $tuple [, array &$current ] )"," int dbplus_undo ( resource $relation )"," int dbplus_undoprepare ( resource $relation )"," int dbplus_unlockrel ( resource $relation )"," int dbplus_unselect ( resource $relation )"," int dbplus_update ( resource $relation , array $old , array $new )"," int dbplus_xlockrel ( resource $relation )"," int dbplus_xunlockrel ( resource $relation )"," int dbx_close ( object $link_identifier )"," int dbx_compare ( array $row_a , array $row_b , string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE ] )"," object dbx_connect ( mixed $module , string $host , string $database , string $username , string $password [, int $persistent ] )"," string dbx_error ( object $link_identifier )"," string dbx_escape_string ( object $link_identifier , string $text )"," mixed dbx_fetch_row ( object $result_identifier )"," mixed dbx_query ( object $link_identifier , string $sql_statement [, int $flags ] )"," bool dbx_sort ( object $result , string $user_compare_function )"," string dcgettext ( string $domain , string $message , int $category )"," string dcngettext ( string $domain , string $msgid1 , string $msgid2 , int $n , int $category )"," void deaggregate ( object $object [, string $class_name ] )"," array debug_backtrace ([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = 0 ]] )"," void debug_print_backtrace ([ int $options = 0 [, int $limit = 0 ]] )"," void debug_zval_dump ( mixed $variable )"," string decbin ( int $number )"," string dechex ( int $number )"," string decoct ( int $number )"," void define_syslog_variables ( void )"," bool define ( string $name , mixed $value [, bool $case_insensitive = false ] )"," bool defined ( string $name )"," float deg2rad ( float $number )"," void delete ( void )"," string dgettext ( string $domain , string $message )"," void dio_close ( resource $fd )"," mixed dio_fcntl ( resource $fd , int $cmd [, mixed $args ] )"," resource dio_open ( string $filename , int $flags [, int $mode = 0 ] )"," string dio_read ( resource $fd [, int $len = 1024 ] )"," int dio_seek ( resource $fd , int $pos [, int $whence = SEEK_SET ] )"," array dio_stat ( resource $fd )"," bool dio_tcsetattr ( resource $fd , array $options )"," bool dio_truncate ( resource $fd , int $offset )"," int dio_write ( resource $fd , string $data [, int $len = 0 ] )"," Directory dir ( string $directory [, resource $context ] )"," string dirname ( string $path )"," float disk_free_space ( string $directory )"," float disk_total_space ( string $directory )"," bool dl ( string $library )"," string dngettext ( string $domain , string $msgid1 , string $msgid2 , int $n )"," array dns_get_record ( string $hostname [, int $type = DNS_ANY [, array &$authns [, array &$addtl ]]] )"," DOMElement dom_import_simplexml ( SimpleXMLElement $node )"," string DomAttribute::name ( void )"," bool DomAttribute::set_value ( string $content )"," bool DomAttribute::specified ( void )"," string DomAttribute::value ( void )"," domelement DomDocument::add_root ( string $name )"," domattribute DomDocument::create_attribute ( string $name , string $value )"," domcdata DomDocument::create_cdata_section ( string $content )"," domcomment DomDocument::create_comment ( string $content )"," domelement DomDocument::create_element_ns ( string $uri , string $name [, string $prefix ] )"," domelement DomDocument::create_element ( string $name )"," domentityreference DomDocument::create_entity_reference ( string $content )"," domprocessinginstruction DomDocument::create_processing_instruction ( string $content )"," domtext DomDocument::create_text_node ( string $content )"," domdocumenttype DomDocument::doctype ( void )"," domelement DomDocument::document_element ( void )"," string DomDocument::dump_file ( string $filename [, bool $compressionmode [, bool $format ]] )"," string DomDocument::dump_mem ([ bool $format [, string $encoding ]] )"," domelement DomDocument::get_element_by_id ( string $id )"," array DomDocument::get_elements_by_tagname ( string $name )"," string DomDocument::html_dump_mem ( void )"," int DomDocument::xinclude ( void )"," array DomDocumentType::entities ( void )"," bool DomDocumentType::internal_subset ( void )"," string DomDocumentType::name ( void )"," array DomDocumentType::notations ( void )"," string DomDocumentType::public_id ( void )"," string DomDocumentType::system_id ( void )"," DomAttribute DomElement::get_attribute_node ( string $name )"," string DomElement::get_attribute ( string $name )"," array DomElement::get_elements_by_tagname ( string $name )"," bool DomElement::has_attribute ( string $name )"," bool DomElement::remove_attribute ( string $name )"," DomNode DomElement::set_attribute_node ( DomNode $attr )"," DomAttribute DomElement::set_attribute ( string $name , string $value )"," string DomElement::tagname ( void )"," bool DOMNode::add_namespace ( string $uri , string $prefix )"," DOMNode DOMNode::append_child ( DOMNode $newnode )"," domelement DomNode::append_sibling ( domelement $newnode )"," array DomNode::attributes ( void )"," array DomNode::child_nodes ( void )"," domelement DomNode::clone_node ( void )"," string DomNode::dump_node ( void )"," domelement DomNode::first_child ( void )"," string DomNode::get_content ( void )"," bool DomNode::has_attributes ( void )"," bool DomNode::has_child_nodes ( void )"," domelement DomNode::insert_before ( domelement $newnode , domelement $refnode )"," bool DomNode::is_blank_node ( void )"," domelement DomNode::last_child ( void )"," domelement DomNode::next_sibling ( void )"," string DomNode::node_name ( void )"," int DomNode::node_type ( void )"," string DomNode::node_value ( void )"," domdocument DomNode::owner_document ( void )"," domnode DomNode::parent_node ( void )"," string DomNode::prefix ( void )"," domelement DomNode::previous_sibling ( void )"," domtext DomNode::remove_child ( domtext $oldchild )"," domelement DomNode::replace_child ( domelement $newnode , domelement $oldnode )"," domelement DomNode::replace_node ( domelement $newnode )"," bool DomNode::set_content ( string $content )"," bool DomNode::set_name ( void )"," void DomNode::set_namespace ( string $uri [, string $prefix ] )"," void DomNode::unlink_node ( void )"," string DomProcessingInstruction::data ( void )"," string DomProcessingInstruction::target ( void )"," DomDocument domxml_new_doc ( string $version )"," DomDocument domxml_open_file ( string $filename [, int $mode = DOMXML_LOAD_PARSING [, array &$error ]] )"," DomDocument domxml_open_mem ( string $str [, int $mode [, array &$error ]] )"," string domxml_version ( void )"," DomDocument domxml_xmltree ( string $str )"," DomXsltStylesheet domxml_xslt_stylesheet_doc ( DomDocument $xsl_doc )"," DomXsltStylesheet domxml_xslt_stylesheet_file ( string $xsl_file )"," DomXsltStylesheet domxml_xslt_stylesheet ( string $xsl_buf )"," int domxml_xslt_version ( void )"," DomDocument DomXsltStylesheet::process ( DomDocument $xml_doc [, array $xslt_params [, bool $is_xpath_param [, string $profile_filename ]]] )"," string DomXsltStylesheet::result_dump_file ( DomDocument $xmldoc , string $filename )"," string DomXsltStylesheet::result_dump_mem ( DomDocument $xmldoc )"," int dotnet_load ( string $assembly_name [, string $datatype_name [, int $codepage ]] )"," array each ( array &$array )"," int easter_date ([ int $year ] )"," int easter_days ([ int $year [, int $method = CAL_EASTER_DEFAULT ]] )"," void echo ( string $arg1 [, string $... ] )"," resource eio_busy ( int $delay [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," void eio_cancel ( resource $req )"," resource eio_chmod ( string $path , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_chown ( string $path , int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )"," resource eio_close ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_custom ( callable $execute , int $pri , callable $callback [, mixed $data = NULL ] )"," resource eio_dup2 ( mixed $fd , int $fd2 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," bool eio_event_loop ( void )"," resource eio_fallocate ( mixed $fd , int $mode , int $offset , int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_fchmod ( mixed $fd , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_fchown ( mixed $fd , int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )"," resource eio_fdatasync ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_fstat ( mixed $fd , int $pri , callable $callback [, mixed $data ] )"," resource eio_fstatvfs ( mixed $fd , int $pri , callable $callback [, mixed $data ] )"," resource eio_fsync ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_ftruncate ( mixed $fd [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )"," resource eio_futime ( mixed $fd , float $atime , float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," mixed eio_get_event_stream ( void )"," void eio_grp_add ( resource $grp , resource $req )"," void eio_grp_cancel ( resource $grp )"," void eio_grp_limit ( resource $grp , int $limit )"," resource eio_grp ( callable $callback [, string $data = NULL ] )"," resource eio_link ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_lstat ( string $path , int $pri , callable $callback [, mixed $data = NULL ] )"," resource eio_mkdir ( string $path , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_mknod ( string $path , int $mode , int $dev [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_nop ([ int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," int eio_npending ( void )"," int eio_nready ( void )"," int eio_nreqs ( void )"," int eio_nthreads ( void )"," resource eio_open ( string $path , int $flags , int $mode , int $pri , callable $callback [, mixed $data = NULL ] )"," int eio_poll ( void )"," resource eio_read ( mixed $fd , int $length , int $offset , int $pri , callable $callback [, mixed $data = NULL ] )"," resource eio_readahead ( mixed $fd , int $offset , int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_readdir ( string $path , int $flags , int $pri , callable $callback [, string $data = NULL ] )"," resource eio_readlink ( string $path , int $pri , callable $callback [, string $data = NULL ] )"," resource eio_realpath ( string $path , int $pri , callable $callback [, string $data = NULL ] )"," resource eio_rename ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_rmdir ( string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_seek ( mixed $fd , int $offset , int $whence [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_sendfile ( mixed $out_fd , mixed $in_fd , int $offset , int $length [, int $pri [, callable $callback [, string $data ]]] )"," void eio_set_max_idle ( int $nthreads )"," void eio_set_max_parallel ( int $nthreads )"," void eio_set_max_poll_reqs ( int $nreqs )"," void eio_set_max_poll_time ( float $nseconds )"," void eio_set_min_parallel ( string $nthreads )"," resource eio_stat ( string $path , int $pri , callable $callback [, mixed $data = NULL ] )"," resource eio_statvfs ( string $path , int $pri , callable $callback [, mixed $data ] )"," resource eio_symlink ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_sync_file_range ( mixed $fd , int $offset , int $nbytes , int $flags [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_sync ([ int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_syncfs ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_truncate ( string $path [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )"," resource eio_unlink ( string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_utime ( string $path , float $atime , float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )"," resource eio_write ( mixed $fd , string $str [, int $length = 0 [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]]] )"," bool empty ( mixed $var )"," array enchant_broker_describe ( resource $broker )"," bool enchant_broker_dict_exists ( resource $broker , string $tag )"," bool enchant_broker_free_dict ( resource $dict )"," bool enchant_broker_free ( resource $broker )"," string enchant_broker_get_error ( resource $broker )"," resource enchant_broker_init ( void )"," mixed enchant_broker_list_dicts ( resource $broker )"," resource enchant_broker_request_dict ( resource $broker , string $tag )"," resource enchant_broker_request_pwl_dict ( resource $broker , string $filename )"," bool enchant_broker_set_ordering ( resource $broker , string $tag , string $ordering )"," void enchant_dict_add_to_personal ( resource $dict , string $word )"," void enchant_dict_add_to_session ( resource $dict , string $word )"," bool enchant_dict_check ( resource $dict , string $word )"," mixed enchant_dict_describe ( resource $dict )"," string enchant_dict_get_error ( resource $dict )"," bool enchant_dict_is_in_session ( resource $dict , string $word )"," bool enchant_dict_quick_check ( resource $dict , string $word [, array &$suggestions ] )"," void enchant_dict_store_replacement ( resource $dict , string $mis , string $cor )"," array enchant_dict_suggest ( resource $dict , string $word )"," mixed end ( array &$array )"," string ereg_replace ( string $pattern , string $replacement , string $string )"," int ereg ( string $pattern , string $string [, array &$regs ] )"," string eregi_replace ( string $pattern , string $replacement , string $string )"," int eregi ( string $pattern , string $string [, array &$regs ] )"," array error_get_last ( void )"," bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] )"," int error_reporting ([ int $level ] )"," string escapeshellarg ( string $arg )"," string escapeshellcmd ( string $command )"," mixed eval ( string $code )"," bool event_add ( resource $event [, int $timeout = -1 ] )"," void event_base_free ( resource $event_base )"," int event_base_loop ( resource $event_base [, int $flags = 0 ] )"," bool event_base_loopbreak ( resource $event_base )"," bool event_base_loopexit ( resource $event_base [, int $timeout = -1 ] )"," resource event_base_new ( void )"," bool event_base_priority_init ( resource $event_base , int $npriorities )"," bool event_base_set ( resource $event , resource $event_base )"," bool event_buffer_base_set ( resource $bevent , resource $event_base )"," bool event_buffer_disable ( resource $bevent , int $events )"," bool event_buffer_enable ( resource $bevent , int $events )"," void event_buffer_fd_set ( resource $bevent , resource $fd )"," void event_buffer_free ( resource $bevent )"," resource event_buffer_new ( resource $stream , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ] )"," bool event_buffer_priority_set ( resource $bevent , int $priority )"," string event_buffer_read ( resource $bevent , int $data_size )"," bool event_buffer_set_callback ( resource $event , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ] )"," void event_buffer_timeout_set ( resource $bevent , int $read_timeout , int $write_timeout )"," void event_buffer_watermark_set ( resource $bevent , int $events , int $lowmark , int $highmark )"," bool event_buffer_write ( resource $bevent , string $data [, int $data_size = -1 ] )"," bool event_del ( resource $event )"," void event_free ( resource $event )"," resource event_new ( void )"," bool event_set ( resource $event , mixed $fd , int $events , mixed $callback [, mixed $arg ] )"," string exec ( string $command [, array &$output [, int &$return_var ]] )"," int exif_imagetype ( string $filename )"," array exif_read_data ( string $filename [, string $sections = NULL [, bool $arrays = false [, bool $thumbnail = false ]]] )"," string exif_tagname ( int $index )"," string exif_thumbnail ( string $filename [, int &$width [, int &$height [, int &$imagetype ]]] )"," void exit ([ string $status ] )"," float exp ( float $arg )"," int expect_expectl ( resource $expect , array $cases [, array &$match ] )"," resource expect_popen ( string $command )"," array explode ( string $delimiter , string $string [, int $limit ] )"," float expm1 ( float $arg )"," bool extension_loaded ( string $name )"," int extract ( array &$var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix = NULL ]] )"," int ezmlm_hash ( string $addr )"," bool fam_cancel_monitor ( resource $fam , resource $fam_monitor )"," void fam_close ( resource $fam )"," resource fam_monitor_collection ( resource $fam , string $dirname , int $depth , string $mask )"," resource fam_monitor_directory ( resource $fam , string $dirname )"," resource fam_monitor_file ( resource $fam , string $filename )"," array fam_next_event ( resource $fam )"," resource fam_open ([ string $appname ] )"," int fam_pending ( resource $fam )"," bool fam_resume_monitor ( resource $fam , resource $fam_monitor )"," bool fam_suspend_monitor ( resource $fam , resource $fam_monitor )"," int fbsql_affected_rows ([ resource $link_identifier ] )"," bool fbsql_autocommit ( resource $link_identifier [, bool $OnOff ] )"," int fbsql_blob_size ( string $blob_handle [, resource $link_identifier ] )"," bool fbsql_change_user ( string $user , string $password [, string $database [, resource $link_identifier ]] )"," int fbsql_clob_size ( string $clob_handle [, resource $link_identifier ] )"," bool fbsql_close ([ resource $link_identifier ] )"," bool fbsql_commit ([ resource $link_identifier ] )"," resource fbsql_connect ([ string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\") ]]] )"," string fbsql_create_blob ( string $blob_data [, resource $link_identifier ] )"," string fbsql_create_clob ( string $clob_data [, resource $link_identifier ] )"," bool fbsql_create_db ( string $database_name [, resource $link_identifier [, string $database_options ]] )"," bool fbsql_data_seek ( resource $result , int $row_number )"," string fbsql_database_password ( resource $link_identifier [, string $database_password ] )"," string fbsql_database ( resource $link_identifier [, string $database ] )"," resource fbsql_db_query ( string $database , string $query [, resource $link_identifier ] )"," int fbsql_db_status ( string $database_name [, resource $link_identifier ] )"," bool fbsql_drop_db ( string $database_name [, resource $link_identifier ] )"," int fbsql_errno ([ resource $link_identifier ] )"," string fbsql_error ([ resource $link_identifier ] )"," array fbsql_fetch_array ( resource $result [, int $result_type ] )"," array fbsql_fetch_assoc ( resource $result )"," object fbsql_fetch_field ( resource $result [, int $field_offset ] )"," array fbsql_fetch_lengths ( resource $result )"," object fbsql_fetch_object ( resource $result )"," array fbsql_fetch_row ( resource $result )"," string fbsql_field_flags ( resource $result [, int $field_offset ] )"," int fbsql_field_len ( resource $result [, int $field_offset ] )"," string fbsql_field_name ( resource $result [, int $field_index ] )"," bool fbsql_field_seek ( resource $result [, int $field_offset ] )"," string fbsql_field_table ( resource $result [, int $field_offset ] )"," string fbsql_field_type ( resource $result [, int $field_offset ] )"," bool fbsql_free_result ( resource $result )"," array fbsql_get_autostart_info ([ resource $link_identifier ] )"," string fbsql_hostname ( resource $link_identifier [, string $host_name ] )"," int fbsql_insert_id ([ resource $link_identifier ] )"," resource fbsql_list_dbs ([ resource $link_identifier ] )"," resource fbsql_list_fields ( string $database_name , string $table_name [, resource $link_identifier ] )"," resource fbsql_list_tables ( string $database [, resource $link_identifier ] )"," bool fbsql_next_result ( resource $result )"," int fbsql_num_fields ( resource $result )"," int fbsql_num_rows ( resource $result )"," string fbsql_password ( resource $link_identifier [, string $password ] )"," resource fbsql_pconnect ([ string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\") ]]] )"," resource fbsql_query ( string $query [, resource $link_identifier [, int $batch_size ]] )"," string fbsql_read_blob ( string $blob_handle [, resource $link_identifier ] )"," string fbsql_read_clob ( string $clob_handle [, resource $link_identifier ] )"," mixed fbsql_result ( resource $result [, int $row [, mixed $field ]] )"," bool fbsql_rollback ([ resource $link_identifier ] )"," int fbsql_rows_fetched ( resource $result )"," bool fbsql_select_db ([ string $database_name [, resource $link_identifier ]] )"," void fbsql_set_characterset ( resource $link_identifier , int $characterset [, int $in_out_both ] )"," bool fbsql_set_lob_mode ( resource $result , int $lob_mode )"," bool fbsql_set_password ( resource $link_identifier , string $user , string $password , string $old_password )"," void fbsql_set_transaction ( resource $link_identifier , int $locking , int $isolation )"," bool fbsql_start_db ( string $database_name [, resource $link_identifier [, string $database_options ]] )"," bool fbsql_stop_db ( string $database_name [, resource $link_identifier ] )"," string fbsql_table_name ( resource $result , int $index )"," string fbsql_username ( resource $link_identifier [, string $username ] )"," bool fbsql_warnings ([ bool $OnOff ] )"," bool fclose ( resource $handle )"," bool fdf_add_doc_javascript ( resource $fdf_document , string $script_name , string $script_code )"," bool fdf_add_template ( resource $fdf_document , int $newpage , string $filename , string $template , int $rename )"," void fdf_close ( resource $fdf_document )"," resource fdf_create ( void )"," bool fdf_enum_values ( resource $fdf_document , callable $function [, mixed $userdata ] )"," int fdf_errno ( void )"," string fdf_error ([ int $error_code = -1 ] )"," bool fdf_get_ap ( resource $fdf_document , string $field , int $face , string $filename )"," array fdf_get_attachment ( resource $fdf_document , string $fieldname , string $savepath )"," string fdf_get_encoding ( resource $fdf_document )"," string fdf_get_file ( resource $fdf_document )"," int fdf_get_flags ( resource $fdf_document , string $fieldname , int $whichflags )"," mixed fdf_get_opt ( resource $fdf_document , string $fieldname [, int $element = -1 ] )"," string fdf_get_status ( resource $fdf_document )"," mixed fdf_get_value ( resource $fdf_document , string $fieldname [, int $which = -1 ] )"," string fdf_get_version ([ resource $fdf_document ] )"," void fdf_header ( void )"," string fdf_next_field_name ( resource $fdf_document [, string $fieldname ] )"," resource fdf_open_string ( string $fdf_data )"," resource fdf_open ( string $filename )"," bool fdf_remove_item ( resource $fdf_document , string $fieldname , int $item )"," string fdf_save_string ( resource $fdf_document )"," bool fdf_save ( resource $fdf_document [, string $filename ] )"," bool fdf_set_ap ( resource $fdf_document , string $field_name , int $face , string $filename , int $page_number )"," bool fdf_set_encoding ( resource $fdf_document , string $encoding )"," bool fdf_set_file ( resource $fdf_document , string $url [, string $target_frame ] )"," bool fdf_set_flags ( resource $fdf_document , string $fieldname , int $whichFlags , int $newFlags )"," bool fdf_set_javascript_action ( resource $fdf_document , string $fieldname , int $trigger , string $script )"," bool fdf_set_on_import_javascript ( resource $fdf_document , string $script , bool $before_data_import )"," bool fdf_set_opt ( resource $fdf_document , string $fieldname , int $element , string $str1 , string $str2 )"," bool fdf_set_status ( resource $fdf_document , string $status )"," bool fdf_set_submit_form_action ( resource $fdf_document , string $fieldname , int $trigger , string $script , int $flags )"," bool fdf_set_target_frame ( resource $fdf_document , string $frame_name )"," bool fdf_set_value ( resource $fdf_document , string $fieldname , mixed $value [, int $isName ] )"," bool fdf_set_version ( resource $fdf_document , string $version )"," bool feof ( resource $handle )"," bool fflush ( resource $handle )"," string fgetc ( resource $handle )"," array fgetcsv ( resource $handle [, int $length = 0 [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\' ]]]] )"," string fgets ( resource $handle [, int $length ] )"," string fgetss ( resource $handle [, int $length [, string $allowable_tags ]] )"," bool file_exists ( string $filename )"," string file_get_contents ( string $filename [, bool $use_include_path = false [, resource $context [, int $offset = -1 [, int $maxlen ]]]] )"," int file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] )"," array file ( string $filename [, int $flags = 0 [, resource $context ]] )"," int fileatime ( string $filename )"," int filectime ( string $filename )"," int filegroup ( string $filename )"," int fileinode ( string $filename )"," int filemtime ( string $filename )"," int fileowner ( string $filename )"," int fileperms ( string $filename )"," int filepro_fieldcount ( void )"," string filepro_fieldname ( int $field_number )"," string filepro_fieldtype ( int $field_number )"," int filepro_fieldwidth ( int $field_number )"," string filepro_retrieve ( int $row_number , int $field_number )"," int filepro_rowcount ( void )"," bool filepro ( string $directory )"," int filesize ( string $filename )"," string filetype ( string $filename )"," bool filter_has_var ( int $type , string $variable_name )"," int filter_id ( string $filtername )"," mixed filter_input_array ( int $type [, mixed $definition ] )"," mixed filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]] )"," array filter_list ( void )"," mixed filter_var_array ( array $data [, mixed $definition ] )"," mixed filter_var ( mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options ]] )"," string finfo_buffer ( resource $finfo , string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )"," bool finfo_close ( resource $finfo )"," string finfo_file ( resource $finfo , string $file_name = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )"," resource finfo_open ([ int $options = FILEINFO_NONE [, string $magic_file = NULL ]] )"," bool finfo_set_flags ( resource $finfo , int $options )"," float floatval ( mixed $var )"," bool flock ( resource $handle , int $operation [, int &$wouldblock ] )"," float floor ( float $value )"," void flush ( void )"," float fmod ( float $x , float $y )"," bool fnmatch ( string $pattern , string $string [, int $flags = 0 ] )"," resource fopen ( string $filename , string $mode [, bool $use_include_path = false [, resource $context ]] )"," mixed forward_static_call_array ( callable $function , array $parameters )"," mixed forward_static_call ( callable $function [, mixed $parameter [, mixed $... ]] )"," int fpassthru ( resource $handle )"," int fprintf ( resource $handle , string $format [, mixed $args [, mixed $... ]] )"," int fputcsv ( resource $handle , array $fields [, string $delimiter = ',' [, string $enclosure = '\"' ]] )"," string fread ( resource $handle , int $length )"," int frenchtojd ( int $month , int $day , int $year )"," string fribidi_log2vis ( string $str , string $direction , int $charset )"," mixed fscanf ( resource $handle , string $format [, mixed &$... ] )"," int fseek ( resource $handle , int $offset [, int $whence = SEEK_SET ] )"," resource fsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get(\"default_socket_timeout\") ]]]] )"," array fstat ( resource $handle )"," int ftell ( resource $handle )"," int ftok ( string $pathname , string $proj )"," bool ftp_alloc ( resource $ftp_stream , int $filesize [, string &$result ] )"," bool ftp_cdup ( resource $ftp_stream )"," bool ftp_chdir ( resource $ftp_stream , string $directory )"," int ftp_chmod ( resource $ftp_stream , int $mode , string $filename )"," bool ftp_close ( resource $ftp_stream )"," resource ftp_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] )"," bool ftp_delete ( resource $ftp_stream , string $path )"," bool ftp_exec ( resource $ftp_stream , string $command )"," bool ftp_fget ( resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ] )"," bool ftp_fput ( resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ] )"," mixed ftp_get_option ( resource $ftp_stream , int $option )"," bool ftp_get ( resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ] )"," bool ftp_login ( resource $ftp_stream , string $username , string $password )"," int ftp_mdtm ( resource $ftp_stream , string $remote_file )"," string ftp_mkdir ( resource $ftp_stream , string $directory )"," int ftp_nb_continue ( resource $ftp_stream )"," int ftp_nb_fget ( resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ] )"," int ftp_nb_fput ( resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ] )"," int ftp_nb_get ( resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ] )"," int ftp_nb_put ( resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ] )"," array ftp_nlist ( resource $ftp_stream , string $directory )"," bool ftp_pasv ( resource $ftp_stream , bool $pasv )"," bool ftp_put ( resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ] )"," string ftp_pwd ( resource $ftp_stream )"," array ftp_raw ( resource $ftp_stream , string $command )"," array ftp_rawlist ( resource $ftp_stream , string $directory [, bool $recursive = false ] )"," bool ftp_rename ( resource $ftp_stream , string $oldname , string $newname )"," bool ftp_rmdir ( resource $ftp_stream , string $directory )"," bool ftp_set_option ( resource $ftp_stream , int $option , mixed $value )"," bool ftp_site ( resource $ftp_stream , string $command )"," int ftp_size ( resource $ftp_stream , string $remote_file )"," resource ftp_ssl_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] )"," string ftp_systype ( resource $ftp_stream )"," bool ftruncate ( resource $handle , int $size )"," mixed func_get_arg ( int $arg_num )"," array func_get_args ( void )"," int func_num_args ( void )"," bool function_exists ( string $function_name )"," int fwrite ( resource $handle , string $string [, int $length ] )"," int gc_collect_cycles ( void )"," void gc_disable ( void )"," void gc_enable ( void )"," bool gc_enabled ( void )"," array gd_info ( void )"," string geoip_continent_code_by_name ( string $hostname )"," string geoip_country_code_by_name ( string $hostname )"," string geoip_country_code3_by_name ( string $hostname )"," string geoip_country_name_by_name ( string $hostname )"," string geoip_database_info ([ int $database = GEOIP_COUNTRY_EDITION ] )"," bool geoip_db_avail ( int $database )"," string geoip_db_filename ( int $database )"," array geoip_db_get_all_info ( void )"," int geoip_id_by_name ( string $hostname )"," string geoip_isp_by_name ( string $hostname )"," string geoip_org_by_name ( string $hostname )"," array geoip_record_by_name ( string $hostname )"," array geoip_region_by_name ( string $hostname )"," string geoip_region_name_by_code ( string $country_code , string $region_code )"," string geoip_time_zone_by_country_and_region ( string $country_code [, string $region_code ] )"," mixed get_browser ([ string $user_agent [, bool $return_array = false ]] )"," string get_called_class ( void )"," string get_cfg_var ( string $option )"," array get_class_methods ( mixed $class_name )"," array get_class_vars ( string $class_name )"," string get_class ([ object $object = NULL ] )"," string get_current_user ( void )"," array get_declared_classes ( void )"," array get_declared_interfaces ( void )"," array get_declared_traits ( void )"," array get_defined_constants ([ bool $categorize = false ] )"," array get_defined_functions ( void )"," array get_defined_vars ( void )"," array get_extension_funcs ( string $module_name )"," array get_headers ( string $url [, int $format = 0 ] )"," array get_html_translation_table ([ int $table = HTML_SPECIALCHARS [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' ]]] )"," string get_include_path ( void )"," array get_included_files ( void )"," array get_loaded_extensions ([ bool $zend_extensions = false ] )"," bool get_magic_quotes_gpc ( void )"," bool get_magic_quotes_runtime ( void )"," array get_meta_tags ( string $filename [, bool $use_include_path = false ] )"," array get_object_vars ( object $object )"," string get_parent_class ([ mixed $object ] )"," string get_resource_type ( resource $handle )"," array getallheaders ( void )"," string getcwd ( void )"," array getdate ([ int $timestamp = time() ] )"," string getenv ( string $varname )"," string gethostbyaddr ( string $ip_address )"," string gethostbyname ( string $hostname )"," array gethostbynamel ( string $hostname )"," string gethostname ( void )"," array getimagesize ( string $filename [, array &$imageinfo ] )"," array getimagesizefromstring ( string $imagedata [, array &$imageinfo ] )"," int getlastmod ( void )"," bool getmxrr ( string $hostname , array &$mxhosts [, array &$weight ] )"," int getmygid ( void )"," int getmyinode ( void )"," int getmypid ( void )"," int getmyuid ( void )"," array getopt ( string $options [, array $longopts ] )"," int getprotobyname ( string $name )"," string getprotobynumber ( int $number )"," int getrandmax ( void )"," array getrusage ([ int $who = 0 ] )"," int getservbyname ( string $service , string $protocol )"," string getservbyport ( int $port , string $protocol )"," string gettext ( string $message )"," mixed gettimeofday ([ bool $return_float = false ] )"," string gettype ( mixed $var )"," array glob ( string $pattern [, int $flags = 0 ] )"," string gmdate ( string $format [, int $timestamp = time() ] )"," int gmmktime ([ int $hour = gmdate(\"H\") [, int $minute = gmdate(\"i\") [, int $second = gmdate(\"s\") [, int $month = gmdate(\"n\") [, int $day = gmdate(\"j\") [, int $year = gmdate(\"Y\") [, int $is_dst = -1 ]]]]]]] )"," resource gmp_abs ( resource $a )"," resource gmp_add ( resource $a , resource $b )"," resource gmp_and ( resource $a , resource $b )"," void gmp_clrbit ( resource $a , int $index )"," int gmp_cmp ( resource $a , resource $b )"," resource gmp_com ( resource $a )"," resource gmp_div_q ( resource $a , resource $b [, int $round = GMP_ROUND_ZERO ] )"," array gmp_div_qr ( resource $n , resource $d [, int $round = GMP_ROUND_ZERO ] )"," resource gmp_div_r ( resource $n , resource $d [, int $round = GMP_ROUND_ZERO ] )"," resource gmp_divexact ( resource $n , resource $d )"," resource gmp_fact ( mixed $a )"," resource gmp_gcd ( resource $a , resource $b )"," array gmp_gcdext ( resource $a , resource $b )"," int gmp_hamdist ( resource $a , resource $b )"," resource gmp_init ( mixed $number [, int $base = 0 ] )"," int gmp_intval ( resource $gmpnumber )"," resource gmp_invert ( resource $a , resource $b )"," int gmp_jacobi ( resource $a , resource $p )"," int gmp_legendre ( resource $a , resource $p )"," resource gmp_mod ( resource $n , resource $d )"," resource gmp_mul ( resource $a , resource $b )"," resource gmp_neg ( resource $a )"," resource gmp_nextprime ( int $a )"," resource gmp_or ( resource $a , resource $b )"," bool gmp_perfect_square ( resource $a )"," int gmp_popcount ( resource $a )"," resource gmp_pow ( resource $base , int $exp )"," resource gmp_powm ( resource $base , resource $exp , resource $mod )"," int gmp_prob_prime ( resource $a [, int $reps = 10 ] )"," resource gmp_random ([ int $limiter = 20 ] )"," int gmp_scan0 ( resource $a , int $start )"," int gmp_scan1 ( resource $a , int $start )"," void gmp_setbit ( resource $a , int $index [, bool $set_clear = true ] )"," int gmp_sign ( resource $a )"," resource gmp_sqrt ( resource $a )"," array gmp_sqrtrem ( resource $a )"," string gmp_strval ( resource $gmpnumber [, int $base = 10 ] )"," resource gmp_sub ( resource $a , resource $b )"," bool gmp_testbit ( resource $a , int $index )"," resource gmp_xor ( resource $a , resource $b )"," string gmstrftime ( string $format [, int $timestamp = time() ] )"," bool gnupg_adddecryptkey ( resource $identifier , string $fingerprint , string $passphrase )"," bool gnupg_addencryptkey ( resource $identifier , string $fingerprint )"," bool gnupg_addsignkey ( resource $identifier , string $fingerprint [, string $passphrase ] )"," bool gnupg_cleardecryptkeys ( resource $identifier )"," bool gnupg_clearencryptkeys ( resource $identifier )"," bool gnupg_clearsignkeys ( resource $identifier )"," string gnupg_decrypt ( resource $identifier , string $text )"," array gnupg_decryptverify ( resource $identifier , string $text , string &$plaintext )"," string gnupg_encrypt ( resource $identifier , string $plaintext )"," string gnupg_encryptsign ( resource $identifier , string $plaintext )"," string gnupg_export ( resource $identifier , string $fingerprint )"," string gnupg_geterror ( resource $identifier )"," int gnupg_getprotocol ( resource $identifier )"," array gnupg_import ( resource $identifier , string $keydata )"," resource gnupg_init ( void )"," array gnupg_keyinfo ( resource $identifier , string $pattern )"," bool gnupg_setarmor ( resource $identifier , int $armor )"," void gnupg_seterrormode ( resource $identifier , int $errormode )"," bool gnupg_setsignmode ( resource $identifier , int $signmode )"," string gnupg_sign ( resource $identifier , string $plaintext )"," array gnupg_verify ( resource $identifier , string $signed_text , string $signature [, string &$plaintext ] )"," array gopher_parsedir ( string $dirent )"," string grapheme_extract ( string $haystack , int $size [, int $extract_type [, int $start = 0 [, int &$next ]]] )"," int grapheme_stripos ( string $haystack , string $needle [, int $offset = 0 ] )"," string grapheme_stristr ( string $haystack , string $needle [, bool $before_needle = false ] )"," int grapheme_strlen ( string $input )"," int grapheme_strpos ( string $haystack , string $needle [, int $offset = 0 ] )"," int grapheme_strripos ( string $haystack , string $needle [, int $offset = 0 ] )"," int grapheme_strrpos ( string $haystack , string $needle [, int $offset = 0 ] )"," string grapheme_strstr ( string $haystack , string $needle [, bool $before_needle = false ] )"," int grapheme_substr ( string $string , int $start [, int $length ] )"," int gregoriantojd ( int $month , int $day , int $year )"," string gupnp_context_get_host_ip ( resource $context )"," int gupnp_context_get_port ( resource $context )"," int gupnp_context_get_subscription_timeout ( resource $context )"," bool gupnp_context_host_path ( resource $context , string $local_path , string $server_path )"," resource gupnp_context_new ([ string $host_ip [, int $port = 0 ]] )"," void gupnp_context_set_subscription_timeout ( resource $context , int $timeout )"," bool gupnp_context_timeout_add ( resource $context , int $timeout , mixed $callback [, mixed $arg ] )"," bool gupnp_context_unhost_path ( resource $context , string $server_path )"," bool gupnp_control_point_browse_start ( resource $cpoint )"," bool gupnp_control_point_browse_stop ( resource $cpoint )"," bool gupnp_control_point_callback_set ( resource $cpoint , int $signal , mixed $callback [, mixed $arg ] )"," resource gupnp_control_point_new ( resource $context , string $target )"," bool gupnp_device_action_callback_set ( resource $root_device , int $signal , string $action_name , mixed $callback [, mixed $arg ] )"," resource gupnp_device_info_get_service ( resource $root_device , string $type )"," array gupnp_device_info_get ( resource $root_device )"," bool gupnp_root_device_get_available ( resource $root_device )"," string gupnp_root_device_get_relative_location ( resource $root_device )"," resource gupnp_root_device_new ( resource $context , string $location , string $description_dir )"," bool gupnp_root_device_set_available ( resource $root_device , bool $available )"," bool gupnp_root_device_start ( resource $root_device )"," bool gupnp_root_device_stop ( resource $root_device )"," mixed gupnp_service_action_get ( resource $action , string $name , int $type )"," bool gupnp_service_action_return_error ( resource $action , int $error_code [, string $error_description ] )"," bool gupnp_service_action_return ( resource $action )"," bool gupnp_service_action_set ( resource $action , string $name , int $type , mixed $value )"," bool gupnp_service_freeze_notify ( resource $service )"," mixed gupnp_service_info_get_introspection ( resource $proxy [, mixed $callback [, mixed $arg ]] )"," array gupnp_service_info_get ( resource $proxy )"," array gupnp_service_introspection_get_state_variable ( resource $introspection , string $variable_name )"," bool gupnp_service_notify ( resource $service , string $name , int $type , mixed $value )"," mixed gupnp_service_proxy_action_get ( resource $proxy , string $action , string $name , int $type )"," bool gupnp_service_proxy_action_set ( resource $proxy , string $action , string $name , mixed $value , int $type )"," bool gupnp_service_proxy_add_notify ( resource $proxy , string $value , int $type , mixed $callback [, mixed $arg ] )"," bool gupnp_service_proxy_callback_set ( resource $proxy , int $signal , mixed $callback [, mixed $arg ] )"," bool gupnp_service_proxy_get_subscribed ( resource $proxy )"," bool gupnp_service_proxy_remove_notify ( resource $proxy , string $value )"," bool gupnp_service_proxy_set_subscribed ( resource $proxy , bool $subscribed )"," bool gupnp_service_thaw_notify ( resource $service )"," bool gzclose ( resource $zp )"," string gzcompress ( string $data [, int $level = -1 ] )"," string gzdecode ( string $data [, int $length ] )"," string gzdeflate ( string $data [, int $level = -1 ] )"," string gzencode ( string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP ]] )"," int gzeof ( resource $zp )"," array gzfile ( string $filename [, int $use_include_path = 0 ] )"," string gzgetc ( resource $zp )"," string gzgets ( resource $zp , int $length )"," string gzgetss ( resource $zp , int $length [, string $allowable_tags ] )"," string gzinflate ( string $data [, int $length = 0 ] )"," resource gzopen ( string $filename , string $mode [, int $use_include_path = 0 ] )"," int gzpassthru ( resource $zp )"," string gzread ( resource $zp , int $length )"," bool gzrewind ( resource $zp )"," int gzseek ( resource $zp , int $offset [, int $whence = SEEK_SET ] )"," int gztell ( resource $zp )"," string gzuncompress ( string $data [, int $length = 0 ] )"," int gzwrite ( resource $zp , string $string [, int $length ] )"," void __halt_compiler ( void )"," array hash_algos ( void )"," resource hash_copy ( resource $context )"," string hash_file ( string $algo , string $filename [, bool $raw_output = false ] )"," string hash_final ( resource $context [, bool $raw_output = false ] )"," string hash_hmac_file ( string $algo , string $filename , string $key [, bool $raw_output = false ] )"," string hash_hmac ( string $algo , string $data , string $key [, bool $raw_output = false ] )"," resource hash_init ( string $algo [, int $options = 0 [, string $key = NULL ]] )"," bool hash_update_file ( resource $context , string $filename [, resource $context = NULL ] )"," int hash_update_stream ( resource $context , resource $handle [, int $length = -1 ] )"," bool hash_update ( resource $context , string $data )"," string hash ( string $algo , string $data [, bool $raw_output = false ] )"," bool header_register_callback ( callable $callback )"," void header_remove ([ string $name ] )"," void header ( string $string [, bool $replace = true [, int $http_response_code ]] )"," array headers_list ( void )"," bool headers_sent ([ string &$file [, int &$line ]] )"," string hebrev ( string $hebrew_text [, int $max_chars_per_line = 0 ] )"," string hebrevc ( string $hebrew_text [, int $max_chars_per_line = 0 ] )"," string hex2bin ( string $data )"," number hexdec ( string $hex_string )"," mixed highlight_file ( string $filename [, bool $return = false ] )"," mixed highlight_string ( string $str [, bool $return = false ] )"," string html_entity_decode ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' ]] )"," string htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' [, bool $double_encode = true ]]] )"," string htmlspecialchars_decode ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 ] )"," string htmlspecialchars ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' [, bool $double_encode = true ]]] )"," string http_build_cookie ( array $cookie )"," string http_build_query ( mixed $query_data [, string $numeric_prefix [, string $arg_separator [, int $enc_type = PHP_QUERY_RFC1738 ]]] )"," string http_build_str ( array $query [, string $prefix [, string $arg_separator = ini_get(\"arg_separator.output\") ]] )"," string http_build_url ([ mixed $url [, mixed $parts [, int $flags = HTTP_URL_REPLACE [, array &$new_url ]]]] )"," bool http_cache_etag ([ string $etag ] )"," bool http_cache_last_modified ([ int $timestamp_or_expires ] )"," string http_chunked_decode ( string $encoded )"," string http_date ([ int $timestamp ] )"," string http_deflate ( string $data [, int $flags = 0 ] )"," resource http_get_request_body_stream ( void )"," string http_get_request_body ( void )"," array http_get_request_headers ( void )"," string http_get ( string $url [, array $options [, array &$info ]] )"," string http_head ( string $url [, array $options [, array &$info ]] )"," string http_inflate ( string $data )"," bool http_match_etag ( string $etag [, bool $for_range = false ] )"," bool http_match_modified ([ int $timestamp = -1 [, bool $for_range = false ]] )"," bool http_match_request_header ( string $header , string $value [, bool $match_case = false ] )"," string http_negotiate_charset ( array $supported [, array &$result ] )"," string http_negotiate_content_type ( array $supported [, array &$result ] )"," string http_negotiate_language ( array $supported [, array &$result ] )"," object http_parse_cookie ( string $cookie [, int $flags [, array $allowed_extras ]] )"," array http_parse_headers ( string $header )"," object http_parse_message ( string $message )"," object http_parse_params ( string $param [, int $flags = HTTP_PARAMS_DEFAULT ] )"," string http_persistent_handles_clean ([ string $ident ] )"," object http_persistent_handles_count ( void )"," string http_persistent_handles_ident ([ string $ident ] )"," string http_post_data ( string $url , string $data [, array $options [, array &$info ]] )"," string http_post_fields ( string $url , array $data [, array $files [, array $options [, array &$info ]]] )"," string http_put_data ( string $url , string $data [, array $options [, array &$info ]] )"," string http_put_file ( string $url , string $file [, array $options [, array &$info ]] )"," string http_put_stream ( string $url , resource $stream [, array $options [, array &$info ]] )"," bool http_redirect ([ string $url [, array $params [, bool $session = false [, int $status = 0 ]]]] )"," string http_request_body_encode ( array $fields , array $files )"," int http_request_method_exists ( mixed $method )"," string http_request_method_name ( int $method )"," int http_request_method_register ( string $method )"," bool http_request_method_unregister ( mixed $method )"," string http_request ( int $method , string $url [, string $body [, array $options [, array &$info ]]] )"," int http_response_code ([ int $response_code ] )"," bool http_send_content_disposition ( string $filename [, bool $inline = false ] )"," bool http_send_content_type ([ string $content_type = \"application/x-octetstream\" ] )"," bool http_send_data ( string $data )"," bool http_send_file ( string $file )"," bool http_send_last_modified ([ int $timestamp = time() ] )"," bool http_send_status ( int $status )"," bool http_send_stream ( resource $stream )"," int http_support ([ int $feature = 0 ] )"," void http_throttle ( float $sec [, int $bytes = 40960 ] )"," string hw_array2objrec ( array $object_array )"," bool hw_changeobject ( int $link , int $objid , array $attributes )"," array hw_children ( int $connection , int $objectID )"," array hw_childrenobj ( int $connection , int $objectID )"," bool hw_close ( int $connection )"," int hw_connect ( string $host , int $port [, string $username ], string $password )"," void hw_connection_info ( int $link )"," int hw_cp ( int $connection , array $object_id_array , int $destination_id )"," bool hw_deleteobject ( int $connection , int $object_to_delete )"," int hw_docbyanchor ( int $connection , int $anchorID )"," string hw_docbyanchorobj ( int $connection , int $anchorID )"," string hw_document_attributes ( int $hw_document )"," string hw_document_bodytag ( int $hw_document [, string $prefix ] )"," string hw_document_content ( int $hw_document )"," bool hw_document_setcontent ( int $hw_document , string $content )"," int hw_document_size ( int $hw_document )"," string hw_dummy ( int $link , int $id , int $msgid )"," bool hw_edittext ( int $connection , int $hw_document )"," int hw_error ( int $connection )"," string hw_errormsg ( int $connection )"," bool hw_free_document ( int $hw_document )"," array hw_getanchors ( int $connection , int $objectID )"," array hw_getanchorsobj ( int $connection , int $objectID )"," string hw_getandlock ( int $connection , int $objectID )"," array hw_getchildcoll ( int $connection , int $objectID )"," array hw_getchildcollobj ( int $connection , int $objectID )"," array hw_getchilddoccoll ( int $connection , int $objectID )"," array hw_getchilddoccollobj ( int $connection , int $objectID )"," mixed hw_getobject ( int $connection , mixed $objectID [, string $query ] )"," array hw_getobjectbyquery ( int $connection , string $query , int $max_hits )"," array hw_getobjectbyquerycoll ( int $connection , int $objectID , string $query , int $max_hits )"," array hw_getobjectbyquerycollobj ( int $connection , int $objectID , string $query , int $max_hits )"," array hw_getobjectbyqueryobj ( int $connection , string $query , int $max_hits )"," array hw_getparents ( int $connection , int $objectID )"," array hw_getparentsobj ( int $connection , int $objectID )"," string hw_getrellink ( int $link , int $rootid , int $sourceid , int $destid )"," int hw_getremote ( int $connection , int $objectID )"," mixed hw_getremotechildren ( int $connection , string $object_record )"," array hw_getsrcbydestobj ( int $connection , int $objectID )"," int hw_gettext ( int $connection , int $objectID [, mixed $rootID/prefix ] )"," string hw_getusername ( int $connection )"," string hw_identify ( int $link , string $username , string $password )"," array hw_incollections ( int $connection , array $object_id_array , array $collection_id_array , int $return_collections )"," string hw_info ( int $connection )"," int hw_inscoll ( int $connection , int $objectID , array $object_array )"," int hw_insdoc ( resource $connection , int $parentID , string $object_record [, string $text ] )"," bool hw_insertanchors ( int $hwdoc , array $anchorecs , array $dest [, array $urlprefixes ] )"," int hw_insertdocument ( int $connection , int $parent_id , int $hw_document )"," int hw_insertobject ( int $connection , string $object_rec , string $parameter )"," int hw_mapid ( int $connection , int $server_id , int $object_id )"," bool hw_modifyobject ( int $connection , int $object_to_change , array $remove , array $add [, int $mode ] )"," int hw_mv ( int $connection , array $object_id_array , int $source_id , int $destination_id )"," int hw_new_document ( string $object_record , string $document_data , int $document_size )"," array hw_objrec2array ( string $object_record [, array $format ] )"," bool hw_output_document ( int $hw_document )"," int hw_pconnect ( string $host , int $port [, string $username ], string $password )"," int hw_pipedocument ( int $connection , int $objectID [, array $url_prefixes ] )"," int hw_root ( void )"," int hw_setlinkroot ( int $link , int $rootid )"," string hw_stat ( int $link )"," bool hw_unlock ( int $connection , int $objectID )"," array hw_who ( int $connection )"," HW_API_Attribute hwapi_attribute_new ([ string $name [, string $value ]] )"," HW_API_Content hwapi_content_new ( string $content , string $mimetype )"," HW_API hwapi_hgcsp ( string $hostname [, int $port ] )"," hw_api_object hwapi_object_new ( array $parameter )"," float hypot ( float $x , float $y )"," bool ibase_add_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] )"," int ibase_affected_rows ([ resource $link_identifier ] )"," mixed ibase_backup ( resource $service_handle , string $source_db , string $dest_file [, int $options = 0 [, bool $verbose = false ]] )"," void ibase_blob_add ( resource $blob_handle , string $data )"," bool ibase_blob_cancel ( resource $blob_handle )"," mixed ibase_blob_close ( resource $blob_handle )"," resource ibase_blob_create ([ resource $link_identifier = NULL ] )"," bool ibase_blob_echo ( string $blob_id )"," string ibase_blob_get ( resource $blob_handle , int $len )"," string ibase_blob_import ( resource $link_identifier , resource $file_handle )"," array ibase_blob_info ( resource $link_identifier , string $blob_id )"," resource ibase_blob_open ( resource $link_identifier , string $blob_id )"," bool ibase_close ([ resource $connection_id = NULL ] )"," bool ibase_commit_ret ([ resource $link_or_trans_identifier = NULL ] )"," bool ibase_commit ([ resource $link_or_trans_identifier = NULL ] )"," resource ibase_connect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] )"," string ibase_db_info ( resource $service_handle , string $db , int $action [, int $argument = 0 ] )"," bool ibase_delete_user ( resource $service_handle , string $user_name )"," bool ibase_drop_db ([ resource $connection = NULL ] )"," int ibase_errcode ( void )"," string ibase_errmsg ( void )"," resource ibase_execute ( resource $query [, mixed $bind_arg [, mixed $... ]] )"," array ibase_fetch_assoc ( resource $result [, int $fetch_flag = 0 ] )"," object ibase_fetch_object ( resource $result_id [, int $fetch_flag = 0 ] )"," array ibase_fetch_row ( resource $result_identifier [, int $fetch_flag = 0 ] )"," array ibase_field_info ( resource $result , int $field_number )"," bool ibase_free_event_handler ( resource $event )"," bool ibase_free_query ( resource $query )"," bool ibase_free_result ( resource $result_identifier )"," mixed ibase_gen_id ( string $generator [, int $increment = 1 [, resource $link_identifier = NULL ]] )"," bool ibase_maintain_db ( resource $service_handle , string $db , int $action [, int $argument = 0 ] )"," bool ibase_modify_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] )"," bool ibase_name_result ( resource $result , string $name )"," int ibase_num_fields ( resource $result_id )"," int ibase_num_params ( resource $query )"," array ibase_param_info ( resource $query , int $param_number )"," resource ibase_pconnect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] )"," resource ibase_prepare ( string $query )"," resource ibase_query ([ resource $link_identifier ], string $query [, int $bind_args ] )"," mixed ibase_restore ( resource $service_handle , string $source_file , string $dest_db [, int $options = 0 [, bool $verbose = false ]] )"," bool ibase_rollback_ret ([ resource $link_or_trans_identifier = NULL ] )"," bool ibase_rollback ([ resource $link_or_trans_identifier = NULL ] )"," string ibase_server_info ( resource $service_handle , int $action )"," resource ibase_service_attach ( string $host , string $dba_username , string $dba_password )"," bool ibase_service_detach ( resource $service_handle )"," resource ibase_set_event_handler ( callable $event_handler , string $event_name1 [, string $event_name2 [, string $... ]] )"," bool ibase_timefmt ( string $format [, int $columntype = IBASE_TIMESTAMP ] )"," resource ibase_trans ([ int $trans_args [, resource $link_identifier ]] )"," string ibase_wait_event ( string $event_name1 [, string $event_name2 [, string $... ]] )"," mixed iconv_get_encoding ([ string $type = \"all\" ] )"," array iconv_mime_decode_headers ( string $encoded_headers [, int $mode = 0 [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )"," string iconv_mime_decode ( string $encoded_header [, int $mode = 0 [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )"," string iconv_mime_encode ( string $field_name , string $field_value [, array $preferences = NULL ] )"," bool iconv_set_encoding ( string $type , string $charset )"," int iconv_strlen ( string $str [, string $charset = ini_get(\"iconv.internal_encoding\") ] )"," int iconv_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )"," int iconv_strrpos ( string $haystack , string $needle [, string $charset = ini_get(\"iconv.internal_encoding\") ] )"," string iconv_substr ( string $str , int $offset [, int $length = iconv_strlen($str, $charset) [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )"," string iconv ( string $in_charset , string $out_charset , string $str )"," string id3_get_frame_long_name ( string $frameId )"," string id3_get_frame_short_name ( string $frameId )"," int id3_get_genre_id ( string $genre )"," array id3_get_genre_list ( void )"," string id3_get_genre_name ( int $genre_id )"," array id3_get_tag ( string $filename [, int $version = ID3_BEST ] )"," int id3_get_version ( string $filename )"," bool id3_remove_tag ( string $filename [, int $version = ID3_V1_0 ] )"," bool id3_set_tag ( string $filename , array $tag [, int $version = ID3_V1_0 ] )"," int idate ( string $format [, int $timestamp = time() ] )"," string idn_to_ascii ( string $domain [, int $options = 0 [, int $variant = INTL_IDNA_VARIANT_2003 [, array &$idna_info ]]] )"," string idn_to_utf8 ( string $domain [, int $options = 0 [, int $variant = INTL_IDNA_VARIANT_2003 [, array &$idna_info ]]] )"," int ifx_affected_rows ( resource $result_id )"," bool ifx_blobinfile_mode ( int $mode )"," bool ifx_byteasvarchar ( int $mode )"," bool ifx_close ([ resource $link_identifier ] )"," resource ifx_connect ([ string $database [, string $userid [, string $password ]]] )"," int ifx_copy_blob ( int $bid )"," int ifx_create_blob ( int $type , int $mode , string $param )"," int ifx_create_char ( string $param )"," bool ifx_do ( resource $result_id )"," string ifx_error ([ resource $link_identifier ] )"," string ifx_errormsg ([ int $errorcode ] )"," array ifx_fetch_row ( resource $result_id [, mixed $position ] )"," array ifx_fieldproperties ( resource $result_id )"," array ifx_fieldtypes ( resource $result_id )"," bool ifx_free_blob ( int $bid )"," bool ifx_free_char ( int $bid )"," bool ifx_free_result ( resource $result_id )"," string ifx_get_blob ( int $bid )"," string ifx_get_char ( int $bid )"," array ifx_getsqlca ( resource $result_id )"," int ifx_htmltbl_result ( resource $result_id [, string $html_table_options ] )"," bool ifx_nullformat ( int $mode )"," int ifx_num_fields ( resource $result_id )"," int ifx_num_rows ( resource $result_id )"," resource ifx_pconnect ([ string $database [, string $userid [, string $password ]]] )"," resource ifx_prepare ( string $query , resource $link_identifier [, int $cursor_def ], mixed $blobidarray )"," resource ifx_query ( string $query , resource $link_identifier [, int $cursor_type [, mixed $blobidarray ]] )"," bool ifx_textasvarchar ( int $mode )"," bool ifx_update_blob ( int $bid , string $content )"," bool ifx_update_char ( int $bid , string $content )"," bool ifxus_close_slob ( int $bid )"," int ifxus_create_slob ( int $mode )"," bool ifxus_free_slob ( int $bid )"," int ifxus_open_slob ( int $bid , int $mode )"," string ifxus_read_slob ( int $bid , int $nbytes )"," int ifxus_seek_slob ( int $bid , int $mode , int $offset )"," int ifxus_tell_slob ( int $bid )"," int ifxus_write_slob ( int $bid , string $content )"," int ignore_user_abort ([ string $value ] )"," int iis_add_server ( string $path , string $comment , string $server_ip , int $port , string $host_name , int $rights , int $start_server )"," int iis_get_dir_security ( int $server_instance , string $virtual_path )"," string iis_get_script_map ( int $server_instance , string $virtual_path , string $script_extension )"," int iis_get_server_by_comment ( string $comment )"," int iis_get_server_by_path ( string $path )"," int iis_get_server_rights ( int $server_instance , string $virtual_path )"," int iis_get_service_state ( string $service_id )"," int iis_remove_server ( int $server_instance )"," int iis_set_app_settings ( int $server_instance , string $virtual_path , string $application_scope )"," int iis_set_dir_security ( int $server_instance , string $virtual_path , int $directory_flags )"," int iis_set_script_map ( int $server_instance , string $virtual_path , string $script_extension , string $engine_path , int $allow_scripting )"," int iis_set_server_rights ( int $server_instance , string $virtual_path , int $directory_flags )"," int iis_start_server ( int $server_instance )"," int iis_start_service ( string $service_id )"," int iis_stop_server ( int $server_instance )"," int iis_stop_service ( string $service_id )"," string image_type_to_extension ( int $imagetype [, bool $include_dot = TRUE ] )"," string image_type_to_mime_type ( int $imagetype )"," bool image2wbmp ( resource $image [, string $filename [, int $threshold ]] )"," bool imagealphablending ( resource $image , bool $blendmode )"," bool imageantialias ( resource $image , bool $enabled )"," bool imagearc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color )"," bool imagechar ( resource $image , int $font , int $x , int $y , string $c , int $color )"," bool imagecharup ( resource $image , int $font , int $x , int $y , string $c , int $color )"," int imagecolorallocate ( resource $image , int $red , int $green , int $blue )"," int imagecolorallocatealpha ( resource $image , int $red , int $green , int $blue , int $alpha )"," int imagecolorat ( resource $image , int $x , int $y )"," int imagecolorclosest ( resource $image , int $red , int $green , int $blue )"," int imagecolorclosestalpha ( resource $image , int $red , int $green , int $blue , int $alpha )"," int imagecolorclosesthwb ( resource $image , int $red , int $green , int $blue )"," bool imagecolordeallocate ( resource $image , int $color )"," int imagecolorexact ( resource $image , int $red , int $green , int $blue )"," int imagecolorexactalpha ( resource $image , int $red , int $green , int $blue , int $alpha )"," bool imagecolormatch ( resource $image1 , resource $image2 )"," int imagecolorresolve ( resource $image , int $red , int $green , int $blue )"," int imagecolorresolvealpha ( resource $image , int $red , int $green , int $blue , int $alpha )"," void imagecolorset ( resource $image , int $index , int $red , int $green , int $blue [, int $alpha = 0 ] )"," array imagecolorsforindex ( resource $image , int $index )"," int imagecolorstotal ( resource $image )"," int imagecolortransparent ( resource $image [, int $color ] )"," bool imageconvolution ( resource $image , array $matrix , float $div , float $offset )"," bool imagecopy ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h )"," bool imagecopymerge ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct )"," bool imagecopymergegray ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct )"," bool imagecopyresampled ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h )"," bool imagecopyresized ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h )"," resource imagecreate ( int $width , int $height )"," resource imagecreatefromgd ( string $filename )"," resource imagecreatefromgd2 ( string $filename )"," resource imagecreatefromgd2part ( string $filename , int $srcX , int $srcY , int $width , int $height )"," resource imagecreatefromgif ( string $filename )"," resource imagecreatefromjpeg ( string $filename )"," resource imagecreatefrompng ( string $filename )"," resource imagecreatefromstring ( string $image )"," resource imagecreatefromwbmp ( string $filename )"," resource imagecreatefromxbm ( string $filename )"," resource imagecreatefromxpm ( string $filename )"," resource imagecreatetruecolor ( int $width , int $height )"," bool imagedashedline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )"," bool imagedestroy ( resource $image )"," bool imageellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color )"," bool imagefill ( resource $image , int $x , int $y , int $color )"," bool imagefilledarc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color , int $style )"," bool imagefilledellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color )"," bool imagefilledpolygon ( resource $image , array $points , int $num_points , int $color )"," bool imagefilledrectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )"," bool imagefilltoborder ( resource $image , int $x , int $y , int $border , int $color )"," bool imagefilter ( resource $image , int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4 ]]]] )"," int imagefontheight ( int $font )"," int imagefontwidth ( int $font )"," array imageftbbox ( float $size , float $angle , string $fontfile , string $text [, array $extrainfo ] )"," array imagefttext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text [, array $extrainfo ] )"," bool imagegammacorrect ( resource $image , float $inputgamma , float $outputgamma )"," bool imagegd ( resource $image [, string $filename ] )"," bool imagegd2 ( resource $image [, string $filename [, int $chunk_size [, int $type = IMG_GD2_RAW ]]] )"," bool imagegif ( resource $image [, string $filename ] )"," resource imagegrabscreen ( void )"," resource imagegrabwindow ( int $window_handle [, int $client_area = 0 ] )"," int imageinterlace ( resource $image [, int $interlace = 0 ] )"," bool imageistruecolor ( resource $image )"," bool imagejpeg ( resource $image [, string $filename [, int $quality ]] )"," bool imagelayereffect ( resource $image , int $effect )"," bool imageline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )"," int imageloadfont ( string $file )"," void imagepalettecopy ( resource $destination , resource $source )"," bool imagepng ( resource $image [, string $filename [, int $quality [, int $filters ]]] )"," bool imagepolygon ( resource $image , array $points , int $num_points , int $color )"," array imagepsbbox ( string $text , resource $font , int $size )"," bool imagepsencodefont ( resource $font_index , string $encodingfile )"," bool imagepsextendfont ( resource $font_index , float $extend )"," bool imagepsfreefont ( resource $font_index )"," resource imagepsloadfont ( string $filename )"," bool imagepsslantfont ( resource $font_index , float $slant )"," array imagepstext ( resource $image , string $text , resource $font_index , int $size , int $foreground , int $background , int $x , int $y [, int $space = 0 [, int $tightness = 0 [, float $angle = 0.0 [, int $antialias_steps = 4 ]]]] )"," bool imagerectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )"," resource imagerotate ( resource $image , float $angle , int $bgd_color [, int $ignore_transparent = 0 ] )"," bool imagesavealpha ( resource $image , bool $saveflag )"," bool imagesetbrush ( resource $image , resource $brush )"," bool imagesetpixel ( resource $image , int $x , int $y , int $color )"," bool imagesetstyle ( resource $image , array $style )"," bool imagesetthickness ( resource $image , int $thickness )"," bool imagesettile ( resource $image , resource $tile )"," bool imagestring ( resource $image , int $font , int $x , int $y , string $string , int $color )"," bool imagestringup ( resource $image , int $font , int $x , int $y , string $string , int $color )"," int imagesx ( resource $image )"," int imagesy ( resource $image )"," bool imagetruecolortopalette ( resource $image , bool $dither , int $ncolors )"," array imagettfbbox ( float $size , float $angle , string $fontfile , string $text )"," array imagettftext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text )"," int imagetypes ( void )"," bool imagewbmp ( resource $image [, string $filename [, int $foreground ]] )"," bool imagexbm ( resource $image , string $filename [, int $foreground ] )"," string imap_8bit ( string $string )"," array imap_alerts ( void )"," bool imap_append ( resource $imap_stream , string $mailbox , string $message [, string $options = NULL [, string $internal_date = NULL ]] )"," string imap_base64 ( string $text )"," string imap_binary ( string $string )"," string imap_body ( resource $imap_stream , int $msg_number [, int $options = 0 ] )"," object imap_bodystruct ( resource $imap_stream , int $msg_number , string $section )"," object imap_check ( resource $imap_stream )"," bool imap_clearflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = 0 ] )"," bool imap_close ( resource $imap_stream [, int $flag = 0 ] )"," bool imap_createmailbox ( resource $imap_stream , string $mailbox )"," bool imap_delete ( resource $imap_stream , int $msg_number [, int $options = 0 ] )"," bool imap_deletemailbox ( resource $imap_stream , string $mailbox )"," array imap_errors ( void )"," bool imap_expunge ( resource $imap_stream )"," array imap_fetch_overview ( resource $imap_stream , string $sequence [, int $options = 0 ] )"," string imap_fetchbody ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] )"," string imap_fetchheader ( resource $imap_stream , int $msg_number [, int $options = 0 ] )"," string imap_fetchmime ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] )"," object imap_fetchstructure ( resource $imap_stream , int $msg_number [, int $options = 0 ] )"," bool imap_gc ( resource $imap_stream , int $caches )"," array imap_get_quota ( resource $imap_stream , string $quota_root )"," array imap_get_quotaroot ( resource $imap_stream , string $quota_root )"," array imap_getacl ( resource $imap_stream , string $mailbox )"," array imap_getmailboxes ( resource $imap_stream , string $ref , string $pattern )"," array imap_getsubscribed ( resource $imap_stream , string $ref , string $pattern )"," object imap_headerinfo ( resource $imap_stream , int $msg_number [, int $fromlength = 0 [, int $subjectlength = 0 [, string $defaulthost = NULL ]]] )"," array imap_headers ( resource $imap_stream )"," string imap_last_error ( void )"," array imap_list ( resource $imap_stream , string $ref , string $pattern )"," array imap_listscan ( resource $imap_stream , string $ref , string $pattern , string $content )"," array imap_lsub ( resource $imap_stream , string $ref , string $pattern )"," string imap_mail_compose ( array $envelope , array $body )"," bool imap_mail_copy ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] )"," bool imap_mail_move ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] )"," bool imap_mail ( string $to , string $subject , string $message [, string $additional_headers = NULL [, string $cc = NULL [, string $bcc = NULL [, string $rpath = NULL ]]]] )"," object imap_mailboxmsginfo ( resource $imap_stream )"," array imap_mime_header_decode ( string $text )"," int imap_msgno ( resource $imap_stream , int $uid )"," int imap_num_msg ( resource $imap_stream )"," int imap_num_recent ( resource $imap_stream )"," resource imap_open ( string $mailbox , string $username , string $password [, int $options = NIL [, int $n_retries = 0 [, array $params = NULL ]]] )"," bool imap_ping ( resource $imap_stream )"," string imap_qprint ( string $string )"," bool imap_renamemailbox ( resource $imap_stream , string $old_mbox , string $new_mbox )"," bool imap_reopen ( resource $imap_stream , string $mailbox [, int $options = 0 [, int $n_retries = 0 ]] )"," array imap_rfc822_parse_adrlist ( string $address , string $default_host )"," object imap_rfc822_parse_headers ( string $headers [, string $defaulthost = \"UNKNOWN\" ] )"," string imap_rfc822_write_address ( string $mailbox , string $host , string $personal )"," bool imap_savebody ( resource $imap_stream , mixed $file , int $msg_number [, string $part_number = \"\" [, int $options = 0 ]] )"," array imap_search ( resource $imap_stream , string $criteria [, int $options = SE_FREE [, string $charset = NIL ]] )"," bool imap_set_quota ( resource $imap_stream , string $quota_root , int $quota_limit )"," bool imap_setacl ( resource $imap_stream , string $mailbox , string $id , string $rights )"," bool imap_setflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = NIL ] )"," array imap_sort ( resource $imap_stream , int $criteria , int $reverse [, int $options = 0 [, string $search_criteria = NULL [, string $charset = NIL ]]] )"," object imap_status ( resource $imap_stream , string $mailbox , int $options )"," bool imap_subscribe ( resource $imap_stream , string $mailbox )"," array imap_thread ( resource $imap_stream [, int $options = SE_FREE ] )"," mixed imap_timeout ( int $timeout_type [, int $timeout = -1 ] )"," int imap_uid ( resource $imap_stream , int $msg_number )"," bool imap_undelete ( resource $imap_stream , int $msg_number [, int $flags = 0 ] )"," bool imap_unsubscribe ( resource $imap_stream , string $mailbox )"," string imap_utf7_decode ( string $text )"," string imap_utf7_encode ( string $data )"," string imap_utf8 ( string $mime_encoded_text )"," string implode ( string $glue , array $pieces )"," bool import_request_variables ( string $types [, string $prefix ] )"," bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )"," array inclued_get_data ( void )"," string inet_ntop ( string $in_addr )"," string inet_pton ( string $address )"," bool ingres_autocommit_state ( resource $link )"," bool ingres_autocommit ( resource $link )"," string ingres_charset ( resource $link )"," bool ingres_close ( resource $link )"," bool ingres_commit ( resource $link )"," resource ingres_connect ([ string $database [, string $username [, string $password [, array $options ]]]] )"," string ingres_cursor ( resource $result )"," int ingres_errno ([ resource $link ] )"," string ingres_error ([ resource $link ] )"," string ingres_errsqlstate ([ resource $link ] )"," string ingres_escape_string ( resource $link , string $source_string )"," bool ingres_execute ( resource $result [, array $params [, string $types ]] )"," array ingres_fetch_array ( resource $result [, int $result_type ] )"," array ingres_fetch_assoc ( resource $result )"," object ingres_fetch_object ( resource $result [, int $result_type ] )"," int ingres_fetch_proc_return ( resource $result )"," array ingres_fetch_row ( resource $result )"," int ingres_field_length ( resource $result , int $index )"," string ingres_field_name ( resource $result , int $index )"," bool ingres_field_nullable ( resource $result , int $index )"," int ingres_field_precision ( resource $result , int $index )"," int ingres_field_scale ( resource $result , int $index )"," string ingres_field_type ( resource $result , int $index )"," bool ingres_free_result ( resource $result )"," bool ingres_next_error ([ resource $link ] )"," int ingres_num_fields ( resource $result )"," int ingres_num_rows ( resource $result )"," resource ingres_pconnect ([ string $database [, string $username [, string $password [, array $options ]]]] )"," mixed ingres_prepare ( resource $link , string $query )"," mixed ingres_query ( resource $link , string $query [, array $params [, string $types ]] )"," bool ingres_result_seek ( resource $result , int $position )"," bool ingres_rollback ( resource $link )"," bool ingres_set_environment ( resource $link , array $options )"," mixed ingres_unbuffered_query ( resource $link , string $query [, array $params [, string $types ]] )"," array ini_get_all ([ string $extension [, bool $details = true ]] )"," string ini_get ( string $varname )"," void ini_restore ( string $varname )"," string ini_set ( string $varname , string $newvalue )"," int inotify_add_watch ( resource $inotify_instance , string $pathname , int $mask )"," resource inotify_init ( void )"," int inotify_queue_len ( resource $inotify_instance )"," array inotify_read ( resource $inotify_instance )"," bool inotify_rm_watch ( resource $inotify_instance , int $watch_descriptor )"," bool interface_exists ( string $interface_name [, bool $autoload = true ] )"," string intl_error_name ( int $error_code )"," int intl_get_error_code ( void )"," string intl_get_error_message ( void )"," bool intl_is_failure ( int $error_code )"," int intval ( mixed $var [, int $base = 10 ] )"," int ip2long ( string $ip_address )"," mixed iptcembed ( string $iptcdata , string $jpeg_file_name [, int $spool ] )"," array iptcparse ( string $iptcblock )"," bool is_a ( object $object , string $class_name [, bool $allow_string = FALSE ] )"," bool is_array ( mixed $var )"," bool is_bool ( mixed $var )"," bool is_callable ( callable $name [, bool $syntax_only = false [, string &$callable_name ]] )"," bool is_dir ( string $filename )"," bool is_executable ( string $filename )"," bool is_file ( string $filename )"," bool is_finite ( float $val )"," bool is_float ( mixed $var )"," bool is_infinite ( float $val )"," bool is_int ( mixed $var )"," bool is_link ( string $filename )"," bool is_nan ( float $val )"," bool is_null ( mixed $var )"," bool is_numeric ( mixed $var )"," bool is_object ( mixed $var )"," bool is_readable ( string $filename )"," bool is_resource ( mixed $var )"," bool is_scalar ( mixed $var )"," bool is_soap_fault ( mixed $object )"," bool is_string ( mixed $var )"," bool is_subclass_of ( mixed $object , string $class_name [, bool $allow_string = TRUE ] )"," bool is_tainted ( string $string )"," bool is_uploaded_file ( string $filename )"," bool is_writable ( string $filename )"," bool isset ( mixed $var [, mixed $... ] )"," int iterator_apply ( Traversable $iterator , callable $function [, array $args ] )"," int iterator_count ( Traversable $iterator )"," array iterator_to_array ( Traversable $iterator [, bool $use_keys = true ] )"," void java_last_exception_clear ( void )"," object java_last_exception_get ( void )"," mixed jddayofweek ( int $julianday [, int $mode = CAL_DOW_DAYNO ] )"," string jdmonthname ( int $julianday , int $mode )"," string jdtofrench ( int $juliandaycount )"," string jdtogregorian ( int $julianday )"," string jdtojewish ( int $juliandaycount [, bool $hebrew = false [, int $fl = 0 ]] )"," string jdtojulian ( int $julianday )"," int jdtounix ( int $jday )"," int jewishtojd ( int $month , int $day , int $year )"," bool jpeg2wbmp ( string $jpegname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )"," mixed json_decode ( string $json [, bool $assoc = false [, int $depth = 512 [, int $options = 0 ]]] )"," string json_encode ( mixed $value [, int $options = 0 ] )"," int json_last_error ( void )"," int judy_type ( Judy $array )"," string judy_version ( void )"," int juliantojd ( int $month , int $day , int $year )"," bool kadm5_chpass_principal ( resource $handle , string $principal , string $password )"," bool kadm5_create_principal ( resource $handle , string $principal [, string $password [, array $options ]] )"," bool kadm5_delete_principal ( resource $handle , string $principal )"," bool kadm5_destroy ( resource $handle )"," bool kadm5_flush ( resource $handle )"," array kadm5_get_policies ( resource $handle )"," array kadm5_get_principal ( resource $handle , string $principal )"," array kadm5_get_principals ( resource $handle )"," resource kadm5_init_with_password ( string $admin_server , string $realm , string $principal , string $password )"," bool kadm5_modify_principal ( resource $handle , string $principal , array $options )"," mixed key ( array &$array )"," bool krsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )"," bool ksort ( array &$array [, int $sort_flags = SORT_REGULAR ] )"," string lcfirst ( string $str )"," float lcg_value ( void )"," bool lchgrp ( string $filename , mixed $group )"," bool lchown ( string $filename , mixed $user )"," string ldap_8859_to_t61 ( string $value )"," bool ldap_add ( resource $link_identifier , string $dn , array $entry )"," bool ldap_bind ( resource $link_identifier [, string $bind_rdn = NULL [, string $bind_password = NULL ]] )"," mixed ldap_compare ( resource $link_identifier , string $dn , string $attribute , string $value )"," resource ldap_connect ([ string $hostname = NULL [, int $port = 389 ]] )"," bool ldap_control_paged_result_response ( resource $link , resource $result [, string &$cookie [, int &$estimated ]] )"," bool ldap_control_paged_result ( resource $link , int $pagesize [, bool $iscritical [, string $cookie ]] )"," int ldap_count_entries ( resource $link_identifier , resource $result_identifier )"," bool ldap_delete ( resource $link_identifier , string $dn )"," string ldap_dn2ufn ( string $dn )"," string ldap_err2str ( int $errno )"," int ldap_errno ( resource $link_identifier )"," string ldap_error ( resource $link_identifier )"," array ldap_explode_dn ( string $dn , int $with_attrib )"," string ldap_first_attribute ( resource $link_identifier , resource $result_entry_identifier )"," resource ldap_first_entry ( resource $link_identifier , resource $result_identifier )"," resource ldap_first_reference ( resource $link , resource $result )"," bool ldap_free_result ( resource $result_identifier )"," array ldap_get_attributes ( resource $link_identifier , resource $result_entry_identifier )"," string ldap_get_dn ( resource $link_identifier , resource $result_entry_identifier )"," array ldap_get_entries ( resource $link_identifier , resource $result_identifier )"," bool ldap_get_option ( resource $link_identifier , int $option , mixed &$retval )"," array ldap_get_values_len ( resource $link_identifier , resource $result_entry_identifier , string $attribute )"," array ldap_get_values ( resource $link_identifier , resource $result_entry_identifier , string $attribute )"," resource ldap_list ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] )"," bool ldap_mod_add ( resource $link_identifier , string $dn , array $entry )"," bool ldap_mod_del ( resource $link_identifier , string $dn , array $entry )"," bool ldap_mod_replace ( resource $link_identifier , string $dn , array $entry )"," bool ldap_modify ( resource $link_identifier , string $dn , array $entry )"," string ldap_next_attribute ( resource $link_identifier , resource $result_entry_identifier )"," resource ldap_next_entry ( resource $link_identifier , resource $result_entry_identifier )"," resource ldap_next_reference ( resource $link , resource $entry )"," bool ldap_parse_reference ( resource $link , resource $entry , array &$referrals )"," bool ldap_parse_result ( resource $link , resource $result , int &$errcode [, string &$matcheddn [, string &$errmsg [, array &$referrals ]]] )"," resource ldap_read ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] )"," bool ldap_rename ( resource $link_identifier , string $dn , string $newrdn , string $newparent , bool $deleteoldrdn )"," bool ldap_sasl_bind ( resource $link [, string $binddn = NULL [, string $password = NULL [, string $sasl_mech = NULL [, string $sasl_realm = NULL [, string $sasl_authc_id = NULL [, string $sasl_authz_id = NULL [, string $props = NULL ]]]]]]] )"," resource ldap_search ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] )"," bool ldap_set_option ( resource $link_identifier , int $option , mixed $newval )"," bool ldap_set_rebind_proc ( resource $link , callable $callback )"," bool ldap_sort ( resource $link , resource $result , string $sortfilter )"," bool ldap_start_tls ( resource $link )"," string ldap_t61_to_8859 ( string $value )"," bool ldap_unbind ( resource $link_identifier )"," int levenshtein ( string $str1 , string $str2 )"," void libxml_clear_errors ( void )"," bool libxml_disable_entity_loader ([ bool $disable = true ] )"," array libxml_get_errors ( void )"," LibXMLError libxml_get_last_error ( void )"," void libxml_set_external_entity_loader ( callable $resolver_function )"," void libxml_set_streams_context ( resource $streams_context )"," bool libxml_use_internal_errors ([ bool $use_errors = false ] )"," bool link ( string $target , string $link )"," int linkinfo ( string $path )"," array list ( mixed $varname [, mixed $... ] )"," array localeconv ( void )"," array localtime ([ int $timestamp = time() [, bool $is_associative = false ]] )"," float log ( float $arg [, float $base = M_E ] )"," float log10 ( float $arg )"," float log1p ( float $number )"," string long2ip ( string $proper_address )"," array lstat ( string $filename )"," string ltrim ( string $str [, string $charlist ] )"," string lzf_compress ( string $data )"," string lzf_decompress ( string $data )"," int lzf_optimized_for ( void )"," int m_checkstatus ( resource $conn , int $identifier )"," int m_completeauthorizations ( resource $conn , int &$array )"," int m_connect ( resource $conn )"," string m_connectionerror ( resource $conn )"," bool m_deletetrans ( resource $conn , int $identifier )"," bool m_destroyconn ( resource $conn )"," void m_destroyengine ( void )"," string m_getcell ( resource $conn , int $identifier , string $column , int $row )"," string m_getcellbynum ( resource $conn , int $identifier , int $column , int $row )"," string m_getcommadelimited ( resource $conn , int $identifier )"," string m_getheader ( resource $conn , int $identifier , int $column_num )"," resource m_initconn ( void )"," int m_initengine ( string $location )"," int m_iscommadelimited ( resource $conn , int $identifier )"," bool m_maxconntimeout ( resource $conn , int $secs )"," int m_monitor ( resource $conn )"," int m_numcolumns ( resource $conn , int $identifier )"," int m_numrows ( resource $conn , int $identifier )"," int m_parsecommadelimited ( resource $conn , int $identifier )"," array m_responsekeys ( resource $conn , int $identifier )"," string m_responseparam ( resource $conn , int $identifier , string $key )"," int m_returnstatus ( resource $conn , int $identifier )"," int m_setblocking ( resource $conn , int $tf )"," int m_setdropfile ( resource $conn , string $directory )"," int m_setip ( resource $conn , string $host , int $port )"," int m_setssl_cafile ( resource $conn , string $cafile )"," int m_setssl_files ( resource $conn , string $sslkeyfile , string $sslcertfile )"," int m_setssl ( resource $conn , string $host , int $port )"," int m_settimeout ( resource $conn , int $seconds )"," string m_sslcert_gen_hash ( string $filename )"," int m_transactionssent ( resource $conn )"," int m_transinqueue ( resource $conn )"," int m_transkeyval ( resource $conn , int $identifier , string $key , string $value )"," int m_transnew ( resource $conn )"," int m_transsend ( resource $conn , int $identifier )"," int m_uwait ( int $microsecs )"," int m_validateidentifier ( resource $conn , int $tf )"," bool m_verifyconnection ( resource $conn , int $tf )"," bool m_verifysslcert ( resource $conn , int $tf )"," bool mail ( string $to , string $subject , string $message [, string $additional_headers [, string $additional_parameters ]] )"," string mailparse_determine_best_xfer_encoding ( resource $fp )"," resource mailparse_msg_create ( void )"," string mailparse_msg_extract_part_file ( resource $mimemail , mixed $filename [, callable $callbackfunc ] )"," void mailparse_msg_extract_part ( resource $mimemail , string $msgbody [, callable $callbackfunc ] )"," string mailparse_msg_extract_whole_part_file ( resource $mimemail , string $filename [, callable $callbackfunc ] )"," bool mailparse_msg_free ( resource $mimemail )"," array mailparse_msg_get_part_data ( resource $mimemail )"," resource mailparse_msg_get_part ( resource $mimemail , string $mimesection )"," array mailparse_msg_get_structure ( resource $mimemail )"," resource mailparse_msg_parse_file ( string $filename )"," bool mailparse_msg_parse ( resource $mimemail , string $data )"," array mailparse_rfc822_parse_addresses ( string $addresses )"," bool mailparse_stream_encode ( resource $sourcefp , resource $destfp , string $encoding )"," array mailparse_uudecode_all ( resource $fp )"," mixed max ( array $values )"," int maxdb_affected_rows ( resource $link )"," bool maxdb_autocommit ( resource $link , bool $mode )"," bool maxdb_change_user ( resource $link , string $user , string $password , string $database )"," string maxdb_character_set_name ( resource $link )"," bool maxdb_close ( resource $link )"," bool maxdb_commit ( resource $link )"," int maxdb_connect_errno ( void )"," string maxdb_connect_error ( void )"," resource maxdb_connect ([ string $host [, string $username [, string $passwd [, string $dbname [, int $port = 0 [, string $socket ]]]]]] )"," bool maxdb_data_seek ( resource $result , int $offset )"," void maxdb_debug ( string $debug )"," bool maxdb_disable_reads_from_master ( resource $link )"," bool maxdb_disable_rpl_parse ( resource $link )"," bool maxdb_dump_debug_info ( resource $link )"," resource maxdb_embedded_connect ([ string $dbname ] )"," bool maxdb_enable_reads_from_master ( resource $link )"," bool maxdb_enable_rpl_parse ( resource $link )"," int maxdb_errno ( resource $link )"," string maxdb_error ( resource $link )"," mixed maxdb_fetch_array ( resource $result [, int $resulttype ] )"," array maxdb_fetch_assoc ( resource $result )"," mixed maxdb_fetch_field_direct ( resource $result , int $fieldnr )"," mixed maxdb_fetch_field ( resource $result )"," mixed maxdb_fetch_fields ( resource $result )"," array maxdb_fetch_lengths ( resource $result )"," object maxdb_fetch_object ( object $result )"," mixed maxdb_fetch_row ( resource $result )"," int maxdb_field_count ( resource $link )"," bool maxdb_field_seek ( resource $result , int $fieldnr )"," int maxdb_field_tell ( resource $result )"," void maxdb_free_result ( resource $result )"," string maxdb_get_client_info ( void )"," int maxdb_get_client_version ( void )"," string maxdb_get_host_info ( resource $link )"," int maxdb_get_proto_info ( resource $link )"," string maxdb_get_server_info ( resource $link )"," int maxdb_get_server_version ( resource $link )"," string maxdb_info ( resource $link )"," resource maxdb_init ( void )"," mixed maxdb_insert_id ( resource $link )"," bool maxdb_kill ( resource $link , int $processid )"," bool maxdb_master_query ( resource $link , string $query )"," bool maxdb_more_results ( resource $link )"," bool maxdb_multi_query ( resource $link , string $query )"," bool maxdb_next_result ( resource $link )"," int maxdb_num_fields ( resource $result )"," int maxdb_num_rows ( resource $result )"," bool maxdb_options ( resource $link , int $option , mixed $value )"," bool maxdb_ping ( resource $link )"," resource maxdb_prepare ( resource $link , string $query )"," mixed maxdb_query ( resource $link , string $query [, int $resultmode ] )"," bool maxdb_real_connect ( resource $link [, string $hostname [, string $username [, string $passwd [, string $dbname [, int $port = 0 [, string $socket ]]]]]] )"," string maxdb_real_escape_string ( resource $link , string $escapestr )"," bool maxdb_real_query ( resource $link , string $query )"," bool maxdb_report ( int $flags )"," bool maxdb_rollback ( resource $link )"," int maxdb_rpl_parse_enabled ( resource $link )"," bool maxdb_rpl_probe ( resource $link )"," int maxdb_rpl_query_type ( resource $link )"," bool maxdb_select_db ( resource $link , string $dbname )"," bool maxdb_send_query ( resource $link , string $query )"," void maxdb_server_end ( void )"," bool maxdb_server_init ([ array $server [, array $groups ]] )"," string maxdb_sqlstate ( resource $link )"," bool maxdb_ssl_set ( resource $link , string $key , string $cert , string $ca , string $capath , string $cipher )"," string maxdb_stat ( resource $link )"," int maxdb_stmt_affected_rows ( resource $stmt )"," bool maxdb_stmt_bind_param ( resource $stmt , string $types , mixed &$var1 [, mixed &$... ] )"," bool maxdb_stmt_bind_result ( resource $stmt , mixed &$var1 [, mixed &$... ] )"," bool maxdb_stmt_close_long_data ( resource $stmt , int $param_nr )"," bool maxdb_stmt_close ( resource $stmt )"," bool maxdb_stmt_data_seek ( resource $statement , int $offset )"," int maxdb_stmt_errno ( resource $stmt )"," string maxdb_stmt_error ( resource $stmt )"," bool maxdb_stmt_execute ( resource $stmt )"," bool maxdb_stmt_fetch ( resource $stmt )"," void maxdb_stmt_free_result ( resource $stmt )"," resource maxdb_stmt_init ( resource $link )"," int maxdb_stmt_num_rows ( resource $stmt )"," int maxdb_stmt_param_count ( resource $stmt )"," bool maxdb_stmt_prepare ( resource $stmt , string $query )"," bool maxdb_stmt_reset ( resource $stmt )"," resource maxdb_stmt_result_metadata ( resource $stmt )"," bool maxdb_stmt_send_long_data ( resource $stmt , int $param_nr , string $data )"," string maxdb_stmt_sqlstate ( resource $stmt )"," bool maxdb_stmt_store_result ( resource $stmt )"," resource maxdb_store_result ( resource $link )"," int maxdb_thread_id ( resource $link )"," bool maxdb_thread_safe ( void )"," resource maxdb_use_result ( resource $link )"," int maxdb_warning_count ( resource $link )"," bool mb_check_encoding ([ string $var = NULL [, string $encoding = mb_internal_encoding() ]] )"," string mb_convert_case ( string $str , int $mode = MB_CASE_UPPER [, string $encoding = mb_internal_encoding() ] )"," string mb_convert_encoding ( string $str , string $to_encoding [, mixed $from_encoding ] )"," string mb_convert_kana ( string $str [, string $option = \"KV\" [, string $encoding ]] )"," string mb_convert_variables ( string $to_encoding , mixed $from_encoding , mixed &$vars [, mixed &$... ] )"," string mb_decode_mimeheader ( string $str )"," string mb_decode_numericentity ( string $str , array $convmap , string $encoding )"," string mb_detect_encoding ( string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = false ]] )"," mixed mb_detect_order ([ mixed $encoding_list ] )"," string mb_encode_mimeheader ( string $str [, string $charset [, string $transfer_encoding [, string $linefeed = \"\\r\\n\" [, int $indent = 0 ]]]] )"," string mb_encode_numericentity ( string $str , array $convmap , string $encoding )"," array mb_encoding_aliases ( string $encoding )"," bool mb_ereg_match ( string $pattern , string $string [, string $option = \"msr\" ] )"," string mb_ereg_replace_callback ( string $pattern , callable $callback , string $string [, string $option = \"msr\" ] )"," string mb_ereg_replace ( string $pattern , string $replacement , string $string [, string $option = \"msr\" ] )"," int mb_ereg_search_getpos ( void )"," array mb_ereg_search_getregs ( void )"," bool mb_ereg_search_init ( string $string [, string $pattern [, string $option = \"msr\" ]] )"," array mb_ereg_search_pos ([ string $pattern [, string $option = \"ms\" ]] )"," array mb_ereg_search_regs ([ string $pattern [, string $option = \"ms\" ]] )"," bool mb_ereg_search_setpos ( int $position )"," bool mb_ereg_search ([ string $pattern [, string $option = \"ms\" ]] )"," int mb_ereg ( string $pattern , string $string [, array $regs ] )"," string mb_eregi_replace ( string $pattern , string $replace , string $string [, string $option = \"msri\" ] )"," int mb_eregi ( string $pattern , string $string [, array $regs ] )"," mixed mb_get_info ([ string $type = \"all\" ] )"," mixed mb_http_input ([ string $type = \"\" ] )"," mixed mb_http_output ([ string $encoding ] )"," mixed mb_internal_encoding ([ string $encoding = mb_internal_encoding() ] )"," mixed mb_language ([ string $language ] )"," array mb_list_encodings ( void )"," string mb_output_handler ( string $contents , int $status )"," bool mb_parse_str ( string $encoded_string [, array &$result ] )"," string mb_preferred_mime_name ( string $encoding )"," mixed mb_regex_encoding ([ string $encoding ] )"," string mb_regex_set_options ([ string $options = \"msr\" ] )"," bool mb_send_mail ( string $to , string $subject , string $message [, string $additional_headers = NULL [, string $additional_parameter = NULL ]] )"," array mb_split ( string $pattern , string $string [, int $limit = -1 ] )"," string mb_strcut ( string $str , int $start [, int $length [, string $encoding ]] )"," string mb_strimwidth ( string $str , int $start , int $width [, string $trimmarker [, string $encoding ]] )"," int mb_stripos ( string $haystack , string $needle [, int $offset [, string $encoding ]] )"," string mb_stristr ( string $haystack , string $needle [, bool $before_needle = false [, string $encoding ]] )"," int mb_strlen ( string $str [, string $encoding ] )"," int mb_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding ]] )"," string mb_strrchr ( string $haystack , string $needle [, bool $part = false [, string $encoding ]] )"," string mb_strrichr ( string $haystack , string $needle [, bool $part = false [, string $encoding ]] )"," int mb_strripos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding ]] )"," int mb_strrpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding ]] )"," string mb_strstr ( string $haystack , string $needle [, bool $before_needle = false [, string $encoding ]] )"," string mb_strtolower ( string $str [, string $encoding = mb_internal_encoding() ] )"," string mb_strtoupper ( string $str [, string $encoding = mb_internal_encoding() ] )"," int mb_strwidth ( string $str [, string $encoding ] )"," mixed mb_substitute_character ([ mixed $substrchar ] )"," int mb_substr_count ( string $haystack , string $needle [, string $encoding ] )"," string mb_substr ( string $str , int $start [, int $length [, string $encoding ]] )"," string mcrypt_cbc ( int $cipher , string $key , string $data , int $mode [, string $iv ] )"," string mcrypt_cfb ( int $cipher , string $key , string $data , int $mode , string $iv )"," string mcrypt_create_iv ( int $size [, int $source = MCRYPT_DEV_RANDOM ] )"," string mcrypt_decrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] )"," string mcrypt_ecb ( int $cipher , string $key , string $data , int $mode )"," string mcrypt_enc_get_algorithms_name ( resource $td )"," int mcrypt_enc_get_block_size ( resource $td )"," int mcrypt_enc_get_iv_size ( resource $td )"," int mcrypt_enc_get_key_size ( resource $td )"," string mcrypt_enc_get_modes_name ( resource $td )"," array mcrypt_enc_get_supported_key_sizes ( resource $td )"," bool mcrypt_enc_is_block_algorithm_mode ( resource $td )"," bool mcrypt_enc_is_block_algorithm ( resource $td )"," bool mcrypt_enc_is_block_mode ( resource $td )"," int mcrypt_enc_self_test ( resource $td )"," string mcrypt_encrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] )"," bool mcrypt_generic_deinit ( resource $td )"," bool mcrypt_generic_end ( resource $td )"," int mcrypt_generic_init ( resource $td , string $key , string $iv )"," string mcrypt_generic ( resource $td , string $data )"," int mcrypt_get_block_size ( int $cipher )"," string mcrypt_get_cipher_name ( int $cipher )"," int mcrypt_get_iv_size ( string $cipher , string $mode )"," int mcrypt_get_key_size ( int $cipher )"," array mcrypt_list_algorithms ([ string $lib_dir = ini_get(\"mcrypt.algorithms_dir\") ] )"," array mcrypt_list_modes ([ string $lib_dir = ini_get(\"mcrypt.modes_dir\") ] )"," bool mcrypt_module_close ( resource $td )"," int mcrypt_module_get_algo_block_size ( string $algorithm [, string $lib_dir ] )"," int mcrypt_module_get_algo_key_size ( string $algorithm [, string $lib_dir ] )"," array mcrypt_module_get_supported_key_sizes ( string $algorithm [, string $lib_dir ] )"," bool mcrypt_module_is_block_algorithm_mode ( string $mode [, string $lib_dir ] )"," bool mcrypt_module_is_block_algorithm ( string $algorithm [, string $lib_dir ] )"," bool mcrypt_module_is_block_mode ( string $mode [, string $lib_dir ] )"," resource mcrypt_module_open ( string $algorithm , string $algorithm_directory , string $mode , string $mode_directory )"," bool mcrypt_module_self_test ( string $algorithm [, string $lib_dir ] )"," string mcrypt_ofb ( int $cipher , string $key , string $data , int $mode , string $iv )"," string md5_file ( string $filename [, bool $raw_output = false ] )"," string md5 ( string $str [, bool $raw_output = false ] )"," string mdecrypt_generic ( resource $td , string $data )"," bool memcache_debug ( bool $on_off )"," int memory_get_peak_usage ([ bool $real_usage = false ] )"," int memory_get_usage ([ bool $real_usage = false ] )"," string metaphone ( string $str [, int $phonemes = 0 ] )"," bool method_exists ( mixed $object , string $method_name )"," int mhash_count ( void )"," int mhash_get_block_size ( int $hash )"," string mhash_get_hash_name ( int $hash )"," string mhash_keygen_s2k ( int $hash , string $password , string $salt , int $bytes )"," string mhash ( int $hash , string $data [, string $key ] )"," mixed microtime ([ bool $get_as_float = false ] )"," string mime_content_type ( string $filename )"," mixed min ( array $values )"," int ming_keypress ( string $char )"," void ming_setcubicthreshold ( int $threshold )"," void ming_setscale ( float $scale )"," void ming_setswfcompression ( int $level )"," void ming_useconstants ( int $use )"," void ming_useswfversion ( int $version )"," bool mkdir ( string $pathname [, int $mode = 0777 [, bool $recursive = false [, resource $context ]]] )"," int mktime ([ int $hour = date(\"H\") [, int $minute = date(\"i\") [, int $second = date(\"s\") [, int $month = date(\"n\") [, int $day = date(\"j\") [, int $year = date(\"Y\") [, int $is_dst = -1 ]]]]]]] )"," string money_format ( string $format , float $number )"," bool move_uploaded_file ( string $filename , string $destination )"," void mqseries_back ( resource $hconn , resource &$compCode , resource &$reason )"," void mqseries_begin ( resource $hconn , array $beginOptions , resource &$compCode , resource &$reason )"," void mqseries_close ( resource $hconn , resource $hobj , int $options , resource &$compCode , resource &$reason )"," void mqseries_cmit ( resource $hconn , resource &$compCode , resource &$reason )"," void mqseries_conn ( string $qManagerName , resource &$hconn , resource &$compCode , resource &$reason )"," void mqseries_connx ( string $qManagerName , array &$connOptions , resource &$hconn , resource &$compCode , resource &$reason )"," void mqseries_disc ( resource $hconn , resource &$compCode , resource &$reason )"," void mqseries_get ( resource $hConn , resource $hObj , array &$md , array &$gmo , int &$bufferLength , string &$msg , int &$data_length , resource &$compCode , resource &$reason )"," void mqseries_inq ( resource $hconn , resource $hobj , int $selectorCount , array $selectors , int $intAttrCount , resource &$intAttr , int $charAttrLength , resource &$charAttr , resource &$compCode , resource &$reason )"," void mqseries_open ( resource $hconn , array &$objDesc , int $option , resource &$hobj , resource &$compCode , resource &$reason )"," void mqseries_put ( resource $hConn , resource $hObj , array &$md , array &$pmo , string $message , resource &$compCode , resource &$reason )"," void mqseries_put1 ( resource $hconn , resource &$objDesc , resource &$msgDesc , resource &$pmo , string $buffer , resource &$compCode , resource &$reason )"," void mqseries_set ( resource $hconn , resource $hobj , int $selectorcount , array $selectors , int $intattrcount , array $intattrs , int $charattrlength , array $charattrs , resource &$compCode , resource &$reason )"," string mqseries_strerror ( int $reason )"," bool msession_connect ( string $host , string $port )"," int msession_count ( void )"," bool msession_create ( string $session [, string $classname [, string $data ]] )"," bool msession_destroy ( string $name )"," void msession_disconnect ( void )"," array msession_find ( string $name , string $value )"," array msession_get_array ( string $session )"," string msession_get_data ( string $session )"," string msession_get ( string $session , string $name , string $value )"," string msession_inc ( string $session , string $name )"," array msession_list ( void )"," array msession_listvar ( string $name )"," int msession_lock ( string $name )"," string msession_plugin ( string $session , string $val [, string $param ] )"," string msession_randstr ( int $param )"," void msession_set_array ( string $session , array $tuples )"," bool msession_set_data ( string $session , string $value )"," bool msession_set ( string $session , string $name , string $value )"," int msession_timeout ( string $session [, int $param ] )"," string msession_uniq ( int $param [, string $classname [, string $data ]] )"," int msession_unlock ( string $session , int $key )"," resource msg_get_queue ( int $key [, int $perms = 0666 ] )"," bool msg_queue_exists ( int $key )"," bool msg_receive ( resource $queue , int $desiredmsgtype , int &$msgtype , int $maxsize , mixed &$message [, bool $unserialize = true [, int $flags = 0 [, int &$errorcode ]]] )"," bool msg_remove_queue ( resource $queue )"," bool msg_send ( resource $queue , int $msgtype , mixed $message [, bool $serialize = true [, bool $blocking = true [, int &$errorcode ]]] )"," bool msg_set_queue ( resource $queue , array $data )"," array msg_stat_queue ( resource $queue )"," int msql_affected_rows ( resource $result )"," bool msql_close ([ resource $link_identifier ] )"," resource msql_connect ([ string $hostname ] )"," bool msql_create_db ( string $database_name [, resource $link_identifier ] )"," bool msql_data_seek ( resource $result , int $row_number )"," resource msql_db_query ( string $database , string $query [, resource $link_identifier ] )"," bool msql_drop_db ( string $database_name [, resource $link_identifier ] )"," string msql_error ( void )"," array msql_fetch_array ( resource $result [, int $result_type ] )"," object msql_fetch_field ( resource $result [, int $field_offset = 0 ] )"," object msql_fetch_object ( resource $result )"," array msql_fetch_row ( resource $result )"," string msql_field_flags ( resource $result , int $field_offset )"," int msql_field_len ( resource $result , int $field_offset )"," string msql_field_name ( resource $result , int $field_offset )"," bool msql_field_seek ( resource $result , int $field_offset )"," int msql_field_table ( resource $result , int $field_offset )"," string msql_field_type ( resource $result , int $field_offset )"," bool msql_free_result ( resource $result )"," resource msql_list_dbs ([ resource $link_identifier ] )"," resource msql_list_fields ( string $database , string $tablename [, resource $link_identifier ] )"," resource msql_list_tables ( string $database [, resource $link_identifier ] )"," int msql_num_fields ( resource $result )"," int msql_num_rows ( resource $query_identifier )"," resource msql_pconnect ([ string $hostname ] )"," resource msql_query ( string $query [, resource $link_identifier ] )"," string msql_result ( resource $result , int $row [, mixed $field ] )"," bool msql_select_db ( string $database_name [, resource $link_identifier ] )"," bool mssql_bind ( resource $stmt , string $param_name , mixed &$var , int $type [, bool $is_output = false [, bool $is_null = false [, int $maxlen = -1 ]]] )"," bool mssql_close ([ resource $link_identifier ] )"," resource mssql_connect ([ string $servername [, string $username [, string $password [, bool $new_link = false ]]]] )"," bool mssql_data_seek ( resource $result_identifier , int $row_number )"," mixed mssql_execute ( resource $stmt [, bool $skip_results = false ] )"," array mssql_fetch_array ( resource $result [, int $result_type = MSSQL_BOTH ] )"," array mssql_fetch_assoc ( resource $result_id )"," int mssql_fetch_batch ( resource $result )"," object mssql_fetch_field ( resource $result [, int $field_offset = -1 ] )"," object mssql_fetch_object ( resource $result )"," array mssql_fetch_row ( resource $result )"," int mssql_field_length ( resource $result [, int $offset = -1 ] )"," string mssql_field_name ( resource $result [, int $offset = -1 ] )"," bool mssql_field_seek ( resource $result , int $field_offset )"," string mssql_field_type ( resource $result [, int $offset = -1 ] )"," bool mssql_free_result ( resource $result )"," bool mssql_free_statement ( resource $stmt )"," string mssql_get_last_message ( void )"," string mssql_guid_string ( string $binary [, bool $short_format = false ] )"," resource mssql_init ( string $sp_name [, resource $link_identifier ] )"," void mssql_min_error_severity ( int $severity )"," void mssql_min_message_severity ( int $severity )"," bool mssql_next_result ( resource $result_id )"," int mssql_num_fields ( resource $result )"," int mssql_num_rows ( resource $result )"," resource mssql_pconnect ([ string $servername [, string $username [, string $password [, bool $new_link = false ]]]] )"," mixed mssql_query ( string $query [, resource $link_identifier [, int $batch_size = 0 ]] )"," string mssql_result ( resource $result , int $row , mixed $field )"," int mssql_rows_affected ( resource $link_identifier )"," bool mssql_select_db ( string $database_name [, resource $link_identifier ] )"," int mt_getrandmax ( void )"," int mt_rand ( void )"," void mt_srand ([ int $seed ] )"," int mysql_affected_rows ([ resource $link_identifier = NULL ] )"," string mysql_client_encoding ([ resource $link_identifier = NULL ] )"," bool mysql_close ([ resource $link_identifier = NULL ] )"," resource mysql_connect ([ string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, bool $new_link = false [, int $client_flags = 0 ]]]]] )"," bool mysql_create_db ( string $database_name [, resource $link_identifier = NULL ] )"," bool mysql_data_seek ( resource $result , int $row_number )"," string mysql_db_name ( resource $result , int $row [, mixed $field = NULL ] )"," resource mysql_db_query ( string $database , string $query [, resource $link_identifier = NULL ] )"," bool mysql_drop_db ( string $database_name [, resource $link_identifier = NULL ] )"," int mysql_errno ([ resource $link_identifier = NULL ] )"," string mysql_error ([ resource $link_identifier = NULL ] )"," string mysql_escape_string ( string $unescaped_string )"," array mysql_fetch_array ( resource $result [, int $result_type = MYSQL_BOTH ] )"," array mysql_fetch_assoc ( resource $result )"," object mysql_fetch_field ( resource $result [, int $field_offset = 0 ] )"," array mysql_fetch_lengths ( resource $result )"," object mysql_fetch_object ( resource $result [, string $class_name [, array $params ]] )"," array mysql_fetch_row ( resource $result )"," string mysql_field_flags ( resource $result , int $field_offset )"," int mysql_field_len ( resource $result , int $field_offset )"," string mysql_field_name ( resource $result , int $field_offset )"," bool mysql_field_seek ( resource $result , int $field_offset )"," string mysql_field_table ( resource $result , int $field_offset )"," string mysql_field_type ( resource $result , int $field_offset )"," bool mysql_free_result ( resource $result )"," string mysql_get_client_info ( void )"," string mysql_get_host_info ([ resource $link_identifier = NULL ] )"," int mysql_get_proto_info ([ resource $link_identifier = NULL ] )"," string mysql_get_server_info ([ resource $link_identifier = NULL ] )"," string mysql_info ([ resource $link_identifier = NULL ] )"," int mysql_insert_id ([ resource $link_identifier = NULL ] )"," resource mysql_list_dbs ([ resource $link_identifier = NULL ] )"," resource mysql_list_fields ( string $database_name , string $table_name [, resource $link_identifier = NULL ] )"," resource mysql_list_processes ([ resource $link_identifier = NULL ] )"," resource mysql_list_tables ( string $database [, resource $link_identifier = NULL ] )"," int mysql_num_fields ( resource $result )"," int mysql_num_rows ( resource $result )"," resource mysql_pconnect ([ string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, int $client_flags = 0 ]]]] )"," bool mysql_ping ([ resource $link_identifier = NULL ] )"," resource mysql_query ( string $query [, resource $link_identifier = NULL ] )"," string mysql_real_escape_string ( string $unescaped_string [, resource $link_identifier = NULL ] )"," string mysql_result ( resource $result , int $row [, mixed $field = 0 ] )"," bool mysql_select_db ( string $database_name [, resource $link_identifier = NULL ] )"," bool mysql_set_charset ( string $charset [, resource $link_identifier = NULL ] )"," string mysql_stat ([ resource $link_identifier = NULL ] )"," string mysql_tablename ( resource $result , int $i )"," int mysql_thread_id ([ resource $link_identifier = NULL ] )"," resource mysql_unbuffered_query ( string $query [, resource $link_identifier = NULL ] )"," bool mysqli_disable_rpl_parse ( mysqli $link )"," bool mysqli_enable_reads_from_master ( mysqli $link )"," bool mysqli_enable_rpl_parse ( mysqli $link )"," array mysqli_get_cache_stats ( void )"," bool mysqli_master_query ( mysqli $link , string $query )"," bool mysqli_report ( int $flags )"," int mysqli_rpl_parse_enabled ( mysqli $link )"," bool mysqli_rpl_probe ( mysqli $link )"," bool mysqli_slave_query ( mysqli $link , string $query )"," string mysqlnd_ms_get_last_gtid ( mixed $connection )"," array mysqlnd_ms_get_last_used_connection ( mixed $connection )"," array mysqlnd_ms_get_stats ( void )"," bool mysqlnd_ms_match_wild ( string $table_name , string $wildcard )"," int mysqlnd_ms_query_is_select ( string $query )"," bool mysqlnd_ms_set_qos ( mixed $connection , int $service_level [, int $service_level_option [, mixed $option_value ]] )"," bool mysqlnd_ms_set_user_pick_server ( string $function )"," bool mysqlnd_qc_clear_cache ( void )"," array mysqlnd_qc_get_available_handlers ( void )"," array mysqlnd_qc_get_cache_info ( void )"," array mysqlnd_qc_get_core_stats ( void )"," array mysqlnd_qc_get_normalized_query_trace_log ( void )"," array mysqlnd_qc_get_query_trace_log ( void )"," bool mysqlnd_qc_set_cache_condition ( int $condition_type , mixed $condition , mixed $condition_option )"," mixed mysqlnd_qc_set_is_select ( string $callback )"," bool mysqlnd_qc_set_storage_handler ( string $handler )"," bool mysqlnd_qc_set_user_handlers ( string $get_hash , string $find_query_in_cache , string $return_to_cache , string $add_query_to_cache_if_not_exists , string $query_is_select , string $update_query_run_time_stats , string $get_stats , string $clear_cache )"," resource mysqlnd_uh_convert_to_mysqlnd ( mysqli &$mysql_connection )"," bool mysqlnd_uh_set_connection_proxy ( MysqlndUhConnection &$connection_proxy [, mysqli &$mysqli_connection ] )"," bool mysqlnd_uh_set_statement_proxy ( MysqlndUhStatement &$statement_proxy )"," bool natcasesort ( array &$array )"," bool natsort ( array &$array )"," int ncurses_addch ( int $ch )"," int ncurses_addchnstr ( string $s , int $n )"," int ncurses_addchstr ( string $s )"," int ncurses_addnstr ( string $s , int $n )"," int ncurses_addstr ( string $text )"," int ncurses_assume_default_colors ( int $fg , int $bg )"," int ncurses_attroff ( int $attributes )"," int ncurses_attron ( int $attributes )"," int ncurses_attrset ( int $attributes )"," int ncurses_baudrate ( void )"," int ncurses_beep ( void )"," int ncurses_bkgd ( int $attrchar )"," void ncurses_bkgdset ( int $attrchar )"," int ncurses_border ( int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner )"," int ncurses_bottom_panel ( resource $panel )"," bool ncurses_can_change_color ( void )"," bool ncurses_cbreak ( void )"," bool ncurses_clear ( void )"," bool ncurses_clrtobot ( void )"," bool ncurses_clrtoeol ( void )"," int ncurses_color_content ( int $color , int &$r , int &$g , int &$b )"," int ncurses_color_set ( int $pair )"," int ncurses_curs_set ( int $visibility )"," bool ncurses_def_prog_mode ( void )"," bool ncurses_def_shell_mode ( void )"," int ncurses_define_key ( string $definition , int $keycode )"," bool ncurses_del_panel ( resource $panel )"," int ncurses_delay_output ( int $milliseconds )"," bool ncurses_delch ( void )"," bool ncurses_deleteln ( void )"," bool ncurses_delwin ( resource $window )"," bool ncurses_doupdate ( void )"," bool ncurses_echo ( void )"," int ncurses_echochar ( int $character )"," int ncurses_end ( void )"," bool ncurses_erase ( void )"," string ncurses_erasechar ( void )"," void ncurses_filter ( void )"," bool ncurses_flash ( void )"," bool ncurses_flushinp ( void )"," int ncurses_getch ( void )"," void ncurses_getmaxyx ( resource $window , int &$y , int &$x )"," bool ncurses_getmouse ( array &$mevent )"," void ncurses_getyx ( resource $window , int &$y , int &$x )"," int ncurses_halfdelay ( int $tenth )"," bool ncurses_has_colors ( void )"," bool ncurses_has_ic ( void )"," bool ncurses_has_il ( void )"," int ncurses_has_key ( int $keycode )"," int ncurses_hide_panel ( resource $panel )"," int ncurses_hline ( int $charattr , int $n )"," string ncurses_inch ( void )"," int ncurses_init_color ( int $color , int $r , int $g , int $b )"," int ncurses_init_pair ( int $pair , int $fg , int $bg )"," void ncurses_init ( void )"," int ncurses_insch ( int $character )"," int ncurses_insdelln ( int $count )"," int ncurses_insertln ( void )"," int ncurses_insstr ( string $text )"," int ncurses_instr ( string &$buffer )"," bool ncurses_isendwin ( void )"," int ncurses_keyok ( int $keycode , bool $enable )"," int ncurses_keypad ( resource $window , bool $bf )"," string ncurses_killchar ( void )"," string ncurses_longname ( void )"," int ncurses_meta ( resource $window , bool $8bit )"," bool ncurses_mouse_trafo ( int &$y , int &$x , bool $toscreen )"," int ncurses_mouseinterval ( int $milliseconds )"," int ncurses_mousemask ( int $newmask , int &$oldmask )"," int ncurses_move_panel ( resource $panel , int $startx , int $starty )"," int ncurses_move ( int $y , int $x )"," int ncurses_mvaddch ( int $y , int $x , int $c )"," int ncurses_mvaddchnstr ( int $y , int $x , string $s , int $n )"," int ncurses_mvaddchstr ( int $y , int $x , string $s )"," int ncurses_mvaddnstr ( int $y , int $x , string $s , int $n )"," int ncurses_mvaddstr ( int $y , int $x , string $s )"," int ncurses_mvcur ( int $old_y , int $old_x , int $new_y , int $new_x )"," int ncurses_mvdelch ( int $y , int $x )"," int ncurses_mvgetch ( int $y , int $x )"," int ncurses_mvhline ( int $y , int $x , int $attrchar , int $n )"," int ncurses_mvinch ( int $y , int $x )"," int ncurses_mvvline ( int $y , int $x , int $attrchar , int $n )"," int ncurses_mvwaddstr ( resource $window , int $y , int $x , string $text )"," int ncurses_napms ( int $milliseconds )"," resource ncurses_new_panel ( resource $window )"," resource ncurses_newpad ( int $rows , int $cols )"," resource ncurses_newwin ( int $rows , int $cols , int $y , int $x )"," bool ncurses_nl ( void )"," bool ncurses_nocbreak ( void )"," bool ncurses_noecho ( void )"," bool ncurses_nonl ( void )"," void ncurses_noqiflush ( void )"," bool ncurses_noraw ( void )"," int ncurses_pair_content ( int $pair , int &$f , int &$b )"," resource ncurses_panel_above ( resource $panel )"," resource ncurses_panel_below ( resource $panel )"," resource ncurses_panel_window ( resource $panel )"," int ncurses_pnoutrefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol )"," int ncurses_prefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol )"," int ncurses_putp ( string $text )"," void ncurses_qiflush ( void )"," bool ncurses_raw ( void )"," int ncurses_refresh ( int $ch )"," int ncurses_replace_panel ( resource $panel , resource $window )"," int ncurses_reset_prog_mode ( void )"," int ncurses_reset_shell_mode ( void )"," bool ncurses_resetty ( void )"," bool ncurses_savetty ( void )"," int ncurses_scr_dump ( string $filename )"," int ncurses_scr_init ( string $filename )"," int ncurses_scr_restore ( string $filename )"," int ncurses_scr_set ( string $filename )"," int ncurses_scrl ( int $count )"," int ncurses_show_panel ( resource $panel )"," int ncurses_slk_attr ( void )"," int ncurses_slk_attroff ( int $intarg )"," int ncurses_slk_attron ( int $intarg )"," int ncurses_slk_attrset ( int $intarg )"," bool ncurses_slk_clear ( void )"," int ncurses_slk_color ( int $intarg )"," bool ncurses_slk_init ( int $format )"," bool ncurses_slk_noutrefresh ( void )"," int ncurses_slk_refresh ( void )"," int ncurses_slk_restore ( void )"," bool ncurses_slk_set ( int $labelnr , string $label , int $format )"," int ncurses_slk_touch ( void )"," int ncurses_standend ( void )"," int ncurses_standout ( void )"," int ncurses_start_color ( void )"," bool ncurses_termattrs ( void )"," string ncurses_termname ( void )"," void ncurses_timeout ( int $millisec )"," int ncurses_top_panel ( resource $panel )"," int ncurses_typeahead ( int $fd )"," int ncurses_ungetch ( int $keycode )"," bool ncurses_ungetmouse ( array $mevent )"," void ncurses_update_panels ( void )"," bool ncurses_use_default_colors ( void )"," void ncurses_use_env ( bool $flag )"," int ncurses_use_extended_names ( bool $flag )"," int ncurses_vidattr ( int $intarg )"," int ncurses_vline ( int $charattr , int $n )"," int ncurses_waddch ( resource $window , int $ch )"," int ncurses_waddstr ( resource $window , string $str [, int $n ] )"," int ncurses_wattroff ( resource $window , int $attrs )"," int ncurses_wattron ( resource $window , int $attrs )"," int ncurses_wattrset ( resource $window , int $attrs )"," int ncurses_wborder ( resource $window , int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner )"," int ncurses_wclear ( resource $window )"," int ncurses_wcolor_set ( resource $window , int $color_pair )"," int ncurses_werase ( resource $window )"," int ncurses_wgetch ( resource $window )"," int ncurses_whline ( resource $window , int $charattr , int $n )"," bool ncurses_wmouse_trafo ( resource $window , int &$y , int &$x , bool $toscreen )"," int ncurses_wmove ( resource $window , int $y , int $x )"," int ncurses_wnoutrefresh ( resource $window )"," int ncurses_wrefresh ( resource $window )"," int ncurses_wstandend ( resource $window )"," int ncurses_wstandout ( resource $window )"," int ncurses_wvline ( resource $window , int $charattr , int $n )"," void newt_bell ( void )"," resource newt_button_bar ( array &$buttons )"," resource newt_button ( int $left , int $top , string $text )"," int newt_centered_window ( int $width , int $height [, string $title ] )"," string newt_checkbox_get_value ( resource $checkbox )"," void newt_checkbox_set_flags ( resource $checkbox , int $flags , int $sense )"," void newt_checkbox_set_value ( resource $checkbox , string $value )"," void newt_checkbox_tree_add_item ( resource $checkboxtree , string $text , mixed $data , int $flags , int $index [, int $... ] )"," array newt_checkbox_tree_find_item ( resource $checkboxtree , mixed $data )"," mixed newt_checkbox_tree_get_current ( resource $checkboxtree )"," string newt_checkbox_tree_get_entry_value ( resource $checkboxtree , mixed $data )"," array newt_checkbox_tree_get_multi_selection ( resource $checkboxtree , string $seqnum )"," array newt_checkbox_tree_get_selection ( resource $checkboxtree )"," resource newt_checkbox_tree_multi ( int $left , int $top , int $height , string $seq [, int $flags ] )"," void newt_checkbox_tree_set_current ( resource $checkboxtree , mixed $data )"," void newt_checkbox_tree_set_entry_value ( resource $checkboxtree , mixed $data , string $value )"," void newt_checkbox_tree_set_entry ( resource $checkboxtree , mixed $data , string $text )"," void newt_checkbox_tree_set_width ( resource $checkbox_tree , int $width )"," resource newt_checkbox_tree ( int $left , int $top , int $height [, int $flags ] )"," resource newt_checkbox ( int $left , int $top , string $text , string $def_value [, string $seq ] )"," void newt_clear_key_buffer ( void )"," void newt_cls ( void )"," resource newt_compact_button ( int $left , int $top , string $text )"," void newt_component_add_callback ( resource $component , mixed $func_name , mixed $data )"," void newt_component_takes_focus ( resource $component , bool $takes_focus )"," resource newt_create_grid ( int $cols , int $rows )"," void newt_cursor_off ( void )"," void newt_cursor_on ( void )"," void newt_delay ( int $microseconds )"," void newt_draw_form ( resource $form )"," void newt_draw_root_text ( int $left , int $top , string $text )"," string newt_entry_get_value ( resource $entry )"," void newt_entry_set_filter ( resource $entry , callable $filter , mixed $data )"," void newt_entry_set_flags ( resource $entry , int $flags , int $sense )"," void newt_entry_set ( resource $entry , string $value [, bool $cursor_at_end ] )"," resource newt_entry ( int $left , int $top , int $width [, string $init_value [, int $flags ]] )"," int newt_finished ( void )"," void newt_form_add_component ( resource $form , resource $component )"," void newt_form_add_components ( resource $form , array $components )"," void newt_form_add_hot_key ( resource $form , int $key )"," void newt_form_destroy ( resource $form )"," resource newt_form_get_current ( resource $form )"," void newt_form_run ( resource $form , array &$exit_struct )"," void newt_form_set_background ( resource $from , int $background )"," void newt_form_set_height ( resource $form , int $height )"," void newt_form_set_size ( resource $form )"," void newt_form_set_timer ( resource $form , int $milliseconds )"," void newt_form_set_width ( resource $form , int $width )"," void newt_form_watch_fd ( resource $form , resource $stream [, int $flags ] )"," resource newt_form ([ resource $vert_bar [, string $help [, int $flags ]]] )"," void newt_get_screen_size ( int &$cols , int &$rows )"," void newt_grid_add_components_to_form ( resource $grid , resource $form , bool $recurse )"," resource newt_grid_basic_window ( resource $text , resource $middle , resource $buttons )"," void newt_grid_free ( resource $grid , bool $recurse )"," void newt_grid_get_size ( resouce $grid , int &$width , int &$height )"," resource newt_grid_h_close_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )"," resource newt_grid_h_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )"," void newt_grid_place ( resource $grid , int $left , int $top )"," void newt_grid_set_field ( resource $grid , int $col , int $row , int $type , resource $val , int $pad_left , int $pad_top , int $pad_right , int $pad_bottom , int $anchor [, int $flags ] )"," resource newt_grid_simple_window ( resource $text , resource $middle , resource $buttons )"," resource newt_grid_v_close_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )"," resource newt_grid_v_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )"," void newt_grid_wrapped_window_at ( resource $grid , string $title , int $left , int $top )"," void newt_grid_wrapped_window ( resource $grid , string $title )"," int newt_init ( void )"," void newt_label_set_text ( resource $label , string $text )"," resource newt_label ( int $left , int $top , string $text )"," void newt_listbox_append_entry ( resource $listbox , string $text , mixed $data )"," void newt_listbox_clear_selection ( resource $listbox )"," void newt_listbox_clear ( resource $listobx )"," void newt_listbox_delete_entry ( resource $listbox , mixed $key )"," string newt_listbox_get_current ( resource $listbox )"," array newt_listbox_get_selection ( resource $listbox )"," void newt_listbox_insert_entry ( resource $listbox , string $text , mixed $data , mixed $key )"," int newt_listbox_item_count ( resource $listbox )"," void newt_listbox_select_item ( resource $listbox , mixed $key , int $sense )"," void newt_listbox_set_current_by_key ( resource $listbox , mixed $key )"," void newt_listbox_set_current ( resource $listbox , int $num )"," void newt_listbox_set_data ( resource $listbox , int $num , mixed $data )"," void newt_listbox_set_entry ( resource $listbox , int $num , string $text )"," void newt_listbox_set_width ( resource $listbox , int $width )"," resource newt_listbox ( int $left , int $top , int $height [, int $flags ] )"," mixed newt_listitem_get_data ( resource $item )"," void newt_listitem_set ( resource $item , string $text )"," resource newt_listitem ( int $left , int $top , string $text , bool $is_default , resouce $prev_item , mixed $data [, int $flags ] )"," int newt_open_window ( int $left , int $top , int $width , int $height [, string $title ] )"," void newt_pop_help_line ( void )"," void newt_pop_window ( void )"," void newt_push_help_line ([ string $text ] )"," resource newt_radio_get_current ( resource $set_member )"," resource newt_radiobutton ( int $left , int $top , string $text , bool $is_default [, resource $prev_button ] )"," void newt_redraw_help_line ( void )"," string newt_reflow_text ( string $text , int $width , int $flex_down , int $flex_up , int &$actual_width , int &$actual_height )"," void newt_refresh ( void )"," void newt_resize_screen ([ bool $redraw ] )"," void newt_resume ( void )"," resource newt_run_form ( resource $form )"," void newt_scale_set ( resource $scale , int $amount )"," resource newt_scale ( int $left , int $top , int $width , int $full_value )"," void newt_scrollbar_set ( resource $scrollbar , int $where , int $total )"," void newt_set_help_callback ( mixed $function )"," void newt_set_suspend_callback ( callable $function , mixed $data )"," void newt_suspend ( void )"," int newt_textbox_get_num_lines ( resource $textbox )"," resource newt_textbox_reflowed ( int $left , int $top , char $*text , int $width , int $flex_down , int $flex_up [, int $flags ] )"," void newt_textbox_set_height ( resource $textbox , int $height )"," void newt_textbox_set_text ( resource $textbox , string $text )"," resource newt_textbox ( int $left , int $top , int $width , int $height [, int $flags ] )"," resource newt_vertical_scrollbar ( int $left , int $top , int $height [, int $normal_colorset [, int $thumb_colorset ]] )"," void newt_wait_for_key ( void )"," int newt_win_choice ( string $title , string $button1_text , string $button2_text , string $format [, mixed $args [, mixed $... ]] )"," int newt_win_entries ( string $title , string $text , int $suggested_width , int $flex_down , int $flex_up , int $data_width , array &$items , string $button1 [, string $... ] )"," int newt_win_menu ( string $title , string $text , int $suggestedWidth , int $flexDown , int $flexUp , int $maxListHeight , array $items , int &$listItem [, string $button1 [, string $... ]] )"," void newt_win_message ( string $title , string $button_text , string $format [, mixed $args [, mixed $... ]] )"," void newt_win_messagev ( string $title , string $button_text , string $format , array $args )"," int newt_win_ternary ( string $title , string $button1_text , string $button2_text , string $button3_text , string $format [, mixed $args [, mixed $... ]] )"," mixed next ( array &$array )"," string ngettext ( string $msgid1 , string $msgid2 , int $n )"," string nl_langinfo ( int $item )"," string nl2br ( string $string [, bool $is_xhtml = true ] )"," array notes_body ( string $server , string $mailbox , int $msg_number )"," bool notes_copy_db ( string $from_database_name , string $to_database_name )"," bool notes_create_db ( string $database_name )"," bool notes_create_note ( string $database_name , string $form_name )"," bool notes_drop_db ( string $database_name )"," int notes_find_note ( string $database_name , string $name [, string $type ] )"," object notes_header_info ( string $server , string $mailbox , int $msg_number )"," bool notes_list_msgs ( string $db )"," bool notes_mark_read ( string $database_name , string $user_name , string $note_id )"," bool notes_mark_unread ( string $database_name , string $user_name , string $note_id )"," bool notes_nav_create ( string $database_name , string $name )"," array notes_search ( string $database_name , string $keywords )"," array notes_unread ( string $database_name , string $user_name )"," float notes_version ( string $database_name )"," array nsapi_request_headers ( void )"," array nsapi_response_headers ( void )"," bool nsapi_virtual ( string $uri )"," string nthmac ( string $clent , string $data )"," string number_format ( float $number [, int $decimals = 0 ] )"," string oauth_get_sbs ( string $http_method , string $uri [, array $request_parameters ] )"," string oauth_urlencode ( string $uri )"," void ob_clean ( void )"," string ob_deflatehandler ( string $data , int $mode )"," bool ob_end_clean ( void )"," bool ob_end_flush ( void )"," string ob_etaghandler ( string $data , int $mode )"," void ob_flush ( void )"," string ob_get_clean ( void )"," string ob_get_contents ( void )"," string ob_get_flush ( void )"," int ob_get_length ( void )"," int ob_get_level ( void )"," array ob_get_status ([ bool $full_status = FALSE ] )"," string ob_gzhandler ( string $buffer , int $mode )"," string ob_iconv_handler ( string $contents , int $status )"," void ob_implicit_flush ([ int $flag = true ] )"," string ob_inflatehandler ( string $data , int $mode )"," array ob_list_handlers ( void )"," bool ob_start ([ callable $output_callback [, int $chunk_size = 0 [, bool $erase = true ]]] )"," string ob_tidyhandler ( string $input [, int $mode ] )"," bool oci_bind_array_by_name ( resource $statement , string $name , array &$var_array , int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC ]] )"," bool oci_bind_by_name ( resource $statement , string $bv_name , mixed &$variable [, int $maxlength = -1 [, int $type = SQLT_CHR ]] )"," bool oci_cancel ( resource $statement )"," string oci_client_version ( void )"," bool oci_close ( resource $connection )"," bool oci_commit ( resource $connection )"," resource oci_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )"," bool oci_define_by_name ( resource $statement , string $column_name , mixed &$variable [, int $type = SQLT_CHR ] )"," array oci_error ([ resource $resource ] )"," bool oci_execute ( resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS ] )"," int oci_fetch_all ( resource $statement , array &$output [, int $skip = 0 [, int $maxrows = -1 [, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC ]]] )"," array oci_fetch_array ( resource $statement [, int $mode ] )"," array oci_fetch_assoc ( resource $statement )"," object oci_fetch_object ( resource $statement )"," array oci_fetch_row ( resource $statement )"," bool oci_fetch ( resource $statement )"," bool oci_field_is_null ( resource $statement , mixed $field )"," string oci_field_name ( resource $statement , int $field )"," int oci_field_precision ( resource $statement , int $field )"," int oci_field_scale ( resource $statement , int $field )"," int oci_field_size ( resource $statement , mixed $field )"," int oci_field_type_raw ( resource $statement , int $field )"," mixed oci_field_type ( resource $statement , int $field )"," bool oci_free_statement ( resource $statement )"," void oci_internal_debug ( bool $onoff )"," bool oci_lob_copy ( OCI-Lob $lob_to , OCI-Lob $lob_from [, int $length = 0 ] )"," bool oci_lob_is_equal ( OCI-Lob $lob1 , OCI-Lob $lob2 )"," OCI-Collection oci_new_collection ( resource $connection , string $tdo [, string $schema = NULL ] )"," resource oci_new_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )"," resource oci_new_cursor ( resource $connection )"," OCI-Lob oci_new_descriptor ( resource $connection [, int $type = OCI_DTYPE_LOB ] )"," int oci_num_fields ( resource $statement )"," int oci_num_rows ( resource $statement )"," resource oci_parse ( resource $connection , string $sql_text )"," bool oci_password_change ( resource $connection , string $username , string $old_password , string $new_password )"," resource oci_pconnect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )"," mixed oci_result ( resource $statement , mixed $field )"," bool oci_rollback ( resource $connection )"," string oci_server_version ( resource $connection )"," bool oci_set_action ( resource $connection , string $action_name )"," bool oci_set_client_identifier ( resource $connection , string $client_identifier )"," bool oci_set_client_info ( resource $connection , string $client_info )"," bool oci_set_edition ( string $edition )"," bool oci_set_module_name ( resource $connection , string $module_name )"," bool oci_set_prefetch ( resource $statement , int $rows )"," string oci_statement_type ( resource $statement )"," int ocifetchinto ( resource $statement , array &$result [, int $mode = OCI_ASSOC + OCI_NUM ] )"," number octdec ( string $octal_string )"," mixed odbc_autocommit ( resource $connection_id [, bool $OnOff = false ] )"," bool odbc_binmode ( resource $result_id , int $mode )"," void odbc_close_all ( void )"," void odbc_close ( resource $connection_id )"," resource odbc_columnprivileges ( resource $connection_id , string $qualifier , string $owner , string $table_name , string $column_name )"," resource odbc_columns ( resource $connection_id [, string $qualifier [, string $schema [, string $table_name [, string $column_name ]]]] )"," bool odbc_commit ( resource $connection_id )"," resource odbc_connect ( string $dsn , string $user , string $password [, int $cursor_type ] )"," string odbc_cursor ( resource $result_id )"," array odbc_data_source ( resource $connection_id , int $fetch_type )"," string odbc_error ([ resource $connection_id ] )"," string odbc_errormsg ([ resource $connection_id ] )"," resource odbc_exec ( resource $connection_id , string $query_string [, int $flags ] )"," bool odbc_execute ( resource $result_id [, array $parameters_array ] )"," array odbc_fetch_array ( resource $result [, int $rownumber ] )"," int odbc_fetch_into ( resource $result_id , array &$result_array [, int $rownumber ] )"," object odbc_fetch_object ( resource $result [, int $rownumber ] )"," bool odbc_fetch_row ( resource $result_id [, int $row_number ] )"," int odbc_field_len ( resource $result_id , int $field_number )"," string odbc_field_name ( resource $result_id , int $field_number )"," int odbc_field_num ( resource $result_id , string $field_name )"," int odbc_field_scale ( resource $result_id , int $field_number )"," string odbc_field_type ( resource $result_id , int $field_number )"," resource odbc_foreignkeys ( resource $connection_id , string $pk_qualifier , string $pk_owner , string $pk_table , string $fk_qualifier , string $fk_owner , string $fk_table )"," bool odbc_free_result ( resource $result_id )"," resource odbc_gettypeinfo ( resource $connection_id [, int $data_type ] )"," bool odbc_longreadlen ( resource $result_id , int $length )"," bool odbc_next_result ( resource $result_id )"," int odbc_num_fields ( resource $result_id )"," int odbc_num_rows ( resource $result_id )"," resource odbc_pconnect ( string $dsn , string $user , string $password [, int $cursor_type ] )"," resource odbc_prepare ( resource $connection_id , string $query_string )"," resource odbc_primarykeys ( resource $connection_id , string $qualifier , string $owner , string $table )"," resource odbc_procedurecolumns ( resource $connection_id )"," resource odbc_procedures ( resource $connection_id )"," int odbc_result_all ( resource $result_id [, string $format ] )"," mixed odbc_result ( resource $result_id , mixed $field )"," bool odbc_rollback ( resource $connection_id )"," bool odbc_setoption ( resource $id , int $function , int $option , int $param )"," resource odbc_specialcolumns ( resource $connection_id , int $type , string $qualifier , string $owner , string $table , int $scope , int $nullable )"," resource odbc_statistics ( resource $connection_id , string $qualifier , string $owner , string $table_name , int $unique , int $accuracy )"," resource odbc_tableprivileges ( resource $connection_id , string $qualifier , string $owner , string $name )"," resource odbc_tables ( resource $connection_id [, string $qualifier [, string $owner [, string $name [, string $types ]]]] )"," resource openal_buffer_create ( void )"," bool openal_buffer_data ( resource $buffer , int $format , string $data , int $freq )"," bool openal_buffer_destroy ( resource $buffer )"," int openal_buffer_get ( resource $buffer , int $property )"," bool openal_buffer_loadwav ( resource $buffer , string $wavfile )"," resource openal_context_create ( resource $device )"," bool openal_context_current ( resource $context )"," bool openal_context_destroy ( resource $context )"," bool openal_context_process ( resource $context )"," bool openal_context_suspend ( resource $context )"," bool openal_device_close ( resource $device )"," resource openal_device_open ([ string $device_desc ] )"," mixed openal_listener_get ( int $property )"," bool openal_listener_set ( int $property , mixed $setting )"," resource openal_source_create ( void )"," bool openal_source_destroy ( resource $source )"," mixed openal_source_get ( resource $source , int $property )"," bool openal_source_pause ( resource $source )"," bool openal_source_play ( resource $source )"," bool openal_source_rewind ( resource $source )"," bool openal_source_set ( resource $source , int $property , mixed $setting )"," bool openal_source_stop ( resource $source )"," resource openal_stream ( resource $source , int $format , int $rate )"," resource opendir ( string $path [, resource $context ] )"," bool openlog ( string $ident , int $option , int $facility )"," int openssl_cipher_iv_length ( string $method )"," bool openssl_csr_export_to_file ( resource $csr , string $outfilename [, bool $notext = true ] )"," bool openssl_csr_export ( resource $csr , string &$out [, bool $notext = true ] )"," resource openssl_csr_get_public_key ( mixed $csr [, bool $use_shortnames = true ] )"," array openssl_csr_get_subject ( mixed $csr [, bool $use_shortnames = true ] )"," mixed openssl_csr_new ( array $dn , resource &$privkey [, array $configargs [, array $extraattribs ]] )"," resource openssl_csr_sign ( mixed $csr , mixed $cacert , mixed $priv_key , int $days [, array $configargs [, int $serial = 0 ]] )"," string openssl_decrypt ( string $data , string $method , string $password [, bool $raw_input = false [, string $iv = \"\" ]] )"," string openssl_dh_compute_key ( string $pub_key , resource $dh_key )"," string openssl_digest ( string $data , string $method [, bool $raw_output = false ] )"," string openssl_encrypt ( string $data , string $method , string $password [, bool $raw_output = false [, string $iv = \"\" ]] )"," string openssl_error_string ( void )"," void openssl_free_key ( resource $key_identifier )"," array openssl_get_cipher_methods ([ bool $aliases = false ] )"," array openssl_get_md_methods ([ bool $aliases = false ] )"," bool openssl_open ( string $sealed_data , string &$open_data , string $env_key , mixed $priv_key_id [, string $method ] )"," bool openssl_pkcs12_export_to_file ( mixed $x509 , string $filename , mixed $priv_key , string $pass [, array $args ] )"," bool openssl_pkcs12_export ( mixed $x509 , string &$out , mixed $priv_key , string $pass [, array $args ] )"," bool openssl_pkcs12_read ( string $pkcs12 , array &$certs , string $pass )"," bool openssl_pkcs7_decrypt ( string $infilename , string $outfilename , mixed $recipcert [, mixed $recipkey ] )"," bool openssl_pkcs7_encrypt ( string $infile , string $outfile , mixed $recipcerts , array $headers [, int $flags = 0 [, int $cipherid = OPENSSL_CIPHER_RC2_40 ]] )"," bool openssl_pkcs7_sign ( string $infilename , string $outfilename , mixed $signcert , mixed $privkey , array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts ]] )"," mixed openssl_pkcs7_verify ( string $filename , int $flags [, string $outfilename [, array $cainfo [, string $extracerts [, string $content ]]]] )"," bool openssl_pkey_export_to_file ( mixed $key , string $outfilename [, string $passphrase [, array $configargs ]] )"," bool openssl_pkey_export ( mixed $key , string &$out [, string $passphrase [, array $configargs ]] )"," void openssl_pkey_free ( resource $key )"," array openssl_pkey_get_details ( resource $key )"," resource openssl_pkey_get_private ( mixed $key [, string $passphrase = \"\" ] )"," resource openssl_pkey_get_public ( mixed $certificate )"," resource openssl_pkey_new ([ array $configargs ] )"," bool openssl_private_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )"," bool openssl_private_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )"," bool openssl_public_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )"," bool openssl_public_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )"," string openssl_random_pseudo_bytes ( int $length [, bool &$crypto_strong ] )"," int openssl_seal ( string $data , string &$sealed_data , array &$env_keys , array $pub_key_ids [, string $method ] )"," bool openssl_sign ( string $data , string &$signature , mixed $priv_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ] )"," int openssl_verify ( string $data , string $signature , mixed $pub_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ] )"," bool openssl_x509_check_private_key ( mixed $cert , mixed $key )"," int openssl_x509_checkpurpose ( mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]] )"," bool openssl_x509_export_to_file ( mixed $x509 , string $outfilename [, bool $notext = TRUE ] )"," bool openssl_x509_export ( mixed $x509 , string &$output [, bool $notext = TRUE ] )"," void openssl_x509_free ( resource $x509cert )"," array openssl_x509_parse ( mixed $x509cert [, bool $shortnames = true ] )"," resource openssl_x509_read ( mixed $x509certdata )"," int ord ( string $string )"," bool output_add_rewrite_var ( string $name , string $value )"," bool output_reset_rewrite_vars ( void )"," void overload ( string $class_name )"," bool override_function ( string $function_name , string $function_args , string $function_code )"," void ovrimos_close ( int $connection )"," bool ovrimos_commit ( int $connection_id )"," int ovrimos_connect ( string $host , string $dborport , string $user , string $password )"," string ovrimos_cursor ( int $result_id )"," int ovrimos_exec ( int $connection_id , string $query )"," bool ovrimos_execute ( int $result_id [, array $parameters_array ] )"," bool ovrimos_fetch_into ( int $result_id , array &$result_array [, string $how [, int $rownumber ]] )"," bool ovrimos_fetch_row ( int $result_id [, int $how [, int $row_number ]] )"," int ovrimos_field_len ( int $result_id , int $field_number )"," string ovrimos_field_name ( int $result_id , int $field_number )"," int ovrimos_field_num ( int $result_id , string $field_name )"," int ovrimos_field_type ( int $result_id , int $field_number )"," bool ovrimos_free_result ( int $result_id )"," bool ovrimos_longreadlen ( int $result_id , int $length )"," int ovrimos_num_fields ( int $result_id )"," int ovrimos_num_rows ( int $result_id )"," int ovrimos_prepare ( int $connection_id , string $query )"," int ovrimos_result_all ( int $result_id [, string $format ] )"," string ovrimos_result ( int $result_id , mixed $field )"," bool ovrimos_rollback ( int $connection_id )"," string pack ( string $format [, mixed $args [, mixed $... ]] )"," array parse_ini_file ( string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] )"," array parse_ini_string ( string $ini [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] )"," void parse_str ( string $str [, array &$arr ] )"," mixed parse_url ( string $url [, int $component = -1 ] )"," array parsekit_compile_file ( string $filename [, array &$errors [, int $options = PARSEKIT_QUIET ]] )"," array parsekit_compile_string ( string $phpcode [, array &$errors [, int $options = PARSEKIT_QUIET ]] )"," array parsekit_func_arginfo ( mixed $function )"," void passthru ( string $command [, int &$return_var ] )"," mixed pathinfo ( string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME ] )"," int pclose ( resource $handle )"," int pcntl_alarm ( int $seconds )"," void pcntl_exec ( string $path [, array $args [, array $envs ]] )"," int pcntl_fork ( void )"," int pcntl_getpriority ([ int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] )"," bool pcntl_setpriority ( int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] )"," bool pcntl_signal_dispatch ( void )"," bool pcntl_signal ( int $signo , callable $handler [, bool $restart_syscalls = true ] )"," bool pcntl_sigprocmask ( int $how , array $set [, array &$oldset ] )"," int pcntl_sigtimedwait ( array $set [, array &$siginfo [, int $seconds = 0 [, int $nanoseconds = 0 ]]] )"," int pcntl_sigwaitinfo ( array $set [, array &$siginfo ] )"," int pcntl_wait ( int &$status [, int $options = 0 ] )"," int pcntl_waitpid ( int $pid , int &$status [, int $options = 0 ] )"," int pcntl_wexitstatus ( int $status )"," bool pcntl_wifexited ( int $status )"," bool pcntl_wifsignaled ( int $status )"," bool pcntl_wifstopped ( int $status )"," int pcntl_wstopsig ( int $status )"," int pcntl_wtermsig ( int $status )"," bool PDF_activate_item ( resource $pdfdoc , int $id )"," bool PDF_add_launchlink ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename )"," bool PDF_add_locallink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , int $page , string $dest )"," bool PDF_add_nameddest ( resource $pdfdoc , string $name , string $optlist )"," bool PDF_add_note ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open )"," bool PDF_add_pdflink ( resource $pdfdoc , float $bottom_left_x , float $bottom_left_y , float $up_right_x , float $up_right_y , string $filename , int $page , string $dest )"," int PDF_add_table_cell ( resource $pdfdoc , int $table , int $column , int $row , string $text , string $optlist )"," int PDF_add_textflow ( resource $pdfdoc , int $textflow , string $text , string $optlist )"," bool PDF_add_thumbnail ( resource $pdfdoc , int $image )"," bool PDF_add_weblink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , string $url )"," bool PDF_arc ( resource $p , float $x , float $y , float $r , float $alpha , float $beta )"," bool PDF_arcn ( resource $p , float $x , float $y , float $r , float $alpha , float $beta )"," bool PDF_attach_file ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename , string $description , string $author , string $mimetype , string $icon )"," int PDF_begin_document ( resource $pdfdoc , string $filename , string $optlist )"," bool PDF_begin_font ( resource $pdfdoc , string $filename , float $a , float $b , float $c , float $d , float $e , float $f , string $optlist )"," bool PDF_begin_glyph ( resource $pdfdoc , string $glyphname , float $wx , float $llx , float $lly , float $urx , float $ury )"," int PDF_begin_item ( resource $pdfdoc , string $tag , string $optlist )"," bool PDF_begin_layer ( resource $pdfdoc , int $layer )"," bool PDF_begin_page_ext ( resource $pdfdoc , float $width , float $height , string $optlist )"," bool PDF_begin_page ( resource $pdfdoc , float $width , float $height )"," int PDF_begin_pattern ( resource $pdfdoc , float $width , float $height , float $xstep , float $ystep , int $painttype )"," int PDF_begin_template_ext ( resource $pdfdoc , float $width , float $height , string $optlist )"," int PDF_begin_template ( resource $pdfdoc , float $width , float $height )"," bool PDF_circle ( resource $pdfdoc , float $x , float $y , float $r )"," bool PDF_clip ( resource $p )"," bool PDF_close_image ( resource $p , int $image )"," bool PDF_close_pdi_page ( resource $p , int $page )"," bool PDF_close_pdi ( resource $p , int $doc )"," bool PDF_close ( resource $p )"," bool PDF_closepath_fill_stroke ( resource $p )"," bool PDF_closepath_stroke ( resource $p )"," bool PDF_closepath ( resource $p )"," bool PDF_concat ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f )"," bool PDF_continue_text ( resource $p , string $text )"," int PDF_create_3dview ( resource $pdfdoc , string $username , string $optlist )"," int PDF_create_action ( resource $pdfdoc , string $type , string $optlist )"," bool PDF_create_annotation ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $type , string $optlist )"," int PDF_create_bookmark ( resource $pdfdoc , string $text , string $optlist )"," bool PDF_create_field ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $name , string $type , string $optlist )"," bool PDF_create_fieldgroup ( resource $pdfdoc , string $name , string $optlist )"," int PDF_create_gstate ( resource $pdfdoc , string $optlist )"," bool PDF_create_pvf ( resource $pdfdoc , string $filename , string $data , string $optlist )"," int PDF_create_textflow ( resource $pdfdoc , string $text , string $optlist )"," bool PDF_curveto ( resource $p , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )"," int PDF_define_layer ( resource $pdfdoc , string $name , string $optlist )"," int PDF_delete_pvf ( resource $pdfdoc , string $filename )"," bool PDF_delete_table ( resource $pdfdoc , int $table , string $optlist )"," bool PDF_delete_textflow ( resource $pdfdoc , int $textflow )"," bool PDF_delete ( resource $pdfdoc )"," bool PDF_encoding_set_char ( resource $pdfdoc , string $encoding , int $slot , string $glyphname , int $uv )"," bool PDF_end_document ( resource $pdfdoc , string $optlist )"," bool PDF_end_font ( resource $pdfdoc )"," bool PDF_end_glyph ( resource $pdfdoc )"," bool PDF_end_item ( resource $pdfdoc , int $id )"," bool PDF_end_layer ( resource $pdfdoc )"," bool PDF_end_page_ext ( resource $pdfdoc , string $optlist )"," bool PDF_end_page ( resource $p )"," bool PDF_end_pattern ( resource $p )"," bool PDF_end_template ( resource $p )"," bool PDF_endpath ( resource $p )"," int PDF_fill_imageblock ( resource $pdfdoc , int $page , string $blockname , int $image , string $optlist )"," int PDF_fill_pdfblock ( resource $pdfdoc , int $page , string $blockname , int $contents , string $optlist )"," bool PDF_fill_stroke ( resource $p )"," int PDF_fill_textblock ( resource $pdfdoc , int $page , string $blockname , string $text , string $optlist )"," bool PDF_fill ( resource $p )"," int PDF_findfont ( resource $p , string $fontname , string $encoding , int $embed )"," bool PDF_fit_image ( resource $pdfdoc , int $image , float $x , float $y , string $optlist )"," bool PDF_fit_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , string $optlist )"," string PDF_fit_table ( resource $pdfdoc , int $table , float $llx , float $lly , float $urx , float $ury , string $optlist )"," string PDF_fit_textflow ( resource $pdfdoc , int $textflow , float $llx , float $lly , float $urx , float $ury , string $optlist )"," bool PDF_fit_textline ( resource $pdfdoc , string $text , float $x , float $y , string $optlist )"," string PDF_get_apiname ( resource $pdfdoc )"," string PDF_get_buffer ( resource $p )"," string PDF_get_errmsg ( resource $pdfdoc )"," int PDF_get_errnum ( resource $pdfdoc )"," int PDF_get_majorversion ( void )"," int PDF_get_minorversion ( void )"," string PDF_get_parameter ( resource $p , string $key , float $modifier )"," string PDF_get_pdi_parameter ( resource $p , string $key , int $doc , int $page , int $reserved )"," float PDF_get_pdi_value ( resource $p , string $key , int $doc , int $page , int $reserved )"," float PDF_get_value ( resource $p , string $key , float $modifier )"," float PDF_info_font ( resource $pdfdoc , int $font , string $keyword , string $optlist )"," float PDF_info_matchbox ( resource $pdfdoc , string $boxname , int $num , string $keyword )"," float PDF_info_table ( resource $pdfdoc , int $table , string $keyword )"," float PDF_info_textflow ( resource $pdfdoc , int $textflow , string $keyword )"," float PDF_info_textline ( resource $pdfdoc , string $text , string $keyword , string $optlist )"," bool PDF_initgraphics ( resource $p )"," bool PDF_lineto ( resource $p , float $x , float $y )"," int PDF_load_3ddata ( resource $pdfdoc , string $filename , string $optlist )"," int PDF_load_font ( resource $pdfdoc , string $fontname , string $encoding , string $optlist )"," int PDF_load_iccprofile ( resource $pdfdoc , string $profilename , string $optlist )"," int PDF_load_image ( resource $pdfdoc , string $imagetype , string $filename , string $optlist )"," int PDF_makespotcolor ( resource $p , string $spotname )"," bool PDF_moveto ( resource $p , float $x , float $y )"," resource PDF_new ( void )"," int PDF_open_ccitt ( resource $pdfdoc , string $filename , int $width , int $height , int $BitReverse , int $k , int $Blackls1 )"," bool PDF_open_file ( resource $p , string $filename )"," int PDF_open_image_file ( resource $p , string $imagetype , string $filename , string $stringparam , int $intparam )"," int PDF_open_image ( resource $p , string $imagetype , string $source , string $data , int $length , int $width , int $height , int $components , int $bpc , string $params )"," int PDF_open_memory_image ( resource $p , resource $image )"," int PDF_open_pdi_document ( resource $p , string $filename , string $optlist )"," int PDF_open_pdi_page ( resource $p , int $doc , int $pagenumber , string $optlist )"," int PDF_open_pdi ( resource $pdfdoc , string $filename , string $optlist , int $len )"," float PDF_pcos_get_number ( resource $p , int $doc , string $path )"," string PDF_pcos_get_stream ( resource $p , int $doc , string $optlist , string $path )"," string PDF_pcos_get_string ( resource $p , int $doc , string $path )"," bool PDF_place_image ( resource $pdfdoc , int $image , float $x , float $y , float $scale )"," bool PDF_place_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , float $sx , float $sy )"," int PDF_process_pdi ( resource $pdfdoc , int $doc , int $page , string $optlist )"," bool PDF_rect ( resource $p , float $x , float $y , float $width , float $height )"," bool PDF_restore ( resource $p )"," bool PDF_resume_page ( resource $pdfdoc , string $optlist )"," bool PDF_rotate ( resource $p , float $phi )"," bool PDF_save ( resource $p )"," bool PDF_scale ( resource $p , float $sx , float $sy )"," bool PDF_set_border_color ( resource $p , float $red , float $green , float $blue )"," bool PDF_set_border_dash ( resource $pdfdoc , float $black , float $white )"," bool PDF_set_border_style ( resource $pdfdoc , string $style , float $width )"," bool PDF_set_gstate ( resource $pdfdoc , int $gstate )"," bool PDF_set_info ( resource $p , string $key , string $value )"," bool PDF_set_layer_dependency ( resource $pdfdoc , string $type , string $optlist )"," bool PDF_set_parameter ( resource $p , string $key , string $value )"," bool PDF_set_text_pos ( resource $p , float $x , float $y )"," bool PDF_set_value ( resource $p , string $key , float $value )"," bool PDF_setcolor ( resource $p , string $fstype , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 )"," bool PDF_setdash ( resource $pdfdoc , float $b , float $w )"," bool PDF_setdashpattern ( resource $pdfdoc , string $optlist )"," bool PDF_setflat ( resource $pdfdoc , float $flatness )"," bool PDF_setfont ( resource $pdfdoc , int $font , float $fontsize )"," bool PDF_setgray_fill ( resource $p , float $g )"," bool PDF_setgray_stroke ( resource $p , float $g )"," bool PDF_setgray ( resource $p , float $g )"," bool PDF_setlinecap ( resource $p , int $linecap )"," bool PDF_setlinejoin ( resource $p , int $value )"," bool PDF_setlinewidth ( resource $p , float $width )"," bool PDF_setmatrix ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f )"," bool PDF_setmiterlimit ( resource $pdfdoc , float $miter )"," bool PDF_setrgbcolor_fill ( resource $p , float $red , float $green , float $blue )"," bool PDF_setrgbcolor_stroke ( resource $p , float $red , float $green , float $blue )"," bool PDF_setrgbcolor ( resource $p , float $red , float $green , float $blue )"," int PDF_shading_pattern ( resource $pdfdoc , int $shading , string $optlist )"," int PDF_shading ( resource $pdfdoc , string $shtype , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist )"," bool PDF_shfill ( resource $pdfdoc , int $shading )"," int PDF_show_boxed ( resource $p , string $text , float $left , float $top , float $width , float $height , string $mode , string $feature )"," bool PDF_show_xy ( resource $p , string $text , float $x , float $y )"," bool PDF_show ( resource $pdfdoc , string $text )"," bool PDF_skew ( resource $p , float $alpha , float $beta )"," float PDF_stringwidth ( resource $p , string $text , int $font , float $fontsize )"," bool PDF_stroke ( resource $p )"," bool PDF_suspend_page ( resource $pdfdoc , string $optlist )"," bool PDF_translate ( resource $p , float $tx , float $ty )"," string PDF_utf16_to_utf8 ( resource $pdfdoc , string $utf16string )"," string PDF_utf32_to_utf16 ( resource $pdfdoc , string $utf32string , string $ordering )"," string PDF_utf8_to_utf16 ( resource $pdfdoc , string $utf8string , string $ordering )"," resource pfsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get(\"default_socket_timeout\") ]]]] )"," int pg_affected_rows ( resource $result )"," bool pg_cancel_query ( resource $connection )"," string pg_client_encoding ([ resource $connection ] )"," bool pg_close ([ resource $connection ] )"," resource pg_connect ( string $connection_string [, int $connect_type ] )"," bool pg_connection_busy ( resource $connection )"," bool pg_connection_reset ( resource $connection )"," int pg_connection_status ( resource $connection )"," array pg_convert ( resource $connection , string $table_name , array $assoc_array [, int $options = 0 ] )"," bool pg_copy_from ( resource $connection , string $table_name , array $rows [, string $delimiter [, string $null_as ]] )"," array pg_copy_to ( resource $connection , string $table_name [, string $delimiter [, string $null_as ]] )"," string pg_dbname ([ resource $connection ] )"," mixed pg_delete ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )"," bool pg_end_copy ([ resource $connection ] )"," string pg_escape_bytea ([ resource $connection ], string $data )"," string pg_escape_identifier ([ resource $connection ], string $data )"," string pg_escape_literal ([ resource $connection ], string $data )"," string pg_escape_string ([ resource $connection ], string $data )"," resource pg_execute ([ resource $connection ], string $stmtname , array $params )"," array pg_fetch_all_columns ( resource $result [, int $column = 0 ] )"," array pg_fetch_all ( resource $result )"," array pg_fetch_array ( resource $result [, int $row [, int $result_type = PGSQL_BOTH ]] )"," array pg_fetch_assoc ( resource $result [, int $row ] )"," object pg_fetch_object ( resource $result [, int $row [, int $result_type = PGSQL_ASSOC ]] )"," string pg_fetch_result ( resource $result , int $row , mixed $field )"," array pg_fetch_row ( resource $result [, int $row ] )"," int pg_field_is_null ( resource $result , int $row , mixed $field )"," string pg_field_name ( resource $result , int $field_number )"," int pg_field_num ( resource $result , string $field_name )"," int pg_field_prtlen ( resource $result , int $row_number , mixed $field_name_or_number )"," int pg_field_size ( resource $result , int $field_number )"," mixed pg_field_table ( resource $result , int $field_number [, bool $oid_only = false ] )"," int pg_field_type_oid ( resource $result , int $field_number )"," string pg_field_type ( resource $result , int $field_number )"," bool pg_free_result ( resource $result )"," array pg_get_notify ( resource $connection [, int $result_type ] )"," int pg_get_pid ( resource $connection )"," resource pg_get_result ([ resource $connection ] )"," string pg_host ([ resource $connection ] )"," mixed pg_insert ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )"," string pg_last_error ([ resource $connection ] )"," string pg_last_notice ( resource $connection )"," string pg_last_oid ( resource $result )"," bool pg_lo_close ( resource $large_object )"," int pg_lo_create ([ resource $connection [, mixed $object_id ]] )"," bool pg_lo_export ([ resource $connection ], int $oid , string $pathname )"," int pg_lo_import ([ resource $connection ], string $pathname [, mixed $object_id ] )"," resource pg_lo_open ( resource $connection , int $oid , string $mode )"," int pg_lo_read_all ( resource $large_object )"," string pg_lo_read ( resource $large_object [, int $len = 8192 ] )"," bool pg_lo_seek ( resource $large_object , int $offset [, int $whence = PGSQL_SEEK_CUR ] )"," int pg_lo_tell ( resource $large_object )"," bool pg_lo_unlink ( resource $connection , int $oid )"," int pg_lo_write ( resource $large_object , string $data [, int $len ] )"," array pg_meta_data ( resource $connection , string $table_name )"," int pg_num_fields ( resource $result )"," int pg_num_rows ( resource $result )"," string pg_options ([ resource $connection ] )"," string pg_parameter_status ([ resource $connection ], string $param_name )"," resource pg_pconnect ( string $connection_string [, int $connect_type ] )"," bool pg_ping ([ resource $connection ] )"," int pg_port ([ resource $connection ] )"," resource pg_prepare ([ resource $connection ], string $stmtname , string $query )"," bool pg_put_line ([ resource $connection ], string $data )"," resource pg_query_params ([ resource $connection ], string $query , array $params )"," resource pg_query ([ resource $connection ], string $query )"," string pg_result_error_field ( resource $result , int $fieldcode )"," string pg_result_error ( resource $result )"," bool pg_result_seek ( resource $result , int $offset )"," mixed pg_result_status ( resource $result [, int $type = PGSQL_STATUS_LONG ] )"," mixed pg_select ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )"," bool pg_send_execute ( resource $connection , string $stmtname , array $params )"," bool pg_send_prepare ( resource $connection , string $stmtname , string $query )"," bool pg_send_query_params ( resource $connection , string $query , array $params )"," bool pg_send_query ( resource $connection , string $query )"," int pg_set_client_encoding ([ resource $connection ], string $encoding )"," int pg_set_error_verbosity ([ resource $connection ], int $verbosity )"," bool pg_trace ( string $pathname [, string $mode = \"w\" [, resource $connection ]] )"," int pg_transaction_status ( resource $connection )"," string pg_tty ([ resource $connection ] )"," string pg_unescape_bytea ( string $data )"," bool pg_untrace ([ resource $connection ] )"," mixed pg_update ( resource $connection , string $table_name , array $data , array $condition [, int $options = PGSQL_DML_EXEC ] )"," array pg_version ([ resource $connection ] )"," bool php_check_syntax ( string $filename [, string &$error_message ] )"," string php_ini_loaded_file ( void )"," string php_ini_scanned_files ( void )"," string php_logo_guid ( void )"," string php_sapi_name ( void )"," string php_strip_whitespace ( string $filename )"," string php_uname ([ string $mode = \"a\" ] )"," bool phpcredits ([ int $flag = CREDITS_ALL ] )"," bool phpinfo ([ int $what = INFO_ALL ] )"," string phpversion ([ string $extension ] )"," float pi ( void )"," bool png2wbmp ( string $pngname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )"," resource popen ( string $command , string $mode )"," bool posix_access ( string $file [, int $mode = POSIX_F_OK ] )"," string posix_ctermid ( void )"," int posix_get_last_error ( void )"," string posix_getcwd ( void )"," int posix_getegid ( void )"," int posix_geteuid ( void )"," int posix_getgid ( void )"," array posix_getgrgid ( int $gid )"," array posix_getgrnam ( string $name )"," array posix_getgroups ( void )"," string posix_getlogin ( void )"," int posix_getpgid ( int $pid )"," int posix_getpgrp ( void )"," int posix_getpid ( void )"," int posix_getppid ( void )"," array posix_getpwnam ( string $username )"," array posix_getpwuid ( int $uid )"," array posix_getrlimit ( void )"," int posix_getsid ( int $pid )"," int posix_getuid ( void )"," bool posix_initgroups ( string $name , int $base_group_id )"," bool posix_isatty ( int $fd )"," bool posix_kill ( int $pid , int $sig )"," bool posix_mkfifo ( string $pathname , int $mode )"," bool posix_mknod ( string $pathname , int $mode [, int $major = 0 [, int $minor = 0 ]] )"," bool posix_setegid ( int $gid )"," bool posix_seteuid ( int $uid )"," bool posix_setgid ( int $gid )"," bool posix_setpgid ( int $pid , int $pgid )"," int posix_setsid ( void )"," bool posix_setuid ( int $uid )"," string posix_strerror ( int $errno )"," array posix_times ( void )"," string posix_ttyname ( int $fd )"," array posix_uname ( void )"," number pow ( number $base , number $exp )"," mixed preg_filter ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )"," array preg_grep ( string $pattern , array $input [, int $flags = 0 ] )"," int preg_last_error ( void )"," int preg_match_all ( string $pattern , string $subject [, array &$matches [, int $flags = PREG_PATTERN_ORDER [, int $offset = 0 ]]] )"," int preg_match ( string $pattern , string $subject [, array &$matches [, int $flags = 0 [, int $offset = 0 ]]] )"," string preg_quote ( string $str [, string $delimiter = NULL ] )"," mixed preg_replace_callback ( mixed $pattern , callable $callback , mixed $subject [, int $limit = -1 [, int &$count ]] )"," mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )"," array preg_split ( string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]] )"," mixed prev ( array &$array )"," mixed print_r ( mixed $expression [, bool $return = false ] )"," int print ( string $arg )"," void printer_abort ( resource $printer_handle )"," void printer_close ( resource $printer_handle )"," resource printer_create_brush ( int $style , string $color )"," void printer_create_dc ( resource $printer_handle )"," resource printer_create_font ( string $face , int $height , int $width , int $font_weight , bool $italic , bool $underline , bool $strikeout , int $orientation )"," resource printer_create_pen ( int $style , int $width , string $color )"," void printer_delete_brush ( resource $brush_handle )"," bool printer_delete_dc ( resource $printer_handle )"," void printer_delete_font ( resource $font_handle )"," void printer_delete_pen ( resource $pen_handle )"," bool printer_draw_bmp ( resource $printer_handle , string $filename , int $x , int $y [, int $width ], int $height )"," void printer_draw_chord ( resource $printer_handle , int $rec_x , int $rec_y , int $rec_x1 , int $rec_y1 , int $rad_x , int $rad_y , int $rad_x1 , int $rad_y1 )"," void printer_draw_elipse ( resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y )"," void printer_draw_line ( resource $printer_handle , int $from_x , int $from_y , int $to_x , int $to_y )"," void printer_draw_pie ( resource $printer_handle , int $rec_x , int $rec_y , int $rec_x1 , int $rec_y1 , int $rad1_x , int $rad1_y , int $rad2_x , int $rad2_y )"," void printer_draw_rectangle ( resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y )"," void printer_draw_roundrect ( resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y , int $width , int $height )"," void printer_draw_text ( resource $printer_handle , string $text , int $x , int $y )"," bool printer_end_doc ( resource $printer_handle )"," bool printer_end_page ( resource $printer_handle )"," mixed printer_get_option ( resource $printer_handle , string $option )"," array printer_list ( int $enumtype [, string $name [, int $level ]] )"," int printer_logical_fontheight ( resource $printer_handle , int $height )"," resource printer_open ([ string $printername ] )"," void printer_select_brush ( resource $printer_handle , resource $brush_handle )"," void printer_select_font ( resource $printer_handle , resource $font_handle )"," void printer_select_pen ( resource $printer_handle , resource $pen_handle )"," bool printer_set_option ( resource $printer_handle , int $option , mixed $value )"," bool printer_start_doc ( resource $printer_handle [, string $document ] )"," bool printer_start_page ( resource $printer_handle )"," bool printer_write ( resource $printer_handle , string $content )"," int printf ( string $format [, mixed $args [, mixed $... ]] )"," int proc_close ( resource $process )"," array proc_get_status ( resource $process )"," bool proc_nice ( int $increment )"," resource proc_open ( string $cmd , array $descriptorspec , array &$pipes [, string $cwd [, array $env [, array $other_options ]]] )"," bool proc_terminate ( resource $process [, int $signal = 15 ] )"," bool property_exists ( mixed $class , string $property )"," int ps_add_bookmark ( resource $psdoc , string $text [, int $parent = 0 [, int $open = 0 ]] )"," bool ps_add_launchlink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename )"," bool ps_add_locallink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , int $page , string $dest )"," bool ps_add_note ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open )"," bool ps_add_pdflink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename , int $page , string $dest )"," bool ps_add_weblink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $url )"," bool ps_arc ( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta )"," bool ps_arcn ( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta )"," bool ps_begin_page ( resource $psdoc , float $width , float $height )"," int ps_begin_pattern ( resource $psdoc , float $width , float $height , float $xstep , float $ystep , int $painttype )"," int ps_begin_template ( resource $psdoc , float $width , float $height )"," bool ps_circle ( resource $psdoc , float $x , float $y , float $radius )"," bool ps_clip ( resource $psdoc )"," void ps_close_image ( resource $psdoc , int $imageid )"," bool ps_close ( resource $psdoc )"," bool ps_closepath_stroke ( resource $psdoc )"," bool ps_closepath ( resource $psdoc )"," bool ps_continue_text ( resource $psdoc , string $text )"," bool ps_curveto ( resource $psdoc , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )"," bool ps_delete ( resource $psdoc )"," bool ps_end_page ( resource $psdoc )"," bool ps_end_pattern ( resource $psdoc )"," bool ps_end_template ( resource $psdoc )"," bool ps_fill_stroke ( resource $psdoc )"," bool ps_fill ( resource $psdoc )"," int ps_findfont ( resource $psdoc , string $fontname , string $encoding [, bool $embed = false ] )"," string ps_get_buffer ( resource $psdoc )"," string ps_get_parameter ( resource $psdoc , string $name [, float $modifier ] )"," float ps_get_value ( resource $psdoc , string $name [, float $modifier ] )"," array ps_hyphenate ( resource $psdoc , string $text )"," bool ps_include_file ( resource $psdoc , string $file )"," bool ps_lineto ( resource $psdoc , float $x , float $y )"," int ps_makespotcolor ( resource $psdoc , string $name [, int $reserved = 0 ] )"," bool ps_moveto ( resource $psdoc , float $x , float $y )"," resource ps_new ( void )"," bool ps_open_file ( resource $psdoc [, string $filename ] )"," int ps_open_image_file ( resource $psdoc , string $type , string $filename [, string $stringparam [, int $intparam = 0 ]] )"," int ps_open_image ( resource $psdoc , string $type , string $source , string $data , int $lenght , int $width , int $height , int $components , int $bpc , string $params )"," int ps_open_memory_image ( resource $psdoc , int $gd )"," bool ps_place_image ( resource $psdoc , int $imageid , float $x , float $y , float $scale )"," bool ps_rect ( resource $psdoc , float $x , float $y , float $width , float $height )"," bool ps_restore ( resource $psdoc )"," bool ps_rotate ( resource $psdoc , float $rot )"," bool ps_save ( resource $psdoc )"," bool ps_scale ( resource $psdoc , float $x , float $y )"," bool ps_set_border_color ( resource $psdoc , float $red , float $green , float $blue )"," bool ps_set_border_dash ( resource $psdoc , float $black , float $white )"," bool ps_set_border_style ( resource $psdoc , string $style , float $width )"," bool ps_set_info ( resource $p , string $key , string $val )"," bool ps_set_parameter ( resource $psdoc , string $name , string $value )"," bool ps_set_text_pos ( resource $psdoc , float $x , float $y )"," bool ps_set_value ( resource $psdoc , string $name , float $value )"," bool ps_setcolor ( resource $psdoc , string $type , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 )"," bool ps_setdash ( resource $psdoc , float $on , float $off )"," bool ps_setflat ( resource $psdoc , float $value )"," bool ps_setfont ( resource $psdoc , int $fontid , float $size )"," bool ps_setgray ( resource $psdoc , float $gray )"," bool ps_setlinecap ( resource $psdoc , int $type )"," bool ps_setlinejoin ( resource $psdoc , int $type )"," bool ps_setlinewidth ( resource $psdoc , float $width )"," bool ps_setmiterlimit ( resource $psdoc , float $value )"," bool ps_setoverprintmode ( resource $psdoc , int $mode )"," bool ps_setpolydash ( resource $psdoc , float $arr )"," int ps_shading_pattern ( resource $psdoc , int $shadingid , string $optlist )"," int ps_shading ( resource $psdoc , string $type , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist )"," bool ps_shfill ( resource $psdoc , int $shadingid )"," int ps_show_boxed ( resource $psdoc , string $text , float $left , float $bottom , float $width , float $height , string $hmode [, string $feature ] )"," bool ps_show_xy ( resource $psdoc , string $text , float $x , float $y )"," bool ps_show_xy2 ( resource $psdoc , string $text , int $len , float $xcoor , float $ycoor )"," bool ps_show ( resource $psdoc , string $text )"," bool ps_show2 ( resource $psdoc , string $text , int $len )"," array ps_string_geometry ( resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]] )"," float ps_stringwidth ( resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]] )"," bool ps_stroke ( resource $psdoc )"," string ps_symbol_name ( resource $psdoc , int $ord [, int $fontid = 0 ] )"," float ps_symbol_width ( resource $psdoc , int $ord [, int $fontid = 0 [, float $size = 0.0 ]] )"," bool ps_symbol ( resource $psdoc , int $ord )"," bool ps_translate ( resource $psdoc , float $x , float $y )"," bool pspell_add_to_personal ( int $dictionary_link , string $word )"," bool pspell_add_to_session ( int $dictionary_link , string $word )"," bool pspell_check ( int $dictionary_link , string $word )"," bool pspell_clear_session ( int $dictionary_link )"," int pspell_config_create ( string $language [, string $spelling [, string $jargon [, string $encoding ]]] )"," bool pspell_config_data_dir ( int $conf , string $directory )"," bool pspell_config_dict_dir ( int $conf , string $directory )"," bool pspell_config_ignore ( int $dictionary_link , int $n )"," bool pspell_config_mode ( int $dictionary_link , int $mode )"," bool pspell_config_personal ( int $dictionary_link , string $file )"," bool pspell_config_repl ( int $dictionary_link , string $file )"," bool pspell_config_runtogether ( int $dictionary_link , bool $flag )"," bool pspell_config_save_repl ( int $dictionary_link , bool $flag )"," int pspell_new_config ( int $config )"," int pspell_new_personal ( string $personal , string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] )"," int pspell_new ( string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] )"," bool pspell_save_wordlist ( int $dictionary_link )"," bool pspell_store_replacement ( int $dictionary_link , string $misspelled , string $correct )"," array pspell_suggest ( int $dictionary_link , string $word )"," bool putenv ( string $setting )"," bool px_close ( resource $pxdoc )"," bool px_create_fp ( resource $pxdoc , resource $file , array $fielddesc )"," string px_date2string ( resource $pxdoc , int $value , string $format )"," bool px_delete_record ( resource $pxdoc , int $num )"," bool px_delete ( resource $pxdoc )"," array px_get_field ( resource $pxdoc , int $fieldno )"," array px_get_info ( resource $pxdoc )"," string px_get_parameter ( resource $pxdoc , string $name )"," array px_get_record ( resource $pxdoc , int $num [, int $mode = 0 ] )"," array px_get_schema ( resource $pxdoc [, int $mode = 0 ] )"," float px_get_value ( resource $pxdoc , string $name )"," int px_insert_record ( resource $pxdoc , array $data )"," resource px_new ( void )"," int px_numfields ( resource $pxdoc )"," int px_numrecords ( resource $pxdoc )"," bool px_open_fp ( resource $pxdoc , resource $file )"," bool px_put_record ( resource $pxdoc , array $record [, int $recpos = -1 ] )"," array px_retrieve_record ( resource $pxdoc , int $num [, int $mode = 0 ] )"," bool px_set_blob_file ( resource $pxdoc , string $filename )"," bool px_set_parameter ( resource $pxdoc , string $name , string $value )"," void px_set_tablename ( resource $pxdoc , string $name )"," bool px_set_targetencoding ( resource $pxdoc , string $encoding )"," bool px_set_value ( resource $pxdoc , string $name , float $value )"," string px_timestamp2string ( resource $pxdoc , float $value , string $format )"," bool px_update_record ( resource $pxdoc , array $data , int $num )"," string qdom_error ( void )"," QDomDocument qdom_tree ( string $doc )"," string quoted_printable_decode ( string $str )"," string quoted_printable_encode ( string $str )"," string quotemeta ( string $str )"," float rad2deg ( float $number )"," resource radius_acct_open ( void )"," bool radius_add_server ( resource $radius_handle , string $hostname , int $port , string $secret , int $timeout , int $max_tries )"," resource radius_auth_open ( void )"," bool radius_close ( resource $radius_handle )"," bool radius_config ( resource $radius_handle , string $file )"," bool radius_create_request ( resource $radius_handle , int $type )"," string radius_cvt_addr ( string $data )"," int radius_cvt_int ( string $data )"," string radius_cvt_string ( string $data )"," string radius_demangle_mppe_key ( resource $radius_handle , string $mangled )"," string radius_demangle ( resource $radius_handle , string $mangled )"," mixed radius_get_attr ( resource $radius_handle )"," array radius_get_vendor_attr ( string $data )"," bool radius_put_addr ( resource $radius_handle , int $type , string $addr )"," bool radius_put_attr ( resource $radius_handle , int $type , string $value )"," bool radius_put_int ( resource $radius_handle , int $type , int $value )"," bool radius_put_string ( resource $radius_handle , int $type , string $value )"," bool radius_put_vendor_addr ( resource $radius_handle , int $vendor , int $type , string $addr )"," bool radius_put_vendor_attr ( resource $radius_handle , int $vendor , int $type , string $value )"," bool radius_put_vendor_int ( resource $radius_handle , int $vendor , int $type , int $value )"," bool radius_put_vendor_string ( resource $radius_handle , int $vendor , int $type , string $value )"," string radius_request_authenticator ( resource $radius_handle )"," int radius_send_request ( resource $radius_handle )"," string radius_server_secret ( resource $radius_handle )"," string radius_strerror ( resource $radius_handle )"," int rand ( void )"," array range ( mixed $start , mixed $limit [, number $step = 1 ] )"," string rar_wrapper_cache_stats ( void )"," string rawurldecode ( string $str )"," string rawurlencode ( string $str )"," string readdir ([ resource $dir_handle ] )"," int readfile ( string $filename [, bool $use_include_path = false [, resource $context ]] )"," int readgzfile ( string $filename [, int $use_include_path = 0 ] )"," bool readline_add_history ( string $line )"," bool readline_callback_handler_install ( string $prompt , callable $callback )"," bool readline_callback_handler_remove ( void )"," void readline_callback_read_char ( void )"," bool readline_clear_history ( void )"," bool readline_completion_function ( callable $function )"," mixed readline_info ([ string $varname [, string $newvalue ]] )"," array readline_list_history ( void )"," void readline_on_new_line ( void )"," bool readline_read_history ([ string $filename ] )"," void readline_redisplay ( void )"," bool readline_write_history ([ string $filename ] )"," string readline ([ string $prompt ] )"," string readlink ( string $path )"," array realpath_cache_get ( void )"," int realpath_cache_size ( void )"," string realpath ( string $path )"," bool recode_file ( string $request , resource $input , resource $output )"," string recode_string ( string $request , string $string )"," void register_shutdown_function ( callable $callback [, mixed $parameter [, mixed $... ]] )"," bool register_tick_function ( callable $function [, mixed $arg [, mixed $... ]] )"," bool rename_function ( string $original_name , string $new_name )"," bool rename ( string $oldname , string $newname [, resource $context ] )"," mixed reset ( array &$array )"," bool restore_error_handler ( void )"," bool restore_exception_handler ( void )"," void restore_include_path ( void )"," bool rewind ( resource $handle )"," void rewinddir ([ resource $dir_handle ] )"," bool rmdir ( string $dirname [, resource $context ] )"," float round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] )"," bool rpm_close ( resource $rpmr )"," mixed rpm_get_tag ( resource $rpmr , int $tagnum )"," bool rpm_is_valid ( string $filename )"," resource rpm_open ( string $filename )"," string rpm_version ( void )"," bool rrd_create ( string $filename , array $options )"," string rrd_error ( void )"," array rrd_fetch ( string $filename , array $options )"," int rrd_first ( string $file [, int $raaindex = 0 ] )"," array rrd_graph ( string $filename , array $options )"," array rrd_info ( string $filename )"," int rrd_last ( string $filename )"," array rrd_lastupdate ( string $filename )"," bool rrd_restore ( string $xml_file , string $rrd_file [, array $options ] )"," bool rrd_tune ( string $filename , array $options )"," bool rrd_update ( string $filename , array $options )"," string rrd_version ( void )"," array rrd_xport ( array $options )"," bool rsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )"," string rtrim ( string $str [, string $charlist ] )"," bool runkit_class_adopt ( string $classname , string $parentname )"," bool runkit_class_emancipate ( string $classname )"," bool runkit_constant_add ( string $constname , mixed $value )"," bool runkit_constant_redefine ( string $constname , mixed $newvalue )"," bool runkit_constant_remove ( string $constname )"," bool runkit_function_add ( string $funcname , string $arglist , string $code )"," bool runkit_function_copy ( string $funcname , string $targetname )"," bool runkit_function_redefine ( string $funcname , string $arglist , string $code )"," bool runkit_function_remove ( string $funcname )"," bool runkit_function_rename ( string $funcname , string $newname )"," bool runkit_import ( string $filename [, int $flags = RUNKIT_IMPORT_CLASS_METHODS ] )"," bool runkit_lint_file ( string $filename )"," bool runkit_lint ( string $code )"," bool runkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC ] )"," bool runkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] )"," bool runkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC ] )"," bool runkit_method_remove ( string $classname , string $methodname )"," bool runkit_method_rename ( string $classname , string $methodname , string $newname )"," bool runkit_return_value_used ( void )"," mixed runkit_sandbox_output_handler ( object $sandbox [, mixed $callback ] )"," array runkit_superglobals ( void )"," array scandir ( string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context ]] )"," bool sem_acquire ( resource $sem_identifier )"," resource sem_get ( int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1 ]]] )"," bool sem_release ( resource $sem_identifier )"," bool sem_remove ( resource $sem_identifier )"," string serialize ( mixed $value )"," int session_cache_expire ([ string $new_cache_expire ] )"," string session_cache_limiter ([ string $cache_limiter ] )"," bool session_decode ( string $data )"," bool session_destroy ( void )"," string session_encode ( void )"," array session_get_cookie_params ( void )"," string session_id ([ string $id ] )"," bool session_is_registered ( string $name )"," string session_module_name ([ string $module ] )"," string session_name ([ string $name ] )"," bool session_pgsql_add_error ( int $error_level [, string $error_message ] )"," array session_pgsql_get_error ([ bool $with_error_message = false ] )"," string session_pgsql_get_field ( void )"," bool session_pgsql_reset ( void )"," bool session_pgsql_set_field ( string $value )"," array session_pgsql_status ( void )"," bool session_regenerate_id ([ bool $delete_old_session = false ] )"," void session_register_shutdown ( void )"," bool session_register ( mixed $name [, mixed $... ] )"," string session_save_path ([ string $path ] )"," void session_set_cookie_params ( int $lifetime [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]] )"," bool session_set_save_handler ( callable $open , callable $close , callable $read , callable $write , callable $destroy , callable $gc )"," bool session_start ( void )"," int session_status ( void )"," bool session_unregister ( string $name )"," void session_unset ( void )"," void session_write_close ( void )"," mixed set_error_handler ( callable $error_handler [, int $error_types = E_ALL | E_STRICT ] )"," callable set_exception_handler ( callable $exception_handler )"," string set_include_path ( string $new_include_path )"," bool set_magic_quotes_runtime ( bool $new_setting )"," void set_time_limit ( int $seconds )"," bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] )"," string setlocale ( int $category , string $locale [, string $... ] )"," void setproctitle ( string $title )"," bool setrawcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] )"," bool setthreadtitle ( string $title )"," bool settype ( mixed &$var , string $type )"," string sha1_file ( string $filename [, bool $raw_output = false ] )"," string sha1 ( string $str [, bool $raw_output = false ] )"," string shell_exec ( string $cmd )"," resource shm_attach ( int $key [, int $memsize [, int $perm = 0666 ]] )"," bool shm_detach ( resource $shm_identifier )"," mixed shm_get_var ( resource $shm_identifier , int $variable_key )"," bool shm_has_var ( resource $shm_identifier , int $variable_key )"," bool shm_put_var ( resource $shm_identifier , int $variable_key , mixed $variable )"," bool shm_remove_var ( resource $shm_identifier , int $variable_key )"," bool shm_remove ( resource $shm_identifier )"," void shmop_close ( int $shmid )"," bool shmop_delete ( int $shmid )"," int shmop_open ( int $key , string $flags , int $mode , int $size )"," string shmop_read ( int $shmid , int $start , int $count )"," int shmop_size ( int $shmid )"," int shmop_write ( int $shmid , string $data , int $offset )"," bool shuffle ( array &$array )"," string nthmac ( string $clent , string $data )"," int similar_text ( string $first , string $second [, float &$percent ] )"," SimpleXMLElement simplexml_import_dom ( DOMNode $node [, string $class_name = \"SimpleXMLElement\" ] )"," SimpleXMLElement simplexml_load_file ( string $filename [, string $class_name = \"SimpleXMLElement\" [, int $options = 0 [, string $ns = \"\" [, bool $is_prefix = false ]]]] )"," SimpleXMLElement simplexml_load_string ( string $data [, string $class_name = \"SimpleXMLElement\" [, int $options = 0 [, string $ns = \"\" [, bool $is_prefix = false ]]]] )"," float sin ( float $arg )"," float sinh ( float $arg )"," int sleep ( int $seconds )"," bool snmp_get_quick_print ( void )"," int snmp_get_valueretrieval ( void )"," bool snmp_read_mib ( string $filename )"," bool snmp_set_enum_print ( int $enum_print )"," void snmp_set_oid_numeric_print ( int $oid_format )"," bool snmp_set_oid_output_format ( int $oid_format = SNMP_OID_OUTPUT_MODULE )"," bool snmp_set_quick_print ( bool $quick_print )"," bool snmp_set_valueretrieval ( int $method = SNMP_VALUE_LIBRARY )"," string snmp2_get ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )"," string snmp2_getnext ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )"," array snmp2_real_walk ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )"," bool snmp2_set ( string $host , string $community , string $object_id , string $type , string $value [, string $timeout = 1000000 [, string $retries = 5 ]] )"," array snmp2_walk ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )"," string snmp3_get ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )"," string snmp3_getnext ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )"," array snmp3_real_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )"," bool snmp3_set ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id , string $type , string $value [, int $timeout = 1000000 [, int $retries = 5 ]] )"," array snmp3_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )"," string snmpget ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )"," string snmpgetnext ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )"," array snmprealwalk ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )"," bool snmpset ( string $host , string $community , string $object_id , string $type , mixed $value [, int $timeout = 1000000 [, int $retries = 5 ]] )"," array snmpwalk ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )"," array snmpwalkoid ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )"," resource socket_accept ( resource $socket )"," bool socket_bind ( resource $socket , string $address [, int $port = 0 ] )"," void socket_clear_error ([ resource $socket ] )"," void socket_close ( resource $socket )"," bool socket_connect ( resource $socket , string $address [, int $port = 0 ] )"," resource socket_create_listen ( int $port [, int $backlog = 128 ] )"," bool socket_create_pair ( int $domain , int $type , int $protocol , array &$fd )"," resource socket_create ( int $domain , int $type , int $protocol )"," mixed socket_get_option ( resource $socket , int $level , int $optname )"," bool socket_getpeername ( resource $socket , string &$address [, int &$port ] )"," bool socket_getsockname ( resource $socket , string &$addr [, int &$port ] )"," void socket_import_stream ( resource $stream )"," int socket_last_error ([ resource $socket ] )"," bool socket_listen ( resource $socket [, int $backlog = 0 ] )"," string socket_read ( resource $socket , int $length [, int $type = PHP_BINARY_READ ] )"," int socket_recv ( resource $socket , string &$buf , int $len , int $flags )"," int socket_recvfrom ( resource $socket , string &$buf , int $len , int $flags , string &$name [, int &$port ] )"," int socket_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] )"," int socket_send ( resource $socket , string $buf , int $len , int $flags )"," int socket_sendto ( resource $socket , string $buf , int $len , int $flags , string $addr [, int $port = 0 ] )"," bool socket_set_block ( resource $socket )"," bool socket_set_nonblock ( resource $socket )"," bool socket_set_option ( resource $socket , int $level , int $optname , mixed $optval )"," bool socket_shutdown ( resource $socket [, int $how = 2 ] )"," string socket_strerror ( int $errno )"," int socket_write ( resource $socket , string $buffer [, int $length = 0 ] )"," string solr_get_version ( void )"," bool sort ( array &$array [, int $sort_flags = SORT_REGULAR ] )"," string soundex ( string $str )"," void spl_autoload_call ( string $class_name )"," string spl_autoload_extensions ([ string $file_extensions ] )"," array spl_autoload_functions ( void )"," bool spl_autoload_register ([ callable $autoload_function [, bool $throw = true [, bool $prepend = false ]]] )"," bool spl_autoload_unregister ( mixed $autoload_function )"," void spl_autoload ( string $class_name [, string $file_extensions = spl_autoload_extensions() ] )"," array spl_classes ( void )"," string spl_object_hash ( object $obj )"," array split ( string $pattern , string $string [, int $limit = -1 ] )"," array spliti ( string $pattern , string $string [, int $limit = -1 ] )"," string sprintf ( string $format [, mixed $args [, mixed $... ]] )"," string sql_regcase ( string $string )"," array sqlite_array_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )"," void sqlite_busy_timeout ( resource $dbhandle , int $milliseconds )"," int sqlite_changes ( resource $dbhandle )"," void sqlite_close ( resource $dbhandle )"," mixed sqlite_column ( resource $result , mixed $index_or_name [, bool $decode_binary = true ] )"," void sqlite_create_aggregate ( resource $dbhandle , string $function_name , callable $step_func , callable $finalize_func [, int $num_args = -1 ] )"," void sqlite_create_function ( resource $dbhandle , string $function_name , callable $callback [, int $num_args = -1 ] )"," array sqlite_current ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )"," string sqlite_error_string ( int $error_code )"," string sqlite_escape_string ( string $item )"," bool sqlite_exec ( resource $dbhandle , string $query [, string &$error_msg ] )"," SQLiteDatabase sqlite_factory ( string $filename [, int $mode = 0666 [, string &$error_message ]] )"," array sqlite_fetch_all ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )"," array sqlite_fetch_array ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )"," array sqlite_fetch_column_types ( string $table_name , resource $dbhandle [, int $result_type = SQLITE_ASSOC ] )"," object sqlite_fetch_object ( resource $result [, string $class_name [, array $ctor_params [, bool $decode_binary = true ]]] )"," string sqlite_fetch_single ( resource $result [, bool $decode_binary = true ] )"," string sqlite_field_name ( resource $result , int $field_index )"," bool sqlite_has_more ( resource $result )"," bool sqlite_has_prev ( resource $result )"," int sqlite_key ( resource $result )"," int sqlite_last_error ( resource $dbhandle )"," int sqlite_last_insert_rowid ( resource $dbhandle )"," string sqlite_libencoding ( void )"," string sqlite_libversion ( void )"," bool sqlite_next ( resource $result )"," int sqlite_num_fields ( resource $result )"," int sqlite_num_rows ( resource $result )"," resource sqlite_open ( string $filename [, int $mode = 0666 [, string &$error_message ]] )"," resource sqlite_popen ( string $filename [, int $mode = 0666 [, string &$error_message ]] )"," bool sqlite_prev ( resource $result )"," resource sqlite_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] )"," bool sqlite_rewind ( resource $result )"," bool sqlite_seek ( resource $result , int $rownum )"," array sqlite_single_query ( resource $db , string $query [, bool $first_row_only [, bool $decode_binary ]] )"," string sqlite_udf_decode_binary ( string $data )"," string sqlite_udf_encode_binary ( string $data )"," resource sqlite_unbuffered_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] )"," bool sqlite_valid ( resource $result )"," bool sqlsrv_begin_transaction ( resource $conn )"," bool sqlsrv_cancel ( resource $stmt )"," array sqlsrv_client_info ( resource $conn )"," bool sqlsrv_close ( resource $conn )"," bool sqlsrv_commit ( resource $conn )"," bool sqlsrv_configure ( string $setting , mixed $value )"," resource sqlsrv_connect ( string $serverName [, array $connectionInfo ] )"," mixed sqlsrv_errors ([ int $errorsOrWarnings ] )"," bool sqlsrv_execute ( resource $stmt )"," array sqlsrv_fetch_array ( resource $stmt [, int $fetchType [, int $row [, int $offset ]]] )"," mixed sqlsrv_fetch_object ( resource $stmt [, string $className [, array $ctorParams [, int $row [, int $offset ]]]] )"," mixed sqlsrv_fetch ( resource $stmt [, int $row [, int $offset ]] )"," mixed sqlsrv_field_metadata ( resource $stmt )"," bool sqlsrv_free_stmt ( resource $stmt )"," mixed sqlsrv_get_config ( string $setting )"," mixed sqlsrv_get_field ( resource $stmt , int $fieldIndex [, int $getAsType ] )"," bool sqlsrv_has_rows ( resource $stmt )"," mixed sqlsrv_next_result ( resource $stmt )"," mixed sqlsrv_num_fields ( resource $stmt )"," mixed sqlsrv_num_rows ( resource $stmt )"," mixed sqlsrv_prepare ( resource $conn , string $sql [, array $params [, array $options ]] )"," mixed sqlsrv_query ( resource $conn , string $sql [, array $params [, array $options ]] )"," bool sqlsrv_rollback ( resource $conn )"," int sqlsrv_rows_affected ( resource $stmt )"," bool sqlsrv_send_stream_data ( resource $stmt )"," array sqlsrv_server_info ( resource $conn )"," float sqrt ( float $arg )"," void srand ([ int $seed ] )"," mixed sscanf ( string $str , string $format [, mixed &$... ] )"," int ssdeep_fuzzy_compare ( string $signature1 , string $signature2 )"," string ssdeep_fuzzy_hash_filename ( string $file_name )"," string ssdeep_fuzzy_hash ( string $to_hash )"," bool ssh2_auth_hostbased_file ( resource $session , string $username , string $hostname , string $pubkeyfile , string $privkeyfile [, string $passphrase [, string $local_username ]] )"," mixed ssh2_auth_none ( resource $session , string $username )"," bool ssh2_auth_password ( resource $session , string $username , string $password )"," bool ssh2_auth_pubkey_file ( resource $session , string $username , string $pubkeyfile , string $privkeyfile [, string $passphrase ] )"," resource ssh2_connect ( string $host [, int $port = 22 [, array $methods [, array $callbacks ]]] )"," resource ssh2_exec ( resource $session , string $command [, string $pty [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] )"," resource ssh2_fetch_stream ( resource $channel , int $streamid )"," string ssh2_fingerprint ( resource $session [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX ] )"," array ssh2_methods_negotiated ( resource $session )"," bool ssh2_publickey_add ( resource $pkey , string $algoname , string $blob [, bool $overwrite = false [, array $attributes ]] )"," resource ssh2_publickey_init ( resource $session )"," array ssh2_publickey_list ( resource $pkey )"," bool ssh2_publickey_remove ( resource $pkey , string $algoname , string $blob )"," bool ssh2_scp_recv ( resource $session , string $remote_file , string $local_file )"," bool ssh2_scp_send ( resource $session , string $local_file , string $remote_file [, int $create_mode = 0644 ] )"," array ssh2_sftp_lstat ( resource $sftp , string $path )"," bool ssh2_sftp_mkdir ( resource $sftp , string $dirname [, int $mode = 0777 [, bool $recursive = false ]] )"," string ssh2_sftp_readlink ( resource $sftp , string $link )"," string ssh2_sftp_realpath ( resource $sftp , string $filename )"," bool ssh2_sftp_rename ( resource $sftp , string $from , string $to )"," bool ssh2_sftp_rmdir ( resource $sftp , string $dirname )"," array ssh2_sftp_stat ( resource $sftp , string $path )"," bool ssh2_sftp_symlink ( resource $sftp , string $target , string $link )"," bool ssh2_sftp_unlink ( resource $sftp , string $filename )"," resource ssh2_sftp ( resource $session )"," resource ssh2_shell ( resource $session [, string $term_type = \"vanilla\" [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] )"," resource ssh2_tunnel ( resource $session , string $host , int $port )"," array stat ( string $filename )"," float stats_absolute_deviation ( array $a )"," float stats_cdf_beta ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_binomial ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_cauchy ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_chisquare ( float $par1 , float $par2 , int $which )"," float stats_cdf_exponential ( float $par1 , float $par2 , int $which )"," float stats_cdf_f ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_gamma ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_laplace ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_logistic ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_negative_binomial ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_noncentral_chisquare ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_noncentral_f ( float $par1 , float $par2 , float $par3 , float $par4 , int $which )"," float stats_cdf_poisson ( float $par1 , float $par2 , int $which )"," float stats_cdf_t ( float $par1 , float $par2 , int $which )"," float stats_cdf_uniform ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_cdf_weibull ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_covariance ( array $a , array $b )"," float stats_den_uniform ( float $x , float $a , float $b )"," float stats_dens_beta ( float $x , float $a , float $b )"," float stats_dens_cauchy ( float $x , float $ave , float $stdev )"," float stats_dens_chisquare ( float $x , float $dfr )"," float stats_dens_exponential ( float $x , float $scale )"," float stats_dens_f ( float $x , float $dfr1 , float $dfr2 )"," float stats_dens_gamma ( float $x , float $shape , float $scale )"," float stats_dens_laplace ( float $x , float $ave , float $stdev )"," float stats_dens_logistic ( float $x , float $ave , float $stdev )"," float stats_dens_negative_binomial ( float $x , float $n , float $pi )"," float stats_dens_normal ( float $x , float $ave , float $stdev )"," float stats_dens_pmf_binomial ( float $x , float $n , float $pi )"," float stats_dens_pmf_hypergeometric ( float $n1 , float $n2 , float $N1 , float $N2 )"," float stats_dens_pmf_poisson ( float $x , float $lb )"," float stats_dens_t ( float $x , float $dfr )"," float stats_dens_weibull ( float $x , float $a , float $b )"," number stats_harmonic_mean ( array $a )"," float stats_kurtosis ( array $a )"," float stats_rand_gen_beta ( float $a , float $b )"," float stats_rand_gen_chisquare ( float $df )"," float stats_rand_gen_exponential ( float $av )"," float stats_rand_gen_f ( float $dfn , float $dfd )"," float stats_rand_gen_funiform ( float $low , float $high )"," float stats_rand_gen_gamma ( float $a , float $r )"," int stats_rand_gen_ibinomial_negative ( int $n , float $p )"," int stats_rand_gen_ibinomial ( int $n , float $pp )"," int stats_rand_gen_int ( void )"," int stats_rand_gen_ipoisson ( float $mu )"," int stats_rand_gen_iuniform ( int $low , int $high )"," float stats_rand_gen_noncenral_chisquare ( float $df , float $xnonc )"," float stats_rand_gen_noncentral_f ( float $dfn , float $dfd , float $xnonc )"," float stats_rand_gen_noncentral_t ( float $df , float $xnonc )"," float stats_rand_gen_normal ( float $av , float $sd )"," float stats_rand_gen_t ( float $df )"," array stats_rand_get_seeds ( void )"," array stats_rand_phrase_to_seeds ( string $phrase )"," float stats_rand_ranf ( void )"," void stats_rand_setall ( int $iseed1 , int $iseed2 )"," float stats_skew ( array $a )"," float stats_standard_deviation ( array $a [, bool $sample = false ] )"," float stats_stat_binomial_coef ( int $x , int $n )"," float stats_stat_correlation ( array $arr1 , array $arr2 )"," float stats_stat_gennch ( int $n )"," float stats_stat_independent_t ( array $arr1 , array $arr2 )"," float stats_stat_innerproduct ( array $arr1 , array $arr2 )"," float stats_stat_noncentral_t ( float $par1 , float $par2 , float $par3 , int $which )"," float stats_stat_paired_t ( array $arr1 , array $arr2 )"," float stats_stat_percentile ( float $df , float $xnonc )"," float stats_stat_powersum ( array $arr , float $power )"," float stats_variance ( array $a [, bool $sample = false ] )"," string stomp_connect_error ( void )"," string stomp_version ( void )"," array str_getcsv ( string $input [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\' ]]] )"," mixed str_ireplace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )"," string str_pad ( string $input , int $pad_length [, string $pad_string = \" \" [, int $pad_type = STR_PAD_RIGHT ]] )"," string str_repeat ( string $input , int $multiplier )"," mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )"," string str_rot13 ( string $str )"," string str_shuffle ( string $str )"," array str_split ( string $string [, int $split_length = 1 ] )"," mixed str_word_count ( string $string [, int $format = 0 [, string $charlist ]] )"," int strcasecmp ( string $str1 , string $str2 )"," int strcmp ( string $str1 , string $str2 )"," int strcoll ( string $str1 , string $str2 )"," int strcspn ( string $str1 , string $str2 [, int $start [, int $length ]] )"," void stream_bucket_append ( resource $brigade , resource $bucket )"," object stream_bucket_make_writeable ( resource $brigade )"," object stream_bucket_new ( resource $stream , string $buffer )"," void stream_bucket_prepend ( resource $brigade , resource $bucket )"," resource stream_context_create ([ array $options [, array $params ]] )"," resource stream_context_get_default ([ array $options ] )"," array stream_context_get_options ( resource $stream_or_context )"," array stream_context_get_params ( resource $stream_or_context )"," resource stream_context_set_default ( array $options )"," bool stream_context_set_option ( resource $stream_or_context , string $wrapper , string $option , mixed $value )"," bool stream_context_set_params ( resource $stream_or_context , array $params )"," int stream_copy_to_stream ( resource $source , resource $dest [, int $maxlength = -1 [, int $offset = 0 ]] )"," bool stream_encoding ( resource $stream [, string $encoding ] )"," resource stream_filter_append ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] )"," resource stream_filter_prepend ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] )"," bool stream_filter_register ( string $filtername , string $classname )"," bool stream_filter_remove ( resource $stream_filter )"," string stream_get_contents ( resource $handle [, int $maxlength = -1 [, int $offset = -1 ]] )"," array stream_get_filters ( void )"," string stream_get_line ( resource $handle , int $length [, string $ending ] )"," array stream_get_meta_data ( resource $stream )"," array stream_get_transports ( void )"," array stream_get_wrappers ( void )"," bool stream_is_local ( mixed $stream_or_url )"," void stream_notification_callback ( int $notification_code , int $severity , string $message , int $message_code , int $bytes_transferred , int $bytes_max )"," string stream_resolve_include_path ( string $filename )"," int stream_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] )"," bool stream_set_blocking ( resource $stream , int $mode )"," int stream_set_chunk_size ( resource $fp , int $chunk_size )"," int stream_set_read_buffer ( resource $stream , int $buffer )"," bool stream_set_timeout ( resource $stream , int $seconds [, int $microseconds = 0 ] )"," int stream_set_write_buffer ( resource $stream , int $buffer )"," resource stream_socket_accept ( resource $server_socket [, float $timeout = ini_get(\"default_socket_timeout\") [, string &$peername ]] )"," resource stream_socket_client ( string $remote_socket [, int &$errno [, string &$errstr [, float $timeout = ini_get(\"default_socket_timeout\") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context ]]]]] )"," mixed stream_socket_enable_crypto ( resource $stream , bool $enable [, int $crypto_type [, resource $session_stream ]] )"," string stream_socket_get_name ( resource $handle , bool $want_peer )"," array stream_socket_pair ( int $domain , int $type , int $protocol )"," string stream_socket_recvfrom ( resource $socket , int $length [, int $flags = 0 [, string &$address ]] )"," int stream_socket_sendto ( resource $socket , string $data [, int $flags = 0 [, string $address ]] )"," resource stream_socket_server ( string $local_socket [, int &$errno [, string &$errstr [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context ]]]] )"," bool stream_socket_shutdown ( resource $stream , int $how )"," bool stream_supports_lock ( resource $stream )"," bool stream_wrapper_register ( string $protocol , string $classname [, int $flags = 0 ] )"," bool stream_wrapper_restore ( string $protocol )"," bool stream_wrapper_unregister ( string $protocol )"," string strftime ( string $format [, int $timestamp = time() ] )"," string strip_tags ( string $str [, string $allowable_tags ] )"," string stripcslashes ( string $str )"," int stripos ( string $haystack , string $needle [, int $offset = 0 ] )"," string stripslashes ( string $str )"," string stristr ( string $haystack , mixed $needle [, bool $before_needle = false ] )"," int strlen ( string $string )"," int strnatcasecmp ( string $str1 , string $str2 )"," int strnatcmp ( string $str1 , string $str2 )"," int strncasecmp ( string $str1 , string $str2 , int $len )"," int strncmp ( string $str1 , string $str2 , int $len )"," string strpbrk ( string $haystack , string $char_list )"," int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )"," array strptime ( string $date , string $format )"," string strrchr ( string $haystack , mixed $needle )"," string strrev ( string $string )"," int strripos ( string $haystack , string $needle [, int $offset = 0 ] )"," int strrpos ( string $haystack , string $needle [, int $offset = 0 ] )"," int strspn ( string $subject , string $mask [, int $start [, int $length ]] )"," string strstr ( string $haystack , mixed $needle [, bool $before_needle = false ] )"," string strtok ( string $str , string $token )"," string strtolower ( string $str )"," int strtotime ( string $time [, int $now = time() ] )"," string strtoupper ( string $string )"," string strtr ( string $str , string $from , string $to )"," string strval ( mixed $var )"," int substr_compare ( string $main_str , string $str , int $offset [, int $length [, bool $case_insensitivity = false ]] )"," int substr_count ( string $haystack , string $needle [, int $offset = 0 [, int $length ]] )"," mixed substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] )"," string substr ( string $string , int $start [, int $length ] )"," bool svn_add ( string $path [, bool $recursive = true [, bool $force = false ]] )"," string svn_auth_get_parameter ( string $key )"," void svn_auth_set_parameter ( string $key , string $value )"," array svn_blame ( string $repository_url [, int $revision_no = SVN_REVISION_HEAD ] )"," string svn_cat ( string $repos_url [, int $revision_no ] )"," bool svn_checkout ( string $repos , string $targetpath [, int $revision [, int $flags = 0 ]] )"," bool svn_cleanup ( string $workingdir )"," string svn_client_version ( void )"," array svn_commit ( string $log , array $targets [, bool $dontrecurse = false ] )"," bool svn_delete ( string $path [, bool $force = false ] )"," array svn_diff ( string $path1 , int $rev1 , string $path2 , int $rev2 )"," bool svn_export ( string $frompath , string $topath [, bool $working_copy = true [, int $revision_no = -1 ]] )"," bool svn_fs_abort_txn ( resource $txn )"," resource svn_fs_apply_text ( resource $root , string $path )"," resource svn_fs_begin_txn2 ( resource $repos , int $rev )"," bool svn_fs_change_node_prop ( resource $root , string $path , string $name , string $value )"," int svn_fs_check_path ( resource $fsroot , string $path )"," bool svn_fs_contents_changed ( resource $root1 , string $path1 , resource $root2 , string $path2 )"," bool svn_fs_copy ( resource $from_root , string $from_path , resource $to_root , string $to_path )"," bool svn_fs_delete ( resource $root , string $path )"," array svn_fs_dir_entries ( resource $fsroot , string $path )"," resource svn_fs_file_contents ( resource $fsroot , string $path )"," int svn_fs_file_length ( resource $fsroot , string $path )"," bool svn_fs_is_dir ( resource $root , string $path )"," bool svn_fs_is_file ( resource $root , string $path )"," bool svn_fs_make_dir ( resource $root , string $path )"," bool svn_fs_make_file ( resource $root , string $path )"," int svn_fs_node_created_rev ( resource $fsroot , string $path )"," string svn_fs_node_prop ( resource $fsroot , string $path , string $propname )"," bool svn_fs_props_changed ( resource $root1 , string $path1 , resource $root2 , string $path2 )"," string svn_fs_revision_prop ( resource $fs , int $revnum , string $propname )"," resource svn_fs_revision_root ( resource $fs , int $revnum )"," resource svn_fs_txn_root ( resource $txn )"," int svn_fs_youngest_rev ( resource $fs )"," bool svn_import ( string $path , string $url , bool $nonrecursive )"," array svn_log ( string $repos_url [, int $start_revision [, int $end_revision [, int $limit = 0 [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY ]]]] )"," array svn_ls ( string $repos_url [, int $revision_no = SVN_REVISION_HEAD [, bool $recurse = false [, bool $peg = false ]]] )"," bool svn_mkdir ( string $path [, string $log_message ] )"," resource svn_repos_create ( string $path [, array $config [, array $fsconfig ]] )"," resource svn_repos_fs_begin_txn_for_commit ( resource $repos , int $rev , string $author , string $log_msg )"," int svn_repos_fs_commit_txn ( resource $txn )"," resource svn_repos_fs ( resource $repos )"," bool svn_repos_hotcopy ( string $repospath , string $destpath , bool $cleanlogs )"," resource svn_repos_open ( string $path )"," bool svn_repos_recover ( string $path )"," bool svn_revert ( string $path [, bool $recursive = false ] )"," array svn_status ( string $path [, int $flags = 0 ] )"," int svn_update ( string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = true ]] )"," void swf_actiongeturl ( string $url , string $target )"," void swf_actiongotoframe ( int $framenumber )"," void swf_actiongotolabel ( string $label )"," void swf_actionnextframe ( void )"," void swf_actionplay ( void )"," void swf_actionprevframe ( void )"," void swf_actionsettarget ( string $target )"," void swf_actionstop ( void )"," void swf_actiontogglequality ( void )"," void swf_actionwaitforframe ( int $framenumber , int $skipcount )"," void swf_addbuttonrecord ( int $states , int $shapeid , int $depth )"," void swf_addcolor ( float $r , float $g , float $b , float $a )"," void swf_closefile ([ int $return_file ] )"," void swf_definebitmap ( int $objid , string $image_name )"," void swf_definefont ( int $fontid , string $fontname )"," void swf_defineline ( int $objid , float $x1 , float $y1 , float $x2 , float $y2 , float $width )"," void swf_definepoly ( int $objid , array $coords , int $npoints , float $width )"," void swf_definerect ( int $objid , float $x1 , float $y1 , float $x2 , float $y2 , float $width )"," void swf_definetext ( int $objid , string $str , int $docenter )"," void swf_endbutton ( void )"," void swf_enddoaction ( void )"," void swf_endshape ( void )"," void swf_endsymbol ( void )"," void swf_fontsize ( float $size )"," void swf_fontslant ( float $slant )"," void swf_fonttracking ( float $tracking )"," array swf_getbitmapinfo ( int $bitmapid )"," array swf_getfontinfo ( void )"," int swf_getframe ( void )"," void swf_labelframe ( string $name )"," void swf_lookat ( float $view_x , float $view_y , float $view_z , float $reference_x , float $reference_y , float $reference_z , float $twist )"," void swf_modifyobject ( int $depth , int $how )"," void swf_mulcolor ( float $r , float $g , float $b , float $a )"," int swf_nextid ( void )"," void swf_oncondition ( int $transition )"," void swf_openfile ( string $filename , float $width , float $height , float $framerate , float $r , float $g , float $b )"," void swf_ortho ( float $xmin , float $xmax , float $ymin , float $ymax , float $zmin , float $zmax )"," void swf_ortho2 ( float $xmin , float $xmax , float $ymin , float $ymax )"," void swf_perspective ( float $fovy , float $aspect , float $near , float $far )"," void swf_placeobject ( int $objid , int $depth )"," void swf_polarview ( float $dist , float $azimuth , float $incidence , float $twist )"," void swf_popmatrix ( void )"," void swf_posround ( int $round )"," void swf_pushmatrix ( void )"," void swf_removeobject ( int $depth )"," void swf_rotate ( float $angle , string $axis )"," void swf_scale ( float $x , float $y , float $z )"," void swf_setfont ( int $fontid )"," void swf_setframe ( int $framenumber )"," void swf_shapearc ( float $x , float $y , float $r , float $ang1 , float $ang2 )"," void swf_shapecurveto ( float $x1 , float $y1 , float $x2 , float $y2 )"," void swf_shapecurveto3 ( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )"," void swf_shapefillbitmapclip ( int $bitmapid )"," void swf_shapefillbitmaptile ( int $bitmapid )"," void swf_shapefilloff ( void )"," void swf_shapefillsolid ( float $r , float $g , float $b , float $a )"," void swf_shapelinesolid ( float $r , float $g , float $b , float $a , float $width )"," void swf_shapelineto ( float $x , float $y )"," void swf_shapemoveto ( float $x , float $y )"," void swf_showframe ( void )"," void swf_startbutton ( int $objid , int $type )"," void swf_startdoaction ( void )"," void swf_startshape ( int $objid )"," void swf_startsymbol ( int $objid )"," float swf_textwidth ( string $str )"," void swf_translate ( float $x , float $y , float $z )"," void swf_viewport ( float $xmin , float $xmax , float $ymin , float $ymax )"," int sybase_affected_rows ([ resource $link_identifier ] )"," bool sybase_close ([ resource $link_identifier ] )"," resource sybase_connect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname [, bool $new = false ]]]]]] )"," bool sybase_data_seek ( resource $result_identifier , int $row_number )"," void sybase_deadlock_retry_count ( int $retry_count )"," array sybase_fetch_array ( resource $result )"," array sybase_fetch_assoc ( resource $result )"," object sybase_fetch_field ( resource $result [, int $field_offset = -1 ] )"," object sybase_fetch_object ( resource $result [, mixed $object ] )"," array sybase_fetch_row ( resource $result )"," bool sybase_field_seek ( resource $result , int $field_offset )"," bool sybase_free_result ( resource $result )"," string sybase_get_last_message ( void )"," void sybase_min_client_severity ( int $severity )"," void sybase_min_error_severity ( int $severity )"," void sybase_min_message_severity ( int $severity )"," void sybase_min_server_severity ( int $severity )"," int sybase_num_fields ( resource $result )"," int sybase_num_rows ( resource $result )"," resource sybase_pconnect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname ]]]]] )"," mixed sybase_query ( string $query [, resource $link_identifier ] )"," string sybase_result ( resource $result , int $row , mixed $field )"," bool sybase_select_db ( string $database_name [, resource $link_identifier ] )"," bool sybase_set_message_handler ( callable $handler [, resource $link_identifier ] )"," resource sybase_unbuffered_query ( string $query , resource $link_identifier [, bool $store_result ] )"," bool symlink ( string $target , string $link )"," string sys_get_temp_dir ( void )"," array sys_getloadavg ( void )"," bool syslog ( int $priority , string $message )"," string system ( string $command [, int &$return_var ] )"," ReturnType taint ( string &$string [, string $... ] )"," float tan ( float $arg )"," float tanh ( float $arg )"," bool tcpwrap_check ( string $daemon , string $address [, string $user [, bool $nodns = false ]] )"," string tempnam ( string $dir , string $prefix )"," string textdomain ( string $text_domain )"," int tidy_access_count ( tidy $object )"," int tidy_config_count ( tidy $object )"," int tidy_error_count ( tidy $object )"," string tidy_get_output ( tidy $object )"," void tidy_load_config ( string $filename , string $encoding )"," bool tidy_reset_config ( void )"," bool tidy_save_config ( string $filename )"," bool tidy_set_encoding ( string $encoding )"," bool tidy_setopt ( string $option , mixed $value )"," int tidy_warning_count ( tidy $object )"," mixed time_nanosleep ( int $seconds , int $nanoseconds )"," bool time_sleep_until ( float $timestamp )"," int time ( void )"," string timezone_name_from_abbr ( string $abbr [, int $gmtOffset = -1 [, int $isdst = -1 ]] )"," string timezone_version_get ( void )"," resource tmpfile ( void )"," array token_get_all ( string $source )"," string token_name ( int $token )"," bool touch ( string $filename [, int $time = time() [, int $atime ]] )"," array trader_acos ( array $real )"," array trader_ad ( array $high , array $low , array $close , array $volume )"," array trader_add ( array $real0 , array $real1 )"," array trader_adosc ( array $high , array $low , array $close , array $volume [, integer $fastPeriod [, integer $slowPeriod ]] )"," array trader_adx ( array $high , array $low , array $close [, integer $timePeriod ] )"," array trader_adxr ( array $high , array $low , array $close [, integer $timePeriod ] )"," array trader_apo ( array $real [, integer $fastPeriod [, integer $slowPeriod [, integer $mAType ]]] )"," array trader_aroon ( array $high , array $low [, integer $timePeriod ] )"," array trader_aroonosc ( array $high , array $low [, integer $timePeriod ] )"," array trader_asin ( array $real )"," array trader_atan ( array $real )"," array trader_atr ( array $high , array $low , array $close [, integer $timePeriod ] )"," array trader_avgprice ( array $open , array $high , array $low , array $close )"," array trader_bbands ( array $real [, integer $timePeriod [, float $nbDevUp [, float $nbDevDn [, integer $mAType ]]]] )"," array trader_beta ( array $real0 , array $real1 [, integer $timePeriod ] )"," array trader_bop ( array $open , array $high , array $low , array $close )"," array trader_cci ( array $high , array $low , array $close [, integer $timePeriod ] )"," array trader_cdl2crows ( array $open , array $high , array $low , array $close )"," array trader_cdl3blackcrows ( array $open , array $high , array $low , array $close )"," array trader_cdl3inside ( array $open , array $high , array $low , array $close )"," array trader_cdl3linestrike ( array $open , array $high , array $low , array $close )"," array trader_cdl3outside ( array $open , array $high , array $low , array $close )"," array trader_cdl3starsinsouth ( array $open , array $high , array $low , array $close )"," array trader_cdl3whitesoldiers ( array $open , array $high , array $low , array $close )"," array trader_cdlabandonedbaby ( array $open , array $high , array $low , array $close [, float $penetration ] )"," array trader_cdladvanceblock ( array $open , array $high , array $low , array $close )"," array trader_cdlbelthold ( array $open , array $high , array $low , array $close )"," array trader_cdlbreakaway ( array $open , array $high , array $low , array $close )"," array trader_cdlclosingmarubozu ( array $open , array $high , array $low , array $close )"," array trader_cdlconcealbabyswall ( array $open , array $high , array $low , array $close )"," array trader_cdlcounterattack ( array $open , array $high , array $low , array $close )"," array trader_cdldarkcloudcover ( array $open , array $high , array $low , array $close [, float $penetration ] )"," array trader_cdldoji ( array $open , array $high , array $low , array $close )"," array trader_cdldojistar ( array $open , array $high , array $low , array $close )"," array trader_cdldragonflydoji ( array $open , array $high , array $low , array $close )"," array trader_cdlengulfing ( array $open , array $high , array $low , array $close )"," array trader_cdleveningdojistar ( array $open , array $high , array $low , array $close [, float $penetration ] )"," array trader_cdleveningstar ( array $open , array $high , array $low , array $close [, float $penetration ] )"," array trader_cdlgapsidesidewhite ( array $open , array $high , array $low , array $close )"," array trader_cdlgravestonedoji ( array $open , array $high , array $low , array $close )"," array trader_cdlhammer ( array $open , array $high , array $low , array $close )"," array trader_cdlhangingman ( array $open , array $high , array $low , array $close )"," array trader_cdlharami ( array $open , array $high , array $low , array $close )"," array trader_cdlharamicross ( array $open , array $high , array $low , array $close )"," array trader_cdlhighwave ( array $open , array $high , array $low , array $close )"," array trader_cdlhikkake ( array $open , array $high , array $low , array $close )"," array trader_cdlhikkakemod ( array $open , array $high , array $low , array $close )"," array trader_cdlhomingpigeon ( array $open , array $high , array $low , array $close )"," array trader_cdlidentical3crows ( array $open , array $high , array $low , array $close )"," array trader_cdlinneck ( array $open , array $high , array $low , array $close )"," array trader_cdlinvertedhammer ( array $open , array $high , array $low , array $close )"," array trader_cdlkicking ( array $open , array $high , array $low , array $close )"," array trader_cdlkickingbylength ( array $open , array $high , array $low , array $close )"," array trader_cdlladderbottom ( array $open , array $high , array $low , array $close )"," array trader_cdllongleggeddoji ( array $open , array $high , array $low , array $close )"," array trader_cdllongline ( array $open , array $high , array $low , array $close )"," array trader_cdlmarubozu ( array $open , array $high , array $low , array $close )"," array trader_cdlmatchinglow ( array $open , array $high , array $low , array $close )"," array trader_cdlmathold ( array $open , array $high , array $low , array $close [, float $penetration ] )"," array trader_cdlmorningdojistar ( array $open , array $high , array $low , array $close [, float $penetration ] )"," array trader_cdlmorningstar ( array $open , array $high , array $low , array $close [, float $penetration ] )"," array trader_cdlonneck ( array $open , array $high , array $low , array $close )"," array trader_cdlpiercing ( array $open , array $high , array $low , array $close )"," array trader_cdlrickshawman ( array $open , array $high , array $low , array $close )"," array trader_cdlrisefall3methods ( array $open , array $high , array $low , array $close )"," array trader_cdlseparatinglines ( array $open , array $high , array $low , array $close )"," array trader_cdlshootingstar ( array $open , array $high , array $low , array $close )"," array trader_cdlshortline ( array $open , array $high , array $low , array $close )"," array trader_cdlspinningtop ( array $open , array $high , array $low , array $close )"," array trader_cdlstalledpattern ( array $open , array $high , array $low , array $close )"," array trader_cdlsticksandwich ( array $open , array $high , array $low , array $close )"," array trader_cdltakuri ( array $open , array $high , array $low , array $close )"," array trader_cdltasukigap ( array $open , array $high , array $low , array $close )"," array trader_cdlthrusting ( array $open , array $high , array $low , array $close )"," array trader_cdltristar ( array $open , array $high , array $low , array $close )"," array trader_cdlunique3river ( array $open , array $high , array $low , array $close )"," array trader_cdlupsidegap2crows ( array $open , array $high , array $low , array $close )"," array trader_cdlxsidegap3methods ( array $open , array $high , array $low , array $close )"," array trader_ceil ( array $real )"," array trader_cmo ( array $real [, integer $timePeriod ] )"," array trader_correl ( array $real0 , array $real1 [, integer $timePeriod ] )"," array trader_cos ( array $real )"," array trader_cosh ( array $real )"," array trader_dema ( array $real [, integer $timePeriod ] )"," array trader_div ( array $real0 , array $real1 )"," array trader_dx ( array $high , array $low , array $close [, integer $timePeriod ] )"," array trader_ema ( array $real [, integer $timePeriod ] )"," array trader_exp ( array $real )"," array trader_floor ( array $real )"," array trader_ht_dcperiod ( array $real )"," array trader_ht_dcphase ( array $real )"," array trader_ht_phasor ( array $real )"," array trader_ht_sine ( array $real )"," array trader_ht_trendline ( array $real )"," array trader_ht_trendmode ( array $real )"," array trader_kama ( array $real [, integer $timePeriod ] )"," array trader_linearreg_angle ( array $real [, integer $timePeriod ] )"," array trader_linearreg_intercept ( array $real [, integer $timePeriod ] )"," array trader_linearreg_slope ( array $real [, integer $timePeriod ] )"," array trader_linearreg ( array $real [, integer $timePeriod ] )"," array trader_ln ( array $real )"," array trader_log10 ( array $real )"," array trader_ma ( array $real [, integer $timePeriod [, integer $mAType ]] )"," array trader_macd ( array $real [, integer $fastPeriod [, integer $slowPeriod [, integer $signalPeriod ]]] )"," array trader_macdext ( array $real [, integer $fastPeriod [, integer $fastMAType [, integer $slowPeriod [, integer $slowMAType [, integer $signalPeriod [, integer $signalMAType ]]]]]] )"," array trader_macdfix ( array $real [, integer $signalPeriod ] )"," array trader_mama ( array $real [, float $fastLimit [, float $slowLimit ]] )"," array trader_mavp ( array $real , array $periods [, integer $minPeriod [, integer $maxPeriod [, integer $mAType ]]] )"," array trader_max ( array $real [, integer $timePeriod ] )"," array trader_maxindex ( array $real [, integer $timePeriod ] )"," array trader_medprice ( array $high , array $low )"," array trader_mfi ( array $high , array $low , array $close , array $volume [, integer $timePeriod ] )"," array trader_midpoint ( array $real [, integer $timePeriod ] )"," array trader_midprice ( array $high , array $low [, integer $timePeriod ] )"," array trader_min ( array $real [, integer $timePeriod ] )"," array trader_minindex ( array $real [, integer $timePeriod ] )"," array trader_minmax ( array $real [, integer $timePeriod ] )"," array trader_minmaxindex ( array $real [, integer $timePeriod ] )"," array trader_minus_di ( array $high , array $low , array $close [, integer $timePeriod ] )"," array trader_minus_dm ( array $high , array $low [, integer $timePeriod ] )"," array trader_mom ( array $real [, integer $timePeriod ] )"," array trader_mult ( array $real0 , array $real1 )"," array trader_natr ( array $high , array $low , array $close [, integer $timePeriod ] )"," array trader_obv ( array $real , array $volume )"," array trader_plus_di ( array $high , array $low , array $close [, integer $timePeriod ] )"," array trader_plus_dm ( array $high , array $low [, integer $timePeriod ] )"," array trader_ppo ( array $real [, integer $fastPeriod [, integer $slowPeriod [, integer $mAType ]]] )"," array trader_roc ( array $real [, integer $timePeriod ] )"," array trader_rocp ( array $real [, integer $timePeriod ] )"," array trader_rocr ( array $real [, integer $timePeriod ] )"," array trader_rocr100 ( array $real [, integer $timePeriod ] )"," array trader_rsi ( array $real [, integer $timePeriod ] )"," array trader_sar ( array $high , array $low [, float $acceleration [, float $maximum ]] )"," array trader_sarext ( array $high , array $low [, float $startValue [, float $offsetOnReverse [, float $accelerationInitLong [, float $accelerationLong [, float $accelerationMaxLong [, float $accelerationInitShort [, float $accelerationShort [, float $accelerationMaxShort ]]]]]]]] )"," array trader_sin ( array $real )"," array trader_sinh ( array $real )"," array trader_sma ( array $real [, integer $timePeriod ] )"," array trader_sqrt ( array $real )"," array trader_stddev ( array $real [, integer $timePeriod [, float $nbDev ]] )"," array trader_stoch ( array $high , array $low , array $close [, integer $fastK_Period [, integer $slowK_Period [, integer $slowK_MAType [, integer $slowD_Period [, integer $slowD_MAType ]]]]] )"," array trader_stochf ( array $high , array $low , array $close [, integer $fastK_Period [, integer $fastD_Period [, integer $fastD_MAType ]]] )"," array trader_stochrsi ( array $real [, integer $timePeriod [, integer $fastK_Period [, integer $fastD_Period [, integer $fastD_MAType ]]]] )"," array trader_sub ( array $real0 , array $real1 )"," array trader_sum ( array $real [, integer $timePeriod ] )"," array trader_t3 ( array $real [, integer $timePeriod [, float $vFactor ]] )"," array trader_tan ( array $real )"," array trader_tanh ( array $real )"," array trader_tema ( array $real [, integer $timePeriod ] )"," array trader_trange ( array $high , array $low , array $close )"," array trader_trima ( array $real [, integer $timePeriod ] )"," array trader_trix ( array $real [, integer $timePeriod ] )"," array trader_tsf ( array $real [, integer $timePeriod ] )"," array trader_typprice ( array $high , array $low , array $close )"," array trader_ultosc ( array $high , array $low , array $close [, integer $timePeriod1 [, integer $timePeriod2 [, integer $timePeriod3 ]]] )"," array trader_var ( array $real [, integer $timePeriod [, float $nbDev ]] )"," array trader_wclprice ( array $high , array $low , array $close )"," array trader_willr ( array $high , array $low , array $close [, integer $timePeriod ] )"," array trader_wma ( array $real [, integer $timePeriod ] )"," bool trait_exists ( string $traitname [, bool $autoload ] )"," bool trigger_error ( string $error_msg [, int $error_type = E_USER_NOTICE ] )"," string trim ( string $str [, string $charlist ] )"," bool uasort ( array &$array , callable $cmp_function )"," string ucfirst ( string $str )"," string ucwords ( string $str )"," bool udm_add_search_limit ( resource $agent , int $var , string $val )"," resource udm_alloc_agent_array ( array $databases )"," resource udm_alloc_agent ( string $dbaddr [, string $dbmode ] )"," int udm_api_version ( void )"," array udm_cat_list ( resource $agent , string $category )"," array udm_cat_path ( resource $agent , string $category )"," bool udm_check_charset ( resource $agent , string $charset )"," int udm_check_stored ( resource $agent , int $link , string $doc_id )"," bool udm_clear_search_limits ( resource $agent )"," int udm_close_stored ( resource $agent , int $link )"," int udm_crc32 ( resource $agent , string $str )"," int udm_errno ( resource $agent )"," string udm_error ( resource $agent )"," resource udm_find ( resource $agent , string $query )"," int udm_free_agent ( resource $agent )"," bool udm_free_ispell_data ( int $agent )"," bool udm_free_res ( resource $res )"," int udm_get_doc_count ( resource $agent )"," string udm_get_res_field ( resource $res , int $row , int $field )"," string udm_get_res_param ( resource $res , int $param )"," int udm_hash32 ( resource $agent , string $str )"," bool udm_load_ispell_data ( resource $agent , int $var , string $val1 , string $val2 , int $flag )"," int udm_open_stored ( resource $agent , string $storedaddr )"," bool udm_set_agent_param ( resource $agent , int $var , string $val )"," bool uksort ( array &$array , callable $cmp_function )"," int umask ([ int $mask ] )"," string uniqid ([ string $prefix = \"\" [, bool $more_entropy = false ]] )"," int unixtojd ([ int $timestamp = time() ] )"," bool unlink ( string $filename [, resource $context ] )"," array unpack ( string $format , string $data )"," void unregister_tick_function ( string $function_name )"," mixed unserialize ( string $str )"," void unset ( mixed $var [, mixed $... ] )"," bool untaint ( string &$string [, string $... ] )"," string urldecode ( string $str )"," string urlencode ( string $str )"," bool use_soap_error_handler ([ bool $handler = true ] )"," void usleep ( int $micro_seconds )"," bool usort ( array &$array , callable $cmp_function )"," string utf8_decode ( string $data )"," string utf8_encode ( string $data )"," void var_dump ( mixed $expression [, mixed $... ] )"," mixed var_export ( mixed $expression [, bool $return = false ] )"," mixed variant_abs ( mixed $val )"," mixed variant_add ( mixed $left , mixed $right )"," mixed variant_and ( mixed $left , mixed $right )"," variant variant_cast ( variant $variant , int $type )"," mixed variant_cat ( mixed $left , mixed $right )"," int variant_cmp ( mixed $left , mixed $right [, int $lcid [, int $flags ]] )"," variant variant_date_from_timestamp ( int $timestamp )"," int variant_date_to_timestamp ( variant $variant )"," mixed variant_div ( mixed $left , mixed $right )"," mixed variant_eqv ( mixed $left , mixed $right )"," mixed variant_fix ( mixed $variant )"," int variant_get_type ( variant $variant )"," mixed variant_idiv ( mixed $left , mixed $right )"," mixed variant_imp ( mixed $left , mixed $right )"," mixed variant_int ( mixed $variant )"," mixed variant_mod ( mixed $left , mixed $right )"," mixed variant_mul ( mixed $left , mixed $right )"," mixed variant_neg ( mixed $variant )"," mixed variant_not ( mixed $variant )"," mixed variant_or ( mixed $left , mixed $right )"," mixed variant_pow ( mixed $left , mixed $right )"," mixed variant_round ( mixed $variant , int $decimals )"," void variant_set_type ( variant $variant , int $type )"," void variant_set ( variant $variant , mixed $value )"," mixed variant_sub ( mixed $left , mixed $right )"," mixed variant_xor ( mixed $left , mixed $right )"," mixed version_compare ( string $version1 , string $version2 [, string $operator ] )"," int vfprintf ( resource $handle , string $format , array $args )"," bool virtual ( string $filename )"," bool vpopmail_add_alias_domain_ex ( string $olddomain , string $newdomain )"," bool vpopmail_add_alias_domain ( string $domain , string $aliasdomain )"," bool vpopmail_add_domain_ex ( string $domain , string $passwd [, string $quota [, string $bounce [, bool $apop ]]] )"," bool vpopmail_add_domain ( string $domain , string $dir , int $uid , int $gid )"," bool vpopmail_add_user ( string $user , string $domain , string $password [, string $gecos [, bool $apop ]] )"," bool vpopmail_alias_add ( string $user , string $domain , string $alias )"," bool vpopmail_alias_del_domain ( string $domain )"," bool vpopmail_alias_del ( string $user , string $domain )"," array vpopmail_alias_get_all ( string $domain )"," array vpopmail_alias_get ( string $alias , string $domain )"," bool vpopmail_auth_user ( string $user , string $domain , string $password [, string $apop ] )"," bool vpopmail_del_domain_ex ( string $domain )"," bool vpopmail_del_domain ( string $domain )"," bool vpopmail_del_user ( string $user , string $domain )"," string vpopmail_error ( void )"," bool vpopmail_passwd ( string $user , string $domain , string $password [, bool $apop ] )"," bool vpopmail_set_user_quota ( string $user , string $domain , string $quota )"," int vprintf ( string $format , array $args )"," string vsprintf ( string $format , array $args )"," bool w32api_deftype ( string $typename , string $member1_type , string $member1_name [, string $... [, string $... ]] )"," resource w32api_init_dtype ( string $typename , mixed $value [, mixed $... ] )"," mixed w32api_invoke_function ( string $funcname , mixed $argument [, mixed $... ] )"," bool w32api_register_function ( string $library , string $function_name , string $return_type )"," void w32api_set_call_method ( int $method )"," bool wddx_add_vars ( resource $packet_id , mixed $var_name [, mixed $... ] )"," mixed wddx_deserialize ( string $packet )"," string wddx_packet_end ( resource $packet_id )"," resource wddx_packet_start ([ string $comment ] )"," string wddx_serialize_value ( mixed $var [, string $comment ] )"," string wddx_serialize_vars ( mixed $var_name [, mixed $... ] )"," int win32_continue_service ( string $servicename [, string $machine ] )"," mixed win32_create_service ( array $details [, string $machine ] )"," mixed win32_delete_service ( string $servicename [, string $machine ] )"," int win32_get_last_control_message ( void )"," int win32_pause_service ( string $servicename [, string $machine ] )"," array win32_ps_list_procs ( void )"," array win32_ps_stat_mem ( void )"," array win32_ps_stat_proc ([ int $pid = 0 ] )"," mixed win32_query_service_status ( string $servicename [, string $machine ] )"," bool win32_set_service_status ( int $status [, int $checkpoint = 0 ] )"," mixed win32_start_service_ctrl_dispatcher ( string $name )"," int win32_start_service ( string $servicename [, string $machine ] )"," int win32_stop_service ( string $servicename [, string $machine ] )"," array wincache_fcache_fileinfo ([ bool $summaryonly = false ] )"," array wincache_fcache_meminfo ( void )"," bool wincache_lock ( string $key [, bool $isglobal = false ] )"," array wincache_ocache_fileinfo ([ bool $summaryonly = false ] )"," array wincache_ocache_meminfo ( void )"," bool wincache_refresh_if_changed ([ array $files ] )"," array wincache_rplist_fileinfo ([ bool $summaryonly = false ] )"," array wincache_rplist_meminfo ( void )"," array wincache_scache_info ([ bool $summaryonly = false ] )"," array wincache_scache_meminfo ( void )"," bool wincache_ucache_add ( string $key , mixed $value [, int $ttl = 0 ] )"," bool wincache_ucache_cas ( string $key , int $old_value , int $new_value )"," bool wincache_ucache_clear ( void )"," mixed wincache_ucache_dec ( string $key [, int $dec_by = 1 [, bool &$success ]] )"," bool wincache_ucache_delete ( mixed $key )"," bool wincache_ucache_exists ( string $key )"," mixed wincache_ucache_get ( mixed $key [, bool &$success ] )"," mixed wincache_ucache_inc ( string $key [, int $inc_by = 1 [, bool &$success ]] )"," array wincache_ucache_info ([ bool $summaryonly = false [, string $key ]] )"," array wincache_ucache_meminfo ( void )"," bool wincache_ucache_set ( mixed $key , mixed $value [, int $ttl = 0 ] )"," bool wincache_unlock ( string $key )"," string wordwrap ( string $str [, int $width = 75 [, string $break = \"\\n\" [, bool $cut = false ]]] )"," string xattr_get ( string $filename , string $name [, int $flags = 0 ] )"," array xattr_list ( string $filename [, int $flags = 0 ] )"," bool xattr_remove ( string $filename , string $name [, int $flags = 0 ] )"," bool xattr_set ( string $filename , string $name , string $value [, int $flags = 0 ] )"," bool xattr_supported ( string $filename [, int $flags = 0 ] )"," int xdiff_file_bdiff_size ( string $file )"," bool xdiff_file_bdiff ( string $old_file , string $new_file , string $dest )"," bool xdiff_file_bpatch ( string $file , string $patch , string $dest )"," bool xdiff_file_diff_binary ( string $old_file , string $new_file , string $dest )"," bool xdiff_file_diff ( string $old_file , string $new_file , string $dest [, int $context = 3 [, bool $minimal = false ]] )"," mixed xdiff_file_merge3 ( string $old_file , string $new_file1 , string $new_file2 , string $dest )"," bool xdiff_file_patch_binary ( string $file , string $patch , string $dest )"," mixed xdiff_file_patch ( string $file , string $patch , string $dest [, int $flags = DIFF_PATCH_NORMAL ] )"," bool xdiff_file_rabdiff ( string $old_file , string $new_file , string $dest )"," int xdiff_string_bdiff_size ( string $patch )"," string xdiff_string_bdiff ( string $old_data , string $new_data )"," string xdiff_string_bpatch ( string $str , string $patch )"," string xdiff_string_bdiff ( string $old_data , string $new_data )"," string xdiff_string_diff ( string $old_data , string $new_data [, int $context = 3 [, bool $minimal = false ]] )"," mixed xdiff_string_merge3 ( string $old_data , string $new_data1 , string $new_data2 [, string &$error ] )"," string xdiff_string_patch_binary ( string $str , string $patch )"," string xdiff_string_patch ( string $str , string $patch [, int $flags [, string &$error ]] )"," string xdiff_string_bdiff ( string $old_data , string $new_data )"," array xhprof_disable ( void )"," void xhprof_enable ([ int $flags = 0 [, array $options ]] )"," array xhprof_sample_disable ( void )"," void xhprof_sample_enable ( void )"," string xml_error_string ( int $code )"," int xml_get_current_byte_index ( resource $parser )"," int xml_get_current_column_number ( resource $parser )"," int xml_get_current_line_number ( resource $parser )"," int xml_get_error_code ( resource $parser )"," int xml_parse_into_struct ( resource $parser , string $data , array &$values [, array &$index ] )"," int xml_parse ( resource $parser , string $data [, bool $is_final = false ] )"," resource xml_parser_create_ns ([ string $encoding [, string $separator = ':' ]] )"," resource xml_parser_create ([ string $encoding ] )"," bool xml_parser_free ( resource $parser )"," mixed xml_parser_get_option ( resource $parser , int $option )"," bool xml_parser_set_option ( resource $parser , int $option , mixed $value )"," bool xml_set_character_data_handler ( resource $parser , callable $handler )"," bool xml_set_default_handler ( resource $parser , callable $handler )"," bool xml_set_element_handler ( resource $parser , callable $start_element_handler , callable $end_element_handler )"," bool xml_set_end_namespace_decl_handler ( resource $parser , callable $handler )"," bool xml_set_external_entity_ref_handler ( resource $parser , callable $handler )"," bool xml_set_notation_decl_handler ( resource $parser , callable $handler )"," bool xml_set_object ( resource $parser , object &$object )"," bool xml_set_processing_instruction_handler ( resource $parser , callable $handler )"," bool xml_set_start_namespace_decl_handler ( resource $parser , callable $handler )"," bool xml_set_unparsed_entity_decl_handler ( resource $parser , callable $handler )"," mixed xmlrpc_decode_request ( string $xml , string &$method [, string $encoding ] )"," mixed xmlrpc_decode ( string $xml [, string $encoding = \"iso-8859-1\" ] )"," string xmlrpc_encode_request ( string $method , mixed $params [, array $output_options ] )"," string xmlrpc_encode ( mixed $value )"," string xmlrpc_get_type ( mixed $value )"," bool xmlrpc_is_fault ( array $arg )"," array xmlrpc_parse_method_descriptions ( string $xml )"," int xmlrpc_server_add_introspection_data ( resource $server , array $desc )"," string xmlrpc_server_call_method ( resource $server , string $xml , mixed $user_data [, array $output_options ] )"," resource xmlrpc_server_create ( void )"," int xmlrpc_server_destroy ( resource $server )"," bool xmlrpc_server_register_introspection_callback ( resource $server , string $function )"," bool xmlrpc_server_register_method ( resource $server , string $method_name , string $function )"," bool xmlrpc_set_type ( string &$value , string $type )"," bool XMLWriter::endAttribute ( void )"," bool XMLWriter::endCData ( void )"," bool XMLWriter::endComment ( void )"," bool XMLWriter::endDocument ( void )"," bool XMLWriter::endDTDAttlist ( void )"," bool XMLWriter::endDTDElement ( void )"," bool XMLWriter::endDTDEntity ( void )"," bool XMLWriter::endDTD ( void )"," bool XMLWriter::endElement ( void )"," bool XMLWriter::endPI ( void )"," mixed XMLWriter::flush ([ bool $empty = true ] )"," bool XMLWriter::fullEndElement ( void )"," bool XMLWriter::openMemory ( void )"," bool XMLWriter::openURI ( string $uri )"," string XMLWriter::outputMemory ([ bool $flush = true ] )"," bool XMLWriter::setIndentString ( string $indentString )"," bool XMLWriter::setIndent ( bool $indent )"," bool XMLWriter::startAttributeNS ( string $prefix , string $name , string $uri )"," bool XMLWriter::startAttribute ( string $name )"," bool XMLWriter::startCData ( void )"," bool XMLWriter::startComment ( void )"," bool XMLWriter::startDocument ([ string $version = 1.0 [, string $encoding = NULL [, string $standalone ]]] )"," bool XMLWriter::startDTDAttlist ( string $name )"," bool XMLWriter::startDTDElement ( string $qualifiedName )"," bool XMLWriter::startDTDEntity ( string $name , bool $isparam )"," bool XMLWriter::startDTD ( string $qualifiedName [, string $publicId [, string $systemId ]] )"," bool XMLWriter::startElementNS ( string $prefix , string $name , string $uri )"," bool XMLWriter::startElement ( string $name )"," bool XMLWriter::startPI ( string $target )"," bool XMLWriter::text ( string $content )"," bool XMLWriter::writeAttributeNS ( string $prefix , string $name , string $uri , string $content )"," bool XMLWriter::writeAttribute ( string $name , string $value )"," bool XMLWriter::writeCData ( string $content )"," bool XMLWriter::writeComment ( string $content )"," bool XMLWriter::writeDTDAttlist ( string $name , string $content )"," bool XMLWriter::writeDTDElement ( string $name , string $content )"," bool XMLWriter::writeDTDEntity ( string $name , string $content , bool $pe , string $pubid , string $sysid , string $ndataid )"," bool XMLWriter::writeDTD ( string $name [, string $publicId [, string $systemId [, string $subset ]]] )"," bool XMLWriter::writeElementNS ( string $prefix , string $name , string $uri [, string $content ] )"," bool XMLWriter::writeElement ( string $name [, string $content ] )"," bool XMLWriter::writePI ( string $target , string $content )"," bool XMLWriter::writeRaw ( string $content )"," XPathObject XPathContext::xpath_eval_expression ( string $expression [, domnode $contextnode ] )"," XPathObject XPathContext::xpath_eval ( string $xpath_expression [, domnode $contextnode ] )"," XPathContext xpath_new_context ( domdocument $dom_document )"," bool xpath_register_ns_auto ( XPathContext $xpath_context [, object $context_node ] )"," bool xpath_register_ns ( XPathContext $xpath_context , string $prefix , string $uri )"," int XPathContext::xptr_eval ( string $eval_str [, domnode $contextnode ] )"," XPathContext xptr_new_context ( void )"," string xslt_backend_info ( void )"," string xslt_backend_name ( void )"," string xslt_backend_version ( void )"," resource xslt_create ( void )"," int xslt_errno ( resource $xh )"," string xslt_error ( resource $xh )"," void xslt_free ( resource $xh )"," int xslt_getopt ( resource $processor )"," mixed xslt_process ( resource $xh , string $xmlcontainer , string $xslcontainer [, string $resultcontainer [, array $arguments [, array $parameters ]]] )"," void xslt_set_base ( resource $xh , string $uri )"," void xslt_set_encoding ( resource $xh , string $encoding )"," void xslt_set_error_handler ( resource $xh , mixed $handler )"," void xslt_set_log ( resource $xh [, mixed $log ] )"," bool xslt_set_object ( resource $processor , object &$obj )"," void xslt_set_sax_handler ( resource $xh , array $handlers )"," void xslt_set_sax_handlers ( resource $processor , array $handlers )"," void xslt_set_scheme_handler ( resource $xh , array $handlers )"," void xslt_set_scheme_handlers ( resource $xh , array $handlers )"," mixed xslt_setopt ( resource $processor , int $newmask )"," bool yaml_emit_file ( string $filename , mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks ]]] )"," string yaml_emit ( mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks ]]] )"," mixed yaml_parse_file ( string $filename [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]] )"," mixed yaml_parse_url ( string $url [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]] )"," mixed yaml_parse ( string $input [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]] )"," string yaz_addinfo ( resource $id )"," void yaz_ccl_conf ( resource $id , array $config )"," bool yaz_ccl_parse ( resource $id , string $query , array &$result )"," bool yaz_close ( resource $id )"," mixed yaz_connect ( string $zurl [, mixed $options ] )"," bool yaz_database ( resource $id , string $databases )"," bool yaz_element ( resource $id , string $elementset )"," int yaz_errno ( resource $id )"," string yaz_error ( resource $id )"," array yaz_es_result ( resource $id )"," void yaz_es ( resource $id , string $type , array $args )"," string yaz_get_option ( resource $id , string $name )"," int yaz_hits ( resource $id [, array &$searchresult ] )"," void yaz_itemorder ( resource $id , array $args )"," bool yaz_present ( resource $id )"," void yaz_range ( resource $id , int $start , int $number )"," string yaz_record ( resource $id , int $pos , string $type )"," array yaz_scan_result ( resource $id [, array &$result ] )"," void yaz_scan ( resource $id , string $type , string $startterm [, array $flags ] )"," void yaz_schema ( resource $id , string $schema )"," bool yaz_search ( resource $id , string $type , string $query )"," void yaz_set_option ( resource $id , string $name , string $value )"," void yaz_sort ( resource $id , string $criteria )"," void yaz_syntax ( resource $id , string $syntax )"," mixed yaz_wait ([ array &$options ] )"," void yp_all ( string $domain , string $map , string $callback )"," array yp_cat ( string $domain , string $map )"," string yp_err_string ( int $errorcode )"," int yp_errno ( void )"," array yp_first ( string $domain , string $map )"," string yp_get_default_domain ( void )"," string yp_master ( string $domain , string $map )"," string yp_match ( string $domain , string $map , string $key )"," array yp_next ( string $domain , string $map , string $key )"," int yp_order ( string $domain , string $map )"," string zend_logo_guid ( void )"," int zend_thread_id ( void )"," string zend_version ( void )"," void zip_close ( resource $zip )"," bool zip_entry_close ( resource $zip_entry )"," int zip_entry_compressedsize ( resource $zip_entry )"," string zip_entry_compressionmethod ( resource $zip_entry )"," int zip_entry_filesize ( resource $zip_entry )"," string zip_entry_name ( resource $zip_entry )"," bool zip_entry_open ( resource $zip , resource $zip_entry [, string $mode ] )"," string zip_entry_read ( resource $zip_entry [, int $length ] )"," resource zip_open ( string $filename )"," resource zip_read ( resource $zip )"," string zlib_decode ( string $data [, string $max_decoded_len ] )"," string zlib_encode ( string $data , string $encoding [, string $level = -1 ] )"," string zlib_get_coding_type ( void )"],"extendedConfidence":true,"icon":"function"}],"arduino":[{"items":["HIGH","LOW","INPUT","OUTPUT","DEC","BIN","HEX","OCT","BYTE","PI","HALF_PI","TWO_PI","LSBFIRST","MSBFIRST","CHANGE","FALLING","RISING","DEFAULT","EXTERNAL","INTERNAL","INTERNAL1V1","INTERNAL2V56"],"selector":"constant.language.c","type":"constant","icon":"constant"},{"items":["analogReference","analogRead","analogWrite","attachInterrupt","detachInterrupt","delay","delayMicroseconds","digitalWrite","digitalRead","interrupts","millis","micros","noInterrupts","noTone","pinMode","pulseIn","shiftIn","shiftOut","tone"],"selector":"function.c","type":"function","prototypes":["analogReference(type)","analogRead(pin)","analogWrite(pin, value)","attachInterrupt(interruptPin, function, mode)","detachInterrupt(interruptPin)","delay(ms)","delayMicroseconds(us)","digitalWrite(pin, value)","digitalRead(pin)","interrupts()","millis()","micros()","noInterrupts()","noTone(pin)","pinMode(pin, mode)","pulseIn(pin, value, timeout)","shiftIn(dataPin, clockPin, bitOrder)","shiftOut(dataPin, clockPin, bitOrder, value)","tone(pin, frequency, duration)"],"icon":"function"},{"items":["bitRead","bitWrite","bitSet","bitClear","bit","highByte","lowByte"],"selector":"function.c","type":"function","prototypes":["bitRead(x, n)","bitWrite(x, n, b)","bitSet(x, n)","bitClear(x, n)","bit(n)","highByte(x)","lowByte(x)"],"icon":"function"},{"items":["boolean","byte","char","float","int","long","word"],"selector":"function.c","type":"function","prototypes":["boolean(x)","byte(x)","char(x)","float(x)","int(x)","long(x)","word(x)"],"icon":"function"},{"items":["abs","acos","asin","atan","atan2","ceil","constrain","cos","degrees","exp","floor","log","map","max","min","radians","random","randomSeed"],"selector":"function.c","type":"function","prototypes":["abs(x)","acos(x)","asin(x)","atan(x)","atan2(x, y)","ceil(x)","constrain(x, min, max)","cos(x)","degrees(radians)","exp(x, e)","floor(x)","map(value, fromLow, fromHigh, toLow, toHigh)","max(x, y)","min(x, y)","radians(degrees)","random(min, max)","randomSeed(seed)"],"icon":"function"},{"items":["begin","end","peek","read","print","println","available","flush","write"],"selector":"serial.arduino.function.c","type":"function","prototypes":["begin(baud)","end()","peek()","read()","print(value)","println(value)","available()","flush()","write(value)"],"icon":"function"},{"items":["available","read","flush","find","findUntil","peek","readBytes","readBytesUntil","parseInt","parseFloat","setTimeout"],"selector":"stream.arduino.function.c","type":"function","prototypes":["available()","read()","flush()","find(target)","findUntil(target, terminus)","peek()","readBytes(buffer, length)","readBytesUntil(character, buffer, length)","parseInt(list)","parseFloat(list)","setTimeout(time)"],"icon":"function"}],"perl":[{"snippet":"$$%{0}","items":["abs","accept","alarm","atan2","bind","binmode","bless","break","caller","chdir","chmod","chomp","chop","chown","chr","chroot","close","closedir","connect","continue","cos","crypt","dbmclose","dbmopen","default","defined","delete","die","do","dump","each","endgrent","endhostent","endnetent","endprotoent","endpwent","endservent","eof","eval","exec","exists","exit","exp","fcntl","fileno","flock","fork","format","formline","getc","getgrent","getgrgid","getgrnam","gethostbyaddr","gethostbyname","gethostent","getlogin","getnetbyaddr","getnetbyname","getnetent","getpeername","getpgrp","getppid","getpriority","getprotobyname","getprotobynumber","getprotoent","getpwent","getpwnam","getpwuid","getservbyname","getservbyport","getservent","getsockname","getsockopt","given","glob","gmtime","goto","grep","hex","import","index","int","ioctl","join","keys","kill","last","lc","lcfirst","length","link","listen","local","localtime","lock","log","lstat","m","map","mkdir","msgctl","msgget","msgrcv","msgsnd","my","next","no","oct","open","opendir","ord","our","pack","package","pipe","pop","pos","print","printf","prototype","push","q","qq","qr","quotemeta","qw","qx","rand","read","readdir","readline","readlink","readpipe","recv","redo","ref","rename","require","reset","return","reverse","rewinddir","rindex","rmdir","s","say","scalar","seek","seekdir","select","semctl","semget","semop","send","setgrent","sethostent","setnetent","setpgrp","setpriority","setprotoent","setpwent","setservent","setsockopt","shift","shmctl","shmget","shmread","shmwrite","shutdown","sin","sleep","socket","socketpair","sort","splice","split","sprintf","sqrt","srand","stat","state","study","sub","substr","symlink","syscall","sysopen","sysread","sysseek","system","syswrite","tell","telldir","tie","tied","time","times","tr","truncate","uc","ucfirst","umask","undef","unlink","unpack","unshift","untie","use","utime","values","vec","wait","waitpid","wantarray","warn","when","write","-X","y"],"icon":"function"}],"c++":[{"items":["std::string","std::basic_string<T>","std::vector<T>","std::deque<T>","std::list<T>","std::stack<T>","std::queue<T>","std::priority_queue<T>","std::set<T>","std::multiset<T>","std::map<K, V>","std::multimap<K, V>","std::bitset","std::istream","std::ostream","std::iostream","std::ifstream","std::ofstream","std::fstream","std::istringstream","std::ostringstream","std::stringstream","std::streambuf","std::complex<T>","std::exception","std::locale","std::pair<A, B>","std::tuple<T...>","std::tr1::unordered_map<K, V>","std::unordered_map<K, V>","std::tr1::unordered_set<T>","std::unordered_set<T>","std::tr1::unordered_multimap<K, V>","std::unordered_multimap<K, V>","std::tr1::unordered_multiset<T>","std::unordered_multiset<T>","std::tr1::shared_ptr<T>","std::shared_ptr<T>","std::tr1::weak_ptr<T>","std::weak_ptr<T>","std::tr1::unique_ptr<T>","std::unique_ptr<T>","std::array<T, N>","std::forward_list<T>","std::basic_regex","std::sub_match","std::match_results","std::regex_iterator","std::regex_token_iterator","std::regex_error","std::regex_token_iterator","std::regex_traits<T>","std::thread","std::mutex","std::timed_mutex","std::recursive_mutex","std::recursive_timed_mutex","std::lock_guard<Mutex>","std::unique_lock<Mutex>","std::future<T>","std::promise<T>","std::condition_variable","std::condition_variable_any","std::function<R(T)>","std::chrono::time_point<Clock>","std::chrono::system_clock","std::chrono::steady_clock","std::chrono::high_resolution_clock","std::chrono::duration<T>","std::allocator<T>"],"icon":"class"},{"items":["std::cin","std::cout","std::cerr","std::clog","std::endl","std::for_each","std::find","std::find_if","std::find_end","std::find_first_of","std::adjacent_find","std::count","std::count_if","std::mismatch","std::equal","std::search","std::search_n","std::copy","std::copy_backward","std::swap","std::swap_ranges","std::iter_swap","std::transform","std::replace","std::replace_if","std::replace_copy","std::replace_copy_if","std::fill","std::fill_n","std::generate","std::generate_n","std::remove","std::remove_if","std::remove_copy","std::remove_copy_if","std::unique","std::unique_copy","std::reverse","std::reverse_copy","std::rotate","std::rotate_copy","std::random_shuffle","std::partition","std::stable_partition","std::sort","std::stable_sort","std::partial_sort","std::partial_sort_copy","std::nth_element","std::lower_bound","std::upper_bound","std::equal_range","std::binary_search","std::merge","std::inplace_merge","std::includes","std::set_union","std::set_intersection","std::set_difference","std::set_symmetric_difference","std::push_heap","std::pop_heap","std::make_heap","std::sort_heap","std::min","std::max","std::min_element","std::max_element","std::lexicogrpahical_compare","std::next_permutation","std::prev_permutation"],"icon":"function"},{"items":["algorithm","array","atomic","bitset","cassert","ccomplex","cctype","cerrno","cfenv","cfloat","chrono","cinttypes","ciso646","climits","clocale","cmath","codecvt","complex","complex.h","condition_variable","csetjmp","csignal","cstdarg","cstdbool","cstddef","cstdint","cstdio","cstdlib","cstring","ctgmath","ctime","cwchar","cwctype","deque","exception","forward_list","fstream","functional","future","initializer_list","iomanip","ios","iosfwd","iostream","istream","iterator","limits","list","locale","map","memory","mutex","new","numeric","ostream","queue","random","ratio","regex","scoped_allocator","set","sstream","stack","stdexcept","streambuf","string","strstream","system_error","tgmath.h","thread","tuple","type_traits","typeindex","typeinfo","unordered_map","unordered_set","utility","valarray","vector"],"selector":"source.c++ meta.preprocessor.c.include string.quoted.other.lt-gt.include.c","icon":"macro"}],"js":[{"items":["Array","Boolean","Date","Document","Event","Function","Image","JSON","Math","Number","Object","RegExp","String","StyleSheet","XMLDocument","XMLHttpRequest"],"type":"class","icon":"class"},{"items":["DOMActivate","DOMAttrModified","DOMCharacterDataModified","DOMFocusIn","DOMFocusOut","DOMMouseScroll","DOMNodeInserted","DOMNodeInsertedIntoDocument","DOMNodeRemoved","DOMNodeRemovedFromDocument","DOMSubtreeModified","onabort","abort","onafterprint","afterprint","onbeforeprint","beforeprint","onbeforeunload","beforeunload","onblur","blur","onchange","change","onclick","click","onclose","close","oncontextmenu","contextmenu","oncopy","copy","oncut","cut","onerror","error","ondbclick","dbclick","onfocus","focus","onhashchange","hashchange","onkeydown","keydown","onkeypress","keypress","onkeyup","keyup","onload","load","onmousedown","mousedown","onmouseenter","mouseenter","onmouseleave","mouseleave","onmousemove","mousemove","onmouseout","mouseout","onmouseover","mouseover","onmouseup","mouseup","onmousewheel","mousewheel","onoffline","offline","ononline","online","onpaste","paste","onprogress","progress","onreadystatechange","readystatechange","onreset","reset","onresize","resize","onscroll","scroll","onselect","select","onsubmit","submit","ontimeout","timeout","onunload","unload"],"type":"event","icon":"event"},{"items":["abort","abs","acos","add","addEventListener","addRule","alert","anchor","appendChild","apply","asin","atan","atan2","attachEvent","back","big","blink","blur","bold","call","ceil","charAt","charCodeAt","clearInterval","clearTimeout","click","cloneNode","close","concat","confirm","cos","createAttribute","createCaption","createComment","createDocumentFragment","createElement","createTextNode","createTFoot","createTHead","currentStyle","decodeURI","decodeURIComponent","deleteCaption","deleteCell","deleteRow","deleteRule","deleteTFoot","deleteTHead","detachEvent","dir","dispatchEvent","elementFromPoint","encodeURI","encodeURIComponent","eval","every","exec","exp","filter","find","fixed","floor","focus","fontcolor","fontsize","foreach","forward","fromCharCode","getAllResponseHeaders","getAttribute","getAttributeNode","getAttributeNodeNS","getAttributeNS","getComputedStyle","getDate","getDay","getElementById","getElementsByClassName","getElementsByName","getElementsByTagName","getElementsByTagNameNS","getFullYear","getHours","getMilliseconds","getMinutes","getMonth","getOwnPropertyNames","getResponseHeader","getSeconds","getTime","getTimezoneOffset","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getYear","go","hasAttribute","hasAttributeNS","hasAtrributes","hasChildNodes","hasOwnProperty","home","indexOf","insertAfter","insertBefore","insertCell","insertRow","insertRule","isFinite","isNaN","isPrototypeOf","italics","item","join","keys","lastIndexOf","link","localeCompare","log","map","match","max","min","moveBy","moveRow","moveTo","normalize","open","parse","parseInt","parseFloat","pop","pow","preventDefault","print","prompt","propertyIsEnumerable","push","querySelector","querySelectorAll","random","reload","remove","removeAttribute","removeAttributeNode","removeAttributeNS","removeChild","removeEventListener","removeRule","replace","replaceChild","reset","resizeBy","resizeTo","reverse","round","scrollBy","scrollIntoView","scrollTo","search","select","send","setAttribute","setAttributeNode","setAttributeNS","setDate","setFullYear","setHours","setInterval","setMilliseconds","setMinutes","setMonth","setRequestHeader","setSeconds","setTime","setTimeout","setUTCDate","setUTCDay","setUTCFullYear","setUTCHours","setUTCMilliseconds","setUTCMinutes","setUTCMonth","setUTCSeconds","setYear","shift","sin","sizeToContent","slice","small","some","sort","splice","split","sqrt","stop","stopImmediatePropagation","stopPropagation","strike","stringify","sub","substr","substring","submit","sup","supports","tan","test","toExponential","toFixed","toGMTString","toJSON","toLocaleString","toLocaleDateString","toLocaleTimeString","toLowerCase","toPrecision","toSource","toString","toUpperCase","toUTCString","trim","unshift","UTC","valueOf","write","writeln"],"type":"function","icon":"function"},{"items":["accessKey","action","align","alinkColor","all","altKey","anchors","appCodeName","applets","appName","appVersion","arguments","attributes","availHeight","availWidth","bgColor","body","border","borderColor","borderColorDark","borderColorLight","bubbles","button","callee","caller","cancelable","cancelBubble","caption","cellPadding","cells","cellSpacing","colorDepth","channelmode","charCode","checked","childNodes","className","clientHeight","clientWidth","clientX","clientY","closed","compatMode","complete","console","constructor","contentType","cookie","cookieEnabled","cssRules","cssText","ctrlKey","currentTarget","defaultChecked","defaultPrevented","defaultStatus","detail","dir","disabled","doctype","document","documentElement","documentMode","domain","E","elements","embeds","encoding","Event","eventPhase","fgColor","fileSize","firstChild","form","forms","frame","frames","fromElement","fullscreen","hash","height","history","host","hostname","href","hspace","id","images","implementation","index","innerHeight","innerHTML","innerText","innerWidth","keyCode","lang","language","lastChild","lastModified","layerX","layerY","left","length","linkColor","links","LN2","LN10","localName","location","LOG2E","LOG10E","lowsrc","MAX_VALUE","media","menubar","metaKey","method","mimeTypes","MIN_VALUE","multiple","namespaceURI","NaN","navigator","NEGATIVE_INFINITY","nextSibling","nodeName","nodeType","nodeValue","offsetHeight","offsetLeft","offsetParent","offsetTop","offsetWidth","offsetX","offsetY","opener","options","outerHeight","outerWidth","ownerDocument","ownerNode","ownerRule","owningElement","pageX","pageXOffset","pageY","pageYOffset","parent","parentNode","parentStyleSheet","pathname","PI","pixelDepth","platform","plugins","port","POSITIVE_INFINITY","prefix","previousSibling","property","protocol","name","prototype","readyState","referrer","relatedTarget","resizable","responseText","responseXML","returnValue","rows","rules","screen","screenLeft","screenTop","screenX","screenY","scrollbars","scrollHeight","scrollLeft","scrollTop","scrollWidth","search","selected","selectedIndex","selectorText","self","shiftKey","size","SQRT1_2","SQRT2","src","srcElement","status","statusText","style","styleSheets","summary","systemLanguage","tabIndex","tagName","target","tBodies","text","tFoot","tHead","timeout","timestamp","title","toElement","toolbar","top","type","URL","userAgent","userLanguage","value","vlinkColor","vspace","which","width","window"],"type":"property","icon":"property"}],"lua":[{"items":["assert","collectgarbage","dofile","error","getfenv","getmetatable","ipairs","load","loadfile","loadstring","next","pairs","pcall","print","rawequal","rawget","rawset","select","setfenv","setmetatable","tonumber","tostring","type","unpack","xpcall","coroutine.create","coroutine.resume","coroutine.running","coroutine.status","coroutine.wrap","coroutine.yield","module","require","package.loadlib","package.seeall","string.byte","string.char","string.dump","string.find","string.format","string.gmatch","string.gsub","string.len","string.lower","string.match","string.rep","string.reverse","string.sub","string.upper","table.concat","table.insert","table.maxn","table.remove","table.sort","math.abs","math.acos","math.asin","math.atan","math.atan2","math.ceil","math.cos","math.cosh","math.deg","math.exp","math.floor","math.fmod","math.frexp","math.ldexp","math.log","math.log10","math.max","math.min","math.modf","math.pow","math.rad","math.random","math.randomseed","math.sin","math.sinh","math.sqrt","math.tan","math.tanh","io.close","io.flush","io.input","io.lines","io.open","io.output","io.popen","io.read","io.tmpfile","io.type","io.write","os.clock","os.date","os.difftime","os.execute","os.exit","os.getenv","os.remove","os.rename","os.setlocale","os.time","os.tmpname","debug.debug","debug.getfenv","debug.gethook","debug.getinfo","debug.getlocal","debug.getmetatable","debug.getregistry","debug.getupvalue","debug.setfenv","debug.sethook","debug.setlocal","debug.setmetatable","debug.setupvalue","debug.traceback"],"prototypes":["assert (v [, message])","collectgarbage ([opt [, arg]])","dofile ([filename])","error (message [, level])","getfenv ([f])","getmetatable (object)","ipairs (t)","load (func [, chunkname])","loadfile ([filename])","loadstring (string [, chunkname])","next (table [, index])","pairs (t)","pcall (f, arg1, ...)","print (...)","rawequal (v1, v2)","rawget (table, index)","rawset (table, index, value)","select (index, ...)","setfenv (f, table)","setmetatable (table, metatable)","tonumber (e [, base])","tostring (e)","type (v)","unpack (list [, i [, j]])","xpcall (f, err)","coroutine.create (f)","coroutine.resume (co [, val1, ...])","coroutine.running ()","coroutine.status (co)","coroutine.wrap (f)","coroutine.yield (...)","module (name [, ...])","require (modname)","package.loadlib (libname, funcname)","package.seeall (module)","string.byte (s [, i [, j]])","string.char (...)","string.dump (function)","string.find (s, pattern [, init [, plain]])","string.format (formatstring, ...)","string.gmatch (s, pattern)","string.gsub (s, pattern, repl [, n])","string.len (s)","string.lower (s)","string.match (s, pattern [, init])","string.rep (s, n)","string.reverse (s)","string.sub (s, i [, j])","string.upper (s)","table.concat (table [, sep [, i [, j]]])","table.insert (table, [pos,] value)","table.maxn (table)","table.remove (table [, pos])","table.sort (table [, comp])","math.abs (x)","math.acos (x)","math.asin (x)","math.atan (x)","math.atan2 (y, x)","math.ceil (x)","math.cos (x)","math.cosh (x)","math.deg (x)","math.exp (x)","math.floor (x)","math.fmod (x, y)","math.frexp (x)","math.ldexp (m, e)","math.log (x)","math.log10 (x)","math.max (x, ...)","math.min (x, ...)","math.modf (x)","math.pow (x, y)","math.rad (x)","math.random ([m [, n]])","math.randomseed (x)","math.sin (x)","math.sinh (x)","math.sqrt (x)","math.tan (x)","math.tanh (x)","io.close ([file])","io.flush ()","io.input ([file])","io.lines ([filename])","io.open (filename [, mode])","io.output ([file])","io.popen (prog [, mode])","io.read (...)","io.tmpfile ()","io.type (obj)","io.write (...)","os.clock ()","os.date ([format [, time]])","os.difftime (t2, t1)","os.execute ([command])","os.exit ([code])","os.getenv (varname)","os.remove (filename)","os.rename (oldname, newname)","os.setlocale (locale [, category])","os.time ([table])","os.tmpname ()","debug.debug ()","debug.getfenv (o)","debug.gethook ([thread])","debug.getinfo ([thread,] function [, what])","debug.getlocal ([thread,] level, local)","debug.getmetatable (object)","debug.getregistry ()","debug.getupvalue (func, up)","debug.setfenv (object, table)","debug.sethook ([thread,] hook, mask [, count])","debug.setlocal ([thread,] level, local, value)","debug.setmetatable (object, table)","debug.setupvalue (func, up, value)","debug.traceback ([thread,] [message [, level]])"],"extendedConfidence":true,"icon":"function"},{"items":["assert","collectgarbage","dofile","error","getfenv","getmetatable","ipairs","load","loadfile","loadstring","next","pairs","pcall","print","rawequal","rawget","rawset","select","setfenv","setmetatable","tonumber","tostring","type","unpack","xpcall","coroutine.create","coroutine.resume","coroutine.running","coroutine.status","coroutine.wrap","coroutine.yield","module","require","package.loadlib","package.seeall","string.byte","string.char","string.dump","string.find","string.format","string.gmatch","string.gsub","string.len","string.lower","string.match","string.rep","string.reverse","string.sub","string.upper","table.concat","table.insert","table.maxn","table.remove","table.sort","math.abs","math.acos","math.asin","math.atan","math.atan2","math.ceil","math.cos","math.cosh","math.deg","math.exp","math.floor","math.fmod","math.frexp","math.ldexp","math.log","math.log10","math.max","math.min","math.modf","math.pow","math.rad","math.random","math.randomseed","math.sin","math.sinh","math.sqrt","math.tan","math.tanh","io.close","io.flush","io.input","io.lines","io.open","io.output","io.popen","io.read","io.tmpfile","io.type","io.write","os.clock","os.date","os.difftime","os.execute","os.exit","os.getenv","os.remove","os.rename","os.setlocale","os.time","os.tmpname","debug.debug","debug.getfenv","debug.gethook","debug.getinfo","debug.getlocal","debug.getmetatable","debug.getregistry","debug.getupvalue","debug.setfenv","debug.sethook","debug.setlocal","debug.setmetatable","debug.setupvalue","debug.traceback"],"prototypes":["assert (v [, message])","collectgarbage ([opt [, arg]])","dofile ([filename])","error (message [, level])","getfenv ([f])","getmetatable (object)","ipairs (t)","load (func [, chunkname])","loadfile ([filename])","loadstring (string [, chunkname])","next (table [, index])","pairs (t)","pcall (f, arg1, ...)","print (...)","rawequal (v1, v2)","rawget (table, index)","rawset (table, index, value)","select (index, ...)","setfenv (f, table)","setmetatable (table, metatable)","tonumber (e [, base])","tostring (e)","type (v)","unpack (list [, i [, j]])","xpcall (f, err)","coroutine.create (f)","coroutine.resume (co [, val1, ...])","coroutine.running ()","coroutine.status (co)","coroutine.wrap (f)","coroutine.yield (...)","module (name [, ...])","require (modname)","package.loadlib (libname, funcname)","package.seeall (module)","string.byte (s [, i [, j]])","string.char (...)","string.dump (function)","string.find (s, pattern [, init [, plain]])","string.format (formatstring, ...)","string.gmatch (s, pattern)","string.gsub (s, pattern, repl [, n])","string.len (s)","string.lower (s)","string.match (s, pattern [, init])","string.rep (s, n)","string.reverse (s)","string.sub (s, i [, j])","string.upper (s)","table.concat (table [, sep [, i [, j]]])","table.insert (table, [pos,] value)","table.maxn (table)","table.remove (table [, pos])","table.sort (table [, comp])","math.abs (x)","math.acos (x)","math.asin (x)","math.atan (x)","math.atan2 (y, x)","math.ceil (x)","math.cos (x)","math.cosh (x)","math.deg (x)","math.exp (x)","math.floor (x)","math.fmod (x, y)","math.frexp (x)","math.ldexp (m, e)","math.log (x)","math.log10 (x)","math.max (x, ...)","math.min (x, ...)","math.modf (x)","math.pow (x, y)","math.rad (x)","math.random ([m [, n]])","math.randomseed (x)","math.sin (x)","math.sinh (x)","math.sqrt (x)","math.tan (x)","math.tanh (x)","io.close ([file])","io.flush ()","io.input ([file])","io.lines ([filename])","io.open (filename [, mode])","io.output ([file])","io.popen (prog [, mode])","io.read (...)","io.tmpfile ()","io.type (obj)","io.write (...)","os.clock ()","os.date ([format [, time]])","os.difftime (t2, t1)","os.execute ([command])","os.exit ([code])","os.getenv (varname)","os.remove (filename)","os.rename (oldname, newname)","os.setlocale (locale [, category])","os.time ([table])","os.tmpname ()","debug.debug ()","debug.getfenv (o)","debug.gethook ([thread])","debug.getinfo ([thread,] function [, what])","debug.getlocal ([thread,] level, local)","debug.getmetatable (object)","debug.getregistry ()","debug.getupvalue (func, up)","debug.setfenv (object, table)","debug.sethook ([thread,] hook, mask [, count])","debug.setlocal ([thread,] level, local, value)","debug.setmetatable (object, table)","debug.setupvalue (func, up, value)","debug.traceback ([thread,] [message [, level]])"],"extendedConfidence":true,"icon":"function"},{"items":["assert","collectgarbage","dofile","error","getfenv","getmetatable","ipairs","load","loadfile","loadstring","next","pairs","pcall","print","rawequal","rawget","rawset","select","setfenv","setmetatable","tonumber","tostring","type","unpack","xpcall","coroutine.create","coroutine.resume","coroutine.running","coroutine.status","coroutine.wrap","coroutine.yield","module","require","package.loadlib","package.seeall","string.byte","string.char","string.dump","string.find","string.format","string.gmatch","string.gsub","string.len","string.lower","string.match","string.rep","string.reverse","string.sub","string.upper","table.concat","table.insert","table.maxn","table.remove","table.sort","math.abs","math.acos","math.asin","math.atan","math.atan2","math.ceil","math.cos","math.cosh","math.deg","math.exp","math.floor","math.fmod","math.frexp","math.ldexp","math.log","math.log10","math.max","math.min","math.modf","math.pow","math.rad","math.random","math.randomseed","math.sin","math.sinh","math.sqrt","math.tan","math.tanh","io.close","io.flush","io.input","io.lines","io.open","io.output","io.popen","io.read","io.tmpfile","io.type","io.write","os.clock","os.date","os.difftime","os.execute","os.exit","os.getenv","os.remove","os.rename","os.setlocale","os.time","os.tmpname","debug.debug","debug.getfenv","debug.gethook","debug.getinfo","debug.getlocal","debug.getmetatable","debug.getregistry","debug.getupvalue","debug.setfenv","debug.sethook","debug.setlocal","debug.setmetatable","debug.setupvalue","debug.traceback"],"prototypes":["assert (v [, message])","collectgarbage ([opt [, arg]])","dofile ([filename])","error (message [, level])","getfenv ([f])","getmetatable (object)","ipairs (t)","load (func [, chunkname])","loadfile ([filename])","loadstring (string [, chunkname])","next (table [, index])","pairs (t)","pcall (f, arg1, ...)","print (...)","rawequal (v1, v2)","rawget (table, index)","rawset (table, index, value)","select (index, ...)","setfenv (f, table)","setmetatable (table, metatable)","tonumber (e [, base])","tostring (e)","type (v)","unpack (list [, i [, j]])","xpcall (f, err)","coroutine.create (f)","coroutine.resume (co [, val1, ...])","coroutine.running ()","coroutine.status (co)","coroutine.wrap (f)","coroutine.yield (...)","module (name [, ...])","require (modname)","package.loadlib (libname, funcname)","package.seeall (module)","string.byte (s [, i [, j]])","string.char (...)","string.dump (function)","string.find (s, pattern [, init [, plain]])","string.format (formatstring, ...)","string.gmatch (s, pattern)","string.gsub (s, pattern, repl [, n])","string.len (s)","string.lower (s)","string.match (s, pattern [, init])","string.rep (s, n)","string.reverse (s)","string.sub (s, i [, j])","string.upper (s)","table.concat (table [, sep [, i [, j]]])","table.insert (table, [pos,] value)","table.maxn (table)","table.remove (table [, pos])","table.sort (table [, comp])","math.abs (x)","math.acos (x)","math.asin (x)","math.atan (x)","math.atan2 (y, x)","math.ceil (x)","math.cos (x)","math.cosh (x)","math.deg (x)","math.exp (x)","math.floor (x)","math.fmod (x, y)","math.frexp (x)","math.ldexp (m, e)","math.log (x)","math.log10 (x)","math.max (x, ...)","math.min (x, ...)","math.modf (x)","math.pow (x, y)","math.rad (x)","math.random ([m [, n]])","math.randomseed (x)","math.sin (x)","math.sinh (x)","math.sqrt (x)","math.tan (x)","math.tanh (x)","io.close ([file])","io.flush ()","io.input ([file])","io.lines ([filename])","io.open (filename [, mode])","io.output ([file])","io.popen (prog [, mode])","io.read (...)","io.tmpfile ()","io.type (obj)","io.write (...)","os.clock ()","os.date ([format [, time]])","os.difftime (t2, t1)","os.execute ([command])","os.exit ([code])","os.getenv (varname)","os.remove (filename)","os.rename (oldname, newname)","os.setlocale (locale [, category])","os.time ([table])","os.tmpname ()","debug.debug ()","debug.getfenv (o)","debug.gethook ([thread])","debug.getinfo ([thread,] function [, what])","debug.getlocal ([thread,] level, local)","debug.getmetatable (object)","debug.getregistry ()","debug.getupvalue (func, up)","debug.setfenv (object, table)","debug.sethook ([thread,] hook, mask [, count])","debug.setlocal ([thread,] level, local, value)","debug.setmetatable (object, table)","debug.setupvalue (func, up, value)","debug.traceback ([thread,] [message [, level]])"],"extendedConfidence":true,"icon":"function"}],"r":[{"items":["-","-.Date","-.POSIXt",":","::",":::","!","!.hexmode","!.octmode","!=","(","[","[.AsIs","[.data.frame","[.Date","[.difftime","[.factor","[.hexmode","[.listof","[.noquote","[.numeric_version","[.octmode","[.POSIXct","[.POSIXlt","[.simple.list","[[","[[.data.frame","[[.Date","[[.factor","[[.numeric_version","[[.POSIXct","[[<-","[[<-.data.frame","[[<-.factor","[[<-.numeric_version","[<-","[<-.data.frame","[<-.Date","[<-.factor","[<-.POSIXct","[<-.POSIXlt","{","@","*","*.difftime","/","/.difftime","&","&.hexmode","&.octmode","&&","%*%","%/%","%%","%in%","%o%","%x%","^","+","+.Date","+.POSIXt","<","<-","<<-","<=","=","==",">",">=","|","|.hexmode","|.octmode","||","~","$","$.DLLInfo","$.package_version","$<-","$<-.data.frame","abbreviate","abs","acos","acosh","addNA","addTaskCallback","agrep","alist","all","all.equal","all.equal.character","all.equal.default","all.equal.factor","all.equal.formula","all.equal.language","all.equal.list","all.equal.numeric","all.equal.POSIXct","all.equal.raw","all.names","all.vars","any","anyDuplicated","anyDuplicated.array","anyDuplicated.data.frame","anyDuplicated.default","anyDuplicated.matrix","aperm","aperm.default","aperm.table","append","apply","Arg","args","array","arrayInd","as.array","as.array.default","as.call","as.character","as.character.condition","as.character.Date","as.character.default","as.character.error","as.character.factor","as.character.hexmode","as.character.numeric_version","as.character.octmode","as.character.POSIXt","as.character.srcref","as.complex","as.data.frame","as.data.frame.array","as.data.frame.AsIs","as.data.frame.character","as.data.frame.complex","as.data.frame.data.frame","as.data.frame.Date","as.data.frame.default","as.data.frame.difftime","as.data.frame.factor","as.data.frame.integer","as.data.frame.list","as.data.frame.logical","as.data.frame.matrix","as.data.frame.model.matrix","as.data.frame.numeric","as.data.frame.numeric_version","as.data.frame.ordered","as.data.frame.POSIXct","as.data.frame.POSIXlt","as.data.frame.raw","as.data.frame.table","as.data.frame.ts","as.data.frame.vector","as.Date","as.Date.character","as.Date.date","as.Date.dates","as.Date.default","as.Date.factor","as.Date.numeric","as.Date.POSIXct","as.Date.POSIXlt","as.difftime","as.double","as.double.difftime","as.double.POSIXlt","as.environment","as.expression","as.expression.default","as.factor","as.function","as.function.default","as.hexmode","as.integer","as.list","as.list.data.frame","as.list.Date","as.list.default","as.list.environment","as.list.factor","as.list.function","as.list.numeric_version","as.list.POSIXct","as.logical","as.logical.factor","as.matrix","as.matrix.data.frame","as.matrix.default","as.matrix.noquote","as.matrix.POSIXlt","as.name","as.null","as.null.default","as.numeric","as.numeric_version","as.octmode","as.ordered","as.package_version","as.pairlist","as.POSIXct","as.POSIXct.date","as.POSIXct.Date","as.POSIXct.dates","as.POSIXct.default","as.POSIXct.numeric","as.POSIXct.POSIXlt","as.POSIXlt","as.POSIXlt.character","as.POSIXlt.date","as.POSIXlt.Date","as.POSIXlt.dates","as.POSIXlt.default","as.POSIXlt.factor","as.POSIXlt.numeric","as.POSIXlt.POSIXct","as.qr","as.raw","as.real","as.single","as.single.default","as.symbol","as.table","as.table.default","as.vector","as.vector.factor","asin","asinh","asNamespace","asS3","asS4","assign","atan","atan2","atanh","attach","attachNamespace","attr","attr.all.equal","attr<-","attributes","attributes<-","autoload","autoloader","backsolve","baseenv","basename","besselI","besselJ","besselK","besselY","beta","bindingIsActive","bindingIsLocked","bindtextdomain","body","body<-","bquote","break","browser","browserCondition","browserSetDebug","browserText","builtins","by","by.data.frame","by.default","bzfile","c","c.Date","c.noquote","c.numeric_version","c.POSIXct","c.POSIXlt","call","callCC","capabilities","casefold","cat","category","cbind","cbind.data.frame","ceiling","char.expand","character","charmatch","charToRaw","chartr","check_tzones","chol","chol.default","chol2inv","choose","class","class<-","close","close.connection","close.srcfile","close.srcfilealias","closeAllConnections","col","colMeans","colnames","colnames<-","colSums","commandArgs","comment","comment<-","complex","computeRestarts","conditionCall","conditionCall.condition","conditionMessage","conditionMessage.condition","conflicts","Conj","contributors","cos","cosh","crossprod","Cstack_info","cummax","cummin","cumprod","cumsum","cut","cut.Date","cut.default","cut.POSIXt","data.class","data.frame","data.matrix","date","debug","debugonce","default.stringsAsFactors","delayedAssign","deparse","det","detach","determinant","determinant.matrix","dget","diag","diag<-","diff","diff.Date","diff.default","diff.POSIXt","difftime","digamma","dim","dim.data.frame","dim<-","dimnames","dimnames.data.frame","dimnames<-","dimnames<-.data.frame","dir","dir.create","dirname","do.call","double","dput","dQuote","drop","droplevels","droplevels.data.frame","droplevels.factor","dump","duplicated","duplicated.array","duplicated.data.frame","duplicated.default","duplicated.matrix","duplicated.numeric_version","duplicated.POSIXlt","dyn.load","dyn.unload","eapply","eigen","emptyenv","enc2native","enc2utf8","encodeString","Encoding","Encoding<-","enquote","env.profile","environment","environment<-","environmentIsLocked","environmentName","eval","eval.parent","evalq","exists","exp","expand.grid","expm1","expression","factor","factorial","fifo","file","file.access","file.append","file.choose","file.copy","file.create","file.exists","file.info","file.link","file.path","file.remove","file.rename","file.show","file.symlink","Filter","Find","find.package","findInterval","findPackageEnv","findRestart","floor","flush","flush.connection","for","force","formals","formals<-","format","format.AsIs","format.data.frame","format.Date","format.default","format.difftime","format.factor","format.hexmode","format.info","format.libraryIQR","format.numeric_version","format.octmode","format.packageInfo","format.POSIXct","format.POSIXlt","format.pval","format.summaryDefault","formatC","formatDL","forwardsolve","function","gamma","gammaCody","gc","gc.time","gcinfo","gctorture","gctorture2","get","getAllConnections","getCallingDLL","getCallingDLLe","getCConverterDescriptions","getCConverterStatus","getConnection","getDLLRegisteredRoutines","getDLLRegisteredRoutines.character","getDLLRegisteredRoutines.DLLInfo","getElement","geterrmessage","getExportedValue","getHook","getLoadedDLLs","getNamespace","getNamespaceExports","getNamespaceImports","getNamespaceInfo","getNamespaceName","getNamespaceUsers","getNamespaceVersion","getNativeSymbolInfo","getNumCConverters","getOption","getRversion","getSrcLines","getTaskCallbackNames","gettext","gettextf","getwd","gl","globalenv","gregexpr","grep","grepl","grepRaw","gsub","gzcon","gzfile","I","iconv","iconvlist","icuSetCollate","identical","identity","if","ifelse","Im","importIntoEnv","inherits","integer","interaction","interactive","intersect","intToBits","intToUtf8","inverse.rle","invisible","invokeRestart","invokeRestartInteractively","is.array","is.atomic","is.call","is.character","is.complex","is.data.frame","is.double","is.element","is.environment","is.expression","is.factor","is.finite","is.function","is.infinite","is.integer","is.language","is.list","is.loaded","is.logical","is.matrix","is.na","is.na.data.frame","is.na.numeric_version","is.na.POSIXlt","is.na<-","is.na<-.default","is.na<-.factor","is.name","is.nan","is.null","is.numeric","is.numeric_version","is.numeric.Date","is.numeric.difftime","is.numeric.POSIXt","is.object","is.ordered","is.package_version","is.pairlist","is.primitive","is.qr","is.R","is.raw","is.real","is.recursive","is.single","is.symbol","is.table","is.unsorted","is.vector","isatty","isBaseNamespace","isdebugged","isIncomplete","isNamespace","ISOdate","ISOdatetime","isOpen","isRestart","isS4","isSeekable","isSymmetric","isSymmetric.matrix","isTRUE","jitter","julian","julian.Date","julian.POSIXt","kappa","kappa.default","kappa.lm","kappa.qr","kappa.tri","kronecker","l10n_info","La.svd","labels","labels.default","lapply","lazyLoad","lazyLoadDBexec","lazyLoadDBfetch","lbeta","lchoose","length","length.POSIXlt","length<-","length<-.factor","levels","levels.default","levels<-","levels<-.factor","lfactorial","lgamma","library","library.dynam","library.dynam.unload","licence","license","list","list.dirs","list.files","list2env","load","loadedNamespaces","loadingNamespaceInfo","loadNamespace","local","lockBinding","lockEnvironment","log","log10","log1p","log2","logb","logical","lower.tri","ls","make.names","make.unique","makeActiveBinding","manglePackageName","Map","mapply","margin.table","mat.or.vec","match","match.arg","match.call","match.fun","Math.data.frame","Math.Date","Math.difftime","Math.factor","Math.POSIXt","matrix","max","max.col","mean","mean.data.frame","mean.Date","mean.default","mean.difftime","mean.POSIXct","mean.POSIXlt","mem.limits","memCompress","memDecompress","memory.profile","merge","merge.data.frame","merge.default","message","mget","min","missing","Mod","mode","mode<-","months","months.Date","months.POSIXt","mostattributes<-","names","names.POSIXlt","names<-","names<-.POSIXlt","namespaceExport","namespaceImport","namespaceImportClasses","namespaceImportFrom","namespaceImportMethods","nargs","nchar","ncol","NCOL","Negate","new.env","next","NextMethod","ngettext","nlevels","noquote","norm","normalizePath","nrow","NROW","numeric","numeric_version","nzchar","objects","oldClass","oldClass<-","on.exit","open","open.connection","open.srcfile","open.srcfilealias","open.srcfilecopy","Ops.data.frame","Ops.Date","Ops.difftime","Ops.factor","Ops.numeric_version","Ops.ordered","Ops.POSIXt","options","order","ordered","outer","package_version","packageEvent","packageHasNamespace","packageStartupMessage","packBits","pairlist","parent.env","parent.env<-","parent.frame","parse","parseNamespaceFile","paste","paste0","path.expand","path.package","pipe","pmatch","pmax","pmax.int","pmin","pmin.int","polyroot","pos.to.env","Position","pretty","pretty.default","prettyNum","print","print.AsIs","print.by","print.condition","print.connection","print.data.frame","print.Date","print.default","print.difftime","print.DLLInfo","print.DLLInfoList","print.DLLRegisteredRoutines","print.factor","print.function","print.hexmode","print.libraryIQR","print.listof","print.NativeRoutineList","print.noquote","print.numeric_version","print.octmode","print.packageInfo","print.POSIXct","print.POSIXlt","print.proc_time","print.restart","print.rle","print.simple.list","print.srcfile","print.srcref","print.summary.table","print.summaryDefault","print.table","print.warnings","prmatrix","proc.time","prod","prop.table","psigamma","pushBack","pushBackLength","q","qr","qr.coef","qr.default","qr.fitted","qr.Q","qr.qty","qr.qy","qr.R","qr.resid","qr.solve","qr.X","quarters","quarters.Date","quarters.POSIXt","quit","quote","R_system_version","R.home","R.Version","range","range.default","rank","rapply","raw","rawConnection","rawConnectionValue","rawShift","rawToBits","rawToChar","rbind","rbind.data.frame","rcond","Re","read.dcf","readBin","readChar","readline","readLines","readRDS","readRenviron","real","Recall","Reduce","reg.finalizer","regexec","regexpr","registerS3method","registerS3methods","regmatches","regmatches<-","remove","removeCConverter","removeTaskCallback","rep","rep.Date","rep.factor","rep.int","rep.numeric_version","rep.POSIXct","rep.POSIXlt","repeat","replace","replicate","require","requireNamespace","restartDescription","restartFormals","retracemem","return","rev","rev.default","rle","rm","RNGkind","RNGversion","round","round.Date","round.POSIXt","row","row.names","row.names.data.frame","row.names.default","row.names<-","row.names<-.data.frame","row.names<-.default","rowMeans","rownames","rownames<-","rowsum","rowsum.data.frame","rowsum.default","rowSums","sample","sample.int","sapply","save","save.image","saveRDS","scale","scale.default","scan","search","searchpaths","seek","seek.connection","seq","seq_along","seq_len","seq.Date","seq.default","seq.int","seq.POSIXt","sequence","serialize","set.seed","setCConverterStatus","setdiff","setequal","setHook","setNamespaceInfo","setSessionTimeLimit","setTimeLimit","setwd","showConnections","shQuote","sign","signalCondition","signif","simpleCondition","simpleError","simpleMessage","simpleWarning","simplify2array","sin","single","sinh","sink","sink.number","slice.index","socketConnection","socketSelect","solve","solve.default","solve.qr","sort","sort.default","sort.int","sort.list","sort.POSIXlt","source","split","split.data.frame","split.Date","split.default","split.POSIXct","split<-","split<-.data.frame","split<-.default","sprintf","sqrt","sQuote","srcfile","srcfilealias","srcfilecopy","srcref","standardGeneric","stderr","stdin","stdout","stop","stopifnot","storage.mode","storage.mode<-","strftime","strptime","strsplit","strtoi","strtrim","structure","strwrap","sub","subset","subset.data.frame","subset.default","subset.matrix","substitute","substr","substr<-","substring","substring<-","sum","summary","summary.connection","summary.data.frame","Summary.data.frame","summary.Date","Summary.Date","summary.default","Summary.difftime","summary.factor","Summary.factor","summary.matrix","Summary.numeric_version","Summary.ordered","summary.POSIXct","Summary.POSIXct","summary.POSIXlt","Summary.POSIXlt","summary.srcfile","summary.srcref","summary.table","suppressMessages","suppressPackageStartupMessages","suppressWarnings","svd","sweep","switch","sys.call","sys.calls","Sys.chmod","Sys.Date","sys.frame","sys.frames","sys.function","Sys.getenv","Sys.getlocale","Sys.getpid","Sys.glob","Sys.info","sys.load.image","Sys.localeconv","sys.nframe","sys.on.exit","sys.parent","sys.parents","Sys.readlink","sys.save.image","Sys.setenv","Sys.setFileTime","Sys.setlocale","Sys.sleep","sys.source","sys.status","Sys.time","Sys.timezone","Sys.umask","Sys.unsetenv","Sys.which","system","system.file","system.time","system2","t","t.data.frame","t.default","table","tabulate","tan","tanh","tapply","taskCallbackManager","tcrossprod","tempdir","tempfile","testPlatformEquivalence","textConnection","textConnectionValue","tolower","topenv","toString","toString.default","toupper","trace","traceback","tracemem","tracingState","transform","transform.data.frame","transform.default","trigamma","trunc","trunc.Date","trunc.POSIXt","truncate","truncate.connection","try","tryCatch","typeof","unclass","undebug","union","unique","unique.array","unique.data.frame","unique.default","unique.matrix","unique.numeric_version","unique.POSIXlt","units","units.difftime","units<-","units<-.difftime","unix.time","unlink","unlist","unloadNamespace","unlockBinding","unname","unserialize","unsplit","untrace","untracemem","unz","upper.tri","url","UseMethod","utf8ToInt","vapply","vector","Vectorize","warning","warnings","weekdays","weekdays.Date","weekdays.POSIXt","which","which.max","which.min","while","with","with.default","withCallingHandlers","within","within.data.frame","within.list","withRestarts","withVisible","write","write.dcf","writeBin","writeChar","writeLines","xor","xor.hexmode","xor.octmode","xpdrows.data.frame","xtfrm","xtfrm.AsIs","xtfrm.Date","xtfrm.default","xtfrm.difftime","xtfrm.factor","xtfrm.numeric_version","xtfrm.POSIXct","xtfrm.POSIXlt","xtfrm.Surv","xzfile","zapsmall","acf","acf2AR","add.scope","add1","addmargins","aggregate","aggregate.data.frame","aggregate.default","aggregate.ts","AIC","alias","anova","anova.glm","anova.glmlist","anova.lm","anova.lmlist","anova.mlm","anovalist.lm","ansari.test","aov","approx","approxfun","ar","ar.burg","ar.mle","ar.ols","ar.yw","arima","arima.sim","arima0","arima0.diag","ARMAacf","ARMAtoMA","as.dendrogram","as.dist","as.formula","as.hclust","as.stepfun","as.ts","asOneSidedFormula","ave","bandwidth.kernel","bartlett.test","BIC","binom.test","binomial","biplot","Box.test","bw.bcv","bw.nrd","bw.nrd0","bw.SJ","bw.ucv","C","cancor","case.names","ccf","chisq.test","clearNames","cmdscale","coef","coefficients","complete.cases","confint","confint.default","constrOptim","contr.helmert","contr.poly","contr.SAS","contr.sum","contr.treatment","contrasts","contrasts<-","convolve","cooks.distance","cophenetic","cor","cor.test","cov","cov.wt","cov2cor","covratio","cpgram","cutree","cycle","D","dbeta","dbinom","dcauchy","dchisq","decompose","delete.response","deltat","dendrapply","density","density.default","deriv","deriv.default","deriv.formula","deriv3","deriv3.default","deriv3.formula","deviance","dexp","df","df.kernel","df.residual","dfbeta","dfbetas","dffits","dgamma","dgeom","dhyper","diff.ts","diffinv","dist","dlnorm","dlogis","dmultinom","dnbinom","dnorm","dpois","drop.scope","drop.terms","drop1","dsignrank","dt","dummy.coef","dunif","dweibull","dwilcox","ecdf","eff.aovlist","effects","embed","end","estVar","expand.model.frame","extractAIC","factanal","factor.scope","family","fft","filter","fisher.test","fitted","fitted.values","fivenum","fligner.test","formula","frequency","friedman.test","ftable","Gamma","gaussian","get_all_vars","getCall","getInitial","glm","glm.control","glm.fit","glm.fit.null","hasTsp","hat","hatvalues","hatvalues.lm","hclust","heatmap","HoltWinters","influence","influence.measures","integrate","interaction.plot","inverse.gaussian","IQR","is.empty.model","is.leaf","is.mts","is.stepfun","is.ts","is.tskernel","isoreg","KalmanForecast","KalmanLike","KalmanRun","KalmanSmooth","kernapply","kernel","kmeans","knots","kruskal.test","ks.test","ksmooth","lag","lag.plot","line","lines.ts","lm","lm.fit","lm.fit.null","lm.influence","lm.wfit","lm.wfit.null","loadings","loess","loess.control","loess.smooth","logLik","loglin","lowess","ls.diag","ls.print","lsfit","mad","mahalanobis","make.link","makeARIMA","makepredictcall","manova","mantelhaen.test","mauchley.test","mauchly.test","mcnemar.test","median","median.default","medpolish","model.extract","model.frame","model.frame.aovlist","model.frame.default","model.frame.glm","model.frame.lm","model.matrix","model.matrix.default","model.matrix.lm","model.offset","model.response","model.tables","model.weights","monthplot","mood.test","mvfft","na.action","na.contiguous","na.exclude","na.fail","na.omit","na.pass","napredict","naprint","naresid","nextn","nlm","nlminb","nls","nls.control","NLSstAsymptotic","NLSstClosestX","NLSstLfAsymptote","NLSstRtAsymptote","nobs","numericDeriv","offset","oneway.test","optim","optimHess","optimise","optimize","order.dendrogram","p.adjust","pacf","pairwise.prop.test","pairwise.t.test","pairwise.table","pairwise.wilcox.test","pbeta","pbinom","pbirthday","pcauchy","pchisq","pexp","pf","pgamma","pgeom","phyper","plclust","plnorm","plogis","plot.density","plot.ecdf","plot.lm","plot.mlm","plot.spec","plot.spec.coherency","plot.spec.phase","plot.stepfun","plot.ts","plot.TukeyHSD","pnbinom","pnorm","poisson","poisson.test","poly","polym","power","power.anova.test","power.prop.test","power.t.test","PP.test","ppoints","ppois","ppr","prcomp","predict","predict.glm","predict.lm","predict.mlm","predict.poly","preplot","princomp","print.anova","print.coefmat","print.density","print.family","print.formula","print.ftable","print.glm","print.infl","print.integrate","print.lm","print.logLik","print.terms","print.ts","printCoefmat","profile","proj","promax","prop.test","prop.trend.test","psignrank","pt","ptukey","punif","pweibull","pwilcox","qbeta","qbinom","qbirthday","qcauchy","qchisq","qexp","qf","qgamma","qgeom","qhyper","qlnorm","qlogis","qnbinom","qnorm","qpois","qqline","qqnorm","qqnorm.default","qqplot","qsignrank","qt","qtukey","quade.test","quantile","quantile.default","quasi","quasibinomial","quasipoisson","qunif","qweibull","qwilcox","r2dtable","rbeta","rbinom","rcauchy","rchisq","read.ftable","rect.hclust","reformulate","relevel","reorder","replications","reshape","reshapeLong","reshapeWide","resid","residuals","residuals.default","residuals.glm","residuals.lm","rexp","rf","rgamma","rgeom","rhyper","rlnorm","rlogis","rmultinom","rnbinom","rnorm","rpois","rsignrank","rstandard","rstandard.glm","rstandard.lm","rstudent","rstudent.glm","rstudent.lm","rt","runif","runmed","rweibull","rwilcox","rWishart","scatter.smooth","screeplot","sd","se.contrast","selfStart","setNames","shapiro.test","simulate","smooth","smooth.spline","smoothEnds","sortedXyData","spec.ar","spec.pgram","spec.taper","spectrum","spline","splinefun","splinefunH","SSasymp","SSasympOff","SSasympOrig","SSbiexp","SSD","SSfol","SSfpl","SSgompertz","SSlogis","SSmicmen","SSweibull","start","stat.anova","step","stepfun","stl","StructTS","summary.aov","summary.aovlist","summary.glm","summary.infl","summary.lm","summary.manova","summary.mlm","summary.stepfun","supsmu","symnum","t.test","termplot","terms","terms.aovlist","terms.default","terms.formula","terms.terms","time","toeplitz","ts","ts.intersect","ts.plot","ts.union","tsdiag","tsp","tsp<-","tsSmooth","TukeyHSD","TukeyHSD.aov","uniroot","update","update.default","update.formula","var","var.test","variable.names","varimax","vcov","weighted.mean","weighted.residuals","weights","wilcox.test","window","window<-","write.ftable","xtabs","?","adist","alarm","apropos","aregexec","argsAnywhere","as.person","as.personList","as.relistable","as.roman","aspell","aspell_package_Rd_files","aspell_package_vignettes","aspell_write_personal_dictionary_file","assignInMyNamespace","assignInNamespace","available.packages","bibentry","browseEnv","browseURL","browseVignettes","bug.report","capture.output","checkCRAN","chooseBioCmirror","chooseCRANmirror","citation","citEntry","citFooter","citHeader","close.socket","combn","compareVersion","contrib.url","count.fields","CRAN.packages","create.post","data","data.entry","dataentry","de","de.ncols","de.restore","de.setup","debugger","demo","download.file","download.packages","dump.frames","edit","emacs","example","file_test","file.edit","find","findLineNum","fix","fixInNamespace","flush.console","formatOL","formatUL","getAnywhere","getCRANmirrors","getFromNamespace","getS3method","getSrcDirectory","getSrcFilename","getSrcLocation","getSrcref","getTxtProgressBar","glob2rx","head","head.matrix","help","help.request","help.search","help.start","history","install.packages","installed.packages","is.relistable","limitedLabels","loadhistory","localeToCharset","ls.str","lsf.str","maintainer","make.packages.html","make.socket","makeRweaveLatexCodeRunner","memory.limit","memory.size","menu","methods","mirror2html","modifyList","new.packages","news","nsl","object.size","old.packages","package.contents","package.skeleton","packageDescription","packageStatus","packageVersion","page","person","personList","pico","prompt","promptData","promptPackage","rc.getOption","rc.options","rc.settings","rc.status","read.csv","read.csv2","read.delim","read.delim2","read.DIF","read.fortran","read.fwf","read.socket","read.table","readCitationFile","recover","relist","remove.packages","removeSource","Rprof","Rprofmem","RShowDoc","RSiteSearch","rtags","Rtangle","RtangleSetup","RtangleWritedoc","RweaveChunkPrefix","RweaveEvalWithOpt","RweaveLatex","RweaveLatexFinish","RweaveLatexOptions","RweaveLatexSetup","RweaveLatexWritedoc","RweaveTryStop","savehistory","select.list","sessionInfo","setBreakpoint","setRepositories","setTxtProgressBar","stack","Stangle","str","strOptions","summaryRprof","Sweave","SweaveHooks","SweaveSyntConv","tail","tail.matrix","tar","timestamp","toBibtex","toLatex","txtProgressBar","type.convert","unstack","untar","unzip","update.packages","update.packageStatus","upgrade","url.show","URLdecode","URLencode","vi","View","vignette","write.csv","write.csv2","write.socket","write.table","wsbrowser","xedit","xemacs","zip","zip.file.extract"],"icon":"function"}],"go":[{"items":["FileInfoHeader"],"prefix":"archive.","prototypes":[" any FileInfoHeader ( os.FileInfo , string )"],"extendedConfidence":false,"icon":"function"},{"items":["NewScanner","ScanBytes","ScanLines","ScanRunes","ScanWords"],"prefix":"bufio.","prototypes":[" any NewScanner ( io.Reader )"," any ScanBytes ( []uint8 , bool )"," any ScanLines ( []uint8 , bool )"," any ScanRunes ( []uint8 , bool )"," any ScanWords ( []uint8 , bool )"],"extendedConfidence":false,"icon":"function"},{"items":["TrimPrefix","TrimSuffix"],"prefix":"bytes.","prototypes":[" any TrimPrefix ( []uint8 , []uint8 )"," any TrimSuffix ( []uint8 , []uint8 )"],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"compress.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":["Equal","DecryptPEMBlock","EncryptPEMBlock","IsEncryptedPEMBlock","ParseECPrivateKey"],"prefix":"crypto.","prototypes":[" any Equal ( []uint8 , []uint8 )"," any DecryptPEMBlock ( *pem.Block , []uint8 )"," any EncryptPEMBlock ( io.Reader , string , []uint8 , []uint8 , PEMCipher )"," any IsEncryptedPEMBlock ( *pem.Block )"," any ParseECPrivateKey ( []uint8 )"],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"database.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"debug.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":["EscapeText"],"prefix":"encoding.","prototypes":[" any EscapeText ( io.Writer , []uint8 )"],"extendedConfidence":false,"icon":"function"},{"items":["NewCommentMap","Node","Source"],"prefix":"go.","prototypes":[" any NewCommentMap ( *token.FileSet , Node , []*CommentGroup )"," any Node ( io.Writer , *token.FileSet , interface{} )"," any Source ( []uint8 )"],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"image.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"io.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"log.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"math.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"mime.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":["ListenUnixgram","LookupNS","ParseTime","New","ParseAddress","ParseAddressList","TrimBytes","TrimString"],"prefix":"net.","prototypes":[" any ListenUnixgram ( string , *UnixAddr )"," any LookupNS ( string )"," any ParseTime ( string )"," any New ( *Options )"," any ParseAddress ( string )"," any ParseAddressList ( string )"," any TrimBytes ( []uint8 )"," any TrimString ( string )"],"extendedConfidence":false,"icon":"function"},{"items":["Stop"],"prefix":"os.","prototypes":[" any Stop ( chan<- os.Signal) )"],"extendedConfidence":false,"icon":"function"},{"items":["ChanOf","MakeFunc","MapOf","Select","SliceOf"],"prefix":"reflect.","prototypes":[" any ChanOf ( ChanDir , Type )"," any MakeFunc ( Type , func([]Value )"," any MapOf ( Type , Type )"," any Select ( []SelectCase )"," any SliceOf ( Type )"],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"regexp.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":["BlockProfile","SetBlockProfileRate","FreeOSMemory","ReadGCStats","SetGCPercent"],"prefix":"runtime.","prototypes":[" any BlockProfile ( []BlockProfileRecord )"," any SetBlockProfileRate ( int) )"," any FreeOSMemory ( ) )"," any ReadGCStats ( *GCStats) )"," any SetGCPercent ( int )"],"extendedConfidence":false,"icon":"function"},{"items":["Reverse"],"prefix":"sort.","prototypes":[" any Reverse ( Interface )"],"extendedConfidence":false,"icon":"function"},{"items":["TrimPrefix","TrimSuffix"],"prefix":"strings.","prototypes":[" any TrimPrefix ( string , string )"," any TrimSuffix ( string , string )"],"extendedConfidence":false,"icon":"function"},{"items":["Fchflags","SlicePtrFromStrings","Fchflags","SlicePtrFromStrings","Fchflags","SlicePtrFromStrings","Fchflags","SlicePtrFromStrings","Fchflags","SlicePtrFromStrings","Fchflags","SlicePtrFromStrings","Syscall9","Accept4","GetsockoptUcred","Getxattr","Listxattr","Pipe2","PtraceSyscall","Removexattr","Setxattr","SlicePtrFromStrings","Accept4","GetsockoptUcred","Getxattr","Listxattr","Pipe2","PtraceSyscall","Removexattr","Setxattr","SlicePtrFromStrings","Accept4","GetsockoptUcred","Getxattr","Listxattr","Pipe2","PtraceSyscall","Removexattr","Setxattr","SlicePtrFromStrings","Accept4","GetsockoptUcred","Getxattr","Listxattr","Pipe2","PtraceSyscall","Removexattr","Setxattr","SlicePtrFromStrings","Accept4","GetsockoptUcred","Getxattr","Listxattr","Pipe2","PtraceSyscall","Removexattr","Setxattr","SlicePtrFromStrings","CancelIoEx","ConnectEx","FreeAddrInfoW","GetAddrInfoW","GetConsoleMode","Getsockopt","LoadCancelIoEx","LoadConnectEx","LoadGetAddrInfo","ReadConsole","UTF16FromString","UTF16PtrFromString","WriteConsole","CancelIoEx","ConnectEx","FreeAddrInfoW","GetAddrInfoW","GetConsoleMode","Getsockopt","LoadCancelIoEx","LoadConnectEx","LoadGetAddrInfo","ReadConsole","UTF16FromString","UTF16PtrFromString","WriteConsole","BytePtrFromString","ByteSliceFromString","NsecToTimespec","TimespecToNsec","UtimesNano"],"prefix":"syscall.","prototypes":[" any Fchflags ( int , int )"," any SlicePtrFromStrings ( []string )"," any Fchflags ( int , int )"," any SlicePtrFromStrings ( []string )"," any Fchflags ( int , int )"," any SlicePtrFromStrings ( []string )"," any Fchflags ( int , int )"," any SlicePtrFromStrings ( []string )"," any Fchflags ( int , int )"," any SlicePtrFromStrings ( []string )"," any Fchflags ( int , int )"," any SlicePtrFromStrings ( []string )"," any Syscall9 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Accept4 ( int , int )"," any GetsockoptUcred ( int , int , int )"," any Getxattr ( string , string , []uint8 )"," any Listxattr ( string , []uint8 )"," any Pipe2 ( []int , int )"," any PtraceSyscall ( int , int )"," any Removexattr ( string , string )"," any Setxattr ( string , string , []uint8 , int )"," any SlicePtrFromStrings ( []string )"," any Accept4 ( int , int )"," any GetsockoptUcred ( int , int , int )"," any Getxattr ( string , string , []uint8 )"," any Listxattr ( string , []uint8 )"," any Pipe2 ( []int , int )"," any PtraceSyscall ( int , int )"," any Removexattr ( string , string )"," any Setxattr ( string , string , []uint8 , int )"," any SlicePtrFromStrings ( []string )"," any Accept4 ( int , int )"," any GetsockoptUcred ( int , int , int )"," any Getxattr ( string , string , []uint8 )"," any Listxattr ( string , []uint8 )"," any Pipe2 ( []int , int )"," any PtraceSyscall ( int , int )"," any Removexattr ( string , string )"," any Setxattr ( string , string , []uint8 , int )"," any SlicePtrFromStrings ( []string )"," any Accept4 ( int , int )"," any GetsockoptUcred ( int , int , int )"," any Getxattr ( string , string , []uint8 )"," any Listxattr ( string , []uint8 )"," any Pipe2 ( []int , int )"," any PtraceSyscall ( int , int )"," any Removexattr ( string , string )"," any Setxattr ( string , string , []uint8 , int )"," any SlicePtrFromStrings ( []string )"," any Accept4 ( int , int )"," any GetsockoptUcred ( int , int , int )"," any Getxattr ( string , string , []uint8 )"," any Listxattr ( string , []uint8 )"," any Pipe2 ( []int , int )"," any PtraceSyscall ( int , int )"," any Removexattr ( string , string )"," any Setxattr ( string , string , []uint8 , int )"," any SlicePtrFromStrings ( []string )"," any CancelIoEx ( Handle , *Overlapped )"," any ConnectEx ( Handle , Sockaddr , *uint8 , uint32 , *uint32 , *Overlapped )"," any FreeAddrInfoW ( *AddrinfoW) )"," any GetAddrInfoW ( *uint16 , *uint16 , *AddrinfoW , **AddrinfoW )"," any GetConsoleMode ( Handle , *uint32 )"," any Getsockopt ( Handle , int32 , int32 , *uint8 , *int32 )"," any LoadCancelIoEx (  )"," any LoadConnectEx (  )"," any LoadGetAddrInfo (  )"," any ReadConsole ( Handle , *uint16 , uint32 , *uint32 , *uint8 )"," any UTF16FromString ( string )"," any UTF16PtrFromString ( string )"," any WriteConsole ( Handle , *uint16 , uint32 , *uint32 , *uint8 )"," any CancelIoEx ( Handle , *Overlapped )"," any ConnectEx ( Handle , Sockaddr , *uint8 , uint32 , *uint32 , *Overlapped )"," any FreeAddrInfoW ( *AddrinfoW) )"," any GetAddrInfoW ( *uint16 , *uint16 , *AddrinfoW , **AddrinfoW )"," any GetConsoleMode ( Handle , *uint32 )"," any Getsockopt ( Handle , int32 , int32 , *uint8 , *int32 )"," any LoadCancelIoEx (  )"," any LoadConnectEx (  )"," any LoadGetAddrInfo (  )"," any ReadConsole ( Handle , *uint16 , uint32 , *uint32 , *uint8 )"," any UTF16FromString ( string )"," any UTF16PtrFromString ( string )"," any WriteConsole ( Handle , *uint16 , uint32 , *uint32 , *uint8 )"," any BytePtrFromString ( string )"," any ByteSliceFromString ( string )"," any NsecToTimespec ( int64 )"," any TimespecToNsec ( Timespec )"," any UtimesNano ( string , []Timespec )"],"extendedConfidence":false,"icon":"function"},{"items":["AllocsPerRun","Verbose"],"prefix":"testing.","prototypes":[" any AllocsPerRun ( int , func() )"," any Verbose (  )"],"extendedConfidence":false,"icon":"function"},{"items":[],"prefix":"text.","prototypes":[],"extendedConfidence":false,"icon":"function"},{"items":["ParseInLocation"],"prefix":"time.","prototypes":[" any ParseInLocation ( string , string , *Location )"],"extendedConfidence":false,"icon":"function"},{"items":["ValidRune"],"prefix":"unicode.","prototypes":[" any ValidRune ( int32 )"],"extendedConfidence":false,"icon":"function"},{"items":["NewReader","NewWriter","FileInfoHeader","NewReader","NewWriter","OpenReader"],"prefix":"archive.","prototypes":[" any NewReader ( io.Reader )"," any NewWriter ( io.Writer )"," any FileInfoHeader ( os.FileInfo )"," any NewReader ( io.ReaderAt , int64 )"," any NewWriter ( io.Writer )"," any OpenReader ( string )"],"extendedConfidence":false,"icon":"function"},{"items":["NewReadWriter","NewReader","NewReaderSize","NewWriter","NewWriterSize"],"prefix":"bufio.","prototypes":[" any NewReadWriter ( *Reader , *Writer )"," any NewReader ( io.Reader )"," any NewReaderSize ( io.Reader , int )"," any NewWriter ( io.Writer )"," any NewWriterSize ( io.Writer , int )"],"extendedConfidence":false,"icon":"function"},{"items":["Compare","Contains","Count","Equal","EqualFold","Fields","FieldsFunc","HasPrefix","HasSuffix","Index","IndexAny","IndexByte","IndexFunc","IndexRune","Join","LastIndex","LastIndexAny","LastIndexFunc","Map","NewBuffer","NewBufferString","NewReader","Repeat","Replace","Runes","Split","SplitAfter","SplitAfterN","SplitN","Title","ToLower","ToLowerSpecial","ToTitle","ToTitleSpecial","ToUpper","ToUpperSpecial","Trim","TrimFunc","TrimLeft","TrimLeftFunc","TrimRight","TrimRightFunc","TrimSpace"],"prefix":"bytes.","prototypes":[" any Compare ( []uint8 , []uint8 )"," any Contains ( []uint8 , []uint8 )"," any Count ( []uint8 , []uint8 )"," any Equal ( []uint8 , []uint8 )"," any EqualFold ( []uint8 , []uint8 )"," any Fields ( []uint8 )"," any FieldsFunc ( []uint8 , func(int32 )"," any HasPrefix ( []uint8 , []uint8 )"," any HasSuffix ( []uint8 , []uint8 )"," any Index ( []uint8 , []uint8 )"," any IndexAny ( []uint8 , string )"," any IndexByte ( []uint8 , uint8 )"," any IndexFunc ( []uint8 , func(int32 )"," any IndexRune ( []uint8 , int32 )"," any Join ( [][]uint8 , []uint8 )"," any LastIndex ( []uint8 , []uint8 )"," any LastIndexAny ( []uint8 , string )"," any LastIndexFunc ( []uint8 , func(int32 )"," any Map ( func(int32 )"," any NewBuffer ( []uint8 )"," any NewBufferString ( string )"," any NewReader ( []uint8 )"," any Repeat ( []uint8 , int )"," any Replace ( []uint8 , []uint8 , []uint8 , int )"," any Runes ( []uint8 )"," any Split ( []uint8 , []uint8 )"," any SplitAfter ( []uint8 , []uint8 )"," any SplitAfterN ( []uint8 , []uint8 , int )"," any SplitN ( []uint8 , []uint8 , int )"," any Title ( []uint8 )"," any ToLower ( []uint8 )"," any ToLowerSpecial ( unicode.SpecialCase , []uint8 )"," any ToTitle ( []uint8 )"," any ToTitleSpecial ( unicode.SpecialCase , []uint8 )"," any ToUpper ( []uint8 )"," any ToUpperSpecial ( unicode.SpecialCase , []uint8 )"," any Trim ( []uint8 , string )"," any TrimFunc ( []uint8 , func(int32 )"," any TrimLeft ( []uint8 , string )"," any TrimLeftFunc ( []uint8 , func(int32 )"," any TrimRight ( []uint8 , string )"," any TrimRightFunc ( []uint8 , func(int32 )"," any TrimSpace ( []uint8 )"],"extendedConfidence":false,"icon":"function"},{"items":["NewReader","NewReader","NewReaderDict","NewWriter","NewWriterDict","NewReader","NewWriter","NewWriterLevel","NewReader","NewWriter","NewReader","NewReaderDict","NewWriter","NewWriterLevel","NewWriterLevelDict"],"prefix":"compress.","prototypes":[" any NewReader ( io.Reader )"," any NewReader ( io.Reader )"," any NewReaderDict ( io.Reader , []uint8 )"," any NewWriter ( io.Writer , int )"," any NewWriterDict ( io.Writer , int , []uint8 )"," any NewReader ( io.Reader )"," any NewWriter ( io.Writer )"," any NewWriterLevel ( io.Writer , int )"," any NewReader ( io.Reader , Order , int )"," any NewWriter ( io.Writer , Order , int )"," any NewReader ( io.Reader )"," any NewReaderDict ( io.Reader , []uint8 )"," any NewWriter ( io.Writer )"," any NewWriterLevel ( io.Writer , int )"," any NewWriterLevelDict ( io.Writer , int , []uint8 )"],"extendedConfidence":false,"icon":"function"},{"items":["Init","Pop","Push","Remove","New","New"],"prefix":"container.","prototypes":[" any Init ( Interface) )"," any Pop ( Interface )"," any Push ( Interface , interface{}) )"," any Remove ( Interface , int )"," any New (  )"," any New ( int )"],"extendedConfidence":false,"icon":"function"},{"items":["RegisterHash","NewCipher","NewCBCDecrypter","NewCBCEncrypter","NewCFBDecrypter","NewCFBEncrypter","NewCTR","NewOFB","NewCipher","NewTripleDESCipher","GenerateKey","GenerateParameters","Sign","Verify","GenerateKey","Sign","Verify","GenerateKey","Marshal","P224","P256","P384","P521","Unmarshal","New","New","Int","Prime","Read","NewCipher","DecryptOAEP","DecryptPKCS1v15","DecryptPKCS1v15SessionKey","EncryptOAEP","EncryptPKCS1v15","GenerateKey","GenerateMultiPrimeKey","SignPKCS1v15","VerifyPKCS1v15","New","New","New224","New","New384","ConstantTimeByteEq","ConstantTimeCompare","ConstantTimeCopy","ConstantTimeEq","ConstantTimeSelect","Client","Dial","Listen","LoadX509KeyPair","NewListener","Server","X509KeyPair","CreateCertificate","MarshalPKCS1PrivateKey","MarshalPKIXPublicKey","NewCertPool","ParseCRL","ParseCertificate","ParseCertificates","ParseDERCRL","ParsePKCS1PrivateKey","ParsePKCS8PrivateKey","ParsePKIXPublicKey"],"prefix":"crypto.","prototypes":[" any RegisterHash ( Hash , func( )"," any NewCipher ( []uint8 )"," any NewCBCDecrypter ( Block , []uint8 )"," any NewCBCEncrypter ( Block , []uint8 )"," any NewCFBDecrypter ( Block , []uint8 )"," any NewCFBEncrypter ( Block , []uint8 )"," any NewCTR ( Block , []uint8 )"," any NewOFB ( Block , []uint8 )"," any NewCipher ( []uint8 )"," any NewTripleDESCipher ( []uint8 )"," any GenerateKey ( *PrivateKey , io.Reader )"," any GenerateParameters ( *Parameters , io.Reader , ParameterSizes )"," any Sign ( io.Reader , *PrivateKey , []uint8 )"," any Verify ( *PublicKey , []uint8 , *big.Int , *big.Int )"," any GenerateKey ( elliptic.Curve , io.Reader )"," any Sign ( io.Reader , *PrivateKey , []uint8 )"," any Verify ( *PublicKey , []uint8 , *big.Int , *big.Int )"," any GenerateKey ( Curve , io.Reader )"," any Marshal ( Curve , *big.Int , *big.Int )"," any P224 (  )"," any P256 (  )"," any P384 (  )"," any P521 (  )"," any Unmarshal ( Curve , []uint8 )"," any New ( func( )"," any New (  )"," any Int ( io.Reader , *big.Int )"," any Prime ( io.Reader , int )"," any Read ( []uint8 )"," any NewCipher ( []uint8 )"," any DecryptOAEP ( hash.Hash , io.Reader , *PrivateKey , []uint8 , []uint8 )"," any DecryptPKCS1v15 ( io.Reader , *PrivateKey , []uint8 )"," any DecryptPKCS1v15SessionKey ( io.Reader , *PrivateKey , []uint8 , []uint8 )"," any EncryptOAEP ( hash.Hash , io.Reader , *PublicKey , []uint8 , []uint8 )"," any EncryptPKCS1v15 ( io.Reader , *PublicKey , []uint8 )"," any GenerateKey ( io.Reader , int )"," any GenerateMultiPrimeKey ( io.Reader , int , int )"," any SignPKCS1v15 ( io.Reader , *PrivateKey , crypto.Hash , []uint8 )"," any VerifyPKCS1v15 ( *PublicKey , crypto.Hash , []uint8 , []uint8 )"," any New (  )"," any New (  )"," any New224 (  )"," any New (  )"," any New384 (  )"," any ConstantTimeByteEq ( uint8 , uint8 )"," any ConstantTimeCompare ( []uint8 , []uint8 )"," any ConstantTimeCopy ( int , []uint8 , []uint8) )"," any ConstantTimeEq ( int32 , int32 )"," any ConstantTimeSelect ( int , int , int )"," any Client ( net.Conn , *Config )"," any Dial ( string , string , *Config )"," any Listen ( string , string , *Config )"," any LoadX509KeyPair ( string , string )"," any NewListener ( net.Listener , *Config )"," any Server ( net.Conn , *Config )"," any X509KeyPair ( []uint8 , []uint8 )"," any CreateCertificate ( io.Reader , *Certificate , *Certificate , interface{} , interface{} )"," any MarshalPKCS1PrivateKey ( *rsa.PrivateKey )"," any MarshalPKIXPublicKey ( interface{} )"," any NewCertPool (  )"," any ParseCRL ( []uint8 )"," any ParseCertificate ( []uint8 )"," any ParseCertificates ( []uint8 )"," any ParseDERCRL ( []uint8 )"," any ParsePKCS1PrivateKey ( []uint8 )"," any ParsePKCS8PrivateKey ( []uint8 )"," any ParsePKIXPublicKey ( []uint8 )"],"extendedConfidence":false,"icon":"function"},{"items":["Open","Register","IsScanValue","IsValue"],"prefix":"database.","prototypes":[" any Open ( string , string )"," any Register ( string , driver.Driver) )"," any IsScanValue ( interface{} )"," any IsValue ( interface{} )"],"extendedConfidence":false,"icon":"function"},{"items":["New","NewFile","Open","R_INFO","R_INFO32","R_SYM32","R_SYM64","R_TYPE32","R_TYPE64","ST_BIND","ST_INFO","ST_TYPE","ST_VISIBILITY","NewLineTable","NewTable","NewFile","Open","NewFile","Open"],"prefix":"debug.","prototypes":[" any New ( []uint8 , []uint8 , []uint8 , []uint8 , []uint8 , []uint8 , []uint8 , []uint8 )"," any NewFile ( io.ReaderAt )"," any Open ( string )"," any R_INFO ( uint32 , uint32 )"," any R_INFO32 ( uint32 , uint32 )"," any R_SYM32 ( uint32 )"," any R_SYM64 ( uint64 )"," any R_TYPE32 ( uint32 )"," any R_TYPE64 ( uint64 )"," any ST_BIND ( uint8 )"," any ST_INFO ( SymBind , SymType )"," any ST_TYPE ( uint8 )"," any ST_VISIBILITY ( uint8 )"," any NewLineTable ( []uint8 , uint64 )"," any NewTable ( []uint8 , *LineTable )"," any NewFile ( io.ReaderAt )"," any Open ( string )"," any NewFile ( io.ReaderAt )"," any Open ( string )"],"extendedConfidence":false,"icon":"function"},{"items":["Decode","Encode","MaxEncodedLen","NewDecoder","NewEncoder","Marshal","Unmarshal","UnmarshalWithParams","NewDecoder","NewEncoder","NewEncoding","NewDecoder","NewEncoder","NewEncoding","PutUvarint","PutVarint","Read","ReadUvarint","ReadVarint","Size","Uvarint","Varint","Write","NewReader","NewWriter","NewDecoder","NewEncoder","Register","RegisterName","Decode","DecodeString","DecodedLen","Dump","Dumper","Encode","EncodeToString","EncodedLen","Compact","HTMLEscape","Indent","Marshal","MarshalIndent","NewDecoder","NewEncoder","Unmarshal","Decode","Encode","EncodeToMemory","CopyToken","Escape","Marshal","MarshalIndent","NewDecoder","NewEncoder","Unmarshal"],"prefix":"encoding.","prototypes":[" any Decode ( []uint8 , []uint8 , bool )"," any Encode ( []uint8 , []uint8 )"," any MaxEncodedLen ( int )"," any NewDecoder ( io.Reader )"," any NewEncoder ( io.Writer )"," any Marshal ( interface{} )"," any Unmarshal ( []uint8 , interface{} )"," any UnmarshalWithParams ( []uint8 , interface{} , string )"," any NewDecoder ( *Encoding , io.Reader )"," any NewEncoder ( *Encoding , io.Writer )"," any NewEncoding ( string )"," any NewDecoder ( *Encoding , io.Reader )"," any NewEncoder ( *Encoding , io.Writer )"," any NewEncoding ( string )"," any PutUvarint ( []uint8 , uint64 )"," any PutVarint ( []uint8 , int64 )"," any Read ( io.Reader , ByteOrder , interface{} )"," any ReadUvarint ( io.ByteReader )"," any ReadVarint ( io.ByteReader )"," any Size ( interface{} )"," any Uvarint ( []uint8 )"," any Varint ( []uint8 )"," any Write ( io.Writer , ByteOrder , interface{} )"," any NewReader ( io.Reader )"," any NewWriter ( io.Writer )"," any NewDecoder ( io.Reader )"," any NewEncoder ( io.Writer )"," any Register ( interface{}) )"," any RegisterName ( string , interface{}) )"," any Decode ( []uint8 , []uint8 )"," any DecodeString ( string )"," any DecodedLen ( int )"," any Dump ( []uint8 )"," any Dumper ( io.Writer )"," any Encode ( []uint8 , []uint8 )"," any EncodeToString ( []uint8 )"," any EncodedLen ( int )"," any Compact ( *bytes.Buffer , []uint8 )"," any HTMLEscape ( *bytes.Buffer , []uint8) )"," any Indent ( *bytes.Buffer , []uint8 , string , string )"," any Marshal ( interface{} )"," any MarshalIndent ( interface{} , string , string )"," any NewDecoder ( io.Reader )"," any NewEncoder ( io.Writer )"," any Unmarshal ( []uint8 , interface{} )"," any Decode ( []uint8 )"," any Encode ( io.Writer , *Block )"," any EncodeToMemory ( *Block )"," any CopyToken ( Token )"," any Escape ( io.Writer , []uint8) )"," any Marshal ( interface{} )"," any MarshalIndent ( interface{} , string , string )"," any NewDecoder ( io.Reader )"," any NewEncoder ( io.Writer )"," any Unmarshal ( []uint8 , interface{} )"],"extendedConfidence":false,"icon":"function"},{"items":["New"],"prefix":"errors.","prototypes":[" any New ( string )"],"extendedConfidence":false,"icon":"function"},{"items":["Do","Get","NewFloat","NewInt","NewMap","NewString","Publish"],"prefix":"expvar.","prototypes":[" any Do ( func(KeyValue)) )"," any Get ( string )"," any NewFloat ( string )"," any NewInt ( string )"," any NewMap ( string )"," any NewString ( string )"," any Publish ( string , Var) )"],"extendedConfidence":false,"icon":"function"},{"items":["Arg","Args","Bool","BoolVar","Duration","DurationVar","Float64","Float64Var","Int","Int64","Int64Var","IntVar","Lookup","NArg","NFlag","NewFlagSet","Parse","Parsed","PrintDefaults","Set","String","StringVar","Uint","Uint64","Uint64Var","UintVar","Var","Visit","VisitAll"],"prefix":"flag.","prototypes":[" any Arg ( int )"," any Args (  )"," any Bool ( string , bool , string )"," any BoolVar ( *bool , string , bool , string) )"," any Duration ( string , time.Duration , string )"," any DurationVar ( *time.Duration , string , time.Duration , string) )"," any Float64 ( string , float64 , string )"," any Float64Var ( *float64 , string , float64 , string) )"," any Int ( string , int , string )"," any Int64 ( string , int64 , string )"," any Int64Var ( *int64 , string , int64 , string) )"," any IntVar ( *int , string , int , string) )"," any Lookup ( string )"," any NArg (  )"," any NFlag (  )"," any NewFlagSet ( string , ErrorHandling )"," any Parse ( ) )"," any Parsed (  )"," any PrintDefaults ( ) )"," any Set ( string , string )"," any String ( string , string , string )"," any StringVar ( *string , string , string , string) )"," any Uint ( string , uint , string )"," any Uint64 ( string , uint64 , string )"," any Uint64Var ( *uint64 , string , uint64 , string) )"," any UintVar ( *uint , string , uint , string) )"," any Var ( Value , string , string) )"," any Visit ( func(*Flag)) )"," any VisitAll ( func(*Flag)) )"],"extendedConfidence":false,"icon":"function"},{"items":["Errorf","Fprint","Fprintf","Fprintln","Fscan","Fscanf","Fscanln","Print","Printf","Println","Scan","Scanf","Scanln","Sprint","Sprintf","Sprintln","Sscan","Sscanf","Sscanln"],"prefix":"fmt.","prototypes":[" any Errorf ( string , ...interface{} )"," any Fprint ( io.Writer , ...interface{} )"," any Fprintf ( io.Writer , string , ...interface{} )"," any Fprintln ( io.Writer , ...interface{} )"," any Fscan ( io.Reader , ...interface{} )"," any Fscanf ( io.Reader , string , ...interface{} )"," any Fscanln ( io.Reader , ...interface{} )"," any Print ( ...interface{} )"," any Printf ( string , ...interface{} )"," any Println ( ...interface{} )"," any Scan ( ...interface{} )"," any Scanf ( string , ...interface{} )"," any Scanln ( ...interface{} )"," any Sprint ( ...interface{} )"," any Sprintf ( string , ...interface{} )"," any Sprintln ( ...interface{} )"," any Sscan ( string , ...interface{} )"," any Sscanf ( string , string , ...interface{} )"," any Sscanln ( string , ...interface{} )"],"extendedConfidence":false,"icon":"function"},{"items":["FileExports","FilterDecl","FilterFile","FilterPackage","Fprint","Inspect","IsExported","MergePackageFiles","NewIdent","NewObj","NewPackage","NewScope","NotNilFilter","PackageExports","Print","SortImports","Walk","ArchChar","Import","ImportDir","IsLocalImport","Examples","New","Synopsis","ToHTML","ToText","ParseDir","ParseExpr","ParseFile","Fprint","PrintError","Lookup","NewFileSet"],"prefix":"go.","prototypes":[" any FileExports ( *File )"," any FilterDecl ( Decl , Filter )"," any FilterFile ( *File , Filter )"," any FilterPackage ( *Package , Filter )"," any Fprint ( io.Writer , *token.FileSet , interface{} , FieldFilter )"," any Inspect ( Node , func(Node )"," any IsExported ( string )"," any MergePackageFiles ( *Package , MergeMode )"," any NewIdent ( string )"," any NewObj ( ObjKind , string )"," any NewPackage ( *token.FileSet , map[string]*File , Importer , *Scope )"," any NewScope ( *Scope )"," any NotNilFilter ( string , reflect.Value )"," any PackageExports ( *Package )"," any Print ( *token.FileSet , interface{} )"," any SortImports ( *token.FileSet , *File) )"," any Walk ( Visitor , Node) )"," any ArchChar ( string )"," any Import ( string , string , ImportMode )"," any ImportDir ( string , ImportMode )"," any IsLocalImport ( string )"," any Examples ( ...*ast.File )"," any New ( *ast.Package , string , Mode )"," any Synopsis ( string )"," any ToHTML ( io.Writer , string , map[string]string) )"," any ToText ( io.Writer , string , string , string , int) )"," any ParseDir ( *token.FileSet , string , func(os.FileInfo )"," any ParseExpr ( string )"," any ParseFile ( *token.FileSet , string , interface{} , Mode )"," any Fprint ( io.Writer , *token.FileSet , interface{} )"," any PrintError ( io.Writer , error) )"," any Lookup ( string )"," any NewFileSet (  )"],"extendedConfidence":false,"icon":"function"},{"items":["Checksum","New","Checksum","ChecksumIEEE","MakeTable","New","NewIEEE","Update","Checksum","MakeTable","New","Update","New32","New32a","New64","New64a"],"prefix":"hash.","prototypes":[" any Checksum ( []uint8 )"," any New (  )"," any Checksum ( []uint8 , *Table )"," any ChecksumIEEE ( []uint8 )"," any MakeTable ( uint32 )"," any New ( *Table )"," any NewIEEE (  )"," any Update ( uint32 , *Table , []uint8 )"," any Checksum ( []uint8 , *Table )"," any MakeTable ( uint64 )"," any New ( *Table )"," any Update ( uint64 , *Table , []uint8 )"," any New32 (  )"," any New32a (  )"," any New64 (  )"," any New64a (  )"],"extendedConfidence":false,"icon":"function"},{"items":["EscapeString","UnescapeString","HTMLEscape","HTMLEscapeString","HTMLEscaper","JSEscape","JSEscapeString","JSEscaper","Must","New","ParseFiles","ParseGlob","URLQueryEscaper"],"prefix":"html.","prototypes":[" any EscapeString ( string )"," any UnescapeString ( string )"," any HTMLEscape ( io.Writer , []uint8) )"," any HTMLEscapeString ( string )"," any HTMLEscaper ( ...interface{} )"," any JSEscape ( io.Writer , []uint8) )"," any JSEscapeString ( string )"," any JSEscaper ( ...interface{} )"," any Must ( *Template , error )"," any New ( string )"," any ParseFiles ( ...string )"," any ParseGlob ( string )"," any URLQueryEscaper ( ...interface{} )"],"extendedConfidence":false,"icon":"function"},{"items":["Decode","DecodeConfig","NewAlpha","NewAlpha16","NewGray","NewGray16","NewNRGBA","NewNRGBA64","NewPaletted","NewRGBA","NewRGBA64","NewUniform","NewYCbCr","Pt","Rect","RegisterFormat","ModelFunc","RGBToYCbCr","YCbCrToRGB","Draw","DrawMask","Decode","DecodeAll","DecodeConfig","Decode","DecodeConfig","Encode","Decode","DecodeConfig","Encode"],"prefix":"image.","prototypes":[" any Decode ( io.Reader )"," any DecodeConfig ( io.Reader )"," any NewAlpha ( Rectangle )"," any NewAlpha16 ( Rectangle )"," any NewGray ( Rectangle )"," any NewGray16 ( Rectangle )"," any NewNRGBA ( Rectangle )"," any NewNRGBA64 ( Rectangle )"," any NewPaletted ( Rectangle , color.Palette )"," any NewRGBA ( Rectangle )"," any NewRGBA64 ( Rectangle )"," any NewUniform ( color.Color )"," any NewYCbCr ( Rectangle , YCbCrSubsampleRatio )"," any Pt ( int , int )"," any Rect ( int , int , int , int )"," any RegisterFormat ( string , string , func(io.Reader )"," any ModelFunc ( func(Color )"," any RGBToYCbCr ( uint8 , uint8 , uint8 )"," any YCbCrToRGB ( uint8 , uint8 , uint8 )"," any Draw ( Image , image.Rectangle , image.Image , image.Point , Op) )"," any DrawMask ( Image , image.Rectangle , image.Image , image.Point , image.Image , image.Point , Op) )"," any Decode ( io.Reader )"," any DecodeAll ( io.Reader )"," any DecodeConfig ( io.Reader )"," any Decode ( io.Reader )"," any DecodeConfig ( io.Reader )"," any Encode ( io.Writer , image.Image , *Options )"," any Decode ( io.Reader )"," any DecodeConfig ( io.Reader )"," any Encode ( io.Writer , image.Image )"],"extendedConfidence":false,"icon":"function"},{"items":["New"],"prefix":"index.","prototypes":[" any New ( []uint8 )"],"extendedConfidence":false,"icon":"function"},{"items":["Copy","CopyN","LimitReader","MultiReader","MultiWriter","NewSectionReader","Pipe","ReadAtLeast","ReadFull","TeeReader","WriteString","NopCloser","ReadAll","ReadDir","ReadFile","TempDir","TempFile","WriteFile"],"prefix":"io.","prototypes":[" any Copy ( Writer , Reader )"," any CopyN ( Writer , Reader , int64 )"," any LimitReader ( Reader , int64 )"," any MultiReader ( ...Reader )"," any MultiWriter ( ...Writer )"," any NewSectionReader ( ReaderAt , int64 , int64 )"," any Pipe (  )"," any ReadAtLeast ( Reader , []uint8 , int )"," any ReadFull ( Reader , []uint8 )"," any TeeReader ( Reader , Writer )"," any WriteString ( Writer , string )"," any NopCloser ( io.Reader )"," any ReadAll ( io.Reader )"," any ReadDir ( string )"," any ReadFile ( string )"," any TempDir ( string , string )"," any TempFile ( string , string )"," any WriteFile ( string , []uint8 , os.FileMode )"],"extendedConfidence":false,"icon":"function"},{"items":["Fatal","Fatalf","Fatalln","Flags","New","Panic","Panicf","Panicln","Prefix","Print","Printf","Println","SetFlags","SetOutput","SetPrefix","Dial","New","NewLogger","Dial","New","NewLogger","Dial","New","NewLogger","Dial","New","NewLogger","Dial","New","NewLogger","Dial","New","NewLogger","Dial","New","NewLogger","Dial","New","NewLogger","Dial","New","NewLogger","Dial","New","NewLogger","Dial","New","NewLogger"],"prefix":"log.","prototypes":[" any Fatal ( ...interface{}) )"," any Fatalf ( string , ...interface{}) )"," any Fatalln ( ...interface{}) )"," any Flags (  )"," any New ( io.Writer , string , int )"," any Panic ( ...interface{}) )"," any Panicf ( string , ...interface{}) )"," any Panicln ( ...interface{}) )"," any Prefix (  )"," any Print ( ...interface{}) )"," any Printf ( string , ...interface{}) )"," any Println ( ...interface{}) )"," any SetFlags ( int) )"," any SetOutput ( io.Writer) )"," any SetPrefix ( string) )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"," any Dial ( string , string , Priority , string )"," any New ( Priority , string )"," any NewLogger ( Priority , int )"],"extendedConfidence":false,"icon":"function"},{"items":["Abs","Acos","Acosh","Asin","Asinh","Atan","Atan2","Atanh","Cbrt","Ceil","Copysign","Cos","Cosh","Dim","Erf","Erfc","Exp","Exp2","Expm1","Float32bits","Float32frombits","Float64bits","Float64frombits","Floor","Frexp","Gamma","Hypot","Ilogb","Inf","IsInf","IsNaN","J0","J1","Jn","Ldexp","Lgamma","Log","Log10","Log1p","Log2","Logb","Max","Min","Mod","Modf","NaN","Nextafter","Pow","Pow10","Remainder","Signbit","Sin","Sincos","Sinh","Sqrt","Tan","Tanh","Trunc","Y0","Y1","Yn","NewInt","NewRat","Abs","Acos","Acosh","Asin","Asinh","Atan","Atanh","Conj","Cos","Cosh","Cot","Exp","Inf","IsInf","IsNaN","Log","Log10","NaN","Phase","Polar","Pow","Rect","Sin","Sinh","Sqrt","Tan","Tanh","ExpFloat64","Float32","Float64","Int","Int31","Int31n","Int63","Int63n","Intn","New","NewSource","NewZipf","NormFloat64","Perm","Seed","Uint32"],"prefix":"math.","prototypes":[" any Abs ( float64 )"," any Acos ( float64 )"," any Acosh ( float64 )"," any Asin ( float64 )"," any Asinh ( float64 )"," any Atan ( float64 )"," any Atan2 ( float64 , float64 )"," any Atanh ( float64 )"," any Cbrt ( float64 )"," any Ceil ( float64 )"," any Copysign ( float64 , float64 )"," any Cos ( float64 )"," any Cosh ( float64 )"," any Dim ( float64 , float64 )"," any Erf ( float64 )"," any Erfc ( float64 )"," any Exp ( float64 )"," any Exp2 ( float64 )"," any Expm1 ( float64 )"," any Float32bits ( float32 )"," any Float32frombits ( uint32 )"," any Float64bits ( float64 )"," any Float64frombits ( uint64 )"," any Floor ( float64 )"," any Frexp ( float64 )"," any Gamma ( float64 )"," any Hypot ( float64 , float64 )"," any Ilogb ( float64 )"," any Inf ( int )"," any IsInf ( float64 , int )"," any IsNaN ( float64 )"," any J0 ( float64 )"," any J1 ( float64 )"," any Jn ( int , float64 )"," any Ldexp ( float64 , int )"," any Lgamma ( float64 )"," any Log ( float64 )"," any Log10 ( float64 )"," any Log1p ( float64 )"," any Log2 ( float64 )"," any Logb ( float64 )"," any Max ( float64 , float64 )"," any Min ( float64 , float64 )"," any Mod ( float64 , float64 )"," any Modf ( float64 )"," any NaN (  )"," any Nextafter ( float64 , float64 )"," any Pow ( float64 , float64 )"," any Pow10 ( int )"," any Remainder ( float64 , float64 )"," any Signbit ( float64 )"," any Sin ( float64 )"," any Sincos ( float64 )"," any Sinh ( float64 )"," any Sqrt ( float64 )"," any Tan ( float64 )"," any Tanh ( float64 )"," any Trunc ( float64 )"," any Y0 ( float64 )"," any Y1 ( float64 )"," any Yn ( int , float64 )"," any NewInt ( int64 )"," any NewRat ( int64 , int64 )"," any Abs ( complex128 )"," any Acos ( complex128 )"," any Acosh ( complex128 )"," any Asin ( complex128 )"," any Asinh ( complex128 )"," any Atan ( complex128 )"," any Atanh ( complex128 )"," any Conj ( complex128 )"," any Cos ( complex128 )"," any Cosh ( complex128 )"," any Cot ( complex128 )"," any Exp ( complex128 )"," any Inf (  )"," any IsInf ( complex128 )"," any IsNaN ( complex128 )"," any Log ( complex128 )"," any Log10 ( complex128 )"," any NaN (  )"," any Phase ( complex128 )"," any Polar ( complex128 )"," any Pow ( complex128 , complex128 )"," any Rect ( float64 , float64 )"," any Sin ( complex128 )"," any Sinh ( complex128 )"," any Sqrt ( complex128 )"," any Tan ( complex128 )"," any Tanh ( complex128 )"," any ExpFloat64 (  )"," any Float32 (  )"," any Float64 (  )"," any Int (  )"," any Int31 (  )"," any Int31n ( int32 )"," any Int63 (  )"," any Int63n ( int64 )"," any Intn ( int )"," any New ( Source )"," any NewSource ( int64 )"," any NewZipf ( *Rand , float64 , float64 , uint64 )"," any NormFloat64 (  )"," any Perm ( int )"," any Seed ( int64) )"," any Uint32 (  )"],"extendedConfidence":false,"icon":"function"},{"items":["AddExtensionType","FormatMediaType","ParseMediaType","TypeByExtension","NewReader","NewWriter"],"prefix":"mime.","prototypes":[" any AddExtensionType ( string , string )"," any FormatMediaType ( string , map[string]string )"," any ParseMediaType ( string )"," any TypeByExtension ( string )"," any NewReader ( io.Reader , string )"," any NewWriter ( io.Writer )"],"extendedConfidence":false,"icon":"function"},{"items":["CIDRMask","Dial","DialIP","DialTCP","DialTimeout","DialUDP","DialUnix","FileConn","FileListener","FilePacketConn","IPv4","IPv4Mask","InterfaceAddrs","InterfaceByIndex","InterfaceByName","Interfaces","JoinHostPort","Listen","ListenIP","ListenMulticastUDP","ListenPacket","ListenTCP","ListenUDP","ListenUnix","ListenUnixgram","LookupAddr","LookupCNAME","LookupHost","LookupIP","LookupMX","LookupPort","LookupSRV","LookupTXT","ParseCIDR","ParseIP","ParseMAC","Pipe","ResolveIPAddr","ResolveTCPAddr","ResolveUDPAddr","ResolveUnixAddr","SplitHostPort","CanonicalHeaderKey","DetectContentType","Error","FileServer","Get","Handle","HandleFunc","Head","ListenAndServe","ListenAndServeTLS","MaxBytesReader","NewFileTransport","NewRequest","NewServeMux","NotFound","NotFoundHandler","ParseHTTPVersion","Post","PostForm","ProxyFromEnvironment","ProxyURL","ReadRequest","ReadResponse","Redirect","RedirectHandler","Serve","ServeContent","ServeFile","SetCookie","StatusText","StripPrefix","TimeoutHandler","Request","RequestFromMap","Serve","Serve","NewRecorder","NewServer","NewTLSServer","NewUnstartedServer","DumpRequest","DumpRequestOut","DumpResponse","NewChunkedReader","NewChunkedWriter","NewClientConn","NewProxyClientConn","NewServerConn","NewSingleHostReverseProxy","Cmdline","Handler","Index","Profile","Symbol","ReadMessage","Accept","Dial","DialHTTP","DialHTTPPath","HandleHTTP","NewClient","NewClientWithCodec","NewServer","Register","RegisterName","ServeCodec","ServeConn","ServeRequest","Dial","NewClient","NewClientCodec","NewServerCodec","ServeConn","CRAMMD5Auth","Dial","NewClient","PlainAuth","SendMail","CanonicalMIMEHeaderKey","Dial","NewConn","NewReader","NewWriter","Parse","ParseQuery","ParseRequestURI","QueryEscape","QueryUnescape","User","UserPassword"],"prefix":"net.","prototypes":[" any CIDRMask ( int , int )"," any Dial ( string , string )"," any DialIP ( string , *IPAddr , *IPAddr )"," any DialTCP ( string , *TCPAddr , *TCPAddr )"," any DialTimeout ( string , string , time.Duration )"," any DialUDP ( string , *UDPAddr , *UDPAddr )"," any DialUnix ( string , *UnixAddr , *UnixAddr )"," any FileConn ( *os.File )"," any FileListener ( *os.File )"," any FilePacketConn ( *os.File )"," any IPv4 ( uint8 , uint8 , uint8 , uint8 )"," any IPv4Mask ( uint8 , uint8 , uint8 , uint8 )"," any InterfaceAddrs (  )"," any InterfaceByIndex ( int )"," any InterfaceByName ( string )"," any Interfaces (  )"," any JoinHostPort ( string , string )"," any Listen ( string , string )"," any ListenIP ( string , *IPAddr )"," any ListenMulticastUDP ( string , *Interface , *UDPAddr )"," any ListenPacket ( string , string )"," any ListenTCP ( string , *TCPAddr )"," any ListenUDP ( string , *UDPAddr )"," any ListenUnix ( string , *UnixAddr )"," any ListenUnixgram ( string , *UnixAddr )"," any LookupAddr ( string )"," any LookupCNAME ( string )"," any LookupHost ( string )"," any LookupIP ( string )"," any LookupMX ( string )"," any LookupPort ( string , string )"," any LookupSRV ( string , string , string )"," any LookupTXT ( string )"," any ParseCIDR ( string )"," any ParseIP ( string )"," any ParseMAC ( string )"," any Pipe (  )"," any ResolveIPAddr ( string , string )"," any ResolveTCPAddr ( string , string )"," any ResolveUDPAddr ( string , string )"," any ResolveUnixAddr ( string , string )"," any SplitHostPort ( string )"," any CanonicalHeaderKey ( string )"," any DetectContentType ( []uint8 )"," any Error ( ResponseWriter , string , int) )"," any FileServer ( FileSystem )"," any Get ( string )"," any Handle ( string , Handler) )"," any HandleFunc ( string , func(ResponseWriter , *Request)) )"," any Head ( string )"," any ListenAndServe ( string , Handler )"," any ListenAndServeTLS ( string , string , string , Handler )"," any MaxBytesReader ( ResponseWriter , io.ReadCloser , int64 )"," any NewFileTransport ( FileSystem )"," any NewRequest ( string , string , io.Reader )"," any NewServeMux (  )"," any NotFound ( ResponseWriter , *Request) )"," any NotFoundHandler (  )"," any ParseHTTPVersion ( string )"," any Post ( string , string , io.Reader )"," any PostForm ( string , url.Values )"," any ProxyFromEnvironment ( *Request )"," any ProxyURL ( *url.URL )"," any ReadRequest ( *bufio.Reader )"," any ReadResponse ( *bufio.Reader , *Request )"," any Redirect ( ResponseWriter , *Request , string , int) )"," any RedirectHandler ( string , int )"," any Serve ( net.Listener , Handler )"," any ServeContent ( ResponseWriter , *Request , string , time.Time , io.ReadSeeker) )"," any ServeFile ( ResponseWriter , *Request , string) )"," any SetCookie ( ResponseWriter , *Cookie) )"," any StatusText ( int )"," any StripPrefix ( string , Handler )"," any TimeoutHandler ( Handler , time.Duration , string )"," any Request (  )"," any RequestFromMap ( map[string]string )"," any Serve ( http.Handler )"," any Serve ( net.Listener , http.Handler )"," any NewRecorder (  )"," any NewServer ( http.Handler )"," any NewTLSServer ( http.Handler )"," any NewUnstartedServer ( http.Handler )"," any DumpRequest ( *http.Request , bool )"," any DumpRequestOut ( *http.Request , bool )"," any DumpResponse ( *http.Response , bool )"," any NewChunkedReader ( io.Reader )"," any NewChunkedWriter ( io.Writer )"," any NewClientConn ( net.Conn , *bufio.Reader )"," any NewProxyClientConn ( net.Conn , *bufio.Reader )"," any NewServerConn ( net.Conn , *bufio.Reader )"," any NewSingleHostReverseProxy ( *url.URL )"," any Cmdline ( http.ResponseWriter , *http.Request) )"," any Handler ( string )"," any Index ( http.ResponseWriter , *http.Request) )"," any Profile ( http.ResponseWriter , *http.Request) )"," any Symbol ( http.ResponseWriter , *http.Request) )"," any ReadMessage ( io.Reader )"," any Accept ( net.Listener) )"," any Dial ( string , string )"," any DialHTTP ( string , string )"," any DialHTTPPath ( string , string , string )"," any HandleHTTP ( ) )"," any NewClient ( io.ReadWriteCloser )"," any NewClientWithCodec ( ClientCodec )"," any NewServer (  )"," any Register ( interface{} )"," any RegisterName ( string , interface{} )"," any ServeCodec ( ServerCodec) )"," any ServeConn ( io.ReadWriteCloser) )"," any ServeRequest ( ServerCodec )"," any Dial ( string , string )"," any NewClient ( io.ReadWriteCloser )"," any NewClientCodec ( io.ReadWriteCloser )"," any NewServerCodec ( io.ReadWriteCloser )"," any ServeConn ( io.ReadWriteCloser) )"," any CRAMMD5Auth ( string , string )"," any Dial ( string )"," any NewClient ( net.Conn , string )"," any PlainAuth ( string , string , string , string )"," any SendMail ( string , Auth , string , []string , []uint8 )"," any CanonicalMIMEHeaderKey ( string )"," any Dial ( string , string )"," any NewConn ( io.ReadWriteCloser )"," any NewReader ( *bufio.Reader )"," any NewWriter ( *bufio.Writer )"," any Parse ( string )"," any ParseQuery ( string )"," any ParseRequestURI ( string )"," any QueryEscape ( string )"," any QueryUnescape ( string )"," any User ( string )"," any UserPassword ( string , string )"],"extendedConfidence":false,"icon":"function"},{"items":["Chdir","Chmod","Chown","Chtimes","Clearenv","Create","Environ","Exit","Expand","ExpandEnv","FindProcess","Getegid","Getenv","Geteuid","Getgid","Getgroups","Getpagesize","Getpid","Getppid","Getuid","Getwd","Hostname","IsExist","IsNotExist","IsPathSeparator","IsPermission","Lchown","Link","Lstat","Mkdir","MkdirAll","NewFile","NewSyscallError","Open","OpenFile","Pipe","Readlink","Remove","RemoveAll","Rename","SameFile","Setenv","StartProcess","Stat","Symlink","TempDir","Truncate","Command","LookPath","Notify","Current","Lookup","LookupId"],"prefix":"os.","prototypes":[" any Chdir ( string )"," any Chmod ( string , FileMode )"," any Chown ( string , int , int )"," any Chtimes ( string , time.Time , time.Time )"," any Clearenv ( ) )"," any Create ( string )"," any Environ (  )"," any Exit ( int) )"," any Expand ( string , func(string )"," any ExpandEnv ( string )"," any FindProcess ( int )"," any Getegid (  )"," any Getenv ( string )"," any Geteuid (  )"," any Getgid (  )"," any Getgroups (  )"," any Getpagesize (  )"," any Getpid (  )"," any Getppid (  )"," any Getuid (  )"," any Getwd (  )"," any Hostname (  )"," any IsExist ( error )"," any IsNotExist ( error )"," any IsPathSeparator ( uint8 )"," any IsPermission ( error )"," any Lchown ( string , int , int )"," any Link ( string , string )"," any Lstat ( string )"," any Mkdir ( string , FileMode )"," any MkdirAll ( string , FileMode )"," any NewFile ( uintptr , string )"," any NewSyscallError ( string , error )"," any Open ( string )"," any OpenFile ( string , int , FileMode )"," any Pipe (  )"," any Readlink ( string )"," any Remove ( string )"," any RemoveAll ( string )"," any Rename ( string , string )"," any SameFile ( FileInfo , FileInfo )"," any Setenv ( string , string )"," any StartProcess ( string , []string , *ProcAttr )"," any Stat ( string )"," any Symlink ( string , string )"," any TempDir (  )"," any Truncate ( string , int64 )"," any Command ( string , ...string )"," any LookPath ( string )"," any Notify ( chan<- os.Signal , ...os.Signal) )"," any Current (  )"," any Lookup ( string )"," any LookupId ( string )"],"extendedConfidence":false,"icon":"function"},{"items":["Base","Clean","Dir","Ext","IsAbs","Join","Match","Split","Abs","Base","Clean","Dir","EvalSymlinks","Ext","FromSlash","Glob","HasPrefix","IsAbs","Join","Match","Rel","Split","SplitList","ToSlash","VolumeName","Walk"],"prefix":"path.","prototypes":[" any Base ( string )"," any Clean ( string )"," any Dir ( string )"," any Ext ( string )"," any IsAbs ( string )"," any Join ( ...string )"," any Match ( string , string )"," any Split ( string )"," any Abs ( string )"," any Base ( string )"," any Clean ( string )"," any Dir ( string )"," any EvalSymlinks ( string )"," any Ext ( string )"," any FromSlash ( string )"," any Glob ( string )"," any HasPrefix ( string , string )"," any IsAbs ( string )"," any Join ( ...string )"," any Match ( string , string )"," any Rel ( string , string )"," any Split ( string )"," any SplitList ( string )"," any ToSlash ( string )"," any VolumeName ( string )"," any Walk ( string , WalkFunc )"],"extendedConfidence":false,"icon":"function"},{"items":["Append","AppendSlice","Copy","DeepEqual","Indirect","MakeChan","MakeMap","MakeSlice","New","NewAt","PtrTo","TypeOf","ValueOf","Zero"],"prefix":"reflect.","prototypes":[" any Append ( Value , ...Value )"," any AppendSlice ( Value , Value )"," any Copy ( Value , Value )"," any DeepEqual ( interface{} , interface{} )"," any Indirect ( Value )"," any MakeChan ( Type , int )"," any MakeMap ( Type )"," any MakeSlice ( Type , int , int )"," any New ( Type )"," any NewAt ( Type , unsafe.Pointer )"," any PtrTo ( Type )"," any TypeOf ( interface{} )"," any ValueOf ( interface{} )"," any Zero ( Type )"],"extendedConfidence":false,"icon":"function"},{"items":["Compile","CompilePOSIX","Match","MatchReader","MatchString","MustCompile","MustCompilePOSIX","QuoteMeta","Compile","EmptyOpContext","IsWordChar","Parse"],"prefix":"regexp.","prototypes":[" any Compile ( string )"," any CompilePOSIX ( string )"," any Match ( string , []uint8 )"," any MatchReader ( string , io.RuneReader )"," any MatchString ( string , string )"," any MustCompile ( string )"," any MustCompilePOSIX ( string )"," any QuoteMeta ( string )"," any Compile ( *Regexp )"," any EmptyOpContext ( int32 , int32 )"," any IsWordChar ( int32 )"," any Parse ( string , Flags )"],"extendedConfidence":false,"icon":"function"},{"items":["Breakpoint","CPUProfile","Caller","Callers","FuncForPC","GC","GOMAXPROCS","GOROOT","Goexit","GoroutineProfile","Gosched","LockOSThread","MemProfile","NumCPU","NumCgoCall","NumGoroutine","ReadMemStats","SetCPUProfileRate","SetFinalizer","Stack","ThreadCreateProfile","UnlockOSThread","Version","PrintStack","Stack","Lookup","NewProfile","Profiles","StartCPUProfile","StopCPUProfile","WriteHeapProfile"],"prefix":"runtime.","prototypes":[" any Breakpoint ( ) )"," any CPUProfile (  )"," any Caller ( int )"," any Callers ( int , []uintptr )"," any FuncForPC ( uintptr )"," any GC ( ) )"," any GOMAXPROCS ( int )"," any GOROOT (  )"," any Goexit ( ) )"," any GoroutineProfile ( []StackRecord )"," any Gosched ( ) )"," any LockOSThread ( ) )"," any MemProfile ( []MemProfileRecord , bool )"," any NumCPU (  )"," any NumCgoCall (  )"," any NumGoroutine (  )"," any ReadMemStats ( *MemStats) )"," any SetCPUProfileRate ( int) )"," any SetFinalizer ( interface{} , interface{}) )"," any Stack ( []uint8 , bool )"," any ThreadCreateProfile ( []StackRecord )"," any UnlockOSThread ( ) )"," any Version (  )"," any PrintStack ( ) )"," any Stack (  )"," any Lookup ( string )"," any NewProfile ( string )"," any Profiles (  )"," any StartCPUProfile ( io.Writer )"," any StopCPUProfile ( ) )"," any WriteHeapProfile ( io.Writer )"],"extendedConfidence":false,"icon":"function"},{"items":["Float64s","Float64sAreSorted","Ints","IntsAreSorted","IsSorted","Search","SearchFloat64s","SearchInts","SearchStrings","Sort","Strings","StringsAreSorted"],"prefix":"sort.","prototypes":[" any Float64s ( []float64) )"," any Float64sAreSorted ( []float64 )"," any Ints ( []int) )"," any IntsAreSorted ( []int )"," any IsSorted ( Interface )"," any Search ( int , func(int )"," any SearchFloat64s ( []float64 , float64 )"," any SearchInts ( []int , int )"," any SearchStrings ( []string , string )"," any Sort ( Interface) )"," any Strings ( []string) )"," any StringsAreSorted ( []string )"],"extendedConfidence":false,"icon":"function"},{"items":["AppendBool","AppendFloat","AppendInt","AppendQuote","AppendQuoteRune","AppendQuoteRuneToASCII","AppendQuoteToASCII","AppendUint","Atoi","CanBackquote","FormatBool","FormatFloat","FormatInt","FormatUint","IsPrint","Itoa","ParseBool","ParseFloat","ParseInt","ParseUint","Quote","QuoteRune","QuoteRuneToASCII","QuoteToASCII","Unquote","UnquoteChar"],"prefix":"strconv.","prototypes":[" any AppendBool ( []uint8 , bool )"," any AppendFloat ( []uint8 , float64 , uint8 , int , int )"," any AppendInt ( []uint8 , int64 , int )"," any AppendQuote ( []uint8 , string )"," any AppendQuoteRune ( []uint8 , int32 )"," any AppendQuoteRuneToASCII ( []uint8 , int32 )"," any AppendQuoteToASCII ( []uint8 , string )"," any AppendUint ( []uint8 , uint64 , int )"," any Atoi ( string )"," any CanBackquote ( string )"," any FormatBool ( bool )"," any FormatFloat ( float64 , uint8 , int , int )"," any FormatInt ( int64 , int )"," any FormatUint ( uint64 , int )"," any IsPrint ( int32 )"," any Itoa ( int )"," any ParseBool ( string )"," any ParseFloat ( string , int )"," any ParseInt ( string , int , int )"," any ParseUint ( string , int , int )"," any Quote ( string )"," any QuoteRune ( int32 )"," any QuoteRuneToASCII ( int32 )"," any QuoteToASCII ( string )"," any Unquote ( string )"," any UnquoteChar ( string , uint8 )"],"extendedConfidence":false,"icon":"function"},{"items":["Contains","ContainsAny","ContainsRune","Count","EqualFold","Fields","FieldsFunc","HasPrefix","HasSuffix","Index","IndexAny","IndexFunc","IndexRune","Join","LastIndex","LastIndexAny","LastIndexFunc","Map","NewReader","NewReplacer","Repeat","Replace","Split","SplitAfter","SplitAfterN","SplitN","Title","ToLower","ToLowerSpecial","ToTitle","ToTitleSpecial","ToUpper","ToUpperSpecial","Trim","TrimFunc","TrimLeft","TrimLeftFunc","TrimRight","TrimRightFunc","TrimSpace"],"prefix":"strings.","prototypes":[" any Contains ( string , string )"," any ContainsAny ( string , string )"," any ContainsRune ( string , int32 )"," any Count ( string , string )"," any EqualFold ( string , string )"," any Fields ( string )"," any FieldsFunc ( string , func(int32 )"," any HasPrefix ( string , string )"," any HasSuffix ( string , string )"," any Index ( string , string )"," any IndexAny ( string , string )"," any IndexFunc ( string , func(int32 )"," any IndexRune ( string , int32 )"," any Join ( []string , string )"," any LastIndex ( string , string )"," any LastIndexAny ( string , string )"," any LastIndexFunc ( string , func(int32 )"," any Map ( func(int32 )"," any NewReader ( string )"," any NewReplacer ( ...string )"," any Repeat ( string , int )"," any Replace ( string , string , string , int )"," any Split ( string , string )"," any SplitAfter ( string , string )"," any SplitAfterN ( string , string , int )"," any SplitN ( string , string , int )"," any Title ( string )"," any ToLower ( string )"," any ToLowerSpecial ( unicode.SpecialCase , string )"," any ToTitle ( string )"," any ToTitleSpecial ( unicode.SpecialCase , string )"," any ToUpper ( string )"," any ToUpperSpecial ( unicode.SpecialCase , string )"," any Trim ( string , string )"," any TrimFunc ( string , func(int32 )"," any TrimLeft ( string , string )"," any TrimLeftFunc ( string , func(int32 )"," any TrimRight ( string , string )"," any TrimRightFunc ( string , func(int32 )"," any TrimSpace ( string )"],"extendedConfidence":false,"icon":"function"},{"items":["NewCond","AddInt32","AddInt64","AddUint32","AddUint64","AddUintptr","CompareAndSwapInt32","CompareAndSwapInt64","CompareAndSwapPointer","CompareAndSwapUint32","CompareAndSwapUint64","CompareAndSwapUintptr","LoadInt32","LoadInt64","LoadPointer","LoadUint32","LoadUint64","LoadUintptr","StoreInt32","StoreInt64","StorePointer","StoreUint32","StoreUint64","StoreUintptr"],"prefix":"sync.","prototypes":[" any NewCond ( Locker )"," any AddInt32 ( *int32 , int32 )"," any AddInt64 ( *int64 , int64 )"," any AddUint32 ( *uint32 , uint32 )"," any AddUint64 ( *uint64 , uint64 )"," any AddUintptr ( *uintptr , uintptr )"," any CompareAndSwapInt32 ( *int32 , int32 , int32 )"," any CompareAndSwapInt64 ( *int64 , int64 , int64 )"," any CompareAndSwapPointer ( *unsafe.Pointer , unsafe.Pointer , unsafe.Pointer )"," any CompareAndSwapUint32 ( *uint32 , uint32 , uint32 )"," any CompareAndSwapUint64 ( *uint64 , uint64 , uint64 )"," any CompareAndSwapUintptr ( *uintptr , uintptr , uintptr )"," any LoadInt32 ( *int32 )"," any LoadInt64 ( *int64 )"," any LoadPointer ( *unsafe.Pointer )"," any LoadUint32 ( *uint32 )"," any LoadUint64 ( *uint64 )"," any LoadUintptr ( *uintptr )"," any StoreInt32 ( *int32 , int32) )"," any StoreInt64 ( *int64 , int64) )"," any StorePointer ( *unsafe.Pointer , unsafe.Pointer) )"," any StoreUint32 ( *uint32 , uint32) )"," any StoreUint64 ( *uint64 , uint64) )"," any StoreUintptr ( *uintptr , uintptr) )"],"extendedConfidence":false,"icon":"function"},{"items":["Accept","Access","Adjtime","Bind","BpfBuflen","BpfDatalink","BpfHeadercmpl","BpfInterface","BpfJump","BpfStats","BpfStmt","BpfTimeout","CheckBpfVersion","Chflags","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Dup","Dup2","Exchangedata","Fchdir","Fchflags","Fchmod","Fchown","Flock","FlushBpf","ForkExec","Fpathconf","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Getdirentries","Getdtablesize","Getfsstat","Getpeername","Getpgid","Getpgrp","Getpriority","Getrlimit","Getrusage","Getsid","Getsockname","GetsockoptByte","GetsockoptIPMreq","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Issetugid","Kevent","Kill","Kqueue","Listen","Lstat","Mkfifo","Mknod","Mmap","Munmap","NsecToTimespec","Open","ParseDirent","ParseRoutingMessage","ParseRoutingSockaddr","ParseSocketControlMessage","ParseUnixRights","Pathconf","Pipe","Pread","PtraceAttach","PtraceDetach","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Recvfrom","Recvmsg","Revoke","RouteRIB","Seek","Select","Sendfile","Sendmsg","Sendto","SetBpf","SetBpfBuflen","SetBpfDatalink","SetBpfHeadercmpl","SetBpfImmediate","SetBpfInterface","SetBpfPromisc","SetBpfTimeout","SetKevent","SetNonblock","Setegid","Seteuid","Setgid","Setgroups","Setlogin","Setpgid","Setpriority","Setprivexec","Setregid","Setreuid","Setrlimit","Setsid","SetsockoptByte","SetsockoptIPMreq","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Stat","Statfs","StringSlicePtr","Sync","Syscall","Syscall6","Syscall9","Sysctl","SysctlUint32","TimespecToNsec","TimevalToNsec","Truncate","Umask","Undelete","UnixRights","Unmount","Wait4","Write","Accept","Access","Adjtime","Bind","BpfBuflen","BpfDatalink","BpfHeadercmpl","BpfInterface","BpfJump","BpfStats","BpfStmt","BpfTimeout","CheckBpfVersion","Chflags","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Dup","Dup2","Exchangedata","Fchdir","Fchflags","Fchmod","Fchown","Flock","FlushBpf","ForkExec","Fpathconf","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Getdirentries","Getdtablesize","Getfsstat","Getpeername","Getpgid","Getpgrp","Getpriority","Getrlimit","Getrusage","Getsid","Getsockname","GetsockoptByte","GetsockoptIPMreq","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Issetugid","Kevent","Kill","Kqueue","Listen","Lstat","Mkfifo","Mknod","Mmap","Munmap","NsecToTimespec","Open","ParseDirent","ParseRoutingMessage","ParseRoutingSockaddr","ParseSocketControlMessage","ParseUnixRights","Pathconf","Pipe","Pread","PtraceAttach","PtraceDetach","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Recvfrom","Recvmsg","Revoke","RouteRIB","Seek","Select","Sendfile","Sendmsg","Sendto","SetBpf","SetBpfBuflen","SetBpfDatalink","SetBpfHeadercmpl","SetBpfImmediate","SetBpfInterface","SetBpfPromisc","SetBpfTimeout","SetKevent","SetNonblock","Setegid","Seteuid","Setgid","Setgroups","Setlogin","Setpgid","Setpriority","Setprivexec","Setregid","Setreuid","Setrlimit","Setsid","SetsockoptByte","SetsockoptIPMreq","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Stat","Statfs","StringSlicePtr","Sync","Syscall","Syscall6","Syscall9","Sysctl","SysctlUint32","TimespecToNsec","TimevalToNsec","Truncate","Umask","Undelete","UnixRights","Unmount","Wait4","Write","Accept","Access","Adjtime","Bind","BpfBuflen","BpfDatalink","BpfHeadercmpl","BpfInterface","BpfJump","BpfStats","BpfStmt","BpfTimeout","CheckBpfVersion","Chflags","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Dup","Dup2","Exchangedata","Fchdir","Fchflags","Fchmod","Fchown","Flock","FlushBpf","ForkExec","Fpathconf","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Getdirentries","Getdtablesize","Getfsstat","Getpeername","Getpgid","Getpgrp","Getpriority","Getrlimit","Getrusage","Getsid","Getsockname","GetsockoptByte","GetsockoptIPMreq","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Issetugid","Kevent","Kill","Kqueue","Listen","Lstat","Mkfifo","Mknod","Mmap","Munmap","NsecToTimespec","Open","ParseDirent","ParseRoutingMessage","ParseRoutingSockaddr","ParseSocketControlMessage","ParseUnixRights","Pathconf","Pipe","Pread","PtraceAttach","PtraceDetach","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Recvfrom","Recvmsg","Revoke","RouteRIB","Seek","Select","Sendfile","Sendmsg","Sendto","SetBpf","SetBpfBuflen","SetBpfDatalink","SetBpfHeadercmpl","SetBpfImmediate","SetBpfInterface","SetBpfPromisc","SetBpfTimeout","SetKevent","SetNonblock","Setegid","Seteuid","Setgid","Setgroups","Setlogin","Setpgid","Setpriority","Setprivexec","Setregid","Setreuid","Setrlimit","Setsid","SetsockoptByte","SetsockoptIPMreq","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Stat","Statfs","StringSlicePtr","Sync","Syscall","Syscall6","Sysctl","SysctlUint32","TimespecToNsec","TimevalToNsec","Truncate","Umask","Undelete","UnixRights","Unmount","Wait4","Write","Accept","Access","Adjtime","Bind","BpfBuflen","BpfDatalink","BpfHeadercmpl","BpfInterface","BpfJump","BpfStats","BpfStmt","BpfTimeout","CheckBpfVersion","Chflags","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Dup","Dup2","Exchangedata","Fchdir","Fchflags","Fchmod","Fchown","Flock","FlushBpf","ForkExec","Fpathconf","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Getdirentries","Getdtablesize","Getfsstat","Getpeername","Getpgid","Getpgrp","Getpriority","Getrlimit","Getrusage","Getsid","Getsockname","GetsockoptByte","GetsockoptIPMreq","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Issetugid","Kevent","Kill","Kqueue","Listen","Lstat","Mkfifo","Mknod","Mmap","Munmap","NsecToTimespec","Open","ParseDirent","ParseRoutingMessage","ParseRoutingSockaddr","ParseSocketControlMessage","ParseUnixRights","Pathconf","Pipe","Pread","PtraceAttach","PtraceDetach","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Recvfrom","Recvmsg","Revoke","RouteRIB","Seek","Select","Sendfile","Sendmsg","Sendto","SetBpf","SetBpfBuflen","SetBpfDatalink","SetBpfHeadercmpl","SetBpfImmediate","SetBpfInterface","SetBpfPromisc","SetBpfTimeout","SetKevent","SetNonblock","Setegid","Seteuid","Setgid","Setgroups","Setlogin","Setpgid","Setpriority","Setprivexec","Setregid","Setreuid","Setrlimit","Setsid","SetsockoptByte","SetsockoptIPMreq","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Stat","Statfs","StringSlicePtr","Sync","Syscall","Syscall6","Sysctl","SysctlUint32","TimespecToNsec","TimevalToNsec","Truncate","Umask","Undelete","UnixRights","Unmount","Wait4","Write","Accept","Access","Adjtime","Bind","BpfBuflen","BpfDatalink","BpfHeadercmpl","BpfInterface","BpfJump","BpfStats","BpfStmt","BpfTimeout","CheckBpfVersion","Chflags","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Dup","Dup2","Fchdir","Fchflags","Fchmod","Fchown","Flock","FlushBpf","ForkExec","Fpathconf","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Getdirentries","Getdtablesize","Getfsstat","Getpeername","Getpgid","Getpgrp","Getpriority","Getrlimit","Getrusage","Getsid","Getsockname","GetsockoptByte","GetsockoptIPMreq","GetsockoptIPMreqn","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Issetugid","Kevent","Kill","Kqueue","Listen","Lstat","Mkfifo","Mknod","Mmap","Munmap","Nanosleep","NsecToTimespec","Open","ParseDirent","ParseRoutingMessage","ParseRoutingSockaddr","ParseSocketControlMessage","ParseUnixRights","Pathconf","Pipe","Pread","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Recvfrom","Recvmsg","Revoke","RouteRIB","Seek","Select","Sendfile","Sendmsg","Sendto","SetBpf","SetBpfBuflen","SetBpfDatalink","SetBpfHeadercmpl","SetBpfImmediate","SetBpfInterface","SetBpfPromisc","SetBpfTimeout","SetKevent","SetNonblock","Setegid","Seteuid","Setgid","Setgroups","Setlogin","Setpgid","Setpriority","Setregid","Setreuid","Setrlimit","Setsid","SetsockoptByte","SetsockoptIPMreq","SetsockoptIPMreqn","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Stat","Statfs","StringSlicePtr","Sync","Syscall","Syscall6","Syscall9","Sysctl","SysctlUint32","TimespecToNsec","TimevalToNsec","Truncate","Umask","Undelete","UnixRights","Unmount","Wait4","Write","Accept","Access","Adjtime","Bind","BpfBuflen","BpfDatalink","BpfHeadercmpl","BpfInterface","BpfJump","BpfStats","BpfStmt","BpfTimeout","CheckBpfVersion","Chflags","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Dup","Dup2","Fchdir","Fchflags","Fchmod","Fchown","Flock","FlushBpf","ForkExec","Fpathconf","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Getdirentries","Getdtablesize","Getfsstat","Getpeername","Getpgid","Getpgrp","Getpriority","Getrlimit","Getrusage","Getsid","Getsockname","GetsockoptByte","GetsockoptIPMreq","GetsockoptIPMreqn","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Issetugid","Kevent","Kill","Kqueue","Listen","Lstat","Mkfifo","Mknod","Mmap","Munmap","Nanosleep","NsecToTimespec","Open","ParseDirent","ParseRoutingMessage","ParseRoutingSockaddr","ParseSocketControlMessage","ParseUnixRights","Pathconf","Pipe","Pread","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Recvfrom","Recvmsg","Revoke","RouteRIB","Seek","Select","Sendfile","Sendmsg","Sendto","SetBpf","SetBpfBuflen","SetBpfDatalink","SetBpfHeadercmpl","SetBpfImmediate","SetBpfInterface","SetBpfPromisc","SetBpfTimeout","SetKevent","SetNonblock","Setegid","Seteuid","Setgid","Setgroups","Setlogin","Setpgid","Setpriority","Setregid","Setreuid","Setrlimit","Setsid","SetsockoptByte","SetsockoptIPMreq","SetsockoptIPMreqn","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Stat","Statfs","StringSlicePtr","Sync","Syscall","Syscall6","Sysctl","SysctlUint32","TimespecToNsec","TimevalToNsec","Truncate","Umask","Undelete","UnixRights","Unmount","Wait4","Write","Accept","Access","Acct","Adjtimex","AttachLsf","Bind","BindToDevice","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Creat","DetachLsf","Dup","Dup2","EpollCreate","EpollCreate1","EpollCtl","EpollWait","Faccessat","Fallocate","Fchdir","Fchmod","Fchmodat","Fchown","Fchownat","Fdatasync","Flock","ForkExec","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Futimesat","Getcwd","Getdents","Getpeername","Getpgid","Getpgrp","Getrlimit","Getrusage","Getsockname","GetsockoptIPMreq","GetsockoptIPMreqn","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Gettid","InotifyAddWatch","InotifyInit","InotifyInit1","InotifyRmWatch","Ioperm","Iopl","Kill","Klogctl","Listen","LsfJump","LsfSocket","LsfStmt","Lstat","Madvise","Mkdirat","Mkfifo","Mknod","Mknodat","Mlock","Mlockall","Mmap","Mount","Mprotect","Munlock","Munlockall","Munmap","Nanosleep","NetlinkRIB","NsecToTimespec","Open","Openat","ParseDirent","ParseNetlinkMessage","ParseNetlinkRouteAttr","ParseSocketControlMessage","ParseUnixCredentials","ParseUnixRights","Pause","Pipe","PivotRoot","Pread","PtraceAttach","PtraceCont","PtraceDetach","PtraceGetEventMsg","PtraceGetRegs","PtracePeekData","PtracePeekText","PtracePokeData","PtracePokeText","PtraceSetOptions","PtraceSetRegs","PtraceSingleStep","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Reboot","Recvfrom","Recvmsg","Renameat","Seek","Select","Sendfile","Sendmsg","Sendto","SetLsfPromisc","SetNonblock","Setdomainname","Setfsgid","Setfsuid","Setgid","Setgroups","Sethostname","Setpgid","Setregid","Setresgid","Setresuid","Setreuid","Setrlimit","Setsid","SetsockoptIPMreq","SetsockoptIPMreqn","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Splice","Stat","Statfs","StringSlicePtr","Sync","SyncFileRange","Syscall","Syscall6","Sysinfo","Tee","Tgkill","Time","Times","TimespecToNsec","TimevalToNsec","Truncate","Umask","Uname","UnixCredentials","UnixRights","Unlinkat","Unmount","Unshare","Ustat","Utime","Wait4","Write","Accept","Access","Acct","Adjtimex","AttachLsf","Bind","BindToDevice","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Creat","DetachLsf","Dup","Dup2","EpollCreate","EpollCreate1","EpollCtl","EpollWait","Faccessat","Fallocate","Fchdir","Fchmod","Fchmodat","Fchown","Fchownat","Fdatasync","Flock","ForkExec","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Futimesat","Getcwd","Getdents","Getpeername","Getpgid","Getpgrp","Getrlimit","Getrusage","Getsockname","GetsockoptIPMreq","GetsockoptIPMreqn","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Gettid","InotifyAddWatch","InotifyInit","InotifyInit1","InotifyRmWatch","Ioperm","Iopl","Kill","Klogctl","Listen","LsfJump","LsfSocket","LsfStmt","Lstat","Madvise","Mkdirat","Mkfifo","Mknod","Mknodat","Mlock","Mlockall","Mmap","Mount","Mprotect","Munlock","Munlockall","Munmap","Nanosleep","NetlinkRIB","NsecToTimespec","Open","Openat","ParseDirent","ParseNetlinkMessage","ParseNetlinkRouteAttr","ParseSocketControlMessage","ParseUnixCredentials","ParseUnixRights","Pause","Pipe","PivotRoot","Pread","PtraceAttach","PtraceCont","PtraceDetach","PtraceGetEventMsg","PtraceGetRegs","PtracePeekData","PtracePeekText","PtracePokeData","PtracePokeText","PtraceSetOptions","PtraceSetRegs","PtraceSingleStep","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Reboot","Recvfrom","Recvmsg","Renameat","Seek","Select","Sendfile","Sendmsg","Sendto","SetLsfPromisc","SetNonblock","Setdomainname","Setfsgid","Setfsuid","Setgid","Setgroups","Sethostname","Setpgid","Setregid","Setresgid","Setresuid","Setreuid","Setrlimit","Setsid","SetsockoptIPMreq","SetsockoptIPMreqn","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Splice","Stat","Statfs","StringSlicePtr","Sync","SyncFileRange","Syscall","Syscall6","Sysinfo","Tee","Tgkill","Time","Times","TimespecToNsec","TimevalToNsec","Truncate","Umask","Uname","UnixCredentials","UnixRights","Unlinkat","Unmount","Unshare","Ustat","Utime","Wait4","Write","Accept","Access","Acct","Adjtimex","AttachLsf","Bind","BindToDevice","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Creat","DetachLsf","Dup","Dup2","EpollCreate","EpollCreate1","EpollCtl","EpollWait","Faccessat","Fallocate","Fchdir","Fchmod","Fchmodat","Fchown","Fchownat","Fdatasync","Flock","ForkExec","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Futimesat","Getcwd","Getdents","Getpeername","Getpgid","Getpgrp","Getrlimit","Getrusage","Getsockname","GetsockoptIPMreq","GetsockoptIPMreqn","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Gettid","InotifyAddWatch","InotifyInit","InotifyInit1","InotifyRmWatch","Ioperm","Iopl","Kill","Klogctl","Listen","LsfJump","LsfSocket","LsfStmt","Lstat","Madvise","Mkdirat","Mkfifo","Mknod","Mknodat","Mlock","Mlockall","Mmap","Mount","Mprotect","Munlock","Munlockall","Munmap","Nanosleep","NetlinkRIB","NsecToTimespec","Open","Openat","ParseDirent","ParseNetlinkMessage","ParseNetlinkRouteAttr","ParseSocketControlMessage","ParseUnixCredentials","ParseUnixRights","Pause","Pipe","PivotRoot","Pread","PtraceAttach","PtraceCont","PtraceDetach","PtraceGetEventMsg","PtraceGetRegs","PtracePeekData","PtracePeekText","PtracePokeData","PtracePokeText","PtraceSetOptions","PtraceSetRegs","PtraceSingleStep","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Reboot","Recvfrom","Recvmsg","Renameat","Seek","Select","Sendfile","Sendmsg","Sendto","SetLsfPromisc","SetNonblock","Setdomainname","Setfsgid","Setfsuid","Setgid","Setgroups","Sethostname","Setpgid","Setregid","Setresgid","Setresuid","Setreuid","Setrlimit","Setsid","SetsockoptIPMreq","SetsockoptIPMreqn","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Splice","Stat","Statfs","StringSlicePtr","Sync","SyncFileRange","Syscall","Syscall6","Sysinfo","Tee","Tgkill","Time","Times","TimespecToNsec","TimevalToNsec","Truncate","Umask","Uname","UnixCredentials","UnixRights","Unlinkat","Unmount","Unshare","Ustat","Utime","Wait4","Write","Accept","Access","Acct","Adjtimex","AttachLsf","Bind","BindToDevice","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Creat","DetachLsf","Dup","Dup2","EpollCreate","EpollCreate1","EpollCtl","EpollWait","Faccessat","Fallocate","Fchdir","Fchmod","Fchmodat","Fchown","Fchownat","Fdatasync","Flock","ForkExec","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Futimesat","Getcwd","Getdents","Getpeername","Getpgid","Getpgrp","Getrlimit","Getrusage","Getsockname","GetsockoptIPMreq","GetsockoptIPMreqn","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Gettid","InotifyAddWatch","InotifyInit","InotifyInit1","InotifyRmWatch","Ioperm","Iopl","Kill","Klogctl","Listen","LsfJump","LsfSocket","LsfStmt","Lstat","Madvise","Mkdirat","Mkfifo","Mknod","Mknodat","Mlock","Mlockall","Mmap","Mount","Mprotect","Munlock","Munlockall","Munmap","Nanosleep","NetlinkRIB","NsecToTimespec","Open","Openat","ParseDirent","ParseNetlinkMessage","ParseNetlinkRouteAttr","ParseSocketControlMessage","ParseUnixCredentials","ParseUnixRights","Pause","Pipe","PivotRoot","Pread","PtraceAttach","PtraceCont","PtraceDetach","PtraceGetEventMsg","PtraceGetRegs","PtracePeekData","PtracePeekText","PtracePokeData","PtracePokeText","PtraceSetOptions","PtraceSetRegs","PtraceSingleStep","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Reboot","Recvfrom","Recvmsg","Renameat","Seek","Select","Sendfile","Sendmsg","Sendto","SetLsfPromisc","SetNonblock","Setdomainname","Setfsgid","Setfsuid","Setgid","Setgroups","Sethostname","Setpgid","Setregid","Setresgid","Setresuid","Setreuid","Setrlimit","Setsid","SetsockoptIPMreq","SetsockoptIPMreqn","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Splice","Stat","Statfs","StringSlicePtr","Sync","SyncFileRange","Syscall","Syscall6","Sysinfo","Tee","Tgkill","Time","Times","TimespecToNsec","TimevalToNsec","Truncate","Umask","Uname","UnixCredentials","UnixRights","Unlinkat","Unmount","Unshare","Ustat","Utime","Wait4","Write","Accept","Access","Acct","Adjtimex","AttachLsf","Bind","BindToDevice","Chroot","Close","CloseOnExec","CmsgLen","CmsgSpace","Connect","Creat","DetachLsf","Dup","Dup2","EpollCreate","EpollCreate1","EpollCtl","EpollWait","Faccessat","Fallocate","Fchdir","Fchmod","Fchmodat","Fchown","Fchownat","Fdatasync","Flock","ForkExec","Fstat","Fstatfs","Fsync","Ftruncate","Futimes","Futimesat","Getcwd","Getdents","Getpeername","Getpgid","Getpgrp","Getrlimit","Getrusage","Getsockname","GetsockoptIPMreq","GetsockoptIPMreqn","GetsockoptIPv6Mreq","GetsockoptInet4Addr","GetsockoptInt","Gettid","InotifyAddWatch","InotifyInit","InotifyInit1","InotifyRmWatch","Kill","Klogctl","Listen","LsfJump","LsfSocket","LsfStmt","Lstat","Madvise","Mkdirat","Mkfifo","Mknod","Mknodat","Mlock","Mlockall","Mmap","Mount","Mprotect","Munlock","Munlockall","Munmap","Nanosleep","NetlinkRIB","NsecToTimespec","Open","Openat","ParseDirent","ParseNetlinkMessage","ParseNetlinkRouteAttr","ParseSocketControlMessage","ParseUnixCredentials","ParseUnixRights","Pause","Pipe","PivotRoot","Pread","PtraceAttach","PtraceCont","PtraceDetach","PtraceGetEventMsg","PtraceGetRegs","PtracePeekData","PtracePeekText","PtracePokeData","PtracePokeText","PtraceSetOptions","PtraceSetRegs","PtraceSingleStep","Pwrite","RawSyscall","RawSyscall6","Read","ReadDirent","Reboot","Recvfrom","Recvmsg","Renameat","Seek","Select","Sendfile","Sendmsg","Sendto","SetLsfPromisc","SetNonblock","Setdomainname","Setfsgid","Setfsuid","Setgid","Setgroups","Sethostname","Setpgid","Setregid","Setresgid","Setresuid","Setreuid","Setrlimit","Setsid","SetsockoptIPMreq","SetsockoptIPMreqn","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptString","SetsockoptTimeval","Settimeofday","Setuid","Shutdown","Socket","Socketpair","Splice","Stat","Statfs","StringSlicePtr","Sync","Syscall","Syscall6","Sysinfo","Tee","Tgkill","Time","Times","TimespecToNsec","Truncate","Umask","Uname","UnixCredentials","UnixRights","Unlinkat","Unmount","Unshare","Ustat","Utime","Wait4","Write","Accept","AcceptEx","Bind","CancelIo","CertAddCertificateContextToStore","CertCloseStore","CertCreateCertificateContext","CertEnumCertificatesInStore","CertFreeCertificateChain","CertFreeCertificateContext","CertGetCertificateChain","CertOpenStore","CertOpenSystemStore","CertVerifyCertificateChainPolicy","Close","CloseHandle","CloseOnExec","Closesocket","CommandLineToArgv","ComputerName","Connect","ConvertSidToStringSid","ConvertStringSidToSid","CopySid","CreateDirectory","CreateFile","CreateFileMapping","CreateIoCompletionPort","CreatePipe","CreateProcess","CryptAcquireContext","CryptGenRandom","CryptReleaseContext","DeleteFile","DnsQuery","DnsRecordListFree","DuplicateHandle","EscapeArg","ExitProcess","Fchdir","Fchmod","Fchown","FindClose","FindFirstFile","FindNextFile","FlushFileBuffers","FlushViewOfFile","FormatMessage","FreeEnvironmentStrings","FreeLibrary","Fsync","Ftruncate","GetAcceptExSockaddrs","GetAdaptersInfo","GetCommandLine","GetComputerName","GetCurrentDirectory","GetCurrentProcess","GetEnvironmentStrings","GetEnvironmentVariable","GetExitCodeProcess","GetFileAttributes","GetFileAttributesEx","GetFileInformationByHandle","GetFileType","GetFullPathName","GetHostByName","GetIfEntry","GetLastError","GetLengthSid","GetLongPathName","GetProcAddress","GetProcessTimes","GetProtoByName","GetQueuedCompletionStatus","GetServByName","GetShortPathName","GetStartupInfo","GetStdHandle","GetSystemTimeAsFileTime","GetTempPath","GetTimeZoneInformation","GetTokenInformation","GetUserNameEx","GetUserProfileDirectory","GetVersion","Getpeername","Getsockname","GetsockoptInt","Listen","LoadDLL","LoadLibrary","LocalFree","LookupAccountName","LookupAccountSid","LookupSID","MapViewOfFile","MoveFile","MustLoadDLL","NetApiBufferFree","NetUserGetInfo","NewCallback","NewLazyDLL","NsecToFiletime","Ntohs","Open","OpenCurrentProcessToken","OpenProcess","OpenProcessToken","Pipe","PostQueuedCompletionStatus","Read","ReadDirectoryChanges","ReadFile","Recvfrom","RegCloseKey","RegEnumKeyEx","RegOpenKeyEx","RegQueryInfoKey","RegQueryValueEx","RemoveDirectory","Seek","Sendto","SetCurrentDirectory","SetEndOfFile","SetEnvironmentVariable","SetFileAttributes","SetFilePointer","SetFileTime","SetHandleInformation","SetNonblock","Setsockopt","SetsockoptIPMreq","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptTimeval","Shutdown","Socket","StringToSid","StringToUTF16","StringToUTF16Ptr","Syscall","Syscall12","Syscall15","Syscall6","Syscall9","TerminateProcess","TranslateAccountName","TranslateName","TransmitFile","UTF16ToString","UnmapViewOfFile","VirtualLock","VirtualUnlock","WSACleanup","WSAIoctl","WSARecv","WSARecvFrom","WSASend","WSASendTo","WSASendto","WSAStartup","WaitForSingleObject","Write","WriteFile","Accept","AcceptEx","Bind","CancelIo","CertAddCertificateContextToStore","CertCloseStore","CertCreateCertificateContext","CertEnumCertificatesInStore","CertFreeCertificateChain","CertFreeCertificateContext","CertGetCertificateChain","CertOpenStore","CertOpenSystemStore","CertVerifyCertificateChainPolicy","Close","CloseHandle","CloseOnExec","Closesocket","CommandLineToArgv","ComputerName","Connect","ConvertSidToStringSid","ConvertStringSidToSid","CopySid","CreateDirectory","CreateFile","CreateFileMapping","CreateIoCompletionPort","CreatePipe","CreateProcess","CryptAcquireContext","CryptGenRandom","CryptReleaseContext","DeleteFile","DnsQuery","DnsRecordListFree","DuplicateHandle","EscapeArg","ExitProcess","Fchdir","Fchmod","Fchown","FindClose","FindFirstFile","FindNextFile","FlushFileBuffers","FlushViewOfFile","FormatMessage","FreeEnvironmentStrings","FreeLibrary","Fsync","Ftruncate","GetAcceptExSockaddrs","GetAdaptersInfo","GetCommandLine","GetComputerName","GetCurrentDirectory","GetCurrentProcess","GetEnvironmentStrings","GetEnvironmentVariable","GetExitCodeProcess","GetFileAttributes","GetFileAttributesEx","GetFileInformationByHandle","GetFileType","GetFullPathName","GetHostByName","GetIfEntry","GetLastError","GetLengthSid","GetLongPathName","GetProcAddress","GetProcessTimes","GetProtoByName","GetQueuedCompletionStatus","GetServByName","GetShortPathName","GetStartupInfo","GetStdHandle","GetSystemTimeAsFileTime","GetTempPath","GetTimeZoneInformation","GetTokenInformation","GetUserNameEx","GetUserProfileDirectory","GetVersion","Getpeername","Getsockname","GetsockoptInt","Listen","LoadDLL","LoadLibrary","LocalFree","LookupAccountName","LookupAccountSid","LookupSID","MapViewOfFile","MoveFile","MustLoadDLL","NetApiBufferFree","NetUserGetInfo","NewCallback","NewLazyDLL","NsecToFiletime","Ntohs","Open","OpenCurrentProcessToken","OpenProcess","OpenProcessToken","Pipe","PostQueuedCompletionStatus","Read","ReadDirectoryChanges","ReadFile","Recvfrom","RegCloseKey","RegEnumKeyEx","RegOpenKeyEx","RegQueryInfoKey","RegQueryValueEx","RemoveDirectory","Seek","Sendto","SetCurrentDirectory","SetEndOfFile","SetEnvironmentVariable","SetFileAttributes","SetFilePointer","SetFileTime","SetHandleInformation","SetNonblock","Setsockopt","SetsockoptIPMreq","SetsockoptIPv6Mreq","SetsockoptInet4Addr","SetsockoptInt","SetsockoptLinger","SetsockoptTimeval","Shutdown","Socket","StringToSid","StringToUTF16","StringToUTF16Ptr","Syscall","Syscall12","Syscall15","Syscall6","Syscall9","TerminateProcess","TranslateAccountName","TranslateName","TransmitFile","UTF16ToString","UnmapViewOfFile","VirtualLock","VirtualUnlock","WSACleanup","WSAIoctl","WSARecv","WSARecvFrom","WSASend","WSASendTo","WSASendto","WSAStartup","WaitForSingleObject","Write","WriteFile","Chdir","Chmod","Chown","Clearenv","Environ","Exec","Exit","Getegid","Getenv","Geteuid","Getgid","Getgroups","Getpagesize","Getpid","Getppid","Gettimeofday","Getuid","Getwd","Lchown","Link","Mkdir","NsecToTimeval","Readlink","Rename","Rmdir","Setenv","StartProcess","StringBytePtr","StringByteSlice","Symlink","Unlink","Utimes"],"prefix":"syscall.","prototypes":[" any Accept ( int )"," any Access ( string , uint32 )"," any Adjtime ( *Timeval , *Timeval )"," any Bind ( int , Sockaddr )"," any BpfBuflen ( int )"," any BpfDatalink ( int )"," any BpfHeadercmpl ( int )"," any BpfInterface ( int , string )"," any BpfJump ( int , int , int , int )"," any BpfStats ( int )"," any BpfStmt ( int , int )"," any BpfTimeout ( int )"," any CheckBpfVersion ( int )"," any Chflags ( string , int )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Dup ( int )"," any Dup2 ( int , int )"," any Exchangedata ( string , string , int )"," any Fchdir ( int )"," any Fchflags ( string , int )"," any Fchmod ( int , uint32 )"," any Fchown ( int , int , int )"," any Flock ( int , int )"," any FlushBpf ( int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fpathconf ( int , int )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Getdirentries ( int , []uint8 , *uintptr )"," any Getdtablesize (  )"," any Getfsstat ( []Statfs_t , int )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getpriority ( int , int )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsid ( int )"," any Getsockname ( int )"," any GetsockoptByte ( int , int , int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Issetugid (  )"," any Kevent ( int , []Kevent_t , []Kevent_t , *Timespec )"," any Kill ( int , Signal )"," any Kqueue (  )"," any Listen ( int , int )"," any Lstat ( string , *Stat_t )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mmap ( int , int64 , int , int , int )"," any Munmap ( []uint8 )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseRoutingMessage ( []uint8 )"," any ParseRoutingSockaddr ( RoutingMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixRights ( *SocketControlMessage )"," any Pathconf ( string , int )"," any Pipe ( []int )"," any Pread ( int , []uint8 , int64 )"," any PtraceAttach ( int )"," any PtraceDetach ( int )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Revoke ( string )"," any RouteRIB ( int , int )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetBpf ( int , []BpfInsn )"," any SetBpfBuflen ( int , int )"," any SetBpfDatalink ( int , int )"," any SetBpfHeadercmpl ( int , int )"," any SetBpfImmediate ( int , int )"," any SetBpfInterface ( int , string )"," any SetBpfPromisc ( int , int )"," any SetBpfTimeout ( int , *Timeval )"," any SetKevent ( *Kevent_t , int , int , int) )"," any SetNonblock ( int , bool )"," any Setegid ( int )"," any Seteuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Setlogin ( string )"," any Setpgid ( int , int )"," any Setpriority ( int , int , int )"," any Setprivexec ( int )"," any Setregid ( int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptByte ( int , int , int , uint8 )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync (  )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall9 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysctl ( string )"," any SysctlUint32 ( string )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Undelete ( string )"," any UnixRights ( ...int )"," any Unmount ( string , int )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Adjtime ( *Timeval , *Timeval )"," any Bind ( int , Sockaddr )"," any BpfBuflen ( int )"," any BpfDatalink ( int )"," any BpfHeadercmpl ( int )"," any BpfInterface ( int , string )"," any BpfJump ( int , int , int , int )"," any BpfStats ( int )"," any BpfStmt ( int , int )"," any BpfTimeout ( int )"," any CheckBpfVersion ( int )"," any Chflags ( string , int )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Dup ( int )"," any Dup2 ( int , int )"," any Exchangedata ( string , string , int )"," any Fchdir ( int )"," any Fchflags ( string , int )"," any Fchmod ( int , uint32 )"," any Fchown ( int , int , int )"," any Flock ( int , int )"," any FlushBpf ( int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fpathconf ( int , int )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Getdirentries ( int , []uint8 , *uintptr )"," any Getdtablesize (  )"," any Getfsstat ( []Statfs_t , int )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getpriority ( int , int )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsid ( int )"," any Getsockname ( int )"," any GetsockoptByte ( int , int , int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Issetugid (  )"," any Kevent ( int , []Kevent_t , []Kevent_t , *Timespec )"," any Kill ( int , Signal )"," any Kqueue (  )"," any Listen ( int , int )"," any Lstat ( string , *Stat_t )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mmap ( int , int64 , int , int , int )"," any Munmap ( []uint8 )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseRoutingMessage ( []uint8 )"," any ParseRoutingSockaddr ( RoutingMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixRights ( *SocketControlMessage )"," any Pathconf ( string , int )"," any Pipe ( []int )"," any Pread ( int , []uint8 , int64 )"," any PtraceAttach ( int )"," any PtraceDetach ( int )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Revoke ( string )"," any RouteRIB ( int , int )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetBpf ( int , []BpfInsn )"," any SetBpfBuflen ( int , int )"," any SetBpfDatalink ( int , int )"," any SetBpfHeadercmpl ( int , int )"," any SetBpfImmediate ( int , int )"," any SetBpfInterface ( int , string )"," any SetBpfPromisc ( int , int )"," any SetBpfTimeout ( int , *Timeval )"," any SetKevent ( *Kevent_t , int , int , int) )"," any SetNonblock ( int , bool )"," any Setegid ( int )"," any Seteuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Setlogin ( string )"," any Setpgid ( int , int )"," any Setpriority ( int , int , int )"," any Setprivexec ( int )"," any Setregid ( int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptByte ( int , int , int , uint8 )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync (  )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall9 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysctl ( string )"," any SysctlUint32 ( string )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Undelete ( string )"," any UnixRights ( ...int )"," any Unmount ( string , int )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Adjtime ( *Timeval , *Timeval )"," any Bind ( int , Sockaddr )"," any BpfBuflen ( int )"," any BpfDatalink ( int )"," any BpfHeadercmpl ( int )"," any BpfInterface ( int , string )"," any BpfJump ( int , int , int , int )"," any BpfStats ( int )"," any BpfStmt ( int , int )"," any BpfTimeout ( int )"," any CheckBpfVersion ( int )"," any Chflags ( string , int )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Dup ( int )"," any Dup2 ( int , int )"," any Exchangedata ( string , string , int )"," any Fchdir ( int )"," any Fchflags ( string , int )"," any Fchmod ( int , uint32 )"," any Fchown ( int , int , int )"," any Flock ( int , int )"," any FlushBpf ( int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fpathconf ( int , int )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Getdirentries ( int , []uint8 , *uintptr )"," any Getdtablesize (  )"," any Getfsstat ( []Statfs_t , int )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getpriority ( int , int )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsid ( int )"," any Getsockname ( int )"," any GetsockoptByte ( int , int , int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Issetugid (  )"," any Kevent ( int , []Kevent_t , []Kevent_t , *Timespec )"," any Kill ( int , Signal )"," any Kqueue (  )"," any Listen ( int , int )"," any Lstat ( string , *Stat_t )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mmap ( int , int64 , int , int , int )"," any Munmap ( []uint8 )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseRoutingMessage ( []uint8 )"," any ParseRoutingSockaddr ( RoutingMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixRights ( *SocketControlMessage )"," any Pathconf ( string , int )"," any Pipe ( []int )"," any Pread ( int , []uint8 , int64 )"," any PtraceAttach ( int )"," any PtraceDetach ( int )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Revoke ( string )"," any RouteRIB ( int , int )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetBpf ( int , []BpfInsn )"," any SetBpfBuflen ( int , int )"," any SetBpfDatalink ( int , int )"," any SetBpfHeadercmpl ( int , int )"," any SetBpfImmediate ( int , int )"," any SetBpfInterface ( int , string )"," any SetBpfPromisc ( int , int )"," any SetBpfTimeout ( int , *Timeval )"," any SetKevent ( *Kevent_t , int , int , int) )"," any SetNonblock ( int , bool )"," any Setegid ( int )"," any Seteuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Setlogin ( string )"," any Setpgid ( int , int )"," any Setpriority ( int , int , int )"," any Setprivexec ( int )"," any Setregid ( int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptByte ( int , int , int , uint8 )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync (  )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysctl ( string )"," any SysctlUint32 ( string )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Undelete ( string )"," any UnixRights ( ...int )"," any Unmount ( string , int )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Adjtime ( *Timeval , *Timeval )"," any Bind ( int , Sockaddr )"," any BpfBuflen ( int )"," any BpfDatalink ( int )"," any BpfHeadercmpl ( int )"," any BpfInterface ( int , string )"," any BpfJump ( int , int , int , int )"," any BpfStats ( int )"," any BpfStmt ( int , int )"," any BpfTimeout ( int )"," any CheckBpfVersion ( int )"," any Chflags ( string , int )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Dup ( int )"," any Dup2 ( int , int )"," any Exchangedata ( string , string , int )"," any Fchdir ( int )"," any Fchflags ( string , int )"," any Fchmod ( int , uint32 )"," any Fchown ( int , int , int )"," any Flock ( int , int )"," any FlushBpf ( int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fpathconf ( int , int )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Getdirentries ( int , []uint8 , *uintptr )"," any Getdtablesize (  )"," any Getfsstat ( []Statfs_t , int )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getpriority ( int , int )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsid ( int )"," any Getsockname ( int )"," any GetsockoptByte ( int , int , int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Issetugid (  )"," any Kevent ( int , []Kevent_t , []Kevent_t , *Timespec )"," any Kill ( int , Signal )"," any Kqueue (  )"," any Listen ( int , int )"," any Lstat ( string , *Stat_t )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mmap ( int , int64 , int , int , int )"," any Munmap ( []uint8 )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseRoutingMessage ( []uint8 )"," any ParseRoutingSockaddr ( RoutingMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixRights ( *SocketControlMessage )"," any Pathconf ( string , int )"," any Pipe ( []int )"," any Pread ( int , []uint8 , int64 )"," any PtraceAttach ( int )"," any PtraceDetach ( int )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Revoke ( string )"," any RouteRIB ( int , int )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetBpf ( int , []BpfInsn )"," any SetBpfBuflen ( int , int )"," any SetBpfDatalink ( int , int )"," any SetBpfHeadercmpl ( int , int )"," any SetBpfImmediate ( int , int )"," any SetBpfInterface ( int , string )"," any SetBpfPromisc ( int , int )"," any SetBpfTimeout ( int , *Timeval )"," any SetKevent ( *Kevent_t , int , int , int) )"," any SetNonblock ( int , bool )"," any Setegid ( int )"," any Seteuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Setlogin ( string )"," any Setpgid ( int , int )"," any Setpriority ( int , int , int )"," any Setprivexec ( int )"," any Setregid ( int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptByte ( int , int , int , uint8 )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync (  )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysctl ( string )"," any SysctlUint32 ( string )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Undelete ( string )"," any UnixRights ( ...int )"," any Unmount ( string , int )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Adjtime ( *Timeval , *Timeval )"," any Bind ( int , Sockaddr )"," any BpfBuflen ( int )"," any BpfDatalink ( int )"," any BpfHeadercmpl ( int )"," any BpfInterface ( int , string )"," any BpfJump ( int , int , int , int )"," any BpfStats ( int )"," any BpfStmt ( int , int )"," any BpfTimeout ( int )"," any CheckBpfVersion ( int )"," any Chflags ( string , int )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Dup ( int )"," any Dup2 ( int , int )"," any Fchdir ( int )"," any Fchflags ( string , int )"," any Fchmod ( int , uint32 )"," any Fchown ( int , int , int )"," any Flock ( int , int )"," any FlushBpf ( int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fpathconf ( int , int )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Getdirentries ( int , []uint8 , *uintptr )"," any Getdtablesize (  )"," any Getfsstat ( []Statfs_t , int )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getpriority ( int , int )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsid ( int )"," any Getsockname ( int )"," any GetsockoptByte ( int , int , int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPMreqn ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Issetugid (  )"," any Kevent ( int , []Kevent_t , []Kevent_t , *Timespec )"," any Kill ( int , Signal )"," any Kqueue (  )"," any Listen ( int , int )"," any Lstat ( string , *Stat_t )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mmap ( int , int64 , int , int , int )"," any Munmap ( []uint8 )"," any Nanosleep ( *Timespec , *Timespec )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseRoutingMessage ( []uint8 )"," any ParseRoutingSockaddr ( RoutingMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixRights ( *SocketControlMessage )"," any Pathconf ( string , int )"," any Pipe ( []int )"," any Pread ( int , []uint8 , int64 )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Revoke ( string )"," any RouteRIB ( int , int )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetBpf ( int , []BpfInsn )"," any SetBpfBuflen ( int , int )"," any SetBpfDatalink ( int , int )"," any SetBpfHeadercmpl ( int , int )"," any SetBpfImmediate ( int , int )"," any SetBpfInterface ( int , string )"," any SetBpfPromisc ( int , int )"," any SetBpfTimeout ( int , *Timeval )"," any SetKevent ( *Kevent_t , int , int , int) )"," any SetNonblock ( int , bool )"," any Setegid ( int )"," any Seteuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Setlogin ( string )"," any Setpgid ( int , int )"," any Setpriority ( int , int , int )"," any Setregid ( int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptByte ( int , int , int , uint8 )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPMreqn ( int , int , int , *IPMreqn )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync (  )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall9 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysctl ( string )"," any SysctlUint32 ( string )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Undelete ( string )"," any UnixRights ( ...int )"," any Unmount ( string , int )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Adjtime ( *Timeval , *Timeval )"," any Bind ( int , Sockaddr )"," any BpfBuflen ( int )"," any BpfDatalink ( int )"," any BpfHeadercmpl ( int )"," any BpfInterface ( int , string )"," any BpfJump ( int , int , int , int )"," any BpfStats ( int )"," any BpfStmt ( int , int )"," any BpfTimeout ( int )"," any CheckBpfVersion ( int )"," any Chflags ( string , int )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Dup ( int )"," any Dup2 ( int , int )"," any Fchdir ( int )"," any Fchflags ( string , int )"," any Fchmod ( int , uint32 )"," any Fchown ( int , int , int )"," any Flock ( int , int )"," any FlushBpf ( int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fpathconf ( int , int )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Getdirentries ( int , []uint8 , *uintptr )"," any Getdtablesize (  )"," any Getfsstat ( []Statfs_t , int )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getpriority ( int , int )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsid ( int )"," any Getsockname ( int )"," any GetsockoptByte ( int , int , int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPMreqn ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Issetugid (  )"," any Kevent ( int , []Kevent_t , []Kevent_t , *Timespec )"," any Kill ( int , Signal )"," any Kqueue (  )"," any Listen ( int , int )"," any Lstat ( string , *Stat_t )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mmap ( int , int64 , int , int , int )"," any Munmap ( []uint8 )"," any Nanosleep ( *Timespec , *Timespec )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseRoutingMessage ( []uint8 )"," any ParseRoutingSockaddr ( RoutingMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixRights ( *SocketControlMessage )"," any Pathconf ( string , int )"," any Pipe ( []int )"," any Pread ( int , []uint8 , int64 )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Revoke ( string )"," any RouteRIB ( int , int )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetBpf ( int , []BpfInsn )"," any SetBpfBuflen ( int , int )"," any SetBpfDatalink ( int , int )"," any SetBpfHeadercmpl ( int , int )"," any SetBpfImmediate ( int , int )"," any SetBpfInterface ( int , string )"," any SetBpfPromisc ( int , int )"," any SetBpfTimeout ( int , *Timeval )"," any SetKevent ( *Kevent_t , int , int , int) )"," any SetNonblock ( int , bool )"," any Setegid ( int )"," any Seteuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Setlogin ( string )"," any Setpgid ( int , int )"," any Setpriority ( int , int , int )"," any Setregid ( int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptByte ( int , int , int , uint8 )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPMreqn ( int , int , int , *IPMreqn )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync (  )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysctl ( string )"," any SysctlUint32 ( string )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Undelete ( string )"," any UnixRights ( ...int )"," any Unmount ( string , int )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Acct ( string )"," any Adjtimex ( *Timex )"," any AttachLsf ( int , []SockFilter )"," any Bind ( int , Sockaddr )"," any BindToDevice ( int , string )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Creat ( string , uint32 )"," any DetachLsf ( int )"," any Dup ( int )"," any Dup2 ( int , int )"," any EpollCreate ( int )"," any EpollCreate1 ( int )"," any EpollCtl ( int , int , int , *EpollEvent )"," any EpollWait ( int , []EpollEvent , int )"," any Faccessat ( int , string , uint32 , int )"," any Fallocate ( int , uint32 , int64 , int64 )"," any Fchdir ( int )"," any Fchmod ( int , uint32 )"," any Fchmodat ( int , string , uint32 , int )"," any Fchown ( int , int , int )"," any Fchownat ( int , string , int , int , int )"," any Fdatasync ( int )"," any Flock ( int , int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Futimesat ( int , string , []Timeval )"," any Getcwd ( []uint8 )"," any Getdents ( int , []uint8 )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsockname ( int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPMreqn ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Gettid (  )"," any InotifyAddWatch ( int , string , uint32 )"," any InotifyInit (  )"," any InotifyInit1 ( int )"," any InotifyRmWatch ( int , uint32 )"," any Ioperm ( int , int , int )"," any Iopl ( int )"," any Kill ( int , Signal )"," any Klogctl ( int , []uint8 )"," any Listen ( int , int )"," any LsfJump ( int , int , int , int )"," any LsfSocket ( int , int )"," any LsfStmt ( int , int )"," any Lstat ( string , *Stat_t )"," any Madvise ( []uint8 , int )"," any Mkdirat ( int , string , uint32 )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mknodat ( int , string , uint32 , int )"," any Mlock ( []uint8 )"," any Mlockall ( int )"," any Mmap ( int , int64 , int , int , int )"," any Mount ( string , string , string , uintptr , string )"," any Mprotect ( []uint8 , int )"," any Munlock ( []uint8 )"," any Munlockall (  )"," any Munmap ( []uint8 )"," any Nanosleep ( *Timespec , *Timespec )"," any NetlinkRIB ( int , int )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any Openat ( int , string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseNetlinkMessage ( []uint8 )"," any ParseNetlinkRouteAttr ( *NetlinkMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixCredentials ( *SocketControlMessage )"," any ParseUnixRights ( *SocketControlMessage )"," any Pause (  )"," any Pipe ( []int )"," any PivotRoot ( string , string )"," any Pread ( int , []uint8 , int64 )"," any PtraceAttach ( int )"," any PtraceCont ( int , int )"," any PtraceDetach ( int )"," any PtraceGetEventMsg ( int )"," any PtraceGetRegs ( int , *PtraceRegs )"," any PtracePeekData ( int , uintptr , []uint8 )"," any PtracePeekText ( int , uintptr , []uint8 )"," any PtracePokeData ( int , uintptr , []uint8 )"," any PtracePokeText ( int , uintptr , []uint8 )"," any PtraceSetOptions ( int , int )"," any PtraceSetRegs ( int , *PtraceRegs )"," any PtraceSingleStep ( int )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Reboot ( int )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Renameat ( int , string , int , string )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetLsfPromisc ( string , bool )"," any SetNonblock ( int , bool )"," any Setdomainname ( []uint8 )"," any Setfsgid ( int )"," any Setfsuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Sethostname ( []uint8 )"," any Setpgid ( int , int )"," any Setregid ( int , int )"," any Setresgid ( int , int , int )"," any Setresuid ( int , int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPMreqn ( int , int , int , *IPMreqn )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Splice ( int , *int64 , int , *int64 , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync ( ) )"," any SyncFileRange ( int , int64 , int64 , int )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysinfo ( *Sysinfo_t )"," any Tee ( int , int , int , int )"," any Tgkill ( int , int , Signal )"," any Time ( *Time_t )"," any Times ( *Tms )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Uname ( *Utsname )"," any UnixCredentials ( *Ucred )"," any UnixRights ( ...int )"," any Unlinkat ( int , string )"," any Unmount ( string , int )"," any Unshare ( int )"," any Ustat ( int , *Ustat_t )"," any Utime ( string , *Utimbuf )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Acct ( string )"," any Adjtimex ( *Timex )"," any AttachLsf ( int , []SockFilter )"," any Bind ( int , Sockaddr )"," any BindToDevice ( int , string )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Creat ( string , uint32 )"," any DetachLsf ( int )"," any Dup ( int )"," any Dup2 ( int , int )"," any EpollCreate ( int )"," any EpollCreate1 ( int )"," any EpollCtl ( int , int , int , *EpollEvent )"," any EpollWait ( int , []EpollEvent , int )"," any Faccessat ( int , string , uint32 , int )"," any Fallocate ( int , uint32 , int64 , int64 )"," any Fchdir ( int )"," any Fchmod ( int , uint32 )"," any Fchmodat ( int , string , uint32 , int )"," any Fchown ( int , int , int )"," any Fchownat ( int , string , int , int , int )"," any Fdatasync ( int )"," any Flock ( int , int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Futimesat ( int , string , []Timeval )"," any Getcwd ( []uint8 )"," any Getdents ( int , []uint8 )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsockname ( int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPMreqn ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Gettid (  )"," any InotifyAddWatch ( int , string , uint32 )"," any InotifyInit (  )"," any InotifyInit1 ( int )"," any InotifyRmWatch ( int , uint32 )"," any Ioperm ( int , int , int )"," any Iopl ( int )"," any Kill ( int , Signal )"," any Klogctl ( int , []uint8 )"," any Listen ( int , int )"," any LsfJump ( int , int , int , int )"," any LsfSocket ( int , int )"," any LsfStmt ( int , int )"," any Lstat ( string , *Stat_t )"," any Madvise ( []uint8 , int )"," any Mkdirat ( int , string , uint32 )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mknodat ( int , string , uint32 , int )"," any Mlock ( []uint8 )"," any Mlockall ( int )"," any Mmap ( int , int64 , int , int , int )"," any Mount ( string , string , string , uintptr , string )"," any Mprotect ( []uint8 , int )"," any Munlock ( []uint8 )"," any Munlockall (  )"," any Munmap ( []uint8 )"," any Nanosleep ( *Timespec , *Timespec )"," any NetlinkRIB ( int , int )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any Openat ( int , string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseNetlinkMessage ( []uint8 )"," any ParseNetlinkRouteAttr ( *NetlinkMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixCredentials ( *SocketControlMessage )"," any ParseUnixRights ( *SocketControlMessage )"," any Pause (  )"," any Pipe ( []int )"," any PivotRoot ( string , string )"," any Pread ( int , []uint8 , int64 )"," any PtraceAttach ( int )"," any PtraceCont ( int , int )"," any PtraceDetach ( int )"," any PtraceGetEventMsg ( int )"," any PtraceGetRegs ( int , *PtraceRegs )"," any PtracePeekData ( int , uintptr , []uint8 )"," any PtracePeekText ( int , uintptr , []uint8 )"," any PtracePokeData ( int , uintptr , []uint8 )"," any PtracePokeText ( int , uintptr , []uint8 )"," any PtraceSetOptions ( int , int )"," any PtraceSetRegs ( int , *PtraceRegs )"," any PtraceSingleStep ( int )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Reboot ( int )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Renameat ( int , string , int , string )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetLsfPromisc ( string , bool )"," any SetNonblock ( int , bool )"," any Setdomainname ( []uint8 )"," any Setfsgid ( int )"," any Setfsuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Sethostname ( []uint8 )"," any Setpgid ( int , int )"," any Setregid ( int , int )"," any Setresgid ( int , int , int )"," any Setresuid ( int , int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPMreqn ( int , int , int , *IPMreqn )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Splice ( int , *int64 , int , *int64 , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync ( ) )"," any SyncFileRange ( int , int64 , int64 , int )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysinfo ( *Sysinfo_t )"," any Tee ( int , int , int , int )"," any Tgkill ( int , int , Signal )"," any Time ( *Time_t )"," any Times ( *Tms )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Uname ( *Utsname )"," any UnixCredentials ( *Ucred )"," any UnixRights ( ...int )"," any Unlinkat ( int , string )"," any Unmount ( string , int )"," any Unshare ( int )"," any Ustat ( int , *Ustat_t )"," any Utime ( string , *Utimbuf )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Acct ( string )"," any Adjtimex ( *Timex )"," any AttachLsf ( int , []SockFilter )"," any Bind ( int , Sockaddr )"," any BindToDevice ( int , string )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Creat ( string , uint32 )"," any DetachLsf ( int )"," any Dup ( int )"," any Dup2 ( int , int )"," any EpollCreate ( int )"," any EpollCreate1 ( int )"," any EpollCtl ( int , int , int , *EpollEvent )"," any EpollWait ( int , []EpollEvent , int )"," any Faccessat ( int , string , uint32 , int )"," any Fallocate ( int , uint32 , int64 , int64 )"," any Fchdir ( int )"," any Fchmod ( int , uint32 )"," any Fchmodat ( int , string , uint32 , int )"," any Fchown ( int , int , int )"," any Fchownat ( int , string , int , int , int )"," any Fdatasync ( int )"," any Flock ( int , int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Futimesat ( int , string , []Timeval )"," any Getcwd ( []uint8 )"," any Getdents ( int , []uint8 )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsockname ( int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPMreqn ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Gettid (  )"," any InotifyAddWatch ( int , string , uint32 )"," any InotifyInit (  )"," any InotifyInit1 ( int )"," any InotifyRmWatch ( int , uint32 )"," any Ioperm ( int , int , int )"," any Iopl ( int )"," any Kill ( int , Signal )"," any Klogctl ( int , []uint8 )"," any Listen ( int , int )"," any LsfJump ( int , int , int , int )"," any LsfSocket ( int , int )"," any LsfStmt ( int , int )"," any Lstat ( string , *Stat_t )"," any Madvise ( []uint8 , int )"," any Mkdirat ( int , string , uint32 )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mknodat ( int , string , uint32 , int )"," any Mlock ( []uint8 )"," any Mlockall ( int )"," any Mmap ( int , int64 , int , int , int )"," any Mount ( string , string , string , uintptr , string )"," any Mprotect ( []uint8 , int )"," any Munlock ( []uint8 )"," any Munlockall (  )"," any Munmap ( []uint8 )"," any Nanosleep ( *Timespec , *Timespec )"," any NetlinkRIB ( int , int )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any Openat ( int , string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseNetlinkMessage ( []uint8 )"," any ParseNetlinkRouteAttr ( *NetlinkMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixCredentials ( *SocketControlMessage )"," any ParseUnixRights ( *SocketControlMessage )"," any Pause (  )"," any Pipe ( []int )"," any PivotRoot ( string , string )"," any Pread ( int , []uint8 , int64 )"," any PtraceAttach ( int )"," any PtraceCont ( int , int )"," any PtraceDetach ( int )"," any PtraceGetEventMsg ( int )"," any PtraceGetRegs ( int , *PtraceRegs )"," any PtracePeekData ( int , uintptr , []uint8 )"," any PtracePeekText ( int , uintptr , []uint8 )"," any PtracePokeData ( int , uintptr , []uint8 )"," any PtracePokeText ( int , uintptr , []uint8 )"," any PtraceSetOptions ( int , int )"," any PtraceSetRegs ( int , *PtraceRegs )"," any PtraceSingleStep ( int )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Reboot ( int )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Renameat ( int , string , int , string )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetLsfPromisc ( string , bool )"," any SetNonblock ( int , bool )"," any Setdomainname ( []uint8 )"," any Setfsgid ( int )"," any Setfsuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Sethostname ( []uint8 )"," any Setpgid ( int , int )"," any Setregid ( int , int )"," any Setresgid ( int , int , int )"," any Setresuid ( int , int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPMreqn ( int , int , int , *IPMreqn )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Splice ( int , *int64 , int , *int64 , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync ( ) )"," any SyncFileRange ( int , int64 , int64 , int )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysinfo ( *Sysinfo_t )"," any Tee ( int , int , int , int )"," any Tgkill ( int , int , Signal )"," any Time ( *Time_t )"," any Times ( *Tms )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Uname ( *Utsname )"," any UnixCredentials ( *Ucred )"," any UnixRights ( ...int )"," any Unlinkat ( int , string )"," any Unmount ( string , int )"," any Unshare ( int )"," any Ustat ( int , *Ustat_t )"," any Utime ( string , *Utimbuf )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Acct ( string )"," any Adjtimex ( *Timex )"," any AttachLsf ( int , []SockFilter )"," any Bind ( int , Sockaddr )"," any BindToDevice ( int , string )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Creat ( string , uint32 )"," any DetachLsf ( int )"," any Dup ( int )"," any Dup2 ( int , int )"," any EpollCreate ( int )"," any EpollCreate1 ( int )"," any EpollCtl ( int , int , int , *EpollEvent )"," any EpollWait ( int , []EpollEvent , int )"," any Faccessat ( int , string , uint32 , int )"," any Fallocate ( int , uint32 , int64 , int64 )"," any Fchdir ( int )"," any Fchmod ( int , uint32 )"," any Fchmodat ( int , string , uint32 , int )"," any Fchown ( int , int , int )"," any Fchownat ( int , string , int , int , int )"," any Fdatasync ( int )"," any Flock ( int , int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Futimesat ( int , string , []Timeval )"," any Getcwd ( []uint8 )"," any Getdents ( int , []uint8 )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsockname ( int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPMreqn ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Gettid (  )"," any InotifyAddWatch ( int , string , uint32 )"," any InotifyInit (  )"," any InotifyInit1 ( int )"," any InotifyRmWatch ( int , uint32 )"," any Ioperm ( int , int , int )"," any Iopl ( int )"," any Kill ( int , Signal )"," any Klogctl ( int , []uint8 )"," any Listen ( int , int )"," any LsfJump ( int , int , int , int )"," any LsfSocket ( int , int )"," any LsfStmt ( int , int )"," any Lstat ( string , *Stat_t )"," any Madvise ( []uint8 , int )"," any Mkdirat ( int , string , uint32 )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mknodat ( int , string , uint32 , int )"," any Mlock ( []uint8 )"," any Mlockall ( int )"," any Mmap ( int , int64 , int , int , int )"," any Mount ( string , string , string , uintptr , string )"," any Mprotect ( []uint8 , int )"," any Munlock ( []uint8 )"," any Munlockall (  )"," any Munmap ( []uint8 )"," any Nanosleep ( *Timespec , *Timespec )"," any NetlinkRIB ( int , int )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any Openat ( int , string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseNetlinkMessage ( []uint8 )"," any ParseNetlinkRouteAttr ( *NetlinkMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixCredentials ( *SocketControlMessage )"," any ParseUnixRights ( *SocketControlMessage )"," any Pause (  )"," any Pipe ( []int )"," any PivotRoot ( string , string )"," any Pread ( int , []uint8 , int64 )"," any PtraceAttach ( int )"," any PtraceCont ( int , int )"," any PtraceDetach ( int )"," any PtraceGetEventMsg ( int )"," any PtraceGetRegs ( int , *PtraceRegs )"," any PtracePeekData ( int , uintptr , []uint8 )"," any PtracePeekText ( int , uintptr , []uint8 )"," any PtracePokeData ( int , uintptr , []uint8 )"," any PtracePokeText ( int , uintptr , []uint8 )"," any PtraceSetOptions ( int , int )"," any PtraceSetRegs ( int , *PtraceRegs )"," any PtraceSingleStep ( int )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Reboot ( int )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Renameat ( int , string , int , string )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetLsfPromisc ( string , bool )"," any SetNonblock ( int , bool )"," any Setdomainname ( []uint8 )"," any Setfsgid ( int )"," any Setfsuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Sethostname ( []uint8 )"," any Setpgid ( int , int )"," any Setregid ( int , int )"," any Setresgid ( int , int , int )"," any Setresuid ( int , int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPMreqn ( int , int , int , *IPMreqn )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Splice ( int , *int64 , int , *int64 , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync ( ) )"," any SyncFileRange ( int , int64 , int64 , int )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysinfo ( *Sysinfo_t )"," any Tee ( int , int , int , int )"," any Tgkill ( int , int , Signal )"," any Time ( *Time_t )"," any Times ( *Tms )"," any TimespecToNsec ( Timespec )"," any TimevalToNsec ( Timeval )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Uname ( *Utsname )"," any UnixCredentials ( *Ucred )"," any UnixRights ( ...int )"," any Unlinkat ( int , string )"," any Unmount ( string , int )"," any Unshare ( int )"," any Ustat ( int , *Ustat_t )"," any Utime ( string , *Utimbuf )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( int )"," any Access ( string , uint32 )"," any Acct ( string )"," any Adjtimex ( *Timex )"," any AttachLsf ( int , []SockFilter )"," any Bind ( int , Sockaddr )"," any BindToDevice ( int , string )"," any Chroot ( string )"," any Close ( int )"," any CloseOnExec ( int) )"," any CmsgLen ( int )"," any CmsgSpace ( int )"," any Connect ( int , Sockaddr )"," any Creat ( string , uint32 )"," any DetachLsf ( int )"," any Dup ( int )"," any Dup2 ( int , int )"," any EpollCreate ( int )"," any EpollCreate1 ( int )"," any EpollCtl ( int , int , int , *EpollEvent )"," any EpollWait ( int , []EpollEvent , int )"," any Faccessat ( int , string , uint32 , int )"," any Fallocate ( int , uint32 , int64 , int64 )"," any Fchdir ( int )"," any Fchmod ( int , uint32 )"," any Fchmodat ( int , string , uint32 , int )"," any Fchown ( int , int , int )"," any Fchownat ( int , string , int , int , int )"," any Fdatasync ( int )"," any Flock ( int , int )"," any ForkExec ( string , []string , *ProcAttr )"," any Fstat ( int , *Stat_t )"," any Fstatfs ( int , *Statfs_t )"," any Fsync ( int )"," any Ftruncate ( int , int64 )"," any Futimes ( int , []Timeval )"," any Futimesat ( int , string , []Timeval )"," any Getcwd ( []uint8 )"," any Getdents ( int , []uint8 )"," any Getpeername ( int )"," any Getpgid ( int )"," any Getpgrp (  )"," any Getrlimit ( int , *Rlimit )"," any Getrusage ( int , *Rusage )"," any Getsockname ( int )"," any GetsockoptIPMreq ( int , int , int )"," any GetsockoptIPMreqn ( int , int , int )"," any GetsockoptIPv6Mreq ( int , int , int )"," any GetsockoptInet4Addr ( int , int , int )"," any GetsockoptInt ( int , int , int )"," any Gettid (  )"," any InotifyAddWatch ( int , string , uint32 )"," any InotifyInit (  )"," any InotifyInit1 ( int )"," any InotifyRmWatch ( int , uint32 )"," any Kill ( int , Signal )"," any Klogctl ( int , []uint8 )"," any Listen ( int , int )"," any LsfJump ( int , int , int , int )"," any LsfSocket ( int , int )"," any LsfStmt ( int , int )"," any Lstat ( string , *Stat_t )"," any Madvise ( []uint8 , int )"," any Mkdirat ( int , string , uint32 )"," any Mkfifo ( string , uint32 )"," any Mknod ( string , uint32 , int )"," any Mknodat ( int , string , uint32 , int )"," any Mlock ( []uint8 )"," any Mlockall ( int )"," any Mmap ( int , int64 , int , int , int )"," any Mount ( string , string , string , uintptr , string )"," any Mprotect ( []uint8 , int )"," any Munlock ( []uint8 )"," any Munlockall (  )"," any Munmap ( []uint8 )"," any Nanosleep ( *Timespec , *Timespec )"," any NetlinkRIB ( int , int )"," any NsecToTimespec ( int64 )"," any Open ( string , int , uint32 )"," any Openat ( int , string , int , uint32 )"," any ParseDirent ( []uint8 , int , []string )"," any ParseNetlinkMessage ( []uint8 )"," any ParseNetlinkRouteAttr ( *NetlinkMessage )"," any ParseSocketControlMessage ( []uint8 )"," any ParseUnixCredentials ( *SocketControlMessage )"," any ParseUnixRights ( *SocketControlMessage )"," any Pause (  )"," any Pipe ( []int )"," any PivotRoot ( string , string )"," any Pread ( int , []uint8 , int64 )"," any PtraceAttach ( int )"," any PtraceCont ( int , int )"," any PtraceDetach ( int )"," any PtraceGetEventMsg ( int )"," any PtraceGetRegs ( int , *PtraceRegs )"," any PtracePeekData ( int , uintptr , []uint8 )"," any PtracePeekText ( int , uintptr , []uint8 )"," any PtracePokeData ( int , uintptr , []uint8 )"," any PtracePokeText ( int , uintptr , []uint8 )"," any PtraceSetOptions ( int , int )"," any PtraceSetRegs ( int , *PtraceRegs )"," any PtraceSingleStep ( int )"," any Pwrite ( int , []uint8 , int64 )"," any RawSyscall ( uintptr , uintptr , uintptr , uintptr )"," any RawSyscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Read ( int , []uint8 )"," any ReadDirent ( int , []uint8 )"," any Reboot ( int )"," any Recvfrom ( int , []uint8 , int )"," any Recvmsg ( int , []uint8 , []uint8 , int )"," any Renameat ( int , string , int , string )"," any Seek ( int , int64 , int )"," any Select ( int , *FdSet , *FdSet , *FdSet , *Timeval )"," any Sendfile ( int , int , *int64 , int )"," any Sendmsg ( int , []uint8 , []uint8 , Sockaddr , int )"," any Sendto ( int , []uint8 , int , Sockaddr )"," any SetLsfPromisc ( string , bool )"," any SetNonblock ( int , bool )"," any Setdomainname ( []uint8 )"," any Setfsgid ( int )"," any Setfsuid ( int )"," any Setgid ( int )"," any Setgroups ( []int )"," any Sethostname ( []uint8 )"," any Setpgid ( int , int )"," any Setregid ( int , int )"," any Setresgid ( int , int , int )"," any Setresuid ( int , int , int )"," any Setreuid ( int , int )"," any Setrlimit ( int , *Rlimit )"," any Setsid (  )"," any SetsockoptIPMreq ( int , int , int , *IPMreq )"," any SetsockoptIPMreqn ( int , int , int , *IPMreqn )"," any SetsockoptIPv6Mreq ( int , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( int , int , int , [4]uint8 )"," any SetsockoptInt ( int , int , int , int )"," any SetsockoptLinger ( int , int , int , *Linger )"," any SetsockoptString ( int , int , int , string )"," any SetsockoptTimeval ( int , int , int , *Timeval )"," any Settimeofday ( *Timeval )"," any Setuid ( int )"," any Shutdown ( int , int )"," any Socket ( int , int , int )"," any Socketpair ( int , int , int )"," any Splice ( int , *int64 , int , *int64 , int , int )"," any Stat ( string , *Stat_t )"," any Statfs ( string , *Statfs_t )"," any StringSlicePtr ( []string )"," any Sync ( ) )"," any Syscall ( uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Sysinfo ( *Sysinfo_t )"," any Tee ( int , int , int , int )"," any Tgkill ( int , int , Signal )"," any Time ( *Time_t )"," any Times ( *Tms )"," any TimespecToNsec ( Timespec )"," any Truncate ( string , int64 )"," any Umask ( int )"," any Uname ( *Utsname )"," any UnixCredentials ( *Ucred )"," any UnixRights ( ...int )"," any Unlinkat ( int , string )"," any Unmount ( string , int )"," any Unshare ( int )"," any Ustat ( int , *Ustat_t )"," any Utime ( string , *Utimbuf )"," any Wait4 ( int , *WaitStatus , int , *Rusage )"," any Write ( int , []uint8 )"," any Accept ( Handle )"," any AcceptEx ( Handle , Handle , *uint8 , uint32 , uint32 , uint32 , *uint32 , *Overlapped )"," any Bind ( Handle , Sockaddr )"," any CancelIo ( Handle )"," any CertAddCertificateContextToStore ( Handle , *CertContext , uint32 , **CertContext )"," any CertCloseStore ( Handle , uint32 )"," any CertCreateCertificateContext ( uint32 , *uint8 , uint32 )"," any CertEnumCertificatesInStore ( Handle , *CertContext )"," any CertFreeCertificateChain ( *CertChainContext) )"," any CertFreeCertificateContext ( *CertContext )"," any CertGetCertificateChain ( Handle , *CertContext , *Filetime , Handle , *CertChainPara , uint32 , uintptr , **CertChainContext )"," any CertOpenStore ( uintptr , uint32 , uintptr , uint32 , uintptr )"," any CertOpenSystemStore ( Handle , *uint16 )"," any CertVerifyCertificateChainPolicy ( uintptr , *CertChainContext , *CertChainPolicyPara , *CertChainPolicyStatus )"," any Close ( Handle )"," any CloseHandle ( Handle )"," any CloseOnExec ( Handle) )"," any Closesocket ( Handle )"," any CommandLineToArgv ( *uint16 , *int32 )"," any ComputerName (  )"," any Connect ( Handle , Sockaddr )"," any ConvertSidToStringSid ( *SID , **uint16 )"," any ConvertStringSidToSid ( *uint16 , **SID )"," any CopySid ( uint32 , *SID , *SID )"," any CreateDirectory ( *uint16 , *SecurityAttributes )"," any CreateFile ( *uint16 , uint32 , uint32 , *SecurityAttributes , uint32 , uint32 , int32 )"," any CreateFileMapping ( Handle , *SecurityAttributes , uint32 , uint32 , uint32 , *uint16 )"," any CreateIoCompletionPort ( Handle , Handle , uint32 , uint32 )"," any CreatePipe ( *Handle , *Handle , *SecurityAttributes , uint32 )"," any CreateProcess ( *uint16 , *uint16 , *SecurityAttributes , *SecurityAttributes , bool , uint32 , *uint16 , *uint16 , *StartupInfo , *ProcessInformation )"," any CryptAcquireContext ( *Handle , *uint16 , *uint16 , uint32 , uint32 )"," any CryptGenRandom ( Handle , uint32 , *uint8 )"," any CryptReleaseContext ( Handle , uint32 )"," any DeleteFile ( *uint16 )"," any DnsQuery ( string , uint16 , uint32 , *uint8 , **DNSRecord , *uint8 )"," any DnsRecordListFree ( *DNSRecord , uint32) )"," any DuplicateHandle ( Handle , Handle , Handle , *Handle , uint32 , bool , uint32 )"," any EscapeArg ( string )"," any ExitProcess ( uint32) )"," any Fchdir ( Handle )"," any Fchmod ( Handle , uint32 )"," any Fchown ( Handle , int , int )"," any FindClose ( Handle )"," any FindFirstFile ( *uint16 , *Win32finddata )"," any FindNextFile ( Handle , *Win32finddata )"," any FlushFileBuffers ( Handle )"," any FlushViewOfFile ( uintptr , uintptr )"," any FormatMessage ( uint32 , uint32 , uint32 , uint32 , []uint16 , *uint8 )"," any FreeEnvironmentStrings ( *uint16 )"," any FreeLibrary ( Handle )"," any Fsync ( Handle )"," any Ftruncate ( Handle , int64 )"," any GetAcceptExSockaddrs ( *uint8 , uint32 , uint32 , uint32 , **RawSockaddrAny , *int32 , **RawSockaddrAny , *int32) )"," any GetAdaptersInfo ( *IpAdapterInfo , *uint32 )"," any GetCommandLine (  )"," any GetComputerName ( *uint16 , *uint32 )"," any GetCurrentDirectory ( uint32 , *uint16 )"," any GetCurrentProcess (  )"," any GetEnvironmentStrings (  )"," any GetEnvironmentVariable ( *uint16 , *uint16 , uint32 )"," any GetExitCodeProcess ( Handle , *uint32 )"," any GetFileAttributes ( *uint16 )"," any GetFileAttributesEx ( *uint16 , uint32 , *uint8 )"," any GetFileInformationByHandle ( Handle , *ByHandleFileInformation )"," any GetFileType ( Handle )"," any GetFullPathName ( *uint16 , uint32 , *uint16 , **uint16 )"," any GetHostByName ( string )"," any GetIfEntry ( *MibIfRow )"," any GetLastError (  )"," any GetLengthSid ( *SID )"," any GetLongPathName ( *uint16 , *uint16 , uint32 )"," any GetProcAddress ( Handle , string )"," any GetProcessTimes ( Handle , *Filetime , *Filetime , *Filetime , *Filetime )"," any GetProtoByName ( string )"," any GetQueuedCompletionStatus ( Handle , *uint32 , *uint32 , **Overlapped , uint32 )"," any GetServByName ( string , string )"," any GetShortPathName ( *uint16 , *uint16 , uint32 )"," any GetStartupInfo ( *StartupInfo )"," any GetStdHandle ( int )"," any GetSystemTimeAsFileTime ( *Filetime) )"," any GetTempPath ( uint32 , *uint16 )"," any GetTimeZoneInformation ( *Timezoneinformation )"," any GetTokenInformation ( Token , uint32 , *uint8 , uint32 , *uint32 )"," any GetUserNameEx ( uint32 , *uint16 , *uint32 )"," any GetUserProfileDirectory ( Token , *uint16 , *uint32 )"," any GetVersion (  )"," any Getpeername ( Handle )"," any Getsockname ( Handle )"," any GetsockoptInt ( Handle , int , int )"," any Listen ( Handle , int )"," any LoadDLL ( string )"," any LoadLibrary ( string )"," any LocalFree ( Handle )"," any LookupAccountName ( *uint16 , *uint16 , *SID , *uint32 , *uint16 , *uint32 , *uint32 )"," any LookupAccountSid ( *uint16 , *SID , *uint16 , *uint32 , *uint16 , *uint32 , *uint32 )"," any LookupSID ( string , string )"," any MapViewOfFile ( Handle , uint32 , uint32 , uint32 , uintptr )"," any MoveFile ( *uint16 , *uint16 )"," any MustLoadDLL ( string )"," any NetApiBufferFree ( *uint8 )"," any NetUserGetInfo ( *uint16 , *uint16 , uint32 , **uint8 )"," any NewCallback ( interface{} )"," any NewLazyDLL ( string )"," any NsecToFiletime ( int64 )"," any Ntohs ( uint16 )"," any Open ( string , int , uint32 )"," any OpenCurrentProcessToken (  )"," any OpenProcess ( uint32 , bool , uint32 )"," any OpenProcessToken ( Handle , uint32 , *Token )"," any Pipe ( []Handle )"," any PostQueuedCompletionStatus ( Handle , uint32 , uint32 , *Overlapped )"," any Read ( Handle , []uint8 )"," any ReadDirectoryChanges ( Handle , *uint8 , uint32 , bool , uint32 , *uint32 , *Overlapped , uintptr )"," any ReadFile ( Handle , []uint8 , *uint32 , *Overlapped )"," any Recvfrom ( Handle , []uint8 , int )"," any RegCloseKey ( Handle )"," any RegEnumKeyEx ( Handle , uint32 , *uint16 , *uint32 , *uint32 , *uint16 , *uint32 , *Filetime )"," any RegOpenKeyEx ( Handle , *uint16 , uint32 , uint32 , *Handle )"," any RegQueryInfoKey ( Handle , *uint16 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *Filetime )"," any RegQueryValueEx ( Handle , *uint16 , *uint32 , *uint32 , *uint8 , *uint32 )"," any RemoveDirectory ( *uint16 )"," any Seek ( Handle , int64 , int )"," any Sendto ( Handle , []uint8 , int , Sockaddr )"," any SetCurrentDirectory ( *uint16 )"," any SetEndOfFile ( Handle )"," any SetEnvironmentVariable ( *uint16 , *uint16 )"," any SetFileAttributes ( *uint16 , uint32 )"," any SetFilePointer ( Handle , int32 , *int32 , uint32 )"," any SetFileTime ( Handle , *Filetime , *Filetime , *Filetime )"," any SetHandleInformation ( Handle , uint32 , uint32 )"," any SetNonblock ( Handle , bool )"," any Setsockopt ( Handle , int32 , int32 , *uint8 , int32 )"," any SetsockoptIPMreq ( Handle , int , int , *IPMreq )"," any SetsockoptIPv6Mreq ( Handle , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( Handle , int , int , [4]uint8 )"," any SetsockoptInt ( Handle , int , int , int )"," any SetsockoptLinger ( Handle , int , int , *Linger )"," any SetsockoptTimeval ( Handle , int , int , *Timeval )"," any Shutdown ( Handle , int )"," any Socket ( int , int , int )"," any StringToSid ( string )"," any StringToUTF16 ( string )"," any StringToUTF16Ptr ( string )"," any Syscall ( uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall12 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall15 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall9 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any TerminateProcess ( Handle , uint32 )"," any TranslateAccountName ( string , uint32 , uint32 , int )"," any TranslateName ( *uint16 , uint32 , uint32 , *uint16 , *uint32 )"," any TransmitFile ( Handle , Handle , uint32 , uint32 , *Overlapped , *TransmitFileBuffers , uint32 )"," any UTF16ToString ( []uint16 )"," any UnmapViewOfFile ( uintptr )"," any VirtualLock ( uintptr , uintptr )"," any VirtualUnlock ( uintptr , uintptr )"," any WSACleanup (  )"," any WSAIoctl ( Handle , uint32 , *uint8 , uint32 , *uint8 , uint32 , *uint32 , *Overlapped , uintptr )"," any WSARecv ( Handle , *WSABuf , uint32 , *uint32 , *uint32 , *Overlapped , *uint8 )"," any WSARecvFrom ( Handle , *WSABuf , uint32 , *uint32 , *uint32 , *RawSockaddrAny , *int32 , *Overlapped , *uint8 )"," any WSASend ( Handle , *WSABuf , uint32 , *uint32 , uint32 , *Overlapped , *uint8 )"," any WSASendTo ( Handle , *WSABuf , uint32 , *uint32 , uint32 , *RawSockaddrAny , int32 , *Overlapped , *uint8 )"," any WSASendto ( Handle , *WSABuf , uint32 , *uint32 , uint32 , Sockaddr , *Overlapped , *uint8 )"," any WSAStartup ( uint32 , *WSAData )"," any WaitForSingleObject ( Handle , uint32 )"," any Write ( Handle , []uint8 )"," any WriteFile ( Handle , []uint8 , *uint32 , *Overlapped )"," any Accept ( Handle )"," any AcceptEx ( Handle , Handle , *uint8 , uint32 , uint32 , uint32 , *uint32 , *Overlapped )"," any Bind ( Handle , Sockaddr )"," any CancelIo ( Handle )"," any CertAddCertificateContextToStore ( Handle , *CertContext , uint32 , **CertContext )"," any CertCloseStore ( Handle , uint32 )"," any CertCreateCertificateContext ( uint32 , *uint8 , uint32 )"," any CertEnumCertificatesInStore ( Handle , *CertContext )"," any CertFreeCertificateChain ( *CertChainContext) )"," any CertFreeCertificateContext ( *CertContext )"," any CertGetCertificateChain ( Handle , *CertContext , *Filetime , Handle , *CertChainPara , uint32 , uintptr , **CertChainContext )"," any CertOpenStore ( uintptr , uint32 , uintptr , uint32 , uintptr )"," any CertOpenSystemStore ( Handle , *uint16 )"," any CertVerifyCertificateChainPolicy ( uintptr , *CertChainContext , *CertChainPolicyPara , *CertChainPolicyStatus )"," any Close ( Handle )"," any CloseHandle ( Handle )"," any CloseOnExec ( Handle) )"," any Closesocket ( Handle )"," any CommandLineToArgv ( *uint16 , *int32 )"," any ComputerName (  )"," any Connect ( Handle , Sockaddr )"," any ConvertSidToStringSid ( *SID , **uint16 )"," any ConvertStringSidToSid ( *uint16 , **SID )"," any CopySid ( uint32 , *SID , *SID )"," any CreateDirectory ( *uint16 , *SecurityAttributes )"," any CreateFile ( *uint16 , uint32 , uint32 , *SecurityAttributes , uint32 , uint32 , int32 )"," any CreateFileMapping ( Handle , *SecurityAttributes , uint32 , uint32 , uint32 , *uint16 )"," any CreateIoCompletionPort ( Handle , Handle , uint32 , uint32 )"," any CreatePipe ( *Handle , *Handle , *SecurityAttributes , uint32 )"," any CreateProcess ( *uint16 , *uint16 , *SecurityAttributes , *SecurityAttributes , bool , uint32 , *uint16 , *uint16 , *StartupInfo , *ProcessInformation )"," any CryptAcquireContext ( *Handle , *uint16 , *uint16 , uint32 , uint32 )"," any CryptGenRandom ( Handle , uint32 , *uint8 )"," any CryptReleaseContext ( Handle , uint32 )"," any DeleteFile ( *uint16 )"," any DnsQuery ( string , uint16 , uint32 , *uint8 , **DNSRecord , *uint8 )"," any DnsRecordListFree ( *DNSRecord , uint32) )"," any DuplicateHandle ( Handle , Handle , Handle , *Handle , uint32 , bool , uint32 )"," any EscapeArg ( string )"," any ExitProcess ( uint32) )"," any Fchdir ( Handle )"," any Fchmod ( Handle , uint32 )"," any Fchown ( Handle , int , int )"," any FindClose ( Handle )"," any FindFirstFile ( *uint16 , *Win32finddata )"," any FindNextFile ( Handle , *Win32finddata )"," any FlushFileBuffers ( Handle )"," any FlushViewOfFile ( uintptr , uintptr )"," any FormatMessage ( uint32 , uint32 , uint32 , uint32 , []uint16 , *uint8 )"," any FreeEnvironmentStrings ( *uint16 )"," any FreeLibrary ( Handle )"," any Fsync ( Handle )"," any Ftruncate ( Handle , int64 )"," any GetAcceptExSockaddrs ( *uint8 , uint32 , uint32 , uint32 , **RawSockaddrAny , *int32 , **RawSockaddrAny , *int32) )"," any GetAdaptersInfo ( *IpAdapterInfo , *uint32 )"," any GetCommandLine (  )"," any GetComputerName ( *uint16 , *uint32 )"," any GetCurrentDirectory ( uint32 , *uint16 )"," any GetCurrentProcess (  )"," any GetEnvironmentStrings (  )"," any GetEnvironmentVariable ( *uint16 , *uint16 , uint32 )"," any GetExitCodeProcess ( Handle , *uint32 )"," any GetFileAttributes ( *uint16 )"," any GetFileAttributesEx ( *uint16 , uint32 , *uint8 )"," any GetFileInformationByHandle ( Handle , *ByHandleFileInformation )"," any GetFileType ( Handle )"," any GetFullPathName ( *uint16 , uint32 , *uint16 , **uint16 )"," any GetHostByName ( string )"," any GetIfEntry ( *MibIfRow )"," any GetLastError (  )"," any GetLengthSid ( *SID )"," any GetLongPathName ( *uint16 , *uint16 , uint32 )"," any GetProcAddress ( Handle , string )"," any GetProcessTimes ( Handle , *Filetime , *Filetime , *Filetime , *Filetime )"," any GetProtoByName ( string )"," any GetQueuedCompletionStatus ( Handle , *uint32 , *uint32 , **Overlapped , uint32 )"," any GetServByName ( string , string )"," any GetShortPathName ( *uint16 , *uint16 , uint32 )"," any GetStartupInfo ( *StartupInfo )"," any GetStdHandle ( int )"," any GetSystemTimeAsFileTime ( *Filetime) )"," any GetTempPath ( uint32 , *uint16 )"," any GetTimeZoneInformation ( *Timezoneinformation )"," any GetTokenInformation ( Token , uint32 , *uint8 , uint32 , *uint32 )"," any GetUserNameEx ( uint32 , *uint16 , *uint32 )"," any GetUserProfileDirectory ( Token , *uint16 , *uint32 )"," any GetVersion (  )"," any Getpeername ( Handle )"," any Getsockname ( Handle )"," any GetsockoptInt ( Handle , int , int )"," any Listen ( Handle , int )"," any LoadDLL ( string )"," any LoadLibrary ( string )"," any LocalFree ( Handle )"," any LookupAccountName ( *uint16 , *uint16 , *SID , *uint32 , *uint16 , *uint32 , *uint32 )"," any LookupAccountSid ( *uint16 , *SID , *uint16 , *uint32 , *uint16 , *uint32 , *uint32 )"," any LookupSID ( string , string )"," any MapViewOfFile ( Handle , uint32 , uint32 , uint32 , uintptr )"," any MoveFile ( *uint16 , *uint16 )"," any MustLoadDLL ( string )"," any NetApiBufferFree ( *uint8 )"," any NetUserGetInfo ( *uint16 , *uint16 , uint32 , **uint8 )"," any NewCallback ( interface{} )"," any NewLazyDLL ( string )"," any NsecToFiletime ( int64 )"," any Ntohs ( uint16 )"," any Open ( string , int , uint32 )"," any OpenCurrentProcessToken (  )"," any OpenProcess ( uint32 , bool , uint32 )"," any OpenProcessToken ( Handle , uint32 , *Token )"," any Pipe ( []Handle )"," any PostQueuedCompletionStatus ( Handle , uint32 , uint32 , *Overlapped )"," any Read ( Handle , []uint8 )"," any ReadDirectoryChanges ( Handle , *uint8 , uint32 , bool , uint32 , *uint32 , *Overlapped , uintptr )"," any ReadFile ( Handle , []uint8 , *uint32 , *Overlapped )"," any Recvfrom ( Handle , []uint8 , int )"," any RegCloseKey ( Handle )"," any RegEnumKeyEx ( Handle , uint32 , *uint16 , *uint32 , *uint32 , *uint16 , *uint32 , *Filetime )"," any RegOpenKeyEx ( Handle , *uint16 , uint32 , uint32 , *Handle )"," any RegQueryInfoKey ( Handle , *uint16 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *uint32 , *Filetime )"," any RegQueryValueEx ( Handle , *uint16 , *uint32 , *uint32 , *uint8 , *uint32 )"," any RemoveDirectory ( *uint16 )"," any Seek ( Handle , int64 , int )"," any Sendto ( Handle , []uint8 , int , Sockaddr )"," any SetCurrentDirectory ( *uint16 )"," any SetEndOfFile ( Handle )"," any SetEnvironmentVariable ( *uint16 , *uint16 )"," any SetFileAttributes ( *uint16 , uint32 )"," any SetFilePointer ( Handle , int32 , *int32 , uint32 )"," any SetFileTime ( Handle , *Filetime , *Filetime , *Filetime )"," any SetHandleInformation ( Handle , uint32 , uint32 )"," any SetNonblock ( Handle , bool )"," any Setsockopt ( Handle , int32 , int32 , *uint8 , int32 )"," any SetsockoptIPMreq ( Handle , int , int , *IPMreq )"," any SetsockoptIPv6Mreq ( Handle , int , int , *IPv6Mreq )"," any SetsockoptInet4Addr ( Handle , int , int , [4]uint8 )"," any SetsockoptInt ( Handle , int , int , int )"," any SetsockoptLinger ( Handle , int , int , *Linger )"," any SetsockoptTimeval ( Handle , int , int , *Timeval )"," any Shutdown ( Handle , int )"," any Socket ( int , int , int )"," any StringToSid ( string )"," any StringToUTF16 ( string )"," any StringToUTF16Ptr ( string )"," any Syscall ( uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall12 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall15 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall6 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any Syscall9 ( uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr , uintptr )"," any TerminateProcess ( Handle , uint32 )"," any TranslateAccountName ( string , uint32 , uint32 , int )"," any TranslateName ( *uint16 , uint32 , uint32 , *uint16 , *uint32 )"," any TransmitFile ( Handle , Handle , uint32 , uint32 , *Overlapped , *TransmitFileBuffers , uint32 )"," any UTF16ToString ( []uint16 )"," any UnmapViewOfFile ( uintptr )"," any VirtualLock ( uintptr , uintptr )"," any VirtualUnlock ( uintptr , uintptr )"," any WSACleanup (  )"," any WSAIoctl ( Handle , uint32 , *uint8 , uint32 , *uint8 , uint32 , *uint32 , *Overlapped , uintptr )"," any WSARecv ( Handle , *WSABuf , uint32 , *uint32 , *uint32 , *Overlapped , *uint8 )"," any WSARecvFrom ( Handle , *WSABuf , uint32 , *uint32 , *uint32 , *RawSockaddrAny , *int32 , *Overlapped , *uint8 )"," any WSASend ( Handle , *WSABuf , uint32 , *uint32 , uint32 , *Overlapped , *uint8 )"," any WSASendTo ( Handle , *WSABuf , uint32 , *uint32 , uint32 , *RawSockaddrAny , int32 , *Overlapped , *uint8 )"," any WSASendto ( Handle , *WSABuf , uint32 , *uint32 , uint32 , Sockaddr , *Overlapped , *uint8 )"," any WSAStartup ( uint32 , *WSAData )"," any WaitForSingleObject ( Handle , uint32 )"," any Write ( Handle , []uint8 )"," any WriteFile ( Handle , []uint8 , *uint32 , *Overlapped )"," any Chdir ( string )"," any Chmod ( string , uint32 )"," any Chown ( string , int , int )"," any Clearenv ( ) )"," any Environ (  )"," any Exec ( string , []string , []string )"," any Exit ( int) )"," any Getegid (  )"," any Getenv ( string )"," any Geteuid (  )"," any Getgid (  )"," any Getgroups (  )"," any Getpagesize (  )"," any Getpid (  )"," any Getppid (  )"," any Gettimeofday ( *Timeval )"," any Getuid (  )"," any Getwd (  )"," any Lchown ( string , int , int )"," any Link ( string , string )"," any Mkdir ( string , uint32 )"," any NsecToTimeval ( int64 )"," any Readlink ( string , []uint8 )"," any Rename ( string , string )"," any Rmdir ( string )"," any Setenv ( string , string )"," any StartProcess ( string , []string , *ProcAttr )"," any StringBytePtr ( string )"," any StringByteSlice ( string )"," any Symlink ( string , string )"," any Unlink ( string )"," any Utimes ( string , []Timeval )"],"extendedConfidence":false,"icon":"function"},{"items":["Benchmark","Main","RunBenchmarks","RunExamples","RunTests","Short","DataErrReader","HalfReader","NewReadLogger","NewWriteLogger","OneByteReader","TimeoutReader","TruncateWriter","Check","CheckEqual","Value"],"prefix":"testing.","prototypes":[" any Benchmark ( func(*B) )"," any Main ( func(string , string )"," any RunBenchmarks ( func(string , string )"," any RunExamples ( func(string , string )"," any RunTests ( func(string , string )"," any Short (  )"," any DataErrReader ( io.Reader )"," any HalfReader ( io.Reader )"," any NewReadLogger ( string , io.Reader )"," any NewWriteLogger ( string , io.Writer )"," any OneByteReader ( io.Reader )"," any TimeoutReader ( io.Reader )"," any TruncateWriter ( io.Writer , int64 )"," any Check ( interface{} , *Config )"," any CheckEqual ( interface{} , interface{} , *Config )"," any Value ( reflect.Type , *rand.Rand )"],"extendedConfidence":false,"icon":"function"},{"items":["TokenString","NewWriter","HTMLEscape","HTMLEscapeString","HTMLEscaper","JSEscape","JSEscapeString","JSEscaper","Must","New","ParseFiles","ParseGlob","URLQueryEscaper","IsEmptyTree","New","NewIdentifier","Parse"],"prefix":"text.","prototypes":[" any TokenString ( int32 )"," any NewWriter ( io.Writer , int , int , int , uint8 , uint )"," any HTMLEscape ( io.Writer , []uint8) )"," any HTMLEscapeString ( string )"," any HTMLEscaper ( ...interface{} )"," any JSEscape ( io.Writer , []uint8) )"," any JSEscapeString ( string )"," any JSEscaper ( ...interface{} )"," any Must ( *Template , error )"," any New ( string )"," any ParseFiles ( ...string )"," any ParseGlob ( string )"," any URLQueryEscaper ( ...interface{} )"," any IsEmptyTree ( Node )"," any New ( string , ...map[string]interface{} )"," any NewIdentifier ( string )"," any Parse ( string , string , string , string , ...map[string]interface{} )"],"extendedConfidence":false,"icon":"function"},{"items":["After","AfterFunc","Date","FixedZone","LoadLocation","NewTicker","NewTimer","Now","Parse","ParseDuration","Since","Sleep","Tick","Unix"],"prefix":"time.","prototypes":[" any After ( Duration )"," any AfterFunc ( Duration , func() )"," any Date ( int , Month , int , int , int , int , int , *Location )"," any FixedZone ( string , int )"," any LoadLocation ( string )"," any NewTicker ( Duration )"," any NewTimer ( Duration )"," any Now (  )"," any Parse ( string , string )"," any ParseDuration ( string )"," any Since ( Time )"," any Sleep ( Duration) )"," any Tick ( Duration )"," any Unix ( int64 , int64 )"],"extendedConfidence":false,"icon":"function"},{"items":["Is","IsControl","IsDigit","IsGraphic","IsLetter","IsLower","IsMark","IsNumber","IsOneOf","IsPrint","IsPunct","IsSpace","IsSymbol","IsTitle","IsUpper","SimpleFold","To","ToLower","ToTitle","ToUpper","Decode","DecodeRune","Encode","EncodeRune","IsSurrogate","DecodeLastRune","DecodeLastRuneInString","DecodeRune","DecodeRuneInString","EncodeRune","FullRune","FullRuneInString","RuneCount","RuneCountInString","RuneLen","RuneStart","Valid","ValidString"],"prefix":"unicode.","prototypes":[" any Is ( *RangeTable , int32 )"," any IsControl ( int32 )"," any IsDigit ( int32 )"," any IsGraphic ( int32 )"," any IsLetter ( int32 )"," any IsLower ( int32 )"," any IsMark ( int32 )"," any IsNumber ( int32 )"," any IsOneOf ( []*RangeTable , int32 )"," any IsPrint ( int32 )"," any IsPunct ( int32 )"," any IsSpace ( int32 )"," any IsSymbol ( int32 )"," any IsTitle ( int32 )"," any IsUpper ( int32 )"," any SimpleFold ( int32 )"," any To ( int , int32 )"," any ToLower ( int32 )"," any ToTitle ( int32 )"," any ToUpper ( int32 )"," any Decode ( []uint16 )"," any DecodeRune ( int32 , int32 )"," any Encode ( []int32 )"," any EncodeRune ( int32 )"," any IsSurrogate ( int32 )"," any DecodeLastRune ( []uint8 )"," any DecodeLastRuneInString ( string )"," any DecodeRune ( []uint8 )"," any DecodeRuneInString ( string )"," any EncodeRune ( []uint8 , int32 )"," any FullRune ( []uint8 )"," any FullRuneInString ( string )"," any RuneCount ( []uint8 )"," any RuneCountInString ( string )"," any RuneLen ( int32 )"," any RuneStart ( uint8 )"," any Valid ( []uint8 )"," any ValidString ( string )"],"extendedConfidence":false,"icon":"function"},{"items":["Alignof","Offsetof","Sizeof"],"prefix":"unsafe.","prototypes":[" any Alignof ( ArbitraryType )"," any Offsetof ( ArbitraryType )"," any Sizeof ( ArbitraryType )"],"extendedConfidence":false,"icon":"function"}],"objj":[{"items":["CPAccessibility","CPAffineTransform","CPAppleEventDescriptor","CPAppleEventManager","CPAppleScript","CPApplication","CPArchiver","CPArray","CPAssertionHandler","CPAttributedString","CPAutoreleasePool","CPBezierPath","CPBitmapImageRep","CPBox","CPBrowser","CPBundle","CPButton","CPCachedImageRep","CPCalendarDate","CPChangeSpelling","CPCharacterSet","CPClassDescription","CPClipView","CPCloneCommand","CPCloseCommand","CPCoder","CPCoding","CPCollectionView","CPCollectionViewItem","CPColor","CPColorList","CPColorPanel","CPColorPicker","CPColorPickingCustom","CPColorPickingDefault","CPColorWell","CPComboBox","CPComboBoxDataSource","CPComparisonMethods","CPConditionLock","CPConnection","CPControl","CPCopying","CPCountCommand","CPCountedSet","CPCreateCommand","CPCursor","CPCustomImageRep","CPData","CPDate","CPDateFormatter","CPDecimalNumber","CPDecimalNumberBehaviors","CPDecimalNumberHandler","CPDeleteCommand","CPDeserializer","CPDictionary","CPDirectoryEnumerator","CPDistantObject","CPDistantObjectRequest","CPDistributedLock","CPDistributedNotificationCenter","CPDocument","CPDocumentController","CPDraggingDestination","CPDraggingInfo","CPDraggingSource","CPDrawer","CPEPSImageRep","CPEnumerator","CPEvent","CPException","CPExistsCommand","CPFileHandle","CPFileManager","CPFileWrapper","CPFont","CPFontManager","CPFontPanel","CPForm","CPFormatter","CPGetCommand","CPGlyphInfo","CPGraphicsContext","CPHelpManager","CPHost","CPIgnoreMisspelledWords","CPImageRep","CPImageView","CPIndexSpecifier","CPImage","CPInputManager","CPInputServerMouseTracker","CPInputServiceProvider","CPInputServer","CPInvocation","CPKeyValueCoding","CPKeyedArchiver","CPKeyedUnarchiver","CPLayoutManager","CPLock","CPLocking","CPLogicalTest","CPMachBootstrapServer","CPMachPort","CPMatrix","CPMenu","CPMenuItem","CPMenuValidation","CPMenuView","CPMessagePort","CPMessagePortNameServer","CPMethodSignature","CPMiddleSpecifier","CPMoveCommand","CPMovie","CPMovieView","CPMutableArray","CPMutableAttributedString","CPMutableCharacterSet","CPMutableCopying","CPMutableData","CPMutableDictionary","CPMutableParagraphStyle","CPMutableSet","CPMutableString","CPNameSpecifier","CPNetService","CPNetServiceBrowser","CPNibAwaking","CPNibConnector","CPNibControlConnector","CPNibOutletConnector","CPNotificationCenter","CPNotificationQueue","CPNotification","CPNull","CPNumber","CPNumberFormatter","CPObjCTypeSerializationCallBack","CPObject","CPOpenGLContext","CPOpenGLPixelFormat","CPOpenGLView","CPOpenPanel","CPOutlineView","CPOutlineViewDataSource","CPPDFImageRep","CPPICTImageRep","CPPageLayout","CPPanel","CPParagraphStyle","CPPasteboard","CPPipe","CPPopUpButton","CPPort","CPPortCoder","CPPortMessage","CPPortNameServer","CPPositionalSpecifier","CPPrintInfo","CPPrintOperation","CPPrintPanel","CPPrinter","CPProcessInfo","CPProgressIndicator","CPPropertyListSerialization","CPPropertySpecifier","CPProtocolChecker","CPProxy","CPQuickDrawView","CPQuitCommand","CPRandomSpecifier","CPRangeSpecifier","CPRecursiveLock","CPRelativeSpecifier","CPResponder","CPRulerMarker","CPRulerView","CPRunLoop","CPSavePanel","CPScanner","CPScreen","CPScriptClassDescription","CPScriptCoercionHandler","CPScriptCommand","CPScriptCommandDescription","CPScriptExecutionContext","CPScriptKeyValueCoding","CPScriptObjectSpecifier","CPScriptObjectSpecifiers","CPScriptSuiteRegistry","CPScriptWhoseTest","CPScriptingComparisonMethods","CPScrollView","CPScroller","CPSecureTextField","CPSerializer","CPServicesRequests","CPSet","CPSetCommand","CPSimpleHorizontalTypesetter","CPSlider","CPSocketPort","CPSocketPortNameServer","CPSound","CPSpecifierTest","CPSpellChecker","CPSpellServer","CPSplitView","CPStatusBar","CPStatusItem","CPStepper","CPString","CPTabView","CPTabViewItem","CPTableColumn","CPTableDataSource","CPTableHeaderView","CPTableView","CPTask","CPText","CPTextAttachment","CPTextContainer","CPTextField","CPTextInput","CPTextStorage","CPTextStorageScripting","CPTextTab","CPTextView","CPThread","CPTimeZone","CPTimer","CPToolTipOwner","CPToolbar","CPToolbarItem","CPToolbarItemValidation","CPTypesetter","CPURL","CPURLHandle","CPURLHandleClient","CPUnarchiver","CPUndoManager","CPUniqueIDSpecifier","CPUserDefaults","CPUserInterfaceValidations","CPValidatedUserInterfaceItem","CPValue","CPView","CPWhoseSpecifier","CPWindow","CPWindowController","CPWindowScripting","CPWorkspace","CPError","CPCachedURLResponse","CPHTTPCookie","CPHTTPCookieStorage","CPHTTPURLResponse","CPIndexSet","CPInputStream","CPMutableIndexSet","CPMutableURLRequest","CPOutputStream","CPSortDescriptor","CPStream","CPURLAuthenticationChallenge","CPURLCache","CPURLConnection","CPURLCredential","CPURLCredentialStorage","CPURLDownload","CPURLProtectionSpace","CPURLProtocol","CPURLRequest","CPURLResponse","CPValueTransformer","CPXMLParser","ABActionDelegate","WebFrameLoadDelegate","WebPolicyDelegate","WebResourceLoadDelegate","ABImageClient","CPEditor","CPEditorRegistration","CPFontPanelValidation","CPGlyphStorage","CPKeyValueBindingCreation","CPPlaceholders","CPObjCTypeSerialization","CPJavaClassesForBundle","CPJavaClassesFromPath","CPJavaSetupVirtualMachine","CPCopyHashTableWithZone","CPCreateHashTable","CPCreateHashTableWithZone","CPEnumerateHashTable","CPFreeHashTable","CPHashInsert","CPHashInsertIfAbsent","CPHashInsertKnownAbsent","CPHashRemove","CPNextHashEnumeratorItem","CPResetHashTable","CPAllMapTableKeys","CPAllMapTableValues","CPCopyMapTableWithZone","CPCreateMapTable","CPCreateMapTableWithZone","CPEnumerateMapTable","CPFreeMapTable","CPMapGet","CPMapInsert","CPMapInsertIfAbsent","CPMapInsertKnownAbsent","CPMapMember","CPMapRemove","CPNextMapEnumeratorPair","CPResetMapTable","CPAllocateObject","CPCopyObject","CPDeallocateObject","CPDecrementExtraRefCountWasZero","CPExtraRefCount","CPIncrementExtraRefCount","CPDivideRect","CPGetUncaughtExceptionHandler","CPSetUncaughtExceptionHandler","CPAllocateMemoryPages","CPCopyMemoryPages","CPCreateZone","CPDeallocateMemoryPages","CPDefaultMallocZone","CPLogPageSize","CPPageSize","CPRecycleZone","CPRoundDownToMultipleOfPageSize","CPRoundUpToMultipleOfPageSize","CPSetZoneName","CPZoneCalloc","CPZoneFree","CPZoneMalloc","CPZoneName","CPZoneRealloc","CPDecNumberBehaviors","CPURLAuthenticationChallengeSender","CPURLClient","CPURLProtocolClient","WebDocumentRepresentation","WebDocumentSearching","WebOpenPanelResultListener","WebPolicyDecisionListener","WebUIDelegate","WebDocumentText","WebDocumentView","CPATSTypesetter","CPAlert","CPAnimation","CPArrayController","CPAttributeDescription","CPCIImageRep","CPColorSpace","CPController","CPDatePicker","CPEntityDescription","CPFetchRequest","CPFetchedPropertyDescription","CPFontDescriptor","CPGlyphGenerator","CPLevelIndicator","CPManagedObject","CPManagedObjectContext","CPManagedObjectID","CPManagedObjectModel","CPNib","CPObjectController","CPOpenGLPixelBuffer","CPPersistentDocument","CPPersistentStoreCoordinator","CPPropertyDescription","CPRelationshipDescription","CPSearchField","CPSegmentedControl","CPShadow","CPSpeechRecognizer","CPSpeechSynthesizer","CPTextBlock","CPTextList","CPTextTable","CPTextTableBlock","CPTokenField","CPTreeController","CPUserDefaultsController","CPViewAnimation","CPCalendar","CPCoercionHandler","CPComparisonPredicate","CPCompoundPredicate","CPConstantString","CPDateComponents","CPExceptionHandler","CPExpression","CPIndexPath","CPJavaConfiguration","CPJavaVirtualMachine","CPLocale","CPMailDelivery","CPMetadataItem","CPMetadataQuery","CPMetadataQueryAttributeValueTuple","CPMetadataQueryResultGroup","CPObjectSpecifier","CPPredicate","CPPreferencePane","CPSimpleCString","CPWhoseTest","CPXMLDTD","CPXMLDTDNode","CPXMLDocument","CPXMLElement","CPXMLNode","CPAffineTransformStruct","CPApplicationTerminateReply","CPBackingStoreType","CPBezelStyle","CPBezierPathElement","CPBitmapImageFileType","CPBorderType","CPBoxType","CPButtonType","CPCharacterCollection","CPControlSize","CPControlTint","CPDocumentChangeType","CPDragOperation","CPDrawerState","CPEventType","CPFocusRingPlacement","CPFontAction","CPFontTraitMask","CPGlyph","CPGlyphInscription","CPGlyphLayoutMode","CPGlyphRelation","CPGradientType","CPImageAlignment","CPImageCacheMode","CPImageFrameStyle","CPImageInterpolation","CPImageLoadStatus","CPImageRepLoadStatus","CPImageScaling","CPInterfaceStyle","CPLayoutDirection","CPLayoutStatus","CPLineBreakMode","CPLineCapStyle","CPLineJoinStyle","CPLineMovementDirection","CPLineSweepDirection","CPMatrixMode","CPModalSession","CPMultibyteGlyphPacking","CPOpenGLContextAuxiliary","CPOpenGLContextParameter","CPOpenGLPixelFormatAttribute","CPOpenGLPixelFormatAuxiliary","CPPopUpArrowPosition","CPPrinterTableStatus","CPPrintingOrientation","CPPrintingPageOrder","CPPrintingPaginationMode","CPProgressIndicatorStyle","CPProgressIndicatorThickness","CPQTMovieLoopMode","CPRequestUserAttentionType","CPRulerOrientation","CPSaveOperationType","CPScreenAuxiliaryOpaque","CPScrollArrowPosition","CPScrollerArrow","CPScrollerPart","CPSelectionAffinity","CPSelectionDirection","CPSelectionGranularity","CPTabState","CPTabViewItemAuxiliaryOpaque","CPTabViewType","CPTableViewDropOperation","CPTextAlignment","CPTextFieldBezelStyle","CPTextTabType","CPTickMarkPosition","CPTIFFCompression","CPTitlePosition","CPToolbarDisplayMode","CPToolbarSizeMode","CPToolTipTag","CPTrackingRectTag","CPTypesetterBehavior","CPUsableScrollerParts","CPWindingRule","CPWindowAuxiliaryOpaque","CPWindowButton","CPWindowOrderingMode","CPWritingDirection","CPCalculationError","CPComparisonResult","CPHashEnumerator","CPHashTable","CPInsertionPosition","CPMapEnumerator","CPMapTable","CPNetServicesError","CPNotificationCoalescing","CPNotificationSuspensionBehavior","CPObjCValue","CPPoint","CPZeroPoint","CPPointArray","CPPointPointer","CPPostingStyle","CPPropertyListFormat","CPPropertyListMutabilityOptions","CPRange","CPRangePointer","CPRect","CPRectEdge","CPZeroRect","CPRectArray","CPRectPointer","CPRelativePosition","CPDecimal","CPDecimalMaxSize","CPRoundingMode","CPSaveOptions","CPSearchPathDomainMask","CPSize","CPZeroSize","CPSizeArray","CPSizePointer","CPSwappedDouble","CPSwappedFloat","CPTestComparisonOperation","CPTimeInterval","CPUncaughtExceptionHandler","CPURLHandleStatus","CPWhoseSubelementIdentifier","CPZone","CPNotFound","CPOpenStepUnicodeReservedBase","CPStringEncoding","CPCompositingOperation","CPDecimalMaxSize","CPDecimalNoScale","CPMaximumStringLength","CPNotAnIntMapKey","CPNotAPointerMapKey","CPCocoaErrorDomain","CPURLErrorDomain","CFStreamErrorDomain","CPFilePathErrorKey","CPErrorFailingURLStringKey","CPPOSIXErrorDomain","CPOSStatusErrorDomain","CPMachErrorDomain","CPUnderlyingErrorKey","CPLocalizedDescriptionKey","CPLocalizedFailureReasonErrorKey","CPLocalizedRecoverySuggestionErrorKey","CPLocalizedRecoveryOptionsErrorKey","CPRecoveryAttempterErrorKey","CPStringEncodingErrorKey","CPURLErrorKey","CPFilePathErrorKey","CPURLCredentialStorageChangedNotification","CPUserDefaultsDidChangeNotification","CPWillBecomeMultiThreadedNotification","CPDidBecomeSingleThreadedNotification","CPThreadWillExitNotification","CPUndoManagerCheckpointNotification","CPUndoManagerWillUndoChangeNotification","CPUndoManagerWillRedoChangeNotification","CPUndoManagerDidUndoChangeNotification","CPUndoManagerDidRedoChangeNotification","CPUndoManagerDidOpenUndoGroupNotification","CPUndoManagerWillCloseUndoGroupNotification","CPPortDidBecomeInvalidNotification","CPTaskDidTerminateNotification","CPJavaWillSetupVirtualMachineNotification","CPJavaDidSetupVirtualMachineNotification","CPJavaWillCreateVirtualMachineNotification","CPJavaDidCreateVirtualMachineNotification","CPAppleEventManagerWillProcessFirstEventNotification","CPBundleDidLoadNotification","CPClassDescriptionNeededForClassNotification","CPConnectionDidDieNotification","CPConnectionDidInitializeNotification","CPFileHandleReadCompletionNotification","CPFileHandleReadToEndOfFileCompletionNotification","CPFileHandleConnectionAcceptedNotification","CPFileHandleDataAvailableNotification","CPHTTPCookieManagerAcceptPolicyChangedNotification","CPHTTPCookieManagerCookiesChangedNotification","BPF_MODE_DISABLED","BPF_MODE_INPUT","BPF_MODE_INPUT_OUTPUT","BPF_MODE_OUTPUT","DRFileForkData","DRFileForkResource","DRFilesystemInclusionMaskHFSPlus","DRFilesystemInclusionMaskISO9660","DRFilesystemInclusionMaskJoliet","DRFilesystemInclusionMaskUDF","DRSetupPanelDeviceSelectionChangedNotification","DRSetupPanelSelectedDeviceKey","FFCAP_ET_CONSTANTFORCE","FFCAP_ET_CUSTOMFORCE","FFCAP_ET_DAMPER","FFCAP_ET_FRICTION","FFCAP_ET_INERTIA","FFCAP_ET_RAMPFORCE","FFCAP_ET_SAWTOOTHDOWN","FFCAP_ET_SAWTOOTHUP","FFCAP_ET_SINE","FFCAP_ET_SPRING","FFCAP_ET_SQUARE","FFCAP_ET_TRIANGLE","FFEFF_CARTESIAN","FFEFF_POLAR","FFEFF_SPHERICAL","IFNET_CSUM_FRAGMENT","IFNET_CSUM_IP","IFNET_CSUM_TCP","IFNET_CSUM_UDP","IFNET_FAMILY_ANY","IFNET_FAMILY_BOND","IFNET_FAMILY_DISC","IFNET_FAMILY_ETHERNET","IFNET_FAMILY_FAITH","IFNET_FAMILY_FIREWIRE","IFNET_FAMILY_GIF","IFNET_FAMILY_LOOPBACK","IFNET_FAMILY_MDECAP","IFNET_FAMILY_PPP","IFNET_FAMILY_PVC","IFNET_FAMILY_SLIP","IFNET_FAMILY_STF","IFNET_FAMILY_TUN","IFNET_FAMILY_VLAN","IFNET_IP_FRAGMENT","IFNET_VLAN_MTU","IFNET_VLAN_TAGGING","IMCapabilityAudioConference","IMCapabilityDirectIM","IMCapabilityFileSharing","IMCapabilityFileTransfer","IMCapabilityText","IMCapabilityVideoConference","IMPersonAVBusyKey","IMPersonCapabilitiesKey","IMPersonEmailKey","IMPersonFirstNameKey","IMPersonIdleSinceKey","IMPersonInfoChangedNotification","IMPersonLastNameKey","IMPersonPictureDataKey","IMPersonScreenNameKey","IMPersonServiceNameKey","IMPersonStatus","IMPersonStatusAvailable","IMPersonStatusAway","IMPersonStatusChangedNotification","IMPersonStatusIdle","IMPersonStatusKey","IMPersonStatusMessageKey","IMPersonStatusOffline","IMPersonStatusUnknown","IMServiceStatus","IMServiceStatusChangedNotification","IMServiceStatusDisconnected","IMServiceStatusLoggedIn","IMServiceStatusLoggedOut","IMServiceStatusLoggingIn","IMServiceStatusLoggingOut","IMStatusImagesChangedAppearanceNotification","ISyncChangePropertyActionKey","ISyncChangePropertyClear","ISyncChangePropertyNameKey","ISyncChangePropertySet","ISyncChangePropertyValueKey","ISyncChangeType","ISyncChangeTypeAdd","ISyncChangeTypeDelete","ISyncChangeTypeModify","ISyncClientTypeApplication","ISyncClientTypeDevice","ISyncClientTypePeer","ISyncClientTypeServer","ISyncInvalidEntityException","ISyncInvalidRecordException","ISyncInvalidRecordIdentifiersKey","ISyncInvalidRecordReasonsKey","ISyncInvalidRecordsKey","ISyncRecordEntityNameKey","ISyncServerUnavailableException","ISyncSessionCancelledException","ISyncSessionUnavailableException","ISyncStatus","ISyncStatusCancelled","ISyncStatusErrors","ISyncStatusFailed","ISyncStatusNever","ISyncStatusRunning","ISyncStatusSuccess","ISyncStatusWarnings","ISyncUnsupportedEntityException","CPAFMAscender","CPAFMCapHeight","CPAFMCharacterSet","CPAFMDescender","CPAFMEncodingScheme","CPAFMFamilyName","CPAFMFontName","CPAFMFormatVersion","CPAFMFullName","CPAFMItalicAngle","CPAFMMappingScheme","CPAFMNotice","CPAFMUnderlinePosition","CPAFMUnderlineThickness","CPAFMVersion","CPAFMWeight","CPAFMXHeight","CPASCIIStringEncoding","CPAWTEventType","CPAbortModalException","CPAbortPrintingException","CPAboveBottom","CPAboveTop","CPAccessibilityApplicationActivatedNotification","CPAccessibilityApplicationDeactivatedNotification","CPAccessibilityApplicationHiddenNotification","CPAccessibilityApplicationRole","CPAccessibilityApplicationShownNotification","CPAccessibilityAttributedStringForRangeParameterizedAttribute","CPAccessibilityBoundsForRangeParameterizedAttribute","CPAccessibilityBrowserRole","CPAccessibilityBusyIndicatorRole","CPAccessibilityButtonRole","CPAccessibilityCancelAction","CPAccessibilityCancelButtonAttribute","CPAccessibilityCheckBoxRole","CPAccessibilityChildrenAttribute","CPAccessibilityClearButtonAttribute","CPAccessibilityCloseButtonAttribute","CPAccessibilityCloseButtonSubrole","CPAccessibilityColorWellRole","CPAccessibilityColumnRole","CPAccessibilityColumnTitlesAttribute","CPAccessibilityColumnsAttribute","CPAccessibilityComboBoxRole","CPAccessibilityConfirmAction","CPAccessibilityContentsAttribute","CPAccessibilityDecrementAction","CPAccessibilityDecrementArrowSubrole","CPAccessibilityDecrementButtonAttribute","CPAccessibilityDecrementPageSubrole","CPAccessibilityDefaultButtonAttribute","CPAccessibilityDialogSubrole","CPAccessibilityDisclosedByRowAttribute","CPAccessibilityDisclosedRowsAttribute","CPAccessibilityDisclosingAttribute","CPAccessibilityDocumentAttribute","CPAccessibilityDrawerCreatedNotification","CPAccessibilityDrawerRole","CPAccessibilityEditedAttribute","CPAccessibilityEnabledAttribute","CPAccessibilityErrorCodeExceptionInfo","CPAccessibilityException","CPAccessibilityExpandedAttribute","CPAccessibilityFilenameAttribute","CPAccessibilityFloatingWindowSubrole","CPAccessibilityFocusedAttribute","CPAccessibilityFocusedUIElementAttribute","CPAccessibilityFocusedUIElementChangedNotification","CPAccessibilityFocusedWindowAttribute","CPAccessibilityFocusedWindowChangedNotification","CPAccessibilityFrontmostAttribute","CPAccessibilityGroupRole","CPAccessibilityGrowAreaAttribute","CPAccessibilityGrowAreaRole","CPAccessibilityHeaderAttribute","CPAccessibilityHelpAttribute","CPAccessibilityHiddenAttribute","CPAccessibilityHorizontalOrientationValue","CPAccessibilityHorizontalScrollBarAttribute","CPAccessibilityImageRole","CPAccessibilityIncrementAction","CPAccessibilityIncrementArrowSubrole","CPAccessibilityIncrementButtonAttribute","CPAccessibilityIncrementPageSubrole","CPAccessibilityIncrementorRole","CPAccessibilityLineForIndexParameterizedAttribute","CPAccessibilityLinkRole","CPAccessibilityListRole","CPAccessibilityMainAttribute","CPAccessibilityMainWindowAttribute","CPAccessibilityMainWindowChangedNotification","CPAccessibilityMatteContentUIElementAttribute","CPAccessibilityMatteRole","CPAccessibilityMaxValueAttribute","CPAccessibilityMenuBarAttribute","CPAccessibilityMenuBarRole","CPAccessibilityMenuButtonRole","CPAccessibilityMenuItemRole","CPAccessibilityMenuRole","CPAccessibilityMinValueAttribute","CPAccessibilityMinimizeButtonAttribute","CPAccessibilityMinimizeButtonSubrole","CPAccessibilityMinimizedAttribute","CPAccessibilityModalAttribute","CPAccessibilityNextContentsAttribute","CPAccessibilityNumberOfCharactersAttribute","CPAccessibilityOrientationAttribute","CPAccessibilityOutlineRole","CPAccessibilityOutlineRowSubrole","CPAccessibilityOverflowButtonAttribute","CPAccessibilityParentAttribute","CPAccessibilityPickAction","CPAccessibilityPopUpButtonRole","CPAccessibilityPositionAttribute","CPAccessibilityPressAction","CPAccessibilityPreviousContentsAttribute","CPAccessibilityProgressIndicatorRole","CPAccessibilityProxyAttribute","CPAccessibilityRTFForRangeParameterizedAttribute","CPAccessibilityRadioButtonRole","CPAccessibilityRadioGroupRole","CPAccessibilityRaiseAction","CPAccessibilityRangeForIndexParameterizedAttribute","CPAccessibilityRangeForLineParameterizedAttribute","CPAccessibilityRangeForPositionParameterizedAttribute","CPAccessibilityRoleAttribute","CPAccessibilityRoleDescriptionAttribute","CPAccessibilityRowRole","CPAccessibilityRowsAttribute","CPAccessibilityRulerRole","CPAccessibilityScrollAreaRole","CPAccessibilityScrollBarRole","CPAccessibilitySearchButtonAttribute","CPAccessibilitySearchFieldSubrole","CPAccessibilitySearchMenuAttribute","CPAccessibilitySecureTextFieldSubrole","CPAccessibilitySelectedAttribute","CPAccessibilitySelectedChildrenAttribute","CPAccessibilitySelectedColumnsAttribute","CPAccessibilitySelectedRowsAttribute","CPAccessibilitySelectedTextAttribute","CPAccessibilitySelectedTextRangeAttribute","CPAccessibilitySheetCreatedNotification","CPAccessibilitySheetRole","CPAccessibilityShownMenuAttribute","CPAccessibilitySizeAttribute","CPAccessibilitySliderRole","CPAccessibilitySortDirectionAttribute","CPAccessibilitySplitGroupRole","CPAccessibilitySplitterRole","CPAccessibilitySplittersAttribute","CPAccessibilityStandardWindowSubrole","CPAccessibilityStaticTextRole","CPAccessibilityStringForRangeParameterizedAttribute","CPAccessibilityStyleRangeForIndexParameterizedAttribute","CPAccessibilitySubroleAttribute","CPAccessibilitySystemDialogSubrole","CPAccessibilitySystemFloatingWindowSubrole","CPAccessibilitySystemWideRole","CPAccessibilityTabGroupRole","CPAccessibilityTableRole","CPAccessibilityTableRowSubrole","CPAccessibilityTabsAttribute","CPAccessibilityTextAreaRole","CPAccessibilityTextFieldRole","CPAccessibilityTitleAttribute","CPAccessibilityTitleUIElementAttribute","CPAccessibilityToolbarButtonAttribute","CPAccessibilityToolbarButtonSubrole","CPAccessibilityToolbarRole","CPAccessibilityTopLevelUIElementAttribute","CPAccessibilityUIElementDestroyedNotification","CPAccessibilityUnknownRole","CPAccessibilityUnknownSubrole","CPAccessibilityValueAttribute","CPAccessibilityValueChangedNotification","CPAccessibilityValueIndicatorRole","CPAccessibilityVerticalOrientationValue","CPAccessibilityVerticalScrollBarAttribute","CPAccessibilityVisibleCharacterRangeAttribute","CPAccessibilityVisibleChildrenAttribute","CPAccessibilityVisibleColumnsAttribute","CPAccessibilityVisibleRowsAttribute","CPAccessibilityWindowAttribute","CPAccessibilityWindowCreatedNotification","CPAccessibilityWindowDeminiaturizedNotification","CPAccessibilityWindowMiniaturizedNotification","CPAccessibilityWindowMovedNotification","CPAccessibilityWindowResizedNotification","CPAccessibilityWindowRole","CPAccessibilityWindowsAttribute","CPAccessibilityZoomButtonAttribute","CPAccessibilityZoomButtonSubrole","CPAddTraitFontAction","CPAdminApplicationDirectory","CPAdobeCNS","CPAdobeGB","CPAdobeJapan","CPAdobeKorea","CPAffectedObjectsErrorKey","CPAffectedStoresErrorKey","CPAlertAlternateReturn","CPAlertDefaultReturn","CPAlertErrorReturn","CPAlertFirstButtonReturn","CPAlertOtherReturn","CPAlertSecondButtonReturn","CPAlertThirdButtonReturn","CPAllApplicationsDirectory","CPAllDomainsMask","CPAllLibrariesDirectory","CPAllPredicateModifier","CPAllScrollerParts","CPAlphaFirstBitmapFormat","CPAlphaNonpremultipliedBitmapFormat","CPAlphaShiftKeyMask","CPAlternateKeyMask","CPAnchoredSearch","CPAndPredicateType","CPAnimationBlocking","CPAnimationEaseIn","CPAnimationEaseInOut","CPAnimationEaseOut","CPAnimationEffectDisappearingItemDefault","CPAnimationEffectPoof","CPAnimationLinear","CPAnimationNonblocking","CPAnimationNonblockingThreaded","CPAnyEventMask","CPAnyPredicateModifier","CPAnyType","CPAppKitDefined","CPAppKitDefinedMask","CPAppKitIgnoredException","CPAppKitVirtualMemoryException","CPAppleEventManagerSuspensionID","CPAppleEventTimeOutDefault","CPAppleEventTimeOutNone","CPApplicationActivatedEventType","CPApplicationDeactivatedEventType","CPApplicationDefined","CPApplicationDefinedMask","CPApplicationDelegateReplyCancel","CPApplicationDelegateReplyFailure","CPApplicationDelegateReplySuccess","CPApplicationDidBecomeActiveNotification","CPApplicationDidChangeScreenParametersNotification","CPApplicationDidFinishLaunchingNotification","CPApplicationDidHideNotification","CPApplicationDidResignActiveNotification","CPApplicationDidUnhideNotification","CPApplicationDidUpdateNotification","CPApplicationDirectory","CPApplicationFileType","CPApplicationSupportDirectory","CPApplicationWillBecomeActiveNotification","CPApplicationWillFinishLaunchingNotification","CPApplicationWillHideNotification","CPApplicationWillResignActiveNotification","CPApplicationWillTerminateNotification","CPApplicationWillUnhideNotification","CPApplicationWillUpdateNotification","CPArgumentEvaluationScriptError","CPArgumentsWrongScriptError","CPAscendingPageOrder","CPAsciiWithDoubleByteEUCGlyphPacking","CPAtBottom","CPAtTop","CPAttachmentAttributeName","CPAttachmentCharacter","CPAttributeType","CPAutoPagination","CPAutosaveOperation","CPBMPFileType","CPBackTabCharacter","CPBackgroundColorAttributeName","CPBackgroundTab","CPBackingStoreBuffered","CPBackingStoreNonretained","CPBackingStoreRetained","CPBackspaceCharacter","CPBacktabTextMovement","CPBackwardsSearch","CPBadBitmapParametersException","CPBadComparisonException","CPBadRTFColorTableException","CPBadRTFDirectiveException","CPBadRTFFontTableException","CPBadRTFStyleSheetException","CPBaselineOffsetAttributeName","CPBeginFunctionKey","CPBeginsWithComparison","CPBeginsWithPredicateOperatorType","CPBelowBottom","CPBelowTop","CPBevelLineJoinStyle","CPBezelBorder","CPBinaryDataAttributeType","CPBlueControlTint","CPBoldFontMask","CPBooleanAttributeType","CPBorderlessWindowMask","CPBottomTabsBezelBorder","CPBoxOldStyle","CPBoxPrimary","CPBoxSecondary","CPBoxSeparator","CPBreakFunctionKey","CPBrowserAutoColumnResizing","CPBrowserColumnConfigurationDidChangeNotification","CPBrowserIllegalDelegateException","CPBrowserNoColumnResizing","CPBrowserUserColumnResizing","CPButtLineCapStyle","CPCMYKColorSpaceModel","CPCMYKModeColorPanel","CPCachesDirectory","CPCalculationDivideByZero","CPCalculationLossOfPrecision","CPCalculationNoError","CPCalculationOverflow","CPCalculationUnderflow","CPCalibratedBlackColorSpace","CPCalibratedRGBColorSpace","CPCalibratedWhiteColorSpace","CPCancelButton","CPCancelTextMovement","CPCannotCreateScriptCommandError","CPCarriageReturnCharacter","CPCascadeDeleteRule","CPCaseInsensitiveSearch","CPCenterTabStopType","CPCenterTextAlignment","CPChangeAutosaved","CPChangeCleared","CPChangeDone","CPChangeReadOtherContents","CPChangeUndone","CPCharacterShapeAttributeName","CPCircularBezelStyle","CPCircularSlider","CPClearControlTint","CPClearDisplayFunctionKey","CPClearLineFunctionKey","CPClipPagination","CPClockAndCalendarDatePickerStyle","CPClosableWindowMask","CPClosePathBezierPathElement","CPColorListDidChangeNotification","CPColorListIOException","CPColorListModeColorPanel","CPColorListNotEditableException","CPColorPanelAllModesMask","CPColorPanelCMYKModeMask","CPColorPanelColorDidChangeNotification","CPColorPanelColorListModeMask","CPColorPanelCrayonModeMask","CPColorPanelCustomPaletteModeMask","CPColorPanelGrayModeMask","CPColorPanelHSBModeMask","CPColorPanelRGBModeMask","CPColorPanelWheelModeMask","CPColorPboardType","CPComboBoxSelectionDidChangeNotification","CPComboBoxSelectionIsChangingNotification","CPComboBoxWillDismissNotification","CPComboBoxWillPopUpNotification","CPCommandKeyMask","CPCompositeClear","CPCompositeCopy","CPCompositeDestinationAtop","CPCompositeDestinationIn","CPCompositeDestinationOut","CPCompositeDestinationOver","CPCompositeHighlight","CPCompositePlusDarker","CPCompositePlusLighter","CPCompositeSourceAtop","CPCompositeSourceIn","CPCompositeSourceOut","CPCompositeSourceOver","CPCompositeXOR","CPCompressedFontMask","CPCondensedFontMask","CPConstantValueExpressionType","CPContainerSpecifierError","CPContainsComparison","CPContextHelpModeDidActivateNotification","CPContextHelpModeDidDeactivateNotification","CPContinuousCapacityLevelIndicatorStyle","CPControlGlyph","CPControlKeyMask","CPControlTextDidBeginEditingNotification","CPControlTextDidChangeNotification","CPControlTextDidEndEditingNotification","CPControlTintDidChangeNotification","CPCoreServiceDirectory","CPCrayonModeColorPanel","CPCriticalAlertStyle","CPCriticalRequest","CPCursorAttributeName","CPCursorPointingDevice","CPCursorUpdate","CPCursorUpdateMask","CPCurveToBezierPathElement","CPCustomColorSpace","CPCustomPaletteModeColorPanel","CPCustomSelectorPredicateOperatorType","CPDateAttributeType","CPDateFormatterBehavior","CPDateFormatterBehaviorDefault","CPDateFormatterFullStyle","CPDateFormatterLongStyle","CPDateFormatterMediumStyle","CPDateFormatterNoStyle","CPDateFormatterShortStyle","CPDayCalendarUnit","CPDecimalAttributeType","CPDecimalTabStopType","CPDefaultControlTint","CPDefaultTokenStyle","CPDeleteCharFunctionKey","CPDeleteCharacter","CPDeleteFunctionKey","CPDeleteLineFunctionKey","CPDeleteRule","CPDemoApplicationDirectory","CPDenyDeleteRule","CPDescendingPageOrder","CPDesktopDirectory","CPDetailedErrorsKey","CPDeveloperApplicationDirectory","CPDeveloperDirectory","CPDeviceBitsPerSample","CPDeviceBlackColorSpace","CPDeviceCMYKColorSpace","CPDeviceColorSpaceName","CPDeviceIsPrinter","CPDeviceIsScreen","CPDeviceNColorSpaceModel","CPDeviceRGBColorSpace","CPDeviceResolution","CPDeviceSize","CPDeviceWhiteColorSpace","CPDirectPredicateModifier","CPDirectSelection","CPDirectoryFileType","CPDisclosureBezelStyle","CPDiscreteCapacityLevelIndicatorStyle","CPDisplayWindowRunLoopOrdering","CPDocFormatTextDocumentType","CPDocModalWindowMask","CPDocumentDirectory","CPDocumentationDirectory","CPDoubleAttributeType","CPDoubleType","CPDownArrowFunctionKey","CPDownTextMovement","CPDragOperationAll","CPDragOperationCopy","CPDragOperationDelete","CPDragOperationEvery","CPDragOperationGeneric","CPDragOperationLink","CPDragOperationMove","CPDragOperationNone","CPDragOperationPrivate","CPDragPboard","CPDraggingException","CPDrawerClosedState","CPDrawerClosingState","CPDrawerDidCloseNotification","CPDrawerDidOpenNotification","CPDrawerOpenState","CPDrawerOpeningState","CPDrawerWillCloseNotification","CPDrawerWillOpenNotification","CPEndFunctionKey","CPEndsWithComparison","CPEndsWithPredicateOperatorType","CPEnterCharacter","CPEqualToComparison","CPEqualToPredicateOperatorType","CPEraCalendarUnit","CPEraDatePickerElementFlag","CPEraserPointingDevice","CPEvaluatedObjectExpressionType","CPEvenOddWindingRule","CPEventTrackingRunLoopMode","CPEverySubelement","CPExecuteFunctionKey","CPExpandedFontMask","CPExpansionAttributeName","CPF","CPFPCurrentField","CPFPPreviewButton","CPFPPreviewField","CPFPRevertButton","CPFPSetButton","CPFPSizeField","CPFPSizeTitle","CPFaxButton","CPFileAppendOnly","CPFileBusy","CPFileContentsPboardType","CPFileCreationDate","CPFileDeviceIdentifier","CPFileExtensionHidden","CPFileGroupOwnerAccountID","CPFileGroupOwnerAccountName","CPFileHFSCreatorCode","CPFileHFSTypeCode","CPFileHandlingPanelCancelButton","CPFileHandlingPanelOKButton","CPFileImmutable","CPFileModificationDate","CPFileOwnerAccountID","CPFileOwnerAccountName","CPFilePosixPermissions","CPFileReferenceCount","CPFileSize","CPFileSystemFileNumber","CPFileSystemFreeNodes","CPFileSystemFreeSize","CPFileSystemNodes","CPFileSystemNumber","CPFileSystemSize","CPFileType","CPFileTypeBlockSpecial","CPFileTypeCharacterSpecial","CPFileTypeDirectory","CPFileTypeRegular","CPFileTypeSocket","CPFileTypeSymbolicLink","CPFileTypeUnknown","CPFilenamesPboardType","CPFilesPromisePboardType","CPFilesystemFileType","CPFindFunctionKey","CPFindPanelActionNext","CPFindPanelActionPrevious","CPFindPanelActionReplace","CPFindPanelActionReplaceAll","CPFindPanelActionReplaceAllInSelection","CPFindPanelActionReplaceAndFind","CPFindPanelActionSelectAll","CPFindPanelActionSelectAllInSelection","CPFindPanelActionSetFindString","CPFindPanelActionShowFindPanel","CPFindPboard","CPFitPagination","CPFixedPitchFontMask","CPFlagsChanged","CPFlagsChangedMask","CPFloatAttributeType","CPFloatType","CPFloatingPointSamplesBitmapFormat","CPFocusRingAbove","CPFocusRingBelow","CPFocusRingOnly","CPFocusRingTypeDefault","CPFocusRingTypeExterior","CPFocusRingTypeNone","CPFontAntialiasedIntegerAdvancementsRenderingMode","CPFontAntialiasedRenderingMode","CPFontAttributeName","CPFontCascadeListAttribute","CPFontCharacterSetAttribute","CPFontClarendonSerifsClass","CPFontCollectionApplicationOnlyMask","CPFontColorAttribute","CPFontDefaultRenderingMode","CPFontFaceAttribute","CPFontFamilyAttribute","CPFontFixedAdvanceAttribute","CPFontFreeformSerifsClass","CPFontIntegerAdvancementsRenderingMode","CPFontMatrixAttribute","CPFontModernSerifsClass","CPFontNameAttribute","CPFontOldStyleSerifsClass","CPFontOrnamentalsClass","CPFontPanelAllModesMask","CPFontPanelCollectionModeMask","CPFontPanelFaceModeMask","CPFontPanelSizeModeMask","CPFontPanelStandardModesMask","CPFontPboard","CPFontPboardType","CPFontSansSerifClass","CPFontScriptsClass","CPFontSizeAttribute","CPFontSlabSerifsClass","CPFontSlantTrait","CPFontSymbolicClass","CPFontSymbolicTrait","CPFontTraitsAttribute","CPFontTransitionalSerifsClass","CPFontUnavailableException","CPFontUnknownClass","CPFontVariationAttribute","CPFontVariationAxisDefaultValueKey","CPFontVariationAxisIdentifierKey","CPFontVariationAxisMaximumValueKey","CPFontVariationAxisMinimumValueKey","CPFontVariationAxisNameKey","CPFontVisibleNameAttribute","CPFontWeightTrait","CPFontWidthTrait","CPForegroundColorAttributeName","CPFormFeedCharacter","CPFoundationVersionWithFileManagerResourceForkSupport","CPFourByteGlyphPacking","CPFunctionExpressionType","CPFunctionKeyMask","CPGIFFileType","CPGeneralPboard","CPGlobalDomain","CPGlyphAbove","CPGlyphAttributeBidiLevel","CPGlyphAttributeElastic","CPGlyphAttributeInscribe","CPGlyphAttributeSoft","CPGlyphBelow","CPGlyphInfoAttributeName","CPGlyphInscribeAbove","CPGlyphInscribeBase","CPGlyphInscribeBelow","CPGlyphInscribeOverBelow","CPGlyphInscribeOverstrike","CPGlyphLayoutAgainstAPoint","CPGlyphLayoutAtAPoint","CPGlyphLayoutWithPrevious","CPGradientConcaveStrong","CPGradientConcaveWeak","CPGradientConvexStrong","CPGradientConvexWeak","CPGradientNone","CPGraphicsContextDestinationAttributeName","CPGraphicsContextPDFFormat","CPGraphicsContextPSFormat","CPGraphicsContextRepresentationFormatAttributeName","CPGraphiteControlTint","CPGrayColorSpaceModel","CPGrayModeColorPanel","CPGreaterThanComparison","CPGreaterThanOrEqualToComparison","CPGreaterThanOrEqualToPredicateOperatorType","CPGreaterThanPredicateOperatorType","CPGrooveBorder","CPHFSFileTypes","CPHPUXOperatingSystem","CPHSBModeColorPanel","CPHTMLPboardType","CPHTMLTextDocumentType","CPHTTPCookieAcceptPolicyAlways","CPHTTPCookieAcceptPolicyNever","CPHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain","CPHandleOtherExceptionMask","CPHandleTopLevelExceptionMask","CPHandleUncaughtExceptionMask","CPHandleUncaughtRuntimeErrorMask","CPHandleUncaughtSystemExceptionMask","CPHangOnOtherExceptionMask","CPHangOnTopLevelExceptionMask","CPHangOnUncaughtExceptionMask","CPHangOnUncaughtRuntimeErrorMask","CPHangOnUncaughtSystemExceptionMask","CPHashTableCallBacks","CPHeavierFontAction","CPHelpButtonBezelStyle","CPHelpFunctionKey","CPHelpKeyMask","CPHighlightModeMatrix","CPHomeFunctionKey","CPHorizontalRuler","CPHourCalendarUnit","CPISO","CPISOLatin","CPIdentityMappingCharacterCollection","CPIllegalSelectorException","CPIllegalTextMovement","CPImageAbove","CPImageAlignBottom","CPImageAlignBottomLeft","CPImageAlignBottomRight","CPImageAlignCenter","CPImageAlignLeft","CPImageAlignRight","CPImageAlignTop","CPImageAlignTopLeft","CPImageAlignTopRight","CPImageBelow","CPImageCacheAlways","CPImageCacheBySize","CPImageCacheDefault","CPImageCacheException","CPImageCacheNever","CPImageColorSyncProfileData","CPImageCompressionFactor","CPImageCompressionMethod","CPImageCurrentFrame","CPImageCurrentFrameDuration","CPImageDitherTransparency","CPImageFrameButton","CPImageFrameCount","CPImageFrameGrayBezel","CPImageFrameGroove","CPImageFrameNone","CPImageFramePhoto","CPImageInterlaced","CPImageInterpolationDefault","CPImageInterpolationHigh","CPImageInterpolationLow","CPImageInterpolationNone","CPImageLeft","CPImageLoadStatusCancelled","CPImageLoadStatusCompleted","CPImageLoadStatusInvalidData","CPImageLoadStatusReadError","CPImageLoadStatusUnexpectedEOF","CPImageLoopCount","CPImageOnly","CPImageOverlaps","CPImageRGBColorTable","CPImageRepLoadStatusCompleted","CPImageRepLoadStatusInvalidData","CPImageRepLoadStatusReadingHeader","CPImageRepLoadStatusUnexpectedEOF","CPImageRepLoadStatusUnknownType","CPImageRepLoadStatusWillNeedAllData","CPImageRepMatchesDevice","CPImageRepRegistryDidChangeNotification","CPImageRight","CPInPredicateOperatorType","CPIndexSubelement","CPInformationalAlertStyle","CPInformationalRequest","CPInsertCharFunctionKey","CPInsertFunctionKey","CPInsertLineFunctionKey","CPIntHashCallBacks","CPIntMapKeyCallBacks","CPIntMapValueCallBacks","CPIntType","CPInteger16AttributeType","CPInteger32AttributeType","CPInteger64AttributeType","CPInteger","CPInterfaceStyleDefault","CPInternalScriptError","CPInternalSpecifierError","CPInvalidIndexSpecifierError","CPItalicFontMask","CPJPEG","CPJPEGFileType","CPJapaneseEUCGlyphPacking","CPJapaneseEUCStringEncoding","CPJustifiedTextAlignment","CPKernAttributeName","CPKeyDown","CPKeyDownMask","CPKeyPathExpressionType","CPKeySpecifierEvaluationScriptError","CPKeyUp","CPKeyUpMask","CPKeyValueChangeInsertion","CPKeyValueChangeRemoval","CPKeyValueChangeReplacement","CPKeyValueChangeSetting","CPKeyValueIntersectSetMutation","CPKeyValueMinusSetMutation","CPKeyValueObservingOptionNew","CPKeyValueObservingOptionOld","CPKeyValueSetSetMutation","CPKeyValueUnionSetMutation","CPL","CPLABColorSpaceModel","CPLError","CPLPrepareRequest","CPLStandardGetURL","CPLandscapeOrientation","CPLayoutCantFit","CPLayoutDone","CPLayoutLeftToRight","CPLayoutNotDone","CPLayoutOutOfGlyphs","CPLayoutRightToLeft","CPLeftArrowFunctionKey","CPLeftMouseDown","CPLeftMouseDownMask","CPLeftMouseDragged","CPLeftMouseDraggedMask","CPLeftMouseUp","CPLeftMouseUpMask","CPLeftTabStopType","CPLeftTabsBezelBorder","CPLeftTextAlignment","CPLeftTextMovement","CPLessThanComparison","CPLessThanOrEqualToComparison","CPLessThanOrEqualToPredicateOperatorType","CPLessThanPredicateOperatorType","CPLibraryDirectory","CPLigatureAttributeName","CPLighterFontAction","CPLikePredicateOperatorType","CPLineBorder","CPLineBreakByCharWrapping","CPLineBreakByClipping","CPLineBreakByTruncatingHead","CPLineBreakByTruncatingMiddle","CPLineBreakByTruncatingTail","CPLineBreakByWordWrapping","CPLineDoesntMove","CPLineMovesDown","CPLineMovesLeft","CPLineMovesRight","CPLineMovesUp","CPLineSeparatorCharacter","CPLineSweepDown","CPLineSweepLeft","CPLineSweepRight","CPLineSweepUp","CPLineToBezierPathElement","CPLinearSlider","CPLinkAttributeName","CPListModeMatrix","CPLiteralSearch","CPLocalDomainMask","CPLocalizedDescriptionKey","CPLogOtherExceptionMask","CPLogTopLevelExceptionMask","CPLogUncaughtExceptionMask","CPLogUncaughtRuntimeErrorMask","CPLogUncaughtSystemExceptionMask","CPM","CPMACHOperatingSystem","CPMacOSRomanStringEncoding","CPMacSimpleTextDocumentType","CPMachErrorDomain","CPMacintoshInterfaceStyle","CPManagedObjectContextLockingError","CPManagedObjectExternalRelationshipError","CPManagedObjectMergeError","CPManagedObjectReferentialIntegrityError","CPManagedObjectValidationError","CPMapTableKeyCallBacks","CPMapTableValueCallBacks","CPMatchesPredicateOperatorType","CPMaxXEdge","CPMaxYEdge","CPMenuDidAddItemNotification","CPMenuDidChangeItemNotification","CPMenuDidEndTrackingNotification","CPMenuDidRemoveItemNotification","CPMenuDidSendActionNotification","CPMenuFunctionKey","CPMenuWillSendActionNotification","CPMiddleSubelement","CPMinXEdge","CPMinYEdge","CPMiniControlSize","CPMiniaturizableWindowMask","CPMinuteCalendarUnit","CPMiterLineJoinStyle","CPMixedState","CPModalPanelRunLoopMode","CPModeSwitchFunctionKey","CPMomentaryChangeButton","CPMomentaryLight","CPMomentaryLightButton","CPMomentaryPushButton","CPMomentaryPushInButton","CPMonthCalendarUnit","CPMouseEntered","CPMouseEnteredMask","CPMouseExited","CPMouseExitedMask","CPMouseMoved","CPMouseMovedMask","CPMouseTracker","CPMoveToBezierPathElement","CPNEXTSTEPStringEncoding","CPNamedColorSpace","CPNarrowFontMask","CPNativeShortGlyphPacking","CPNaturalTextAlignment","CPNetServicesActivityInProgress","CPNetServicesBadArgumentError","CPNetServicesCancelledError","CPNetServicesCollisionError","CPNetServicesInvalidError","CPNetServicesNotFoundError","CPNetServicesTimeoutError","CPNetServicesUnknownError","CPNetworkDomainMask","CPNewNotifyingTextView","CPNewlineCharacter","CPNextFunctionKey","CPNextStepInterfaceStyle","CPNibLoadingException","CPNibOwner","CPNibTopLevelObjects","CPNoActionDeleteRule","CPNoBorder","CPNoFontChangeAction","CPNoImage","CPNoInterfaceStyle","CPNoScriptError","CPNoScrollerParts","CPNoSpecifierError","CPNoSubelement","CPNoTabsBezelBorder","CPNoTabsLineBorder","CPNoTabsNoBorder","CPNoTitle","CPNoTopLevelContainersSpecifierError","CPNoUnderlineStyle","CPNonLossyASCIIStringEncoding","CPNonOwnedPointerHashCallBacks","CPNonOwnedPointerMapKeyCallBacks","CPNonOwnedPointerMapValueCallBacks","CPNonOwnedPointerOrNullMapKeyCallBacks","CPNonRetainedObjectHashCallBacks","CPNonRetainedObjectMapKeyCallBacks","CPNonRetainedObjectMapValueCallBacks","CPNonStandardCharacterSetFontMask","CPNonZeroWindingRule","CPNonactivatingPanelMask","CPNotEqualToPredicateOperatorType","CPNotPredicateType","CPNotificationCoalescingOnName","CPNotificationCoalescingOnSender","CPNotificationDeliverImmediately","CPNotificationNoCoalescing","CPNotificationPostToAllSessions","CPNotificationSuspensionBehaviorCoalesce","CPNotificationSuspensionBehaviorDeliverImmediately","CPNotificationSuspensionBehaviorDrop","CPNotificationSuspensionBehaviorHold","CPNullGlyph","CPNullifyDeleteRule","CPNumberFormatterBehavior10_0","CPNumberFormatterBehavior10_4","CPNumberFormatterBehavior","CPNumberFormatterBehaviorDefault","CPNumberFormatterCurrencyStyle","CPNumberFormatterDecimalStyle","CPNumberFormatterNoStyle","CPNumberFormatterPadAfterPrefix","CPNumberFormatterPadAfterSuffix","CPNumberFormatterPadBeforePrefix","CPNumberFormatterPadBeforeSuffix","CPNumberFormatterPercentStyle","CPNumberFormatterRoundCeiling","CPNumberFormatterRoundDown","CPNumberFormatterRoundFloor","CPNumberFormatterRoundHalfDown","CPNumberFormatterRoundHalfEven","CPNumberFormatterRoundHalfUp","CPNumberFormatterRoundUp","CPNumberFormatterScientificStyle","CPNumberFormatterSpellOutStyle","CPNumericPadKeyMask","CPNumericSearch","CPOKButton","CPOSF","CPOSStatusErrorDomain","CPObjCArrayType","CPObjCBitfield","CPObjCBoolType","CPObjCCharType","CPObjCDoubleType","CPObjCFloatType","CPObjCLongType","CPObjCLonglongType","CPObjCNoType","CPObjCObjectType","CPObjCPointerType","CPObjCSelectorType","CPObjCShortType","CPObjCStringType","CPObjCStructType","CPObjCUnionType","CPObjCVoidType","CPObjectHashCallBacks","CPObjectMapKeyCallBacks","CPObjectMapValueCallBacks","CPObliquenessAttributeName","CPOffState","CPOldNotifyingTextView","CPOldSelectedCharacterRange","CPOnOffButton","CPOnState","CPOneByteGlyphPacking","CPOnlyScrollerArrows","CPOpenGLCPRasterizationEnable","CPOpenGLCPStateValidation","CPOpenGLCPSurfaceOpacity","CPOpenGLCPSurfaceOrder","CPOpenGLCPSwapInterval","CPOpenGLCPSwapRectangle","CPOpenGLCPSwapRectangleEnable","CPOpenGLGOClearFormatCache","CPOpenGLGOFormatCacheSize","CPOpenGLGOResetLibrary","CPOpenGLGORetainRenderers","CPOpenGLPFAAccelerated","CPOpenGLPFAAccumSize","CPOpenGLPFAAllRenderers","CPOpenGLPFAAlphaSize","CPOpenGLPFAAuxBuffers","CPOpenGLPFAAuxDepthStencil","CPOpenGLPFABackingStore","CPOpenGLPFAClosestPolicy","CPOpenGLPFAColorFloat","CPOpenGLPFAColorSize","CPOpenGLPFACompliant","CPOpenGLPFADepthSize","CPOpenGLPFADoubleBuffer","CPOpenGLPFAFullScreen","CPOpenGLPFAMPSafe","CPOpenGLPFAMaximumPolicy","CPOpenGLPFAMinimumPolicy","CPOpenGLPFAMultiScreen","CPOpenGLPFAMultisample","CPOpenGLPFANoRecovery","CPOpenGLPFAOffScreen","CPOpenGLPFAPixelBuffer","CPOpenGLPFARendererID","CPOpenGLPFARobust","CPOpenGLPFASampleAlpha","CPOpenGLPFASampleBuffers","CPOpenGLPFASamples","CPOpenGLPFAScreenMask","CPOpenGLPFASingleRenderer","CPOpenGLPFAStencilSize","CPOpenGLPFAStereo","CPOpenGLPFASupersample","CPOpenGLPFAVirtualScreenCount","CPOpenGLPFAWindow","CPOperationNotSupportedForKeyScriptError","CPOperationNotSupportedForKeySpecifierError","CPOrPredicateType","CPOrderedAscending","CPOrderedDescending","CPOrderedSame","CPOtherMouseDown","CPOtherMouseDownMask","CPOtherMouseDragged","CPOtherMouseDraggedMask","CPOtherMouseUp","CPOtherMouseUpMask","CPOtherTextMovement","CPOutlineViewColumnDidMoveNotification","CPOutlineViewColumnDidResizeNotification","CPOutlineViewDropOnItemIndex","CPOutlineViewItemDidCollapseNotification","CPOutlineViewItemDidExpandNotification","CPOutlineViewItemWillCollapseNotification","CPOutlineViewItemWillExpandNotification","CPOutlineViewSelectionDidChangeNotification","CPOutlineViewSelectionIsChangingNotification","CPOwnedObjectIdentityHashCallBacks","CPOwnedPointerHashCallBacks","CPOwnedPointerMapKeyCallBacks","CPOwnedPointerMapValueCallBacks","CPPDFPboardType","CPPICTPboardType","CPPLCancelButton","CPPLHeightForm","CPPLImageButton","CPPLOKButton","CPPLOrientationMatrix","CPPLPaperNameButton","CPPLTitleField","CPPLUnitsButton","CPPLWidthForm","CPPNGFileType","CPPOSIXErrorDomain","CPPPCopiesField","CPPPDIncludeNotFoundException","CPPPDIncludeStackOverflowException","CPPPDIncludeStackUnderflowException","CPPPDParseException","CPPPImageButton","CPPPLayoutButton","CPPPNameField","CPPPNameTitle","CPPPNoteField","CPPPNoteTitle","CPPPOptionsButton","CPPPPageChoiceMatrix","CPPPPageRangeFrom","CPPPPageRangeTo","CPPPPaperFeedButton","CPPPPreviewButton","CPPPSaveButton","CPPPScaleField","CPPPStatusField","CPPPStatusTitle","CPPPTitleField","CPPageDownFunctionKey","CPPageUpFunctionKey","CPParagraphSeparatorCharacter","CPParagraphStyleAttributeName","CPPasteboardCommunicationException","CPPatternColorSpace","CPPauseFunctionKey","CPPenPointingDevice","CPPeriodic","CPPeriodicMask","CPPersistentStoreCoordinatorLockingError","CPPersistentStoreIncompatibleSchemaError","CPPersistentStoreIncompleteSaveError","CPPersistentStoreInvalidTypeError","CPPersistentStoreSaveError","CPPersistentStoreTypeMismatchError","CPPlainFileType","CPPlainTextDocumentType","CPPlainTextTokenStyle","CPPointerToStructHashCallBacks","CPPopUpArrowAtBottom","CPPopUpArrowAtCenter","CPPopUpButtonWillPopUpNotification","CPPopUpNoArrow","CPPortraitOrientation","CPPositionAfter","CPPositionBefore","CPPositionBeginning","CPPositionEnd","CPPositionReplace","CPPositiveDoubleType","CPPositiveFloatType","CPPositiveIntType","CPPostASAP","CPPostNow","CPPostScriptPboardType","CPPostWhenIdle","CPPosterFontMask","CPPowerOffEventType","CPPressedTab","CPPrevFunctionKey","CPPrintAllPages","CPPrintBottomMargin","CPPrintCancelJob","CPPrintCopies","CPPrintFaxCoverSheetName","CPPrintFaxHighResolution","CPPrintFaxJob","CPPrintFaxModem","CPPrintFaxReceiverNames","CPPrintFaxReceiverNumbers","CPPrintFaxReturnReceipt","CPPrintFaxSendTime","CPPrintFaxTrimPageEnds","CPPrintFaxUseCoverSheet","CPPrintFirstPage","CPPrintFormName","CPPrintFunctionKey","CPPrintHorizontalPagination","CPPrintHorizontallyCentered","CPPrintJobDisposition","CPPrintJobFeatures","CPPrintLastPage","CPPrintLeftMargin","CPPrintManualFeed","CPPrintMustCollate","CPPrintOperationExistsException","CPPrintOrientation","CPPrintPackageException","CPPrintPagesPerSheet","CPPrintPaperFeed","CPPrintPaperName","CPPrintPaperSize","CPPrintPhotoJobStyleHint","CPPrintPreviewJob","CPPrintPrinter","CPPrintReversePageOrder","CPPrintRightMargin","CPPrintSaveJob","CPPrintSavePath","CPPrintScalingFactor","CPPrintScreenFunctionKey","CPPrintSpoolJob","CPPrintTopMargin","CPPrintVerticalPagination","CPPrintVerticallyCentered","CPPrinterTableError","CPPrinterTableNotFound","CPPrinterTableOK","CPPrintingCancelled","CPPrintingCommunicationException","CPPrintingFailure","CPPrintingReplyLater","CPPrintingSuccess","CPProgressIndicatorBarStyle","CPProgressIndicatorPreferredAquaThickness","CPProgressIndicatorPreferredLargeThickness","CPProgressIndicatorPreferredSmallThickness","CPProgressIndicatorPreferredThickness","CPProgressIndicatorSpinningStyle","CPPropertyListBinaryFormat","CPPropertyListImmutable","CPPropertyListMutableContainers","CPPropertyListMutableContainersAndLeaves","CPPropertyListOpenStepFormat","CPPropertyListXMLFormat","CPProprietaryStringEncoding","CPPushOnPushOffButton","CPQTMovieLoopingBackAndForthPlayback","CPQTMovieLoopingPlayback","CPQTMovieNormalPlayback","CPRGBColorSpaceModel","CPRGBModeColorPanel","CPRTFDPboardType","CPRTFDTextDocumentType","CPRTFPboardType","CPRTFPropertyStackOverflowException","CPRTFTextDocumentType","CPRadioButton","CPRadioModeMatrix","CPRandomSubelement","CPRangeDateMode","CPRatingLevelIndicatorStyle","CPReceiverEvaluationScriptError","CPReceiversCantHandleCommandScriptError","CPRecessedBezelStyle","CPRedoFunctionKey","CPRegularControlSize","CPRegularSquareBezelStyle","CPRelativeAfter","CPRelativeBefore","CPRelevancyLevelIndicatorStyle","CPRemoveTraitFontAction","CPRequiredArgumentsMissingScriptError","CPResetCursorRectsRunLoopOrdering","CPResetFunctionKey","CPResizableWindowMask","CPReturnTextMovement","CPRightArrowFunctionKey","CPRightMouseDown","CPRightMouseDownMask","CPRightMouseDragged","CPRightMouseDraggedMask","CPRightMouseUp","CPRightMouseUpMask","CPRightTabStopType","CPRightTabsBezelBorder","CPRightTextAlignment","CPRightTextMovement","CPRoundBankers","CPRoundDown","CPRoundLineCapStyle","CPRoundLineJoinStyle","CPRoundPlain","CPRoundRectBezelStyle","CPRoundUp","CPRoundedBezelStyle","CPRoundedDisclosureBezelStyle","CPRoundedTokenStyle","CPRulerPboard","CPRulerPboardType","CPRunAbortedResponse","CPRunContinuesResponse","CPRunStoppedResponse","CPSaveAsOperation","CPSaveOperation","CPSaveOptionsAsk","CPSaveOptionsNo","CPSaveOptionsYes","CPSaveToOperation","CPScaleNone","CPScaleProportionally","CPScaleToFit","CPScreenChangedEventType","CPScrollLockFunctionKey","CPScrollWheel","CPScrollWheelMask","CPScrollerArrowsDefaultSetting","CPScrollerArrowsMaxEnd","CPScrollerArrowsMinEnd","CPScrollerArrowsNone","CPScrollerDecrementArrow","CPScrollerDecrementLine","CPScrollerDecrementPage","CPScrollerIncrementArrow","CPScrollerIncrementLine","CPScrollerIncrementPage","CPScrollerKnob","CPScrollerKnobSlot","CPScrollerNoPart","CPSecondCalendarUnit","CPSegmentSwitchTrackingMomentary","CPSegmentSwitchTrackingSelectAny","CPSegmentSwitchTrackingSelectOne","CPSelectByCharacter","CPSelectByParagraph","CPSelectByWord","CPSelectFunctionKey","CPSelectedTab","CPSelectingNext","CPSelectingPrevious","CPSelectionAffinityDownstream","CPSelectionAffinityUpstream","CPShadowAttributeName","CPShadowlessSquareBezelStyle","CPShellCommandFileType","CPShiftJISStringEncoding","CPShiftKeyMask","CPShowControlGlyphs","CPShowInvisibleGlyphs","CPSingleDateMode","CPSingleUnderlineStyle","CPSizeDownFontAction","CPSizeUpFontAction","CPSmallCapsFontMask","CPSmallControlSize","CPSmallIconButtonBezelStyle","CPSmallSquareBezelStyle","CPSolarisOperatingSystem","CPSoundPboardType","CPSpecialPageOrder","CPSplitViewDidResizeSubviewsNotification","CPSplitViewWillResizeSubviewsNotification","CPSquareLineCapStyle","CPStopFunctionKey","CPStreamEventEndEncountered","CPStreamEventErrorOccurred","CPStreamEventHasBytesAvailable","CPStreamEventHasSpaceAvailable","CPStreamEventNone","CPStreamEventOpenCompleted","CPStreamStatusAtEnd","CPStreamStatusClosed","CPStreamStatusError","CPStreamStatusNotOpen","CPStreamStatusOpen","CPStreamStatusOpening","CPStreamStatusReading","CPStreamStatusWriting","CPStrikethroughColorAttributeName","CPStrikethroughStyleAttributeName","CPStringAttributeType","CPStringDrawingDisableScreenFontSubstitution","CPStringDrawingOneShot","CPStringDrawingUsesDeviceMetrics","CPStringDrawingUsesFontLeading","CPStringDrawingUsesLineFragmentOrigin","CPStringEncodingErrorKey","CPStringPboardType","CPStrokeColorAttributeName","CPStrokeWidthAttributeName","CPSunOSOperatingSystem","CPSuperscriptAttributeName","CPSwitchButton","CPSymbolStringEncoding","CPSysReqFunctionKey","CPSystemColorsDidChangeNotification","CPSystemDefined","CPSystemDefinedMask","CPSystemDomainMask","CPSystemFunctionKey","CPTIFFCompressionCCITTFAX","CPTIFFCompressionJPEG","CPTIFFCompressionLZW","CPTIFFCompressionNEXT","CPTIFFCompressionNone","CPTIFFCompressionOldJPEG","CPTIFFCompressionPackBits","CPTIFFException","CPTIFFFileType","CPTIFFPboardType","CPTabCharacter","CPTabColumnTerminatorsAttributeName","CPTabTextMovement","CPTableViewColumnDidMoveNotification","CPTableViewColumnDidResizeNotification","CPTableViewDropAbove","CPTableViewDropOn","CPTableViewFirstColumnOnlyAutoresizingStyle","CPTableViewGridNone","CPTableViewLastColumnOnlyAutoresizingStyle","CPTableViewNoColumnAutoresizing","CPTableViewReverseSequentialColumnAutoresizingStyle","CPTableViewSelectionDidChangeNotification","CPTableViewSelectionIsChangingNotification","CPTableViewSequentialColumnAutoresizingStyle","CPTableViewSolidHorizontalGridLineMask","CPTableViewSolidVerticalGridLineMask","CPTableViewUniformColumnAutoresizingStyle","CPTabletPoint","CPTabletPointEventSubtype","CPTabletPointMask","CPTabletProximity","CPTabletProximityEventSubtype","CPTabletProximityMask","CPTabularTextPboardType","CPTerminateCancel","CPTerminateLater","CPTerminateNow","CPTextBlockAbsoluteValueType","CPTextBlockBaselineAlignment","CPTextBlockBorder","CPTextBlockBottomAlignment","CPTextBlockHeight","CPTextBlockMargin","CPTextBlockMaximumHeight","CPTextBlockMaximumWidth","CPTextBlockMiddleAlignment","CPTextBlockMinimumHeight","CPTextBlockMinimumWidth","CPTextBlockPadding","CPTextBlockPercentageValueType","CPTextBlockTopAlignment","CPTextBlockWidth","CPTextDidBeginEditingNotification","CPTextDidChangeNotification","CPTextDidEndEditingNotification","CPTextFieldAndStepperDatePickerStyle","CPTextFieldRoundedBezel","CPTextFieldSquareBezel","CPTextLineTooLongException","CPTextNoSelectionException","CPTextReadException","CPTextReadInapplicableDocumentTypeError","CPTextReadWriteErrorMaximum","CPTextReadWriteErrorMinimum","CPTextSizeMultiplierDocumentOption","CPTextStorageDidProcessEditingNotification","CPTextStorageEditedAttributes","CPTextStorageEditedCharacters","CPTextStorageWillProcessEditingNotification","CPTextTableAutomaticLayoutAlgorithm","CPTextTableFixedLayoutAlgorithm","CPTextViewDidChangeSelectionNotification","CPTextViewDidChangeTypingAttributesNotification","CPTextViewWillChangeNotifyingTextViewNotification","CPTextViews","CPTextWriteException","CPTextWriteInapplicableDocumentTypeError","CPTexturedBackgroundWindowMask","CPTexturedRoundedBezelStyle","CPTexturedSquareBezelStyle","CPThickSquareBezelStyle","CPThickerSquareBezelStyle","CPTickMarkAbove","CPTickMarkBelow","CPTickMarkLeft","CPTickMarkRight","CPTitledWindowMask","CPToggleButton","CPToolTipAttributeName","CPToolbarCustomizeToolbarItemIdentifier","CPToolbarDidRemoveItemNotification","CPToolbarFlexibleSpaceItemIdentifier","CPToolbarPrintItemIdentifier","CPToolbarSeparatorItemIdentifier","CPToolbarShowColorsItemIdentifier","CPToolbarShowFontsItemIdentifier","CPToolbarSpaceItemIdentifier","CPToolbarWillAddItemNotification","CPTopTabsBezelBorder","CPTrackModeMatrix","CPTwoByteGlyphPacking","CPTypedStreamVersionException","CPTypesetterContainerBreakAction","CPTypesetterHorizontalTabAction","CPTypesetterLatestBehavior","CPTypesetterLineBreakAction","CPTypesetterOriginalBehavior","CPTypesetterParagraphBreakAction","CPTypesetterWhitespaceAction","CPTypesetterZeroAdvancementAction","CPURLCacheStorageAllowed","CPURLCacheStorageAllowedInMemoryOnly","CPURLCacheStorageNotAllowed","CPURLCacheStoragePolicy","CPURLCredentialPersistenceForSession","CPURLCredentialPersistenceNone","CPURLCredentialPersistencePermanent","CPURLCredentialStorageInternal","CPURLErrorBadServerResponse","CPURLErrorBadURL","CPURLErrorCancelled","CPURLErrorCannotCloseFile","CPURLErrorCannotConnectToHost","CPURLErrorCannotCreateFile","CPURLErrorCannotFindHost","CPURLErrorCannotLoadFromNetwork","CPURLErrorCannotMoveFile","CPURLErrorCannotOpenFile","CPURLErrorCannotRemoveFile","CPURLErrorCannotWriteToFile","CPURLErrorDNSLookupFailed","CPURLErrorDownloadDecodingFailedMidStream","CPURLErrorDownloadDecodingFailedToComplete","CPURLErrorFileDoesNotExist","CPURLErrorFileIsDirectory","CPURLErrorHTTPTooManyRedirects","CPURLErrorNetworkConnectionLost","CPURLErrorNoPermissionsToReadFile","CPURLErrorNotConnectedToInternet","CPURLErrorRedirectToNonExistentLocation","CPURLErrorResourceUnavailable","CPURLErrorSecureConnectionFailed","CPURLErrorServerCertificateHasBadDate","CPURLErrorServerCertificateHasUnknownRoot","CPURLErrorServerCertificateUntrusted","CPURLErrorTimedOut","CPURLErrorUnknown","CPURLErrorUnsupportedURL","CPURLErrorUserAuthenticationRequired","CPURLErrorUserCancelledAuthentication","CPURLErrorZeroByteResource","CPURLHandleLoadFailed","CPURLHandleLoadInProgress","CPURLHandleLoadSucceeded","CPURLHandleNotLoaded","CPURLPboardType","CPURLRequestCachePolicy","CPURLRequestReloadIgnoringCacheData","CPURLRequestReturnCacheDataDontLoad","CPURLRequestReturnCacheDataElseLoad","CPURLRequestUseProtocolCachePolicy","CPUTF8StringEncoding","CPUnboldFontMask","CPUndefinedAttributeType","CPUnderlineColorAttributeName","CPUnderlinePatternDash","CPUnderlinePatternDashDot","CPUnderlinePatternDashDotDot","CPUnderlinePatternDot","CPUnderlinePatternSolid","CPUnderlineStyleAttributeName","CPUnderlineStyleDouble","CPUnderlineStyleNone","CPUnderlineStyleSingle","CPUnderlineStyleThick","CPUnderlyingErrorKey","CPUndoCloseGroupingRunLoopOrdering","CPUndoFunctionKey","CPUndoManagerDidRedoChangeNotification","CPUndoManagerDidUndoChangeNotification","CPUndoManagerWillCloseUndoGroupNotification","CPUnicodeStringEncoding","CPUnitalicFontMask","CPUnknownColorSpaceModel","CPUnknownKeyScriptError","CPUnknownKeySpecifierError","CPUnknownPageOrder","CPUnknownPointingDevice","CPUnselectCancel","CPUnselectLater","CPUnselectNow","CPUpArrowFunctionKey","CPUpTextMovement","CPUpdateWindowsRunLoopOrdering","CPUserDirectory","CPUserDomainMask","CPUserFunctionKey","CPUserKeyEquivalents","CPUtilityWindowMask","CPVCardPboardType","CPValidationDateTooLateError","CPValidationDateTooSoonError","CPValidationInvalidDateError","CPValidationKeyErrorKey","CPValidationMissingMandatoryPropertyError","CPValidationMultipleErrorsError","CPValidationNumberTooLargeError","CPValidationNumberTooSmallError","CPValidationObjectErrorKey","CPValidationPredicateErrorKey","CPValidationRelationshipDeniedDeleteError","CPValidationRelationshipExceedsMaximumCountError","CPValidationRelationshipLacksMinimumCountError","CPValidationStringPatternMatchingError","CPValidationStringTooLongError","CPValidationStringTooShortError","CPValidationValueErrorKey","CPVariableExpressionType","CPVerticalRuler","CPViaPanelFontAction","CPViewBoundsDidChangeNotification","CPViewFocusDidChangeNotification","CPViewFrameDidChangeNotification","CPViewGlobalFrameDidChangeNotification","CPViewHeightSizable","CPViewMaxXMargin","CPViewMaxYMargin","CPViewMinXMargin","CPViewMinYMargin","CPViewNotSizable","CPViewWidthSizable","CPVoiceAge","CPVoiceDemoText","CPVoiceGender","CPVoiceGenderFemale","CPVoiceGenderMale","CPVoiceGenderNeuter","CPVoiceIdentifier","CPVoiceLanguage","CPVoiceName","CPWantsBidiLevels","CPWarningAlertStyle","CPWeekCalendarUnit","CPWeekdayCalendarUnit","CPWeekdayOrdinalCalendarUnit","CPWheelModeColorPanel","CPWindowAbove","CPWindowBelow","CPWindowCloseButton","CPWindowDidBecomeKeyNotification","CPWindowDidBecomeMainNotification","CPWindowDidChangeScreenNotification","CPWindowDidDeminiaturizeNotification","CPWindowDidEndSheetNotification","CPWindowDidExposeNotification","CPWindowDidMiniaturizeNotification","CPWindowDidMoveNotification","CPWindowDidResignKeyNotification","CPWindowDidResignMainNotification","CPWindowDidResizeNotification","CPWindowDidUpdateNotification","CPWindowDocumentIconButton","CPWindowExposedEventType","CPWindowMiniaturizeButton","CPWindowMovedEventType","CPWindowOut","CPWindowServerCommunicationException","CPWindowToolbarButton","CPWindowWillBeginSheetNotification","CPWindowWillCloseNotification","CPWindowWillMiniaturizeNotification","CPWindowWillMoveNotification","CPWindowZoomButton","CPWindows","CPWindowsCP","CPWindowsNTOperatingSystem","CPWordMLTextDocumentType","CPWordTablesReadException","CPWordTablesWriteException","CPWorkspaceCompressOperation","CPWorkspaceCopyOperation","CPWorkspaceDecompressOperation","CPWorkspaceDecryptOperation","CPWorkspaceDestroyOperation","CPWorkspaceDidLaunchApplicationNotification","CPWorkspaceDidMountNotification","CPWorkspaceDidPerformFileOperationNotification","CPWorkspaceDidTerminateApplicationNotification","CPWorkspaceDidUnmountNotification","CPWorkspaceDidWakeNotification","CPWorkspaceDuplicateOperation","CPWorkspaceEncryptOperation","CPWorkspaceLaunchAllowingClassicStartup","CPWorkspaceLaunchAndDisplayFailures","CPWorkspaceLaunchAndHide","CPWorkspaceLaunchAndHideOthers","CPWorkspaceLaunchAndPrint","CPWorkspaceLaunchAsync","CPWorkspaceLaunchDefault","CPWorkspaceLaunchInhibitingBackgroundOnly","CPWorkspaceLaunchNewInstance","CPWorkspaceLaunchPreferringClassic","CPWorkspaceLaunchWithoutActivation","CPWorkspaceLaunchWithoutAddingToRecents","CPWorkspaceLinkOperation","CPWorkspaceMoveOperation","CPWorkspaceRecycleOperation","CPWorkspaceSessionDidBecomeActiveNotification","CPWorkspaceSessionDidResignActiveNotification","CPWorkspaceWillLaunchApplicationNotification","CPWorkspaceWillPowerOffNotification","CPWorkspaceWillSleepNotification","CPWorkspaceWillUnmountNotification","CPWritingDirectionLeftToRight","CPWritingDirectionNatural","CPWritingDirectionRightToLeft","CPXMLAttributeCDATAKind","CPXMLAttributeDeclarationKind","CPXMLAttributeEntitiesKind","CPXMLAttributeEntityKind","CPXMLAttributeEnumerationKind","CPXMLAttributeIDKind","CPXMLAttributeIDRefKind","CPXMLAttributeIDRefsKind","CPXMLAttributeKind","CPXMLAttributeNMTokenKind","CPXMLAttributeNMTokensKind","CPXMLAttributeNotationKind","CPXMLCommentKind","CPXMLDTDKind","CPXMLDocumentHTMLKind","CPXMLDocumentIncludeContentTypeDeclaration","CPXMLDocumentKind","CPXMLDocumentTextKind","CPXMLDocumentTidyHTML","CPXMLDocumentTidyXML","CPXMLDocumentValidate","CPXMLDocumentXHTMLKind","CPXMLDocumentXMLKind","CPXMLElementDeclarationAnyKind","CPXMLElementDeclarationElementKind","CPXMLElementDeclarationEmptyKind","CPXMLElementDeclarationKind","CPXMLElementDeclarationMixedKind","CPXMLElementDeclarationUndefinedKind","CPXMLElementKind","CPXMLEntityDeclarationKind","CPXMLEntityGeneralKind","CPXMLEntityParameterKind","CPXMLEntityParsedKind","CPXMLEntityPredefined","CPXMLEntityUnparsedKind","CPXMLInvalidKind","CPXMLNamespaceKind","CPXMLNodeCompactEmptyElement","CPXMLNodeExpandEmptyElement","CPXMLNodeIsCDATA","CPXMLNodeOptionsNone","CPXMLNodePreserveAll","CPXMLNodePreserveAttributeOrder","CPXMLNodePreserveCDATA","CPXMLNodePreserveDTD","CPXMLNodePreserveEmptyElements","CPXMLNodePreserveEntities","CPXMLNodePreserveNamespaceOrder","CPXMLNodePreservePrefixes","CPXMLNodePreserveQuotes","CPXMLNodePreserveWhitespace","CPXMLNodePrettyPrint","CPXMLNodeUseDoubleQuotes","CPXMLNodeUseSingleQuotes","CPXMLNotationDeclarationKind","CPXMLParserAttributeHasNoValueError","CPXMLParserAttributeListNotFinishedError","CPXMLParserAttributeListNotStartedError","CPXMLParserAttributeNotFinishedError","CPXMLParserAttributeNotStartedError","CPXMLParserAttributeRedefinedError","CPXMLParserCDATANotFinishedError","CPXMLParserCharacterRefAtEOFError","CPXMLParserCharacterRefInDTDError","CPXMLParserCharacterRefInEpilogError","CPXMLParserCharacterRefInPrologError","CPXMLParserCommentContainsDoubleHyphenError","CPXMLParserCommentNotFinishedError","CPXMLParserConditionalSectionNotFinishedError","CPXMLParserConditionalSectionNotStartedError","CPXMLParserDOCTYPEDeclNotFinishedError","CPXMLParserDelegateAbortedParseError","CPXMLParserDocumentStartError","CPXMLParserElementContentDeclNotFinishedError","CPXMLParserElementContentDeclNotStartedError","CPXMLParserEmptyDocumentError","CPXMLParserEncodingNotSupportedError","CPXMLParserEntityBoundaryError","CPXMLParserEntityIsExternalError","CPXMLParserEntityIsParameterError","CPXMLParserEntityNotFinishedError","CPXMLParserEntityNotStartedError","CPXMLParserEntityRefAtEOFError","CPXMLParserEntityRefInDTDError","CPXMLParserEntityRefInEpilogError","CPXMLParserEntityRefInPrologError","CPXMLParserEntityRefLoopError","CPXMLParserEntityReferenceMissingSemiError","CPXMLParserEntityReferenceWithoutNameError","CPXMLParserEntityValueRequiredError","CPXMLParserEqualExpectedError","CPXMLParserExternalStandaloneEntityError","CPXMLParserExternalSubsetNotFinishedError","CPXMLParserExtraContentError","CPXMLParserGTRequiredError","CPXMLParserInternalError","CPXMLParserInvalidCharacterError","CPXMLParserInvalidCharacterInEntityError","CPXMLParserInvalidCharacterRefError","CPXMLParserInvalidConditionalSectionError","CPXMLParserInvalidDecimalCharacterRefError","CPXMLParserInvalidEncodingError","CPXMLParserInvalidEncodingNameError","CPXMLParserInvalidHexCharacterRefError","CPXMLParserInvalidURIError","CPXMLParserLTRequiredError","CPXMLParserLTSlashRequiredError","CPXMLParserLessThanSymbolInAttributeError","CPXMLParserLiteralNotFinishedError","CPXMLParserLiteralNotStartedError","CPXMLParserMisplacedCDATAEndStringError","CPXMLParserMisplacedXMLDeclarationError","CPXMLParserMixedContentDeclNotFinishedError","CPXMLParserMixedContentDeclNotStartedError","CPXMLParserNAMERequiredError","CPXMLParserNMTOKENRequiredError","CPXMLParserNamespaceDeclarationError","CPXMLParserNoDTDError","CPXMLParserNotWellBalancedError","CPXMLParserNotationNotFinishedError","CPXMLParserNotationNotStartedError","CPXMLParserOutOfMemoryError","CPXMLParserPCDATARequiredError","CPXMLParserParsedEntityRefAtEOFError","CPXMLParserParsedEntityRefInEpilogError","CPXMLParserParsedEntityRefInInternalError","CPXMLParserParsedEntityRefInInternalSubsetError","CPXMLParserParsedEntityRefInPrologError","CPXMLParserParsedEntityRefMissingSemiError","CPXMLParserParsedEntityRefNoNameError","CPXMLParserPrematureDocumentEndError","CPXMLParserProcessingInstructionNotFinishedError","CPXMLParserProcessingInstructionNotStartedError","CPXMLParserPublicIdentifierRequiredError","CPXMLParserSeparatorRequiredError","CPXMLParserSpaceRequiredError","CPXMLParserStandaloneValueError","CPXMLParserStringNotClosedError","CPXMLParserStringNotStartedError","CPXMLParserTagNameMismatchError","CPXMLParserURIFragmentError","CPXMLParserURIRequiredError","CPXMLParserUndeclaredEntityError","CPXMLParserUnfinishedTagError","CPXMLParserUnknownEncodingError","CPXMLParserUnparsedEntityError","CPXMLParserXMLDeclNotFinishedError","CPXMLParserXMLDeclNotStartedError","CPXMLProcessingInstructionKind","CPXMLTextKind","CPYearCalendarUnit"],"type":"class","icon":"class"},{"items":["@implementation","@accessor","@end","@selector()","@import","@action","@outlet"],"type":"constant","icon":"constant"},{"items":["abort","abs","acos","add","addEventListener","addRule","alert","anchor","appendChild","apply","asin","atan","atan2","attachEvent","back","big","blink","blur","bold","call","ceil","charAt","charCodeAt","clearInterval","clearTimeout","click","cloneNode","close","concat","confirm","cos","createAttribute","createCaption","createComment","createDocumentFragment","createElement","createTextNode","createTFoot","createTHead","currentStyle","decodeURI","decodeURIComponent","deleteCaption","deleteCell","deleteRow","deleteRule","deleteTFoot","deleteTHead","detachEvent","dir","dispatchEvent","elementFromPoint","encodeURI","encodeURIComponent","eval","every","exec","exp","filter","find","fixed","floor","focus","fontcolor","fontsize","foreach","forward","fromCharCode","getAllResponseHeaders","getAttribute","getAttributeNode","getAttributeNodeNS","getAttributeNS","getComputedStyle","getDate","getDay","getElementById","getElementsByClassName","getElementsByName","getElementsByTagName","getElementsByTagNameNS","getFullYear","getHours","getMilliseconds","getMinutes","getMonth","getOwnPropertyNames","getResponseHeader","getSeconds","getTime","getTimezoneOffset","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getYear","go","hasAttribute","hasAttributeNS","hasAtrributes","hasChildNodes","hasOwnProperty","home","indexOf","insertAfter","insertBefore","insertCell","insertRow","insertRule","isFinite","isNaN","isPrototypeOf","italics","item","join","keys","lastIndexOf","link","localeCompare","log","map","match","max","min","moveBy","moveRow","moveTo","normalize","open","parse","parseInt","parseFloat","pop","pow","preventDefault","print","prompt","propertyIsEnumerable","push","querySelector","querySelectorAll","random","reload","remove","removeAttribute","removeAttributeNode","removeAttributeNS","removeChild","removeEventListener","removeRule","replace","replaceChild","reset","resizeBy","resizeTo","reverse","round","scrollBy","scrollIntoView","scrollTo","search","select","send","setAttribute","setAttributeNode","setAttributeNS","setDate","setFullYear","setHours","setInterval","setMilliseconds","setMinutes","setMonth","setRequestHeader","setSeconds","setTime","setTimeout","setUTCDate","setUTCDay","setUTCFullYear","setUTCHours","setUTCMilliseconds","setUTCMinutes","setUTCMonth","setUTCSeconds","setYear","shift","sin","sizeToContent","slice","small","some","sort","splice","split","sqrt","stop","stopImmediatePropagation","stopPropagation","strike","stringify","sub","substr","substring","submit","sup","supports","tan","test","toExponential","toFixed","toGMTString","toJSON","toLocaleString","toLocaleDateString","toLocaleTimeString","toLowerCase","toPrecision","toSource","toString","toUpperCase","toUTCString","trim","unshift","UTC","valueOf","write","writeln"],"type":"function","icon":"function"},{"items":["abbr","abbrevDate","abbreviation","abbreviationDictionary","abbreviationForDate:","abort","abortEditing","abortErr","abortModal","abortParsing","absolutePathForAppBundleWithIdentifier:","absoluteString","absoluteURL","absoluteX","absoluteY","absoluteZ","accClear","accCopy","accCursor","accCut","accEvent","accMenu","accPaste","accRun","accUndo","accelerometer: didAccelerate: ","accept","acceptCallID:error:","acceptCharset","acceptConnectionFromPeer:error:","acceptConnectionInBackgroundAndNotify","acceptConnectionInBackgroundAndNotifyForModes:","acceptContentsOfPasteboard:","acceptDraggingInfo:","acceptInputForMode: beforeDate:","acceptNode:","acceptableDragTypes","acceptedViewResourcePasteboardTypes","acceptsArrowKeys","acceptsBinary","acceptsColor:","acceptsColor: atPoint:","acceptsFirstMouse:","acceptsFirstResponder","acceptsGlyphInfo","acceptsMouseMovedEvents","acceptsResourcesFromPasteboard:","acceptsTypeFromPasteboard:","acceptsViewResourceFromPasteboard: forObject: atPoint:","accessException","accessInstanceVariablesDirectly","accessKey","accessibilityActionDescription:","accessibilityActionNames","accessibilityAttributeNames","accessibilityAttributeValue:","accessibilityAttributeValue: forParameter:","accessibilityContainer","accessibilityElementAtIndex:","accessibilityElementCount","accessibilityFocusedUIElement","accessibilityFrame","accessibilityHint","accessibilityHitTest:","accessibilityIsAttributeSettable:","accessibilityIsIgnored","accessibilityLabel","accessibilityParameterizedAttributeNames","accessibilityPerformAction:","accessibilitySetOverrideValue: forAttribute:","accessibilitySetValue: forAttribute:","accessibilityTraits","accessibilityValue","accessory","accessoryAction","accessoryControllers","accessoryDidDisconnect:","accessoryType","accessoryView","aceBadCmd","aceBadComp","aceBadDest","aceBadEncode","aceMemFull","aceNilBlock","aceSuccess","acoshl","acquireExclusiveAccess","acquireMediaReservation","action","actionDidFail","actionDidSucceed","actionForControlCharacterAtIndex:","actionForKey:","actionForKey: ","actionForKeyPath:","actionForLayer: forKey:","actionForLayer: forKey: ","actionMonitorWithResource: action:","actionMonitorWithResource: action: parameters:","actionMonitors","actionProperty","actionSheet: clickedButtonAtIndex: ","actionSheet: didDismissWithButtonIndex: ","actionSheet: willDismissWithButtonIndex: ","actionSheetCancel: ","actionSheetStyle","actions","actionsForTarget: forControlEvent: ","activMask","activate","activate:","activateContextHelpMode:","activateEvt","activateIgnoringOtherApps:","activateMsg","activateServer:","activated","active","activeApplication","activeCPUPower","activeConversationChanged: toNewConversation:","activeConversationWillChange: fromOldConversation:","activeDocument","activeFlag","activeFlagBit","activePane","activeProcessorCount","activityIndicatorViewStyle","acuteUprA","acuteUprI","acuteUprO","acuteUprU","adbAddrMask","add:","add: before:","addAccessoryController:","addAction:","addAlarm:","addAlarms:","addAllowedUUID:","addAllowedUUIDArray:","addAnimation: forKey:","addAnimation: forKey: ","addAnnotation:","addAnnotations:","addApplicationParameterHeader: length:","addAttachmentData:mimeType:fileName:","addAttribute:","addAttribute: value: range:","addAttributes: range:","addAuthorizationChallengeHeader: length:","addAuthorizationResponseHeader: length:","addBezierPath:","addBodyHeader: length: endOfBody:","addButtonWithTitle:","addButtonWithTitle: ","addByteSequenceHeader: length:","addCacheNodes:","addChapters: withAttributes: error:","addCharactersInRange:","addCharactersInString:","addChild:","addChildWindow: ordered:","addChildrenFromDraggingInfo: ofType: toObject:","addChildrenFromPasteboard: ofType: toObject:","addClient:","addClip","addCollection: options:","addColumn","addColumnWithCells:","addConnection: toRunLoop: forMode:","addConnectionIDHeader: length:","addConnector:","addConstraint:","addCountHeader:","addCursorRect: cursor:","addDependency:","addDescriptionHeader:","addDocument:","addEntriesFromDictionary:","addEntry:","addEventListener:","addEventListener: listener: useCapture:","addException:","addFeed:","addFeedWithURL:","addFileWithPath:","addFileWrapper:","addFilterPredicate:","addFontDescriptors: toCollection:","addFontTrait:","addHTTPHeader: length:","addImage: forDuration: withAttributes:","addImageDescriptorHeader: length:","addImageHandleHeader:","addIndex:","addIndexes:","addIndexesInRange:","addInput: error:","addInputPortWithType: forKey: withAttributes:","addInspectorModeWithIdentifier:","addItem:","addItemWithObjectValue:","addItemWithTitle:","addItemWithTitle: action: keyEquivalent:","addItems:","addItemsWithObjectValues:","addItemsWithTitles:","addLayoutManager:","addLengthHeader:","addMarker:","addMedium","addMember:","addNameHeader:","addNamespace:","addNetworkData","addObject:","addObject: toParent:","addObjectClassHeader: length:","addObjects:","addObjectsFromArray:","addObserver: forKeyPath: options: context:","addObserver: selector: name: object:","addObserver: selector: name: object: suspensionBehavior:","addObserver: toObjectsAtIndexes: forKeyPath: options: context:","addOperation:","addOutput: error:","addOutputPortWithType: forKey: withAttributes:","addPayment:","addPersistentStoreWithType: configuration: URL: options: error:","addPersistentStoreWithType:configuration:URL:options:error:","addPointer:","addPort: forMode:","addProgressMark:","addPropertiesAndTypes:","addProperty:","addRecord:","addRefFailed","addRegularFileWithContents: preferredFilename:","addRepresentation:","addRepresentations:","addRequestMode:","addResFailed","addResources:","addResourcesFromPasteboard:","addRow","addRow:","addRowWithCells:","addRunLoop:","addSaveOptionsAccessoryViewToSavePanel:","addScaled:","addSelectedObjects:","addSelection:","addSelectionIndexPaths:","addSelectionIndexes:","addSelections:","addSize","addSizeBit","addSpeechDictionary:","addSubgroup:","addSublayer:","addSublayer: ","addSubresource:","addSubview:","addSubview: ","addSubview: positioned: relativeTo:","addSuiteNamed:","addSymbolicLinkWithDestination: preferredFilename:","addTabStop:","addTabViewItem:","addTableColumn:","addTarget: action: forControlEvents: ","addTargetHeader: length:","addTemporaryAttribute: value: forCharacterRange:","addTemporaryAttributes: forCharacterRange:","addTest:","addTestRun:","addTestsEnumeratedBy:","addTextContainer:","addTime4ByteHeader:","addTimeISOHeader: length:","addTimeInterval:","addTimer: forMode:","addToFavorites","addToolTipRect: owner: userData:","addTrackingArea:","addTrackingRect: owner: userData: assumeInside:","addTransactionObserver:","addTypeHeader:","addTypes: owner:","addUpdateRect:","addUserDefinedHeader: length:","addValue: forHTTPHeaderField:","addValue: withLabel:","addWhoHeader: length:","addWindowController:","addWindowsItem: title: filename:","additive","addresmenu","address","addressAsString","addressBook","addressDictionary","addressed","addresses","adjustPageHeightNew: top: bottom: limit:","adjustPageWidthNew: left: right: limit:","adjustScroll:","adjustSubviews","adjustsFontSizeToFitWidth","adjustsImageWhenDisabled","adjustsImageWhenHighlighted","administrativeArea","adobeRGB1998ColorSpace","adoptNode:","advancementForGlyph:","aeDesc","aeteResource:","affectedStores","affineTransform","afmDictionary","afpAccessDenied","afpAlreadyLoggedInErr","afpAlreadyMounted","afpAuthContinue","afpBadDirIDType","afpBadIDErr","afpBadUAM","afpBadVersNum","afpBitmapErr","afpCallNotAllowed","afpCallNotSupported","afpCantMountMoreSrvre","afpCantMove","afpCantRename","afpCatalogChanged","afpContainsSharedErr","afpDenyConflict","afpDiffVolErr","afpDirNotEmpty","afpDirNotFound","afpDiskFull","afpEofError","afpFileBusy","afpFlatVol","afpIDExists","afpIDNotFound","afpIconTypeError","afpInsideSharedErr","afpInsideTrashErr","afpItemNotFound","afpLockErr","afpMiscErr","afpNoMoreLocks","afpNoServer","afpObjectExists","afpObjectLocked","afpObjectNotFound","afpObjectTypeErr","afpParmErr","afpPwdExpiredErr","afpPwdNeedsChangeErr","afpPwdPolicyErr","afpPwdSameErr","afpPwdTooShortErr","afpRangeNotLocked","afpRangeOverlap","afpSameNodeErr","afpSameObjectErr","afpServerGoingDown","afpSessClosed","afpTooManyFilesOpen","afpUserNotAuth","afpVolLocked","alarm","albumsQuery","alertShowHelp:","alertStyle","alertView: clickedButtonAtIndex: ","alertView: didDismissWithButtonIndex: ","alertView: willDismissWithButtonIndex: ","alertViewCancel: ","alertWithError:","alertWithMessageText: defaultButton: alternateButton: otherButton: informativeTextWithFormat:","aliases","align","alignCenter:","alignJustified:","alignLeft:","alignRight:","alignment","alignmentRect","allBundles","allClientBundleIdentifiers","allCollectionAttributes","allCompositions","allConnections","allConnectors","allControlEvents","allCredentials","allFrameworks","allHTTPHeaderFields","allHeaderFields","allKeys","allKeysForObject:","allObjects","allServices","allTargets","allTouches","allValues","alloc","allocWithZone:","allocateGState","allocatePacket","allowedFileTypes","allowedInputSourceLocales","allowedTypes","allowsActions","allowsAddingToAddressBook","allowsAltDragging","allowsAnimatedImageLooping","allowsAnimatedImages","allowsBranchSelection","allowsColumnReordering","allowsColumnResizing","allowsColumnSelection","allowsCopying","allowsCutCopyPaste","allowsDocumentBackgroundColorChange","allowsDragging","allowsDuplicatesInToolbar","allowsEditing","allowsEditingTextAttributes","allowsEmptySelection","allowsFloats","allowsGroupSelection","allowsImageEditing","allowsKeyedCoding","allowsMixedState","allowsMultipleSelection","allowsNaturalLanguage","allowsNonContiguousLayout","allowsOtherFileTypes","allowsPickingMultipleItems","allowsPrinting","allowsReordering","allowsReverseTransformation","allowsScrolling","allowsSelection","allowsSelectionDuringEditing","allowsTickMarkValuesOnly","allowsToggleToOff","allowsToolTipsWhenApplicationIsInactive","allowsTruncatedLabels","allowsTypeSelect","allowsUndo","allowsUserCustomization","alpha","alphaComponent","alphaControlAddedOrRemoved:","alphaLock","alphaLockBit","alphaStage","alphaValue","alphanumericCharacterSet","alt","altDBoxProc","altIncrementValue","altKey","alternateImage","alternateMnemonic","alternateMnemonicLocation","alternateName","alternateSelectedControlColor","alternateSelectedControlTextColor","alternateTitle","altersStateOfSelectedItem","altitude","alwaysBounceHorizontal","alwaysBounceVertical","alwaysShowsDecimalSeparator","alwaysUsesMultipleValuesMarker","ampCmd","ancestorSharedWithView:","anchorPoint","anchorPointZ","anchors","andPredicateWithSubpredicates:","animate:","animateOneFrame","animates","animatesDrop","animation","animation: didReachProgressMark:","animation: valueForProgress:","animationBlockingMode","animationCurve","animationDelay","animationDidEnd:","animationDidStart:","animationDidStart: ","animationDidStop:","animationDidStop: finished:","animationDidStop: finished: ","animationDuration","animationForKey:","animationForKey: ","animationImages","animationKeys","animationRepeatCount","animationResizeTime:","animationShouldStart:","animationTimeInterval","animationTimingFunction","animationWithKeyPath:","animationWithKeyPath: ","animations","animator","annotation","annotationAtPoint:","annotationSelected: forCandidate:","annotationVisibleRect","annotations","annuity","anyCodec","anyObject","apertureModeDimensionsForMode:","app1Evt","app1Mask","app2Evt","app2Mask","app3Evt","app3Mask","app4Evt","app4Mask","appIsDaemon","appMemFullErr","appModeErr","appVersionTooOld","appearanceBadBrushIndexErr","appearanceBadCursorIndexErr","appearanceBadTextColorIndexErr","appearanceProcessNotRegisteredErr","appearanceProcessRegisteredErr","appearanceThemeHasNoAccents","appendAttributedString:","appendBezierPath:","appendBezierPathWithArcFromPoint:","appendBezierPathWithArcWithCenter: radius:","appendBezierPathWithGlyph: inFont:","appendBezierPathWithGlyphs: count:","appendBezierPathWithOvalInRect:","appendBezierPathWithPackedGlyphs:","appendBezierPathWithPoints: count:","appendBezierPathWithRect:","appendBezierPathWithRoundedRect: xRadius: yRadius:","appendBytes: length:","appendChild:","appendDITLBottom","appendDITLRight","appendData:","appendFormat:","appendMedium:","appendSelectionFromMovie:","appendString:","appendTransform:","appendable","appendable:","appleEvent","appleEventClassCode","appleEventCode","appleEventCodeForArgumentWithName:","appleEventCodeForKey:","appleEventCodeForReturnType","appleEventCodeForSuite:","appleEventForSuspensionID:","appleEventWithEventClass: eventID: targetDescriptor: returnID: transactionID:","appleLogo","appleScriptEventHandlerNames","appleScriptObjectID","appleScriptObjectName","appleScriptScriptName","appleScriptScriptScope","applelabel","applets","application:","application: delegateHandlesKey:","application: didChangeStatusBarFrame: ","application: didChangeStatusBarOrientation: ","application: handleOpenURL: ","application: openFile:","application: openFileWithoutUI:","application: openFiles:","application: openTempFile:","application: printFile:","application: printFiles:","application: printFiles: withSettings: showPrintPanels:","application: willChangeStatusBarFrame: ","application: willChangeStatusBarOrientation: duration: ","application: willPresentError:","application:didFailToRegisterForRemoteNotificationsWithError:","application:didFinishLaunchingWithOptions:","application:didReceiveRemoteNotification:","application:didRegisterForRemoteNotificationsWithDeviceToken:","applicationClient","applicationDidBecomeActive:","applicationDidBecomeActive: ","applicationDidChangeScreenParameters:","applicationDidFinishLaunching:","applicationDidFinishLaunching: ","applicationDidHide:","applicationDidReceiveMemoryWarning: ","applicationDidResignActive:","applicationDidUnhide:","applicationDidUpdate:","applicationDockMenu:","applicationFrame","applicationHandle","applicationIconBadgeNumber","applicationIconForInterfaceStyle:","applicationIconImage","applicationIdentifier","applicationInfo","applicationMusicPlayer","applicationNameForUserAgent","applicationOpenUntitledFile:","applicationShouldHandleReopen: hasVisibleWindows:","applicationShouldOpenUntitledFile:","applicationShouldTerminate:","applicationShouldTerminateAfterLastWindowClosed:","applicationSignificantTimeChange: ","applicationSupportsShakeToEdit","applicationWillBecomeActive:","applicationWillFinishLaunching:","applicationWillHide:","applicationWillResignActive:","applicationWillResignActive: ","applicationWillTerminate:","applicationWillTerminate: ","applicationWillUnhide:","applicationWillUpdate:","appliesImmediately","apply:","apply: arguments:","applyChange: forEntityName: remappedRecordIdentifier: formattedRecord: error:","applyFontTraits: range:","applyStyle:","applyToContext:","archive","archiveRootObject: toFile:","archivedDataWithRootObject:","archiver: didEncodeObject:","archiver: willEncodeObject:","archiver: willReplaceObject: withObject:","archiverData","archiverDidFinish:","archiverWillFinish:","areAnimationsEnabled","areCursorRectsEnabled","arePlugInsEnabled","areStepButtonsVisible","areZoomButtonsVisible","areaOfInterestForMouse:","areas","argumentNames","arguments","argumentsRetained","arrangeInFront:","arrangeObjects:","arrangedObjects","array","arrayByAddingObject:","arrayByAddingObjectsFromArray:","arrayByApplyingSelector:","arrayByApplyingSelector: withObject:","arrayForKey:","arrayOfCDTextBlocksFromPacks:","arrayWithArray:","arrayWithCapacity:","arrayWithContentsOfFile:","arrayWithContentsOfURL:","arrayWithObject:","arrayWithObjects:","arrayWithObjects: NS_REQUIRES_NIL_TERMINATION","arrayWithObjects: count:","arrowCursor","arrowPosition","arrowsPosition","artistsQuery","ascender","ascending","asiAliasName","asiParentName","asiServerName","asiVolumeName","asiZoneName","asinhl","aspBadVersNum","aspBufTooSmall","aspNoAck","aspNoMoreSess","aspNoServers","aspParamErr","aspServerBusy","aspSessClosed","aspSizeErr","aspTooMany","aspectRatio","assignMainView","assignObject: toPersistentStore:","assignObject:toPersistentStore:","associateObject: ofType: withView:","associateSourceInstance: withDestinationInstance: forEntityMapping:","associateSourceInstance:withDestinationInstance:forEntityMapping:","asyncTrpBit","atan2l","atanhl","atomIndexInvalidErr","atomsNotOfSameTypeErr","atpBadRsp","atpLenErr","attachColorList:","attachCurrentThread","attachDebuggerClient","attachInterface","attachObject: toParent:","attachObjects: toParent:","attachPopUpWithFrame: inView:","attachSubmenuForItemAtIndex:","attachToCurrentThread","attachToDataLinkLayer","attachedMenu","attachedMenuView","attachedSheet","attachment","attachmentCell","attachmentSizeForGlyphAtIndex:","attemptRecoveryFromError: optionIndex:","attemptRecoveryFromError: optionIndex: delegate: didRecoverSelector: contextInfo:","attrChange","attrName","attr_height","attr_href","attr_src","attr_width","attribute","attribute: atIndex: effectiveRange:","attribute: atIndex: longestEffectiveRange: inRange:","attributeDeclarationForName: elementName:","attributeDescriptorForKeyword:","attributeForKey:","attributeForLocalName: URI:","attributeForName:","attributeIsReadOnly:","attributeKeys","attributeMappings","attributeRuns","attributeType","attributeValueClassName","attributeValueKindBoolean","attributeValueKindCaseSensEnum","attributeValueKindCharString","attributeValueKindColor","attributeValueKindEnum","attributeValueKindInteger","attributeValueKindOnOff","attributeValueKindPercent","attributeWithName: URI: stringValue:","attributeWithName: stringValue:","attributedAlternateTitle","attributedString","attributedStringForIdentityPropertiesWithNames: inRecord: comparisonRecords: firstLineAttributes: secondLineAttributes:","attributedStringForNil","attributedStringForNotANumber","attributedStringForObjectValue: withDefaultAttributes:","attributedStringForPropertiesWithNames: inRecord: comparisonRecords: defaultAttributes:","attributedStringForZero","attributedStringValue","attributedStringWithAttachment:","attributedSubstringForProposedRange: actualRange:","attributedSubstringFromRange:","attributedTitle","attributes","attributesAtIndex: effectiveRange:","attributesAtIndex: longestEffectiveRange: inRange:","attributesByName","attributesForCharacterIndex: lineHeightRectangle:","attributesForExtraLineFragment","attributesForPropertyPortWithKey:","attributesForVoice:","attributesOfFileSystemForPath: error:","attributesOfItemAtPath: error:","audioAllChannels","audioDevice: deviceConnectionClosed:","audioDevice: deviceConnectionOpened:","audioDevice: rfcommChannelClosed:","audioDevice: rfcommChannelOpened:","audioDevice: scoConnectionClosed:","audioDevice: scoConnectionOpened:","audioDevice: serviceLevelConnectionClosed:","audioDevice: serviceLevelConnectionComplete:","audioDevice: serviceLevelConnectionOpened:","audioDeviceChannels","audioDeviceUID","audioDoesIndependentChannels","audioDoesMono","audioDoesStereo","audioLeftChannel","audioMuted","audioRecorderBeginInterruption:","audioRecorderDidFinishRecording:successfully:","audioRecorderEncodeErrorDidOccur:error:","audioRecorderEndInterruption:","audioRightChannel","audioUnit","audioUnmuted","audiobooksQuery","authFailErr","authenticateComponents: withData:","authenticateWithPassword:","authenticationDataForComponents:","authenticationMethod","authenticator","authenticatorDidAuthenticate:","authenticatorDidNotAuthenticate:","authorization","authorizationRef","authorizationRights","authorizationState","authorizationViewCreatedAuthorization:","authorizationViewDidAuthorize:","authorizationViewDidDeauthorize:","authorizationViewReleasedAuthorization:","authorizationViewShouldDeauthorize:","authorizationWithFlags: rights: environment:","authorize:","autoKey","autoKeyMask","autoSaveTextFields","autoScales","autoTrack","autocapitalizationType","autocorrectionType","autoenablesItems","autohidesScrollers","automaticRearrangementKeyPaths","automaticallyNotifiesObserversForKey:","automaticallyPreparesContent","automaticallyRearrangesObjects","autoplay","autorecalculatesKeyViewLoop","autorelease","autoreleasedObjectCount","autorepeat","autoresizesAllColumnsToFit","autoresizesOutlineColumn","autoresizesSubviews","autoresizingMask","autoreverses","autosaveDocumentWithDelegate: didAutosaveSelector: contextInfo:","autosaveExpandedItems","autosaveName","autosaveTableColumns","autosavedContentsFileURL","autosaves","autosavesConfiguration","autosavingDelay","autosavingFileType","autoscroll:","autosizesCells","autostartsRendering","autovalidates","auxiliaryExportDataUnavailable","available","availableCmd","availableColorLists","availableData","availableFontFamilies","availableFontNamesMatchingFontDescriptor:","availableFontNamesWithTraits:","availableFonts","availableLanguages","availableLocaleIdentifiers","availableMediaTypesForSourceType:","availableMembersOfFontFamily:","availableResourceData","availableStringEncodings","availableTypeFromArray:","availableVideoPreviewConnections","availableVoices","averagePowerForChannel:","avoidsEmptySelection","awakeAfterUsingCoder:","awakeFromBundle","awakeFromDocument:","awakeFromFetch","awakeFromInsert","awakeFromNib","awakeFromSnapshotEvents:","awtMessage: message: env:","axis","azimuth","bAccessCntl","bAllowCDiDataHandler","bAncestorModDateChanges","bChargerIsAttached","bDoNotDisplay","bHandleAERecording","bHasBTreeMgr","bHasBlankAccessPrivileges","bHasCatSearch","bHasCopyFile","bHasDesktopMgr","bHasDirectIO","bHasExtFSVol","bHasFileIDs","bHasFolderLock","bHasMoveRename","bHasOpenDeny","bHasPersonalAccessPrivileges","bHasShortName","bHasUserGroupList","bIsAutoMounted","bIsCasePreserving","bIsCaseSensitive","bIsEjectable","bIsOnExternalBus","bIsOnInternalBus","bIsRemovable","bL2PCanMapFileBlocks","bLanguageMask","bLimitFCBs","bLocalWList","bNoBootBlks","bNoDeskItems","bNoLclSync","bNoMiniFndr","bNoRootTimes","bNoSwitchTo","bNoSysDir","bNoVNEdit","bNoVolumeSizes","bParentModDateChanges","bScriptLanguageMask","bScriptMask","bSourceCanBeCharged","bSourceIsAC","bSourceIsAvailable","bSourceIsBattery","bSourceIsCharging","bSourceIsUPS","bSourceProvidesWarnLevels","bSupports2TBFiles","bSupportsAsyncRequests","bSupportsExclusiveLocks","bSupportsExtendedFileSecurity","bSupportsFSCatalogSearch","bSupportsFSExchangeObjects","bSupportsHFSPlusAPIs","bSupportsJournaling","bSupportsLongNames","bSupportsMultiScriptNames","bSupportsNamedForks","bSupportsSubtreeIterators","bSupportsSymbolicLinks","bSupportsTrashVolumeCache","bTakeActiveEvent","bTrshOffLine","backBarButtonItem","backForwardList","backItem","backListCount","backListWithLimit:","background","backgroundAttachment","backgroundColor","backgroundColors","backgroundFilters","backgroundImage","backgroundImageForState: ","backgroundLayoutEnabled","backgroundLoadDidFailWithReason:","backgroundPosition","backgroundRectForBounds: ","backgroundRepeat","backgroundStyle  ","backgroundView","backingLocation","backingStoreType","backingType","badATPSkt","badBtSlpErr","badBuffNum","badCallOrderErr","badChannel","badCksmErr","badCodecCharacterizationErr","badComponentInstance","badComponentSelector","badComponentType","badControllerHeight","badDBtSlp","badDCksum","badDataRefIndex","badDelim","badDepthErr","badDictFormat","badDragFlavorErr","badDragItemErr","badDragRefErr","badEditIndex","badEditList","badEditionFileErr","badEnding","badExtResource","badFCBErr","badFidErr","badFileFormat","badFolderDescErr","badFormat","badImageDescription","badImageErr","badImageRgnErr","badInputText","badLocNameErr","badMDBErr","badMovErr","badPortNameErr","badProfileError","badPublicMovieAtom","badReqErr","badRoutingSizeErr","badSGChannel","badScrapRefErr","badSectionErr","badServiceMethodErr","badSubPartErr","badTrackIndex","badTranslationSpecErr","badUnitErr","badgeLabel","badgeValue","bandinfo","bannerText","barStyle","baseDblQuote","baseName","baseOfTypesetterGlyphInfo","baseSingQuote","baseSpecifier","baseURL","baseWritingDirection","baselineAdjustment","baselineDeltaForCharacterAtIndex:","baselineLocation","baselineOffsetInLayoutManager: glyphIndex:","batteryCharging","batteryDeadBit","batteryDeadMask","batteryInstalled","batteryLevel","batteryLowBit","batteryLowMask","batteryMonitoringEnabled","batteryState","bdNamErr","becomeFirstResponder","becomeKeyWindow","becomeMainWindow","becomesKeyOnlyIfNeeded","begin","beginAnimations: context: ","beginAuthentication:","beginCustomizingItems: ","beginDocument","beginEditing","beginEntityMapping: manager: error:","beginEntityMapping:manager:error:","beginFindString: withOptions:","beginFindStrings: withOptions:","beginForDirectory: file: types: modelessDelegate: didEndSelector: contextInfo:","beginFrameAtTime: timeStamp:","beginGeneratingDeviceOrientationNotifications","beginGeneratingLibraryChangeNotifications","beginGeneratingPlaybackNotifications","beginGrouping","beginIgnoringInteractionEvents","beginImagePickerSheetForWindow: withDelegate: didEndSelector: contextInfo:","beginImagePickerWithDelegate: didEndSelector: contextInfo:","beginInterruption","beginLineWithGlyphAtIndex:","beginLoadInBackground","beginLoadingImageDataForClient:","beginModalSessionForWindow:","beginModalSessionForWindow: relativeToWindow:","beginPageInRect: atPlacement:","beginParagraph","beginPictureTakerSheetForWindow: withDelegate: didEndSelector: contextInfo:","beginPictureTakerWithDelegate: didEndSelector: contextInfo:","beginProgressPanelForBurn: layout:","beginProgressPanelForErase:","beginProgressSheetForBurn: layout: modalForWindow:","beginProgressSheetForErase: modalForWindow:","beginSeekingBackward","beginSeekingForward","beginSessionInBackgroundWithClient: entityNames: target: selector:","beginSessionInBackgroundWithClient: entityNames: target: selector: lastAnchors: ","beginSessionWithClient: entityNames: beforeDate:","beginSessionWithClient: entityNames: beforeDate: lastAnchors: ","beginSetupSheetForWindow: modalDelegate: didEndSelector: contextInfo:","beginSheet: modalForWindow: modalDelegate: didEndSelector: contextInfo:","beginSheetForDirectory: file: modalForWindow: modalDelegate: didEndSelector: contextInfo:","beginSheetForDirectory: file: types: modalForWindow: modalDelegate: didEndSelector: contextInfo:","beginSheetForWindow: modalDelegate: didEndSelector: contextInfo: certificates: showGroup:","beginSheetForWindow: modalDelegate: didEndSelector: contextInfo: identities: message:","beginSheetForWindow: modalDelegate: didEndSelector: contextInfo: settings: keychain:","beginSheetForWindow: modalDelegate: didEndSelector: contextInfo: trust: message:","beginSheetForWindow: modalDelegate: didEndSelector: contextInfo: trust: showGroup:","beginSheetModalForWindow: ","beginSheetModalForWindow: modalDelegate: didEndSelector: contextInfo:","beginSheetWithOptions: modalForWindow: modalDelegate: didEndSelector: contextInfo:","beginSheetWithPrintInfo: modalForWindow: delegate: didEndSelector: contextInfo:","beginTime","beginTrackingWithTouch: withEvent: ","beginUndoGrouping","beginUpdates","beginWithOptions: modelessDelegate: didEndSelector: contextInfo:","behavior","bestCompressionCodec","bestFidelityCodec","bestRepresentationForDevice:","bestSpeedCodec","betaStage","bezelStyle","bezierPath","bezierPathByFlatteningPath","bezierPathByReversingPath","bezierPathWithOvalInRect:","bezierPathWithRect:","bezierPathWithRoundedRect: xRadius: yRadius:","bgColor","bidiProcessingEnabled","bind: toObject: withKeyPath: options:","bindTextureRepresentationToCGLContext:_ctx textureUnit: normalizeCoordinates:","bitmapData","bitmapFormat","bitmapImageRepForCachingDisplayInRect:","bitmapRepresentation","bitsPerPixel","bitsPerSample","blackColor","blackComponent","blendedColorWithFraction: ofColor:","blocksOtherRecognizers","blue","blueColor","blueComponent","blur","bm12Cursor","bm18Cursor","bm34Cursor","bm38Cursor","body","boldSystemFontOfSize:","boldSystemFontOfSize: ","boolForKey:","boolValue","booleanForKey: inTable:","booleanValue","border","borderBottom","borderBottomColor","borderBottomStyle","borderBottomWidth","borderCollapse","borderColor","borderColorForEdge:","borderLeft","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRect","borderRectForBounds: ","borderRight","borderRightColor","borderRightStyle","borderRightWidth","borderSpacing","borderStyle","borderTop","borderTopColor","borderTopStyle","borderTopWidth","borderType","borderWidth","bottom","bottomMargin","bounces","bouncesZoom","boundingBox","boundingBoxForControlGlyphAtIndex: forTextContainer: proposedLineFragment: glyphPosition: characterIndex:","boundingRectForFont","boundingRectForGlyph:","boundingRectForGlyphRange: inTextContainer:","boundingRectWithSize: options:","boundingRectWithSize: options: attributes:","bounds","boundsForBox:","boundsForPage:","boundsRectForBlock: contentRect: inRect: textContainer: characterRange:","boundsRectForContentRect: inRect: textContainer: characterRange:","boundsRectForTextBlock: atIndex: effectiveRange:","boundsRectForTextBlock: glyphRange:","boundsRotation","boxType","branchImage","breakLineAtIndex:","breakLock","breakRecd","breakUndoCoalescing","breveMark","brightnessComponent","bringSubviewToFront: ","brownColor","browseDevices: options:","browseDevicesAsSheetForWindow:","browser: acceptDrop: atRow: column: dropOperation:","browser: canDragRowsWithIndexes: inColumn: withEvent:","browser: createRowsForColumn: inMatrix:","browser: draggingImageForRowsWithIndexes: inColumn: withEvent: offset:","browser: isColumnValid:","browser: namesOfPromisedFilesDroppedAtDestination: forDraggedRowsWithIndexes: inColumn:","browser: nextTypeSelectMatchFromRow: toRow: inColumn: forString:","browser: numberOfRowsInColumn:","browser: selectCellWithString: inColumn:","browser: selectRow: inColumn:","browser: shouldShowCellExpansionForRow: column:","browser: shouldSizeColumn: forUserResize: toWidth:","browser: shouldTypeSelectForEvent: withCurrentSearchString:","browser: sizeToFitWidthOfColumn:","browser: titleOfColumn:","browser: typeSelectStringForRow: inColumn:","browser: validateDrop: proposedRow: column: dropOperation:","browser: willDisplayCell: atRow: column:","browser: writeRowsWithIndexes: inColumn: toPasteboard:","browserColumnConfigurationDidChange:","browserDidScroll:","browserWillScroll:","bsdName","btDupRecErr","btKeyAttrErr","btKeyLenErr","btNoSpace","btRecNotFnd","btnCtrl","btnState","btnStateBit","bubbles","buf2SmallErr","bufTooSmall","bufferBaseAddress","bufferBytesPerRow","bufferCmd","bufferColorSpace","bufferIsSmall","bufferPixelFormat","bufferPixelsHigh","bufferPixelsWide","buffersTooSmall","builtInPlugInsPath","bundle","bundleForClass:","bundleForSuite:","bundleIdentifier","bundlePath","bundleWithIdentifier:","bundleWithPath:","burnForDevice:","burnObject","burnProgressPanel: burnDidFinish:","burnProgressPanelDidFinish:","burnProgressPanelWillBegin:","burnSpeed:","button","buttonFontSize","buttonMask","buttonMsg","buttonNumber","buttonPressed:","buttonTitleAtIndex: ","buttonToolTip","buttonType","buttonWithType: ","buttons","byValue","bytes","bytesPerPlane","bytesPerRow","c2pstr","c2pstrcpy","cAccessoryProcess","cAccessorySuitcase","cAddress","cAliasFile","cAliasList","cAliasOrString","cApplicationFile","cApplicationProcess","cApril","cAugust","cBodyColor","cClassIdentifier","cClippingFile","cClippingWindow","cClosure","cCoerceKataHiragana","cCoerceLowerCase","cCoerceOneByteToTwoByte","cCoerceRemoveDiacriticals","cCoerceRemoveHyphens","cCoerceRemovePunctuation","cCoerceRemoveWhiteSpace","cCoerceSmallKana","cCoerceUpperCase","cCoerceZenkakuhankaku","cCoercion","cConstant","cContainer","cContainerWindow","cContentSpace","cControlPanelFile","cDTPWindow","cDecember","cDepthErr","cDeskAccessoryFile","cDesktop","cDesktopPrinter","cDevErr","cDocumentFile","cEntireContents","cEventIdentifier","cFebruary","cFolder","cFontFile","cFontSuitcase","cFrameColor","cFriday","cGroup","cHandleBreakpoint","cHandler","cIconFamily","cInfoWindow","cInternalFinderObject","cJanuary","cKeyForm","cKeyIdentifier","cLabel","cLinkedList","cListElement","cListOrRecord","cListOrString","cListRecordOrString","cMachine","cMarch","cMatchErr","cMissingValue","cMonday","cMonth","cNoMemErr","cNovember","cNumber","cNumberDateTimeOrString","cNumberOrDateTime","cNumberOrString","cObjectBeingExamined","cOctober","cOnlineDisk","cOnlineLocalDisk","cOnlineRemoteDisk","cPackage","cPreferences","cPreferencesWindow","cPreposition","cProcedure","cProcess","cProtectErr","cRangeErr","cRawData","cRecord","cReference","cResErr","cRunningAddress","cSaturday","cScript","cSeconds","cSeptember","cSharableContainer","cSharingPrivileges","cSharingWindow","cSmallReal","cSound","cSoundFile","cSpecialFolders","cStatusWindow","cStorage","cString","cStringClass","cStringLength","cStringUsingEncoding:","cSuitcase","cSunday","cSymbol","cTempMemErr","cTextColor","cThumbColor","cThursday","cTrash","cTuesday","cUndefined","cUserIdentifier","cVector","cWednesday","cWeekday","cWritingCodeInfo","cacheDepthMatchesImageDepth","cacheDisplayInRect: toBitmapImageRep:","cacheImageInRect:","cacheMode","cacheName","cacheNodeForObjectID:","cacheNodes","cachePolicy","cachedHandleForURL:","cachedResponse","cachedResponseForRequest:","cachesBezierPath","calArabicCivil","calArabicLunar","calCoptic","calGregorian","calJapanese","calJewish","calPersian","calcCRgns","calcCntlRgn","calcDrawInfo:","calcSize","calcThumbRgn","calculate","calculateSizeOfFile: fork: estimating:","calculationMode","calendar","calendarDate","calendarFormat","calendarIdentifier","calendarWithUID:","calendars","callBackAtDeferredTask","callBackAtExtremes","callBackAtInterrupt","callBackAtRate","callBackAtTime","callBackAtTimeBaseDisposed","callBackAtTimeJump","callBackCmd","callNotSupportedByNodeErr","callOldBits","callStackReturnAddresses","callStackReturnAddresses ","callStdBits","callWebScriptMethod: withArguments:","callbacks","callerSecuritySession","calloutOffset","canAcceptContentsOfPasteboard:","canAcceptDraggingInfo:","canAdd","canAddChild","canBeCompressedUsing:","canBeConvertedToEncoding:","canBeDisabled","canBeVisibleOnAllSpaces","canBecomeFirstResponder","canBecomeKeyView","canBecomeKeyWindow","canBecomeMainWindow","canBecomeVisibleWithoutLogin","canCancelContentTouches","canChooseDirectories","canChooseFiles","canCloseDocument","canCloseDocumentWithDelegate: shouldCloseSelector: contextInfo:","canCreateDirectories","canDragRowsWithIndexes: atPoint:","canDragRowsWithIndexes: inColumn: withEvent:","canDraw","canDrawInCGLContext:","canEditSelf","canExportSlideshowItemAtIndex:","canExportToApplication:","canFilterByProperty:","canGetBatteryTime","canGoBack","canGoForward","canGoToFirstPage","canGoToLastPage","canGoToNextPage","canGoToPreviousPage","canHandleRequest:","canHide","canInitWithData:","canInitWithDataReference:","canInitWithFile:","canInitWithPasteboard:","canInitWithRequest:","canInitWithURL:","canInsert","canInsertChild","canMakePayments","canMakeTextLarger","canMakeTextSmaller","canMakeTextStandardSize","canMovieExportAuxDataHandle","canMovieExportFiles","canMovieExportFromProcedures","canMovieExportHandles","canMovieExportValidateMovie","canMovieImportAvoidBlocking","canMovieImportDataReferences","canMovieImportFiles","canMovieImportHandles","canMovieImportInPlace","canMovieImportPartial","canMovieImportValidateDataReferences","canMovieImportValidateFile","canMovieImportValidateHandles","canMovieImportWithIdle","canOpenURL:","canPerformAction:withSender:","canPowerOffPCIBus","canPrintHeadersAndFooters","canProvideDocumentSource","canPullChangesForEntityName:","canPushChangesForEntityName:","canRedo","canRemove","canRemoveAllRows","canRenderWithCGLContext:_ctx","canResignFirstResponder","canResumeDownloadDecodedWithEncodingMIMEType:","canRun","canSelectHiddenExtension","canSelectNext","canSelectPrevious","canSendMail","canShowCallout","canShowMIMEType:","canShowMIMETypeAsHTML:","canSpawnSeparateThread","canStoreColor","canSubstituteForClass:","canUndo","canUpdateMovieFile","canWakeupOnRing","canZoomIn","canZoomOut","cancel","cancel:","cancelAllOperations","cancelAuthenticationChallenge:","cancelButtonCell","cancelButtonIndex","cancelButtonRectForBounds:","cancelComposition","cancelConnectToPeer:","cancelDownload","cancelFindString","cancelIncrementalLoad","cancelLoadInBackground","cancelLoadingImageDataForTag:","cancelMigrationWithError:","cancelMsg","cancelOperation:","cancelPerformSelector: target: argument:","cancelPerformSelectorsWithTarget:","cancelPreviousBeginSessionWithClient:","cancelPreviousPerformRequestsWithTarget:","cancelPreviousPerformRequestsWithTarget: selector: object:","cancelSyncing","cancelTracking","cancelTrackingWithEvent: ","cancelUserAttentionRequest:","cancelable","candidateSelected:","candidateSelectionChanged:","candidates:","cannotBeLeafAtomErr","cannotDeferErr","cannotFindAtomErr","cannotMakeContiguousErr","cannotMoveAttachedController","cannotSetWidthOfAttachedController","canonicalLocaleIdentifierFromString:","canonicalRequestForRequest:","canonicalXMLStringPreservingComments:","cantCreatePickerWindow","cantCreateSingleForkFile","cantDoThatInCurrentMode","cantEnableTrack","cantFindHandler","cantGetFlavorErr","cantLoadPackage","cantLoadPickMethodErr","cantLoadPicker","cantOpenHandler","cantPutPublicMovieAtom","cantReadUtilities","cantReceiveFromSynthesizerErr","cantReceiveFromSynthesizerOSErr","cantSendToSynthesizerErr","cantSendToSynthesizerOSErr","cantStepErr","capHeight","capabilityMask","capacity","capacityOfTypesetterGlyphInfo","capitalizeWord:","capitalizedLetterCharacterSet","capitalizedString","caption","captionSide","captureOutput: didFinishRecordingToOutputFileAtURL: forConnections: dueToError:","captureOutput: didOutputSampleBuffer: fromConnection:","captureOutput: didOutputVideoFrame: withSampleBuffer: fromConnection:","captureOutput: didStartRecordingToOutputFileAtURL: forConnections:","captureOutput: mustChangeOutputFileAtURL: forConnections: dueToError:","captureOutput: shouldChangeOutputFileAtURL: forConnections: dueToError:","captureOutput: willFinishRecordingToOutputFileAtURL: forConnections: dueToError:","captureOutput: willStartRecordingToOutputFileAtURL: forConnections:","captureSession","cascadeTopLeftFromPoint:","caseInsensitiveCompare:","caseSensitive","catChangedErr","catalogNameComponent","category","categoryChanged:","cautionIcon","cbNotFound","cbdsqr_","cdTextBlockWithLanguage: encoding:","cedilla","cell","cellAtIndex:","cellAtRow: column:","cellAttribute:","cellBackgroundColor","cellBaselineOffset","cellClass","cellForRowAtIndexPath: ","cellFrameAtRow: column:","cellFrameForTextContainer: proposedLineFragment: glyphPosition: characterIndex:","cellIndex","cellPadding","cellPrototype","cellSize","cellSizeForBounds:","cellSpacing","cellWillAltDragWithSize:","cellWithTag:","cells","cellsStyleMask","center","centerCoordinate","centerOffset","centerScanRect:","centerSelectionInVisibleArea:","centeredDot","century","certificate","certificatePanelShowHelp:","certificateView","certificates","ch","chOff","changeAttributes:","changeCaseOfLetter:","changeColor:","changeCount","changeCurrentDirectoryPath:","changeCurrentFolderBackward","changeCurrentFolderForwardToPath:","changeCurrentFolderToRoot","changeDocumentBackgroundColor:","changeEnumeratorForEntityNames:","changeFileAttributes: atPath:","changeFont:","changeInLength","changeSpelling:","changeWindowsItem: title: filename:","changeWithType: recordIdentifier: changes:","changedRecordsForEntityName: moreComing: error:","changedValues","changes","changesForEntityName: moreComing: error:","channelBusy","channelFlagDontOpenResFile","channelFlagHasDependency","channelNotBusy","channelPlayAllData","channelPlayFast","channelPlayHighQuality","channelPlayNormal","channelPlayPostConversion","channelPlayPostMix","channelPlayPreConversion","channelPlayPreMix","channels","chapterCount","chapterIndexForTime:","chapters","charCodeMask","charValue","character","characterAtIndex:","characterBoundsAtIndex:","characterCollection","characterEncoding","characterIdentifier","characterIndexAtPoint:","characterIndexForGlyphAtIndex:","characterIndexForInsertionAtPoint:","characterIndexForPoint:","characterIndexForPoint: tracking: inMarkedRange:","characterIsMember:","characterRangeForGlyphRange: actualGlyphRange:","characterSetWithBitmapRepresentation:","characterSetWithCharactersInString:","characterSetWithContentsOfFile:","characterSetWithRange:","characters","charactersIgnoringModifiers","charactersToBeSkipped","chargeOverFlowBit","chargeOverFlowMask","chargerConnBit","chargerConnMask","chargerConnected","charset","checkBoxProc","checkForRemovableMedia","checkGrammarOfString: startingAt: language: wrap: inSpellDocumentWithTag: details:","checkSpaceForParts","checkSpelling:","checkSpellingOfString: startingAt:","checkSpellingOfString: startingAt: language: wrap: inSpellDocumentWithTag: wordCount:","checkTextInDocument:","checkTextInRange: types: options:","checkTextInSelection:","check_string","check_tasklevel0","check_tasklevel0_string","checked","childAtIndex:","childCount","childEditor","childFrames","childNodes","childSpecifier","childWindows","children","childrenKeyPath","childrenKeyPathForNode:","childrenOfObject:","chkCtrl","choiceDictionaries","choiceDictionaryForIdentifier:","choices","chooseFilename:","chooseIdentityPanelShowHelp:","chooserID","chooserInitMsg","class","classAttributes","classCode","classDescription","classDescriptionForClass:","classDescriptionForKey:","classDescriptionWithAppleEventCode:","classDescriptionsInSuite:","classFallbacksForKeyedArchiver","classForArchiver","classForClassName:","classForCoder","classForKeyedArchiver","classForKeyedUnarchiver","classForPortCoder","classInspectorClassName","className","classNameDecodedForArchiveClassName:","classNameEncodedForTrueClassName:","classNameForClass:","classNamed:","classNamesForCodes","classOfDevice","class_addIvar  ","class_addMethod  ","class_addProtocol  ","class_conformsToProtocol  ","class_copyIvarList  ","class_copyMethodList  ","class_copyPropertyList  ","class_copyProtocolList  ","class_createInstance  ","class_getClassMethod  ","class_getClassVariable  ","class_getInstanceMethod  ","class_getInstanceSize  ","class_getInstanceVariable  ","class_getIvarLayout  ","class_getMethodImplementation  ","class_getMethodImplementation_stret  ","class_getName  ","class_getProperty  ","class_getSuperclass  ","class_getVersion  ","class_getWeakIvarLayout  ","class_isMetaClass  ","class_respondsToSelector  ","class_setIvarLayout  ","class_setSuperclass  ","class_setVersion  ","class_setWeakIvarLayout  ","cleanUpAfterDragOperation","cleanUpOperation","cleanupFileAfterBurn:","cleanupTrackAfterBurn:","cleanupTrackAfterVerification:","clear","clear:","clearAllowedUUIDs","clearAttributesCache","clearBuffer","clearButtonMode","clearButtonRectForBounds: ","clearCaches","clearColor","clearCurrentContext","clearDrawable","clearFoundDevices","clearGLContext","clearGlyphCache","clearInputQueue","clearRecentDocuments:","clearSearchField:","clearSelection","clearStartAnimation","clearStopAnimation","clearsContextBeforeDrawing","clearsFilterPredicateOnInsertion","clearsOnBeginEditing","click","clickCount","clickedColumn","clickedOnLink: atIndex:","clickedPathComponentCell","clickedRow","client","clientAcceptedChangesForRecordWithIdentifier: formattedRecord: newRecordIdentifier:","clientChangedRecordIdentifiers:","clientClose","clientCommittedAcceptedChanges","clientCommittedAcceptedChangesWithNextAnchors: ","clientDescriptionURL","clientDidResetEntityNames:","clientDied","clientFinishedPushingChangesWithNextAnchors: ","clientForBundleIdentifier:","clientHandleIncomingData:","clientIdentifier","clientInfoForRecordWithIdentifier:","clientLostRecordWithIdentifier: shouldReplaceOnNextSync:","clientRefusedChangesForRecordWithIdentifier:","clientType","clientView","clientWantsToPushAllRecordsForEntityNames:","clientWithIdentifier:","clientX","clientY","clip","clipRect:","clipsToBounds","clkRdErr","clkWrErr","clockComponentCmd","clockComponentType","cloneContents","cloneNode:","cloneRange","closErr","close","close:","closeAllDocuments","closeAllDocumentsWithDelegate: didCloseAllSelector: contextInfo:","closeChannel","closeConnection","closeDeviceConnection","closeEditor","closeFile","closePath","closeRFCOMMChannel","closeSCOConnection","closeSpellDocumentWithTag:","closeSubeditors","closeTransportConnection","closeTray","closedHandCursor","closestTickMarkValueToValue:","clrBit","cmCantConcatenateError","cmCantCopyModifiedV1Profile","cmCantDeleteElement","cmCantDeleteProfile","cmCantGamutCheckError","cmCantXYZ","cmElementTagNotFound","cmErrIncompatibleProfile","cmFatalProfileErr","cmIndexRangeErr","cmInvalidColorSpace","cmInvalidDstMap","cmInvalidProfile","cmInvalidProfileComment","cmInvalidProfileLocation","cmInvalidSearch","cmInvalidSrcMap","cmMethodError","cmMethodNotFound","cmNamedColorNotFound","cmNoCurrentProfile","cmNoGDevicesError","cmProfileError","cmProfileNotFound","cmProfilesIdentical","cmRangeOverFlow","cmSearchError","cmUnsupportedDataType","cmdKey","cmdKeyBit","cmpAliasNoFlags","cmpAliasOnlyThisFile","cmpIsMissing","cmpThreadSafe","cmpWantsRegisterMessage","code","codeBase","codeType","collectionVersionErr","collectionView","collectionWithItems:","collections","color","colorAtX: y:","colorForControlTint:","colorFromPasteboard:","colorListNamed:","colorNameComponent","colorPanel","colorRenderingIntent","colorSpace","colorSpaceModel","colorSpaceName","colorSyncNotInstalled","colorSyncProfile","colorUsingColorSpace:","colorUsingColorSpaceName:","colorUsingColorSpaceName: device:","colorWithAlphaComponent:","colorWithAlphaComponent: ","colorWithCGColor:","colorWithCGColor: ","colorWithCIColor:","colorWithCalibratedHue: saturation: brightness: alpha:","colorWithCalibratedRed: green: blue: alpha:","colorWithCalibratedWhite: alpha:","colorWithCatalogName: colorName:","colorWithColorSpace: components: count:","colorWithDeviceCyan: magenta: yellow: black: alpha:","colorWithDeviceHue: saturation: brightness: alpha:","colorWithDeviceRed: green: blue: alpha:","colorWithDeviceWhite: alpha:","colorWithHue: saturation: brightness: alpha: ","colorWithKey:","colorWithPatternImage:","colorWithPatternImage: ","colorWithRed: green: blue:","colorWithRed: green: blue: alpha:","colorWithRed: green: blue: alpha: ","colorWithString:","colorWithWhite: alpha: ","colorizeByMappingGray: toColor: blackMapping: whiteMapping:","colors","colorsRequestedErr","cols","columnAtPoint:","columnAutoresizingStyle","columnContentWidthForColumnWidth:","columnIndexesInRect:","columnNumber","columnOfMatrix:","columnResizingType","columnSpan","columnTitleForProperty:","columnWidthForColumnContentWidth:","columnWithIdentifier:","columnsAutosaveName","columnsInRect:","comboBox: completedString:","comboBox: indexOfItemWithStringValue:","comboBox: objectValueForItemAtIndex:","comboBoxCell: completedString:","comboBoxCell: indexOfItemWithStringValue:","comboBoxCell: objectValueForItemAtIndex:","comboBoxSelectionDidChange:","comboBoxSelectionIsChanging:","comboBoxWillDismiss:","comboBoxWillPopUp:","commandClassName","commandDescription","commandDescriptionWithAppleEventClass: andAppleEventCode:","commandDescriptionsInSuite:","commandName","commands","comment","commentURL","commentWithStringValue:","commit","commitAnimations","commitComposition","commitEditing","commitEditingWithDelegate: didCommitSelector: contextInfo:","committedValuesForKeys:","commonAncestorContainer","commonISOCurrencyCodes ","commonPrefixWithString: options:","compact","compare:","compare: options:","compare: options: range:","compare: options: range: locale:","compareBoundaryPoints:","compareBoundaryPoints: sourceRange:","compareObject: toObject:","comparisonPredicateModifier","comparisonType","compilationsQuery","compileAndReturnError:","compileScript:","compiledDataForType: usingStorageOptions: error:","complete:","completePathIntoString: caseSensitive: matchesIntoArray: filterTypes:","completedString:","completedTaskCount","completes","completionAction","completionAction:","completionDelay","completionsForPartialWordRange: inString: language: inSpellDocumentWithTag:","completionsForPartialWordRange: indexOfSelectedItem:","complex","componentAutoVersionIncludeFlags","componentDllEntryNotFoundErr","componentDllLoadErr","componentDoAutoVersion","componentDontRegister","componentHasMultiplePlatforms","componentInstance","componentLoadResident","componentNotCaptured","componentNotThreadSafeErr","componentWantsUnregister","components","components: fromDate:","components: fromDate: toDate: options:","componentsFromLocaleIdentifier:","componentsJoinedByString:","componentsSeparatedByCharactersInSet:","componentsSeparatedByString:","componentsToDisplayForPath:","composedString:","composersQuery","compositeIn","compositeToPoint: fromRect: operation:","compositeToPoint: fromRect: operation: fraction:","compositeToPoint: operation:","compositeToPoint: operation: fraction:","compositingFilter","compositingOperation","compositionAspectRatio","compositionAttributesAtRange:","compositionLayerWithComposition:","compositionLayerWithFile:","compositionParameterView: shouldDisplayParameterWithKey: attributes:","compositionPickerView","compositionPickerView: didSelectComposition:","compositionPickerViewDidStartAnimating:","compositionPickerViewWillStopAnimating:","compositionRenderer","compositionWithData:","compositionWithFile:","compositionWithIdentifier:","compositions","compositionsWithProtocols: andAttributes:","compound","compoundPredicateType","compoundTypes","compressionOptionsForConnection:","compressionOptionsIdentifiersForMediaType:","compressionOptionsWithIdentifier:","compressorComponentType","computedStyleForElement: pseudoElement:","concat","concludeDragOperation:","condense","condition","configurationDictionary","configurationForVendor:","configurationName","configurations","configureAsServer","configureInterface","configurePersistentStoreCoordinatorForURL: ofType: error:","configurePersistentStoreCoordinatorForURL: ofType: modelConfiguration: storeOptions: error:","configureSheet","conformsToProtocol:","connChangedBit","connChangedMask","connectAction: ofSourceObject: toDestinationObject:","connectBinding: ofSourceObject: toDestinationObject: keyPath: options:","connectDestination","connectInspectorClassName","connectObject: withKey: toObject: withKey:","connectOutlet: ofSourceObject: toDestinationObject:","connectSource","connectToFTPService","connectToObjectPushService","connectToPeer:withTimeout:","connected","connectedAccessories","connection","connection: didCancelAuthenticationChallenge:","connection: didFailWithError:","connection: didReceiveAuthenticationChallenge:","connection: didReceiveData:","connection: didReceiveResponse:","connection: handleRequest:","connection: shouldMakeNewConnection:","connection: willCacheResponse:","connection: willSendRequest: redirectResponse:","connection:canAuthenticateAgainstProtectionSpace:","connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:","connection:needNewBodyStream:","connectionAttributes","connectionComplete: status:","connectionDidClose:","connectionDidFinishLoading:","connectionDidNotOpen: withError:","connectionDidOpen:","connectionForProxy","connectionID","connectionInvalid","connectionShouldUseCredentialStorage:","connectionTypesMask","connectionWithReceivePort: sendPort:","connectionWithRegisteredName: host:","connectionWithRegisteredName: host: usingNameServer:","connectionWithRequest: delegate:","connections","connectorsForDestination:","connectorsForSource:","connectorsForSource: ofClass:","constantValue","constants","constrainFrameRect: toScreen:","constrainScrollPoint:","constrainsToOriginalSize","constraintReachedErr","constraintWithAttribute:","consumeImageData: forTag:","containerAlreadyOpenWrn","containerClassDescription","containerIsObjectBeingTested","containerIsRangeContainerObject","containerNotFoundWrn","containerSize","containerSpecifier","containsAttachments","containsDataElement:","containsFileAtPath:","containsIndex:","containsIndexes:","containsIndexesInRange:","containsItem:","containsObject:","containsObjectWithName: forParent:","containsPasteboardTypes:","containsPasteboardTypes:inItemSet:","containsPoint:","containsPoint: ","containsValue:","containsValueForKey:","contended","content","contentAspectRatio","contentDescription","contentDocument","contentEdgeInsets","contentEditable","contentFilters","contentFrame","contentHorizontalAlignment","contentInset","contentMaxSize","contentMinSize","contentMode","contentOffset","contentOffsetForSegmentAtIndex: ","contentRect","contentRectForBounds: ","contentRectForFrameRect:","contentRectForFrameRect: styleMask:","contentResizeIncrements","contentResizingMask","contentSize","contentSizeForFrameSize: hasHorizontalScroller: hasVerticalScroller: borderType:","contentStretch","contentURL","contentVerticalAlignment","contentView","contentViewMargins","contentWidth","contentWidthValueType","contents","contentsAreFlipped","contentsAtPath:","contentsCenter","contentsEqualAtPath: andPath:","contentsFilterMode","contentsGravity","contentsOfDirectoryAtPath: error:","contentsRect","context","contextExpression","contextHelpForKey:","contextHelpForObject:","contextMenuRepresentation","contextShouldIgnoreUnmodeledPropertyChanges","contextWithCGContext: options:","contextWithCGLContext:","continueAfterFailure","continueCmd","continueSpeaking","continueTracking: at: inView:","continueTrackingWithTouch: withEvent: ","continueWithoutCredentialForAuthenticationChallenge:","continuous","control: didFailToFormatString: errorDescription:","control: didFailToValidatePartialString: errorDescription:","control: isValidObject:","control: textShouldBeginEditing:","control: textShouldEndEditing:","control: textView: completions: forPartialWordRange: indexOfSelectedItem:","control: textView: doCommandBySelector:","controlAlternatingRowBackgroundColors","controlBackgroundColor","controlCharacterSet","controlColor","controlContentFontOfSize:","controlDarkShadowColor","controlErr","controlHandleInvalidErr","controlHighlightColor","controlInvalidDataVersionErr","controlKey","controlKeyBit","controlLightHighlightColor","controlPointBounds","controlPropertyInvalid","controlPropertyNotFoundErr","controlShadowColor","controlSize","controlTextColor","controlTextDidBeginEditing:","controlTextDidChange:","controlTextDidEndEditing:","controlTint","controlType","controlView","controller","controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:","controller:didChangeSection:atIndex:forChangeType:","controllerBarHeight","controllerBoundsNotExact","controllerClassOfDeviceReverted:","controllerDidChangeContent:","controllerDidChangePowerState","controllerDidOpen","controllerHasFixedHeight","controllerWillChangeContent:","controllerWillChangePowerState","controllerWillClose","controllerWithHostname: portnumber:","controllerWithNetService:","conversation","conversationIdentifier","convertAttributes:","convertBaseToScreen:","convertClipboardFlag","convertCmd","convertCoordinate:toPointToView:","convertFont:","convertFont: toFace:","convertFont: toFamily:","convertFont: toHaveTrait:","convertFont: toNotHaveTrait:","convertFont: toSize:","convertFontTraits:","convertImagePointToViewPoint:","convertImageRectToViewRect:","convertOldFactor: newFactor:","convertPoint: fromLayer:","convertPoint: fromLayer: ","convertPoint: fromPage:","convertPoint: fromView:","convertPoint: fromView: ","convertPoint: fromWindow: ","convertPoint: toLayer:","convertPoint: toLayer: ","convertPoint: toPage:","convertPoint: toView:","convertPoint: toView: ","convertPoint: toWindow: ","convertPoint:toCoordinateFromView:","convertPointFromBase:","convertPointToBase:","convertRect: fromLayer:","convertRect: fromLayer: ","convertRect: fromPage:","convertRect: fromView:","convertRect: fromView: ","convertRect: fromWindow: ","convertRect: toLayer:","convertRect: toLayer: ","convertRect: toPage:","convertRect: toView:","convertRect: toView: ","convertRect: toWindow: ","convertRect:toRegionFromView:","convertRectFromBase:","convertRectToBase:","convertRegion:toRectToView:","convertScreenToBase:","convertSize: fromView:","convertSize: toView:","convertSizeFromBase:","convertSizeToBase:","convertTime: fromLayer:","convertTime: fromLayer: ","convertTime: toLayer:","convertTime: toLayer: ","convertViewPointToImagePoint:","convertViewRectToImageRect:","convertWeight: ofFont:","cookie","cookieAcceptPolicy","cookieWithProperties:","cookies","cookiesForURL:","cookiesWithResponseHeaderFields: forURL:","coordinate","coords","copiesOnScroll","copy","copy:","copyAttributesFromContext: withMask:","copyCGLContextForPixelFormat:","copyCGLPixelFormatForDisplayMask:","copyFont:","copyItemAtPath: toPath: error:","copyMediumDictionary","copyObject: type:","copyObjects: type:","copyPacket","copyPath: toPath: handler:handler","copyRemoteFile:","copyRenderedTextureForCGLContext:_ctx pixelFormat: bounds: isFlipped:","copyRuler:","copySelection","copyWithZone:","copyreq","copyresp","copysign","copysignl","corErr","coreFoundationUnknownErr","cornerRadius","cornerView","couldNotParseSourceFileErr","couldNotResolveDataRef","couldNotUseAnExistingSample","couldntGetRequiredComponent","count","countByEnumeratingWithState: objects: count:","countDownDuration","countForFetchRequest: error:","countForFetchRequest:error:","countForObject:","countKeyPath","countKeyPathForNode:","countOfIndexesInRange:","countWordsInString: language:","counterIncrement","counterReset","country","countryCode","course","coveredCharacterSet","createAttribute:","createAttributeNS:","createAttributeNS: qualifiedName:","createCDATASection:","createCGImage: fromRect:","createCGLayerWithSize: info:","createCSSStyleDeclaration","createCSSStyleSheet:","createCSSStyleSheet: media:","createCaption","createClassDescription","createCommandInstance","createCommandInstanceWithZone:","createComment:","createContext","createConversationForConnection:","createDestinationInstancesForSourceInstance: entityMapping: manager: error:","createDestinationInstancesForSourceInstance:entityMapping:manager:error:","createDirectoryAtPath: attributes:","createDirectoryAtPath: withIntermediateDirectories: attributes: error:","createDocument:","createDocument: qualifiedName: doctype:","createDocumentFragment","createDocumentFragmentWithMarkupString: baseURL:","createDocumentFragmentWithText:","createDocumentType:","createDocumentType: publicId: systemId:","createElement:","createElementNS:","createElementNS: qualifiedName:","createEntityReference:","createEvent:","createExpression: resolver:","createFileAtPath: contents: attributes:","createFolder:","createHTMLDocument:","createInterface","createMovieFileDeleteCurFile","createMovieFileDontCreateMovie","createMovieFileDontCreateResFile","createMovieFileDontOpenFile","createNSResolver:","createNodeIterator:","createNodeIterator: whatToShow: filter: expandEntityReferences:","createOutputQueue","createPanelDidEnd: returnCode: contextInfo:","createProcessingInstruction:","createProcessingInstruction: data:","createRange","createRelationshipsForDestinationInstance: entityMapping: manager: error:","createRelationshipsForDestinationInstance:entityMapping:manager:error:","createSnapshotImageOfType:","createSymbolicLinkAtPath: pathContent:","createSymbolicLinkAtPath: withDestinationPath: error:","createTFoot","createTHead","createTextNode:","createTexture: fromView: internalFormat:","createTreeWalker:","createTreeWalker: whatToShow: filter: expandEntityReferences:","createViewController","createWorkLoop","credentialForTrust:","credentialWithIdentity:certificates:persistence:","credentialWithUser: password: persistence:","credentialsForProtectionSpace:","criteriaForRow:","criteriaKeyPath","criticalValue","crosshairCursor","curNumberPartsVersion","curSysEnvVers","currLeadingZ","currNegSym","currSymLead","currTrailingZ","currencyCode","currencyDecimalSeparator","currencyGroupingSeparator ","currencySymbol","currentAppleEvent","currentBackgroundImage","currentCalendar","currentCollation","currentCommand","currentContainer","currentContext","currentContextDrawingToScreen","currentControlTint","currentConversation","currentCurLang","currentCursor","currentDefLang","currentDestination","currentDevice","currentDirectory","currentDirectoryPath","currentDiskUsage","currentDocument","currentEditor","currentEntityMapping","currentEvent","currentFontAction","currentFrameImage","currentHandler","currentHardwareInputNumberOfChannels","currentHardwareInputNumberOfChannelsChanged:","currentHardwareOutputNumberOfChannels","currentHardwareOutputNumberOfChannelsChanged:","currentHardwareSampleRate","currentHardwareSampleRateChanged:","currentHost","currentImage","currentIn","currentInputManager","currentItem","currentLayoutManager","currentLocale","currentMaximumTrackImage","currentMemoryUsage","currentMinimumTrackImage","currentMode","currentNode","currentOperation","currentPage","currentParagraphStyle","currentPath","currentPlaybackTime","currentPoint","currentProgress","currentReplyAppleEvent","currentRunLoop","currentRunLoopCenter","currentSelection","currentTarget","currentTextContainer","currentTextStorage","currentThread","currentThumbImage","currentTime","currentTitle","currentTitleColor","currentTitleShadowColor","currentValue","currentVirtualScreen","cursiveFontFamily","cursor","cursorUpdate:","curveToPoint:","customSelector","customTextEncodingName","customUserAgent","customView","customizableViewControllers","customizationPaletteIsRunning","cut:","cyanColor","cyanComponent","cycleToNextInputLanguage:","cycleToNextInputServerInLanguage:","dBoxProc","dCtlEnable","dCtlEnableMask","dInstErr","dNeedGoodBye","dNeedGoodByeMask","dNeedLock","dNeedLockMask","dNeedTime","dNeedTimeMask","dOpened","dOpenedMask","dRAMBased","dRAMBasedMask","dReadEnable","dReadEnableMask","dRemovErr","dStatEnable","dStatEnableMask","dVMImmuneBit","dVMImmuneMask","dWritEnable","dWritEnableMask","darkGrayColor","darkTextColor","dashPattern","data","data1","data2","dataAlreadyClosed","dataAlreadyOpenForWrite","dataBreakpointException","dataCell","dataCellForRow:","dataDetectorTypes","dataForKey:","dataForPasteboardType:","dataForPasteboardType:inItemSet:","dataForType:","dataFromPropertyList: format: errorDescription:","dataFromRange: documentAttributes: error:","dataFromTXTRecordDictionary:","dataHandlePtr","dataNoDataRef","dataNotOpenForRead","dataNotOpenForWrite","dataOfType: error:","dataOffsetFlag","dataRef","dataRefData","dataRefSelfReference","dataRefType","dataRefWasNotResolved","dataReferenceWithDataRef: type:","dataReferenceWithDataRefData: type:","dataReferenceWithReferenceToData:","dataReferenceWithReferenceToData: name: MIMEType:","dataReferenceWithReferenceToFile:","dataReferenceWithReferenceToURL:","dataRepresentation","dataRepresentationOfType:","dataSource","dataSourceUpdated:","dataUsingEncoding:","dataUsingEncoding: allowLossyConversion:","dataVerErr","dataWithBytes: length:","dataWithBytesNoCopy: length:","dataWithBytesNoCopy: length: freeWhenDone:","dataWithCapacity:","dataWithContentsOfFile:","dataWithContentsOfFile: options: error:","dataWithContentsOfMappedFile:","dataWithContentsOfURL:","dataWithContentsOfURL: options: error:","dataWithData:","dataWithEPSInsideRect:","dataWithLength:","dataWithPDFInsideRect:","datamsg","date","dateByAddingComponents: toDate: options:","dateByAddingYears: months: days: hours: minutes: seconds:","dateFormat","dateFromComponents:","dateFromString:","datePickerCell: validateProposedDateValue: timeInterval:","datePickerElements","datePickerMode","datePickerStyle","dateStarted","dateStdMask","dateStopped","dateStyle","dateSubmitted","dateTime","dateTimeInvalid","dateTimeNotFound","dateValue","dateWithCalendarFormat: timeZone:","dateWithNaturalLanguageString:","dateWithNaturalLanguageString: locale:","dateWithString:","dateWithString: calendarFormat:","dateWithString: calendarFormat: locale:","dateWithTimeIntervalSince1970:","dateWithTimeIntervalSinceNow:","dateWithTimeIntervalSinceReferenceDate:","dateWithYear: month: day: hour: minute: second: timeZone:","day","dayField","dayLdingZ","dayMask","dayOfCommonEra","dayOfMonth","dayOfWeek","dayOfWeekField","dayOfWeekMask","dayOfYear","dayOfYearField","dayOfYearMask","daylightSavingTimeOffset ","daylightSavingTimeOffsetForDate: ","dbBufferReady","dcmTooManyKeyErr","ddisna_","ddpLenErr","ddpSktErr","deactivate","deactivateMsg","deactivateServer:","deauthorize:","debugRxHandler","debugTxHandler","debuggingDuplicateOptionErr","debuggingDuplicateSignatureErr","debuggingExecutionContextErr","debuggingInvalidNameErr","debuggingInvalidOptionErr","debuggingInvalidSignatureErr","debuggingNoCallbackErr","debuggingNoMatchErr","dec2num","dec2numl","dec2str","decelerating","decelerationRate","decform","decimal","decimalDigitCharacterSet","decimalNumberByAdding:","decimalNumberByAdding: withBehavior:","decimalNumberByDividingBy:","decimalNumberByDividingBy: withBehavior:","decimalNumberByMultiplyingBy:","decimalNumberByMultiplyingBy: withBehavior:","decimalNumberByMultiplyingByPowerOf10:","decimalNumberByMultiplyingByPowerOf10: withBehavior:","decimalNumberByRaisingToPower:","decimalNumberByRaisingToPower: withBehavior:","decimalNumberByRoundingAccordingToBehavior:","decimalNumberBySubtracting:","decimalNumberBySubtracting: withBehavior:","decimalNumberHandlerWithRoundingMode: scale: raiseOnExactness: raiseOnOverflow: raiseOnUnderflow: raiseOnDivideByZero:","decimalNumberWithDecimal:","decimalNumberWithMantissa: exponent: isNegative:","decimalNumberWithString:","decimalNumberWithString: locale:","decimalSeparator","decimalValue","declare","declareTypes: owner:","decodeArrayOfObjCType: count: at:","decodeBoolForKey:","decodeBytesForKey: returnedLength:","decodeBytesWithReturnedLength:","decodeCGAffineTransformForKey: ","decodeCGPointForKey: ","decodeCGRectForKey: ","decodeCGSizeForKey: ","decodeClassName: asClassName:","decodeDataObject","decodeDoubleForKey:","decodeFloatForKey:","decodeInt32ForKey:","decodeInt64ForKey:","decodeIntForKey:","decodeIntegerForKey:","decodeNXColor","decodeNXObject","decodeObject","decodeObjectForKey:","decodePoint","decodePointForKey:","decodePortObject","decodePropertyList","decodeQTTimeForKey:","decodeQTTimeRangeForKey:","decodeRect","decodeRectForKey:","decodeSMPTETimeForKey:","decodeSize","decodeSizeForKey:","decodeTime","decodeUIEdgeInsetsForKey: ","decodeValueOfObjCType: at:","decodeValuesOfObjCTypes:","decomposableCharacterSet","decomposedStringWithCanonicalMapping","decomposedStringWithCompatibilityMapping","decompressorComponentType","deepestScreen","default","defaultActionForKey:","defaultActionForKey: ","defaultActionForKeyPath:","defaultAnimationForKey:","defaultAttachmentScaling","defaultBaselineOffsetForFont:","defaultBehavior","defaultButtonCell","defaultButtonTitle","defaultCStringEncoding","defaultCalendarStore","defaultCenter","defaultChecked","defaultClassPath","defaultClientSettings","defaultCollectionAttributes","defaultCollector","defaultCompletionDelay","defaultComponentAnyFlags","defaultComponentAnyFlagsAnyManufacturer","defaultComponentAnyFlagsAnyManufacturerAnySubType","defaultComponentAnyManufacturer","defaultComponentAnySubType","defaultComponentIdentical","defaultConfiguration","defaultConnection","defaultController","defaultCountryCode","defaultCredentialForProtectionSpace:","defaultDate","defaultDecimalNumberHandler","defaultDepthLimit","defaultDither","defaultExceptionHandler","defaultFeedSettings","defaultFetchRequest","defaultFixedFontSize","defaultFlatness","defaultFocusRingType","defaultFontSize","defaultFormatterBehavior","defaultGrid","defaultIdentityAuthority","defaultInputDeviceWithMediaType:","defaultLanguage","defaultLineCapStyle","defaultLineHeightForFont","defaultLineHeightForFont:","defaultLineJoinStyle","defaultLineWidth","defaultManager","defaultMediaLibrary","defaultMenu","defaultMiterLimit","defaultNameOrdering","defaultNameServerPortNumber","defaultParagraphStyle","defaultPhysicalEntryCount","defaultPixelFormat","defaultPlaceholderForMarker: withBinding:","defaultPrinter","defaultQueue","defaultSelected","defaultSubcontainerAttributeKey","defaultTabInterval","defaultTestSuite","defaultTextEncodingName","defaultTimeZone","defaultTokenizingCharacterSet","defaultType","defaultTypesetterBehavior","defaultValue","defaultValueForKey:","defaultValueForKey: ","defaultView","defaultVirtualMachine","defaultVoice","defaultVoiceChatService","defaultWindingRule","defaultWritingDirectionForLanguage:","defaults","defaultsForModuleWithName:","defer","defersCurrentPageDisplay","defineClass: withName:","defined","definition","delaysContentTouches","delegate","delete","delete:","deleteAllRecordsForEntityName: error:","deleteBackward:","deleteBackwardByDecomposingPreviousCharacter:","deleteCacheWithName:","deleteCaption","deleteCell:","deleteCharactersInRange:","deleteContents","deleteCookie:","deleteData:","deleteData: length:","deleteDownload","deleteForward:","deleteGlyphsInRange:","deleteMedium:","deleteObject:","deleteObjects:","deleteRecordWithIdentifier:","deleteRecording","deleteRow:","deleteRowsAtIndexPaths: withRowAnimation: ","deleteRule","deleteRule:","deleteSections: withRowAnimation: ","deleteSegment:","deleteSelection","deleteTFoot","deleteTHead","deleteToBeginningOfLine:","deleteToBeginningOfParagraph:","deleteToEndOfLine:","deleteToEndOfParagraph:","deleteToMark:","deleteWordBackward:","deleteWordForward:","deletedObjects","deletesFileUponFailure","delimPad","deliverMessage: headers: format: protocol:","deliverMessage: subject: to:","deliverResult","deltaX","deltaY","deltaZ","deminiaturize:","denyCallID:","denyConnectionFromPeer:","dependencies","depositColor:","depositColor: atPoint:","depositViewResourceFromPasteboard: onObject: atPoint:","depth","depthLimit","dequeueNotificationsMatching: coalesceMask:","dequeueReusableAnnotationViewWithIdentifier:","dequeueReusableCellWithIdentifier: ","descendantNodeAtIndexPath:","descender","description","descriptionInStringsFileFormat","descriptionWithCalendarFormat:","descriptionWithCalendarFormat: locale:","descriptionWithCalendarFormat: timeZone: locale:","descriptionWithFormat:","descriptionWithLocale:","descriptionWithLocale: indent:","descriptorAtIndex:","descriptorForKeyword:","descriptorType","descriptorWithBoolean:","descriptorWithDescriptorType: bytes: length:","descriptorWithDescriptorType: data:","descriptorWithEnumCode:","descriptorWithInt32:","descriptorWithString:","descriptorWithTypeCode:","deselectAll","deselectAll:","deselectAllCells","deselectAnnotation:animated:","deselectColumn:","deselectGroup:","deselectIdentifier: forPerson:","deselectItemAtIndex:","deselectMsg","deselectRecord:","deselectRow:","deselectRowAtIndexPath: animated: ","deselectSelectedCell","deserializeAlignedBytesLengthAtCursor:","deserializeBytes: length: atCursor:","deserializeDataAt: ofObjCType: atCursor: context:","deserializeIntAtCursor:","deserializeIntAtIndex:","deserializeInts: count: atCursor:","deserializeInts: count: atIndex:","deserializeObjectAt: ofObjCType: fromData: atCursor:","deserializePropertyListFromData: atCursor: mutableContainers:","deserializePropertyListFromData: mutableContainers:","deserializePropertyListLazilyFromData: atCursor: length: mutableContainers:","desiredAccuracy","deskPatID","desktopDamagedErr","destPortErr","destination","destinationContext","destinationEntity","destinationEntityForEntityMapping:","destinationEntityName","destinationEntityVersionHash","destinationInstancesForEntityMappingNamed:sourceInstances:","destinationModel","destinationOfSymbolicLinkAtPath: error:","destroyContext","destructiveButtonIndex","detach","detachColorList:","detachCurrentThread","detachDebuggerClient","detachDrawingThread: toTarget: withObject:","detachFromCurrentThread","detachFromDataLinkLayer","detachInterface","detachNewThreadSelector: toTarget: withObject:","detachObject:","detachObjects:","detachSubmenu","detach_shim","detail","detailTextLabel","detailsDisclosed","detailsDisplayed","detectConflictsForObject:","detectsPhoneNumbers","developStage","developmentLocalization","dialogKind","dialogNoTimeoutErr","dictionary","dictionaryForKey:","dictionaryFromTXTRecordData:","dictionaryRepresentation","dictionaryWithCapacity:","dictionaryWithContentsOfFile:","dictionaryWithContentsOfURL:","dictionaryWithDictionary:","dictionaryWithOBEXHeadersData:","dictionaryWithOBEXHeadersData: headersDataSize:","dictionaryWithObject: forKey:","dictionaryWithObjects: forKeys:","dictionaryWithObjects: forKeys: count:","dictionaryWithObjectsAndKeys:","dictionaryWithObjectsAndKeys: NS_REQUIRES_NIL_TERMINATION","dictionaryWithValuesForKeys:","didAccessValueForKey:","didActivate","didAddSubview:","didAddSubview: ","didAddToPersistentStoreCoordinator:","didAnimateFirstHalfOfRotationToInterfaceOrientation: ","didChange: valuesAtIndexes: forKey:","didChangeArrangementCriteria","didChangeText","didChangeValueForKey:","didChangeValueForKey: ","didChangeValueForKey: withSetMutation: usingObjects:","didChangeValueForKey:withSetMutation:usingObjects:","didCommandBySelector: client:","didDeactivate","didEnterPane:","didExitPane:","didFinishRunningWithError:","didLoadBytes: loadComplete:","didLoadMainNib","didMatchString:","didMoveToSuperview","didMoveToWindow","didOpen","didPresentActionSheet: ","didPresentAlertView: ","didReceiveMemoryWarning","didRotateFromInterfaceOrientation: ","didSave","didSelect","didTransitionToState:","didTurnIntoFault","didUnselect","didValueForInputKeyChange:","diffVolErr","differs","dir","dirFulErr","dirNFErr","directParameter","directXObjectAlreadyExists","direction","directionalLockEnabled","directory","directoryAttributes","directoryContentsAtPath:","disable","disableActions","disableCollectorForPointer:","disableCursorRects","disableExecution:","disableFilter","disableFlushWindow","disableKeyEquivalentForDefaultButtonCell","disablePacketFilter","disableScreenUpdatesUntilFlush","disableUndoRegistration","disableUpdates","disabled","disabledBackground","disabledControlTextColor","disappearingItemCursor","discardCachedImage","discardCursorRects","discardEditing","discardEventsMatchingMask: beforeEvent:","disconnect","disconnectFromAllPeers","disconnectObject: withKey: toObject: withKey:","disconnectPeerFromAllPeers:","disconnectTimeout","discover:","discoverAsSheetForWindow: withRecord:","discoverWithDeviceAttributes: serviceList: serviceRecord:","diskCapacity","diskEvt","diskMask","disk_blk0","dismiss","dismissHeadingCalibrationDisplay","dismissModalViewControllerAnimated: ","dismissPopUp","dismissWithClickedButtonIndex: animated: ","dismissesAutomatically","dispCntl","dispatch","dispatchEvent:","dispatchRawAppleEvent: withRawReply: handlerRefCon:","display","displayAllColumns","displayBox","displayColumn:","displayConnectionBetween: and:","displayIfNeeded","displayIfNeededIgnoringOpacity","displayIfNeededInRect:","displayIfNeededInRectIgnoringOpacity:","displayLayer:","displayLayer: ","displayMode","displayName","displayNameAtPath:","displayNameForKey: value:","displayNameForPeer:","displayNameForType:","displayRect:","displayRectIgnoringOpacity:","displayRectIgnoringOpacity: inContext:","displayValuesForRow:","displayValuesKeyPath","displayView","displayableSubpredicatesOfPredicate:","displayed","displayedCommandsTitle","displayedPerson","displayedProperties","displayedProperty","displaysAnnotations","displaysAsBook","displaysLinkToolTips","displaysPageBreaks","displaysWhenScreenProfileChanges","disposeTrack:","dissolveToPoint: fraction:","dissolveToPoint: fromRect: fraction:","distanceFilter","distantFuture","distantPast","distinguishedNames","distributionIdentifierForProperty: person:","dividerThickness","doClick:","doColor","doCommandBySelector:","doCommandBySelector: client:","doCommandBySelector: commandDictionary:","doDisable","doDoubleClick:","doEnable","doFace","doFont","doSize","doToggle","docFormatFromRange: documentAttributes:","dockTile","doctype","document","document: didAddDraggedObjects: fromDraggedLibraryView:","documentAttributes","documentClassForType:","documentClassNames","documentContentKind","documentCursor","documentDidBeginDocumentFind:","documentDidBeginPageFind:","documentDidEndDocumentFind:","documentDidEndPageFind:","documentDidFindMatch:","documentDidUnlock:","documentElement","documentForFileName:","documentForObject:","documentForURL:","documentForWindow:","documentImageNamed:","documentPath","documentProc","documentRect","documentSource","documentURL","documentView","documentViewShouldHandlePrint","documentVisibleRect","documentWithRootElement:","documents","doesContain:","doesNotRecognizeSelector:","domCannot","domNative","domTranslateFirst","domWildcard","domain","dontAutoFileMovieImport","dontRegisterWithEasyOpen","dontWantAttributes","dontWantData","dontWantId","dontWantIndex","dontWantSize","dontWantTag","dotlessLwrI","double","doubleAction","doubleAcute","doubleBufferCmd","doubleClickAtIndex:","doubleForKey:","doubleSided","doubleValue","double_t","download","download: decideDestinationWithSuggestedFilename:","download: didCancelAuthenticationChallenge:","download: didCreateDestination:","download: didFailWithError:","download: didReceiveAuthenticationChallenge:","download: didReceiveDataOfLength:","download: didReceiveResponse:","download: shouldDecodeSourceDataOfMIMEType:","download: willResumeWithResponse: fromByte:","download: willSendRequest: redirectResponse:","downloadDelegate","downloadDidBegin:","downloadDidFinish:","downloadWindowForAuthenticationSheet:","dozeDemand","dozeRequest","dozeWakeUp","dragCntl","dragColor: withEvent: fromView:","dragFile: fromRect: slideBack: event:","dragHasLeftSenderWindow","dragImage: at: offset: event: pasteboard: source: slideBack:","dragImageForRows: event: dragImageOffset:","dragImageForRowsWithIndexes: tableColumns: event: offset:","dragImageForSelectionWithEvent: origin:","dragInsideSenderApplication","dragInsideSenderWindow","dragNotAcceptedErr","dragObjects: withImage: inMouseDownEvent: imageLocation: allowedOperations:","dragOperationForDraggingInfo: type:","dragPromisedFilesOfTypes: fromRect: source: slideBack: event:","dragRegionBegin","dragRegionDraw","dragRegionEnd","dragRegionHide","dragRegionIdle","dragSelectionWithEvent: offset: slideBack:","dragTrackingEnterHandler","dragTrackingEnterWindow","dragTrackingInWindow","dragTrackingLeaveHandler","dragTrackingLeaveWindow","draggedColumn","draggedDistance","draggedImage","draggedImage: beganAt:","draggedImage: endedAt: deposited:","draggedImage: endedAt: operation:","draggedImage: movedTo:","draggedImageLocation","dragging","draggingDestinationDelegate","draggingDestinationWindow","draggingEnded:","draggingEntered:","draggingExited:","draggingImageForRowsWithIndexes: inColumn: withEvent: offset:","draggingLocation","draggingPasteboard","draggingSequenceNumber","draggingSource","draggingSourceOperationMask","draggingSourceOperationMaskForLocal:","draggingUpdated:","drain","draw","drawArrow: highlight:","drawAsPatternInRect: ","drawAtPoint:","drawAtPoint: ","drawAtPoint: blendMode: alpha: ","drawAtPoint: forWidth: withFont: fontSize: lineBreakMode: baselineAdjustment: ","drawAtPoint: forWidth: withFont: lineBreakMode: ","drawAtPoint: forWidth: withFont: minFontSize: actualFontSize: lineBreakMode: baselineAdjustment: ","drawAtPoint: fromRect: operation: fraction:","drawAtPoint: withAttributes:","drawAtPoint: withFont: ","drawBackgroundForBlock: withFrame: inView: characterRange: layoutManager:","drawBackgroundForGlyphRange: atPoint:","drawBackgroundInClipRect:","drawBackgroundWithFrame: inView: characterRange: layoutManager:","drawBarInside: flipped:","drawBezelWithFrame: inView:","drawBorderAndBackgroundWithFrame: inView:","drawCell:","drawCellAtIndex:","drawCellAtRow: column:","drawCellInside:","drawCntl","drawDividerInRect:","drawForPage: active:","drawForPage: withBox: active:","drawFromCenter: radius: toCenter: radius: options:","drawFromPoint: toPoint: options:","drawGlyphsForGlyphRange: atPoint:","drawGridInClipRect:","drawHashMarksAndLabelsInRect:","drawImage: atPoint: fromRect:","drawImage: inRect: fromRect:","drawImage: withFrame: inView:","drawImageWithFrame: inView:","drawInBezierPath: angle:","drawInBezierPath: relativeCenterPosition:","drawInCGLContext: pixelFormat:","drawInContext:","drawInContext: ","drawInRect:","drawInRect: ","drawInRect: angle:","drawInRect: blendMode: alpha: ","drawInRect: fromRect: operation: fraction:","drawInRect: relativeCenterPosition:","drawInRect: withAttributes:","drawInRect: withFont: ","drawInRect: withFont: lineBreakMode: ","drawInRect: withFont: lineBreakMode: alignment: ","drawInsertionPointInRect: color: turnedOn:","drawInteriorWithFrame: inView:","drawKeyEquivalentWithFrame: inView:","drawKnob","drawKnob:","drawKnobSlotInRect: highlight:","drawLabel: inRect:","drawLayer: inContext:","drawLayer: inContext: ","drawMarkersInRect:","drawObject:","drawPackedGlyphs: atPoint:","drawPage:","drawPageBorderWithSize:","drawPagePost:","drawParts","drawPlaceholderInRect: ","drawRect:","drawRect: ","drawRepresentation: inRect:","drawRow: clipRect:","drawSegment: inFrame: withView:","drawSelector","drawSeparatorItemWithFrame: inView:","drawSheetBorderWithSize:","drawSortIndicatorWithFrame: inView: ascending: priority:","drawStateImageWithFrame: inView:","drawStatusBarBackgroundInRect: withHighlight:","drawStrikethroughForGlyphRange: strikethroughType: baselineOffset: lineFragmentRect: lineFragmentGlyphRange: containerOrigin:","drawSwatchInRect:","drawTextInRect: ","drawThumbOutline","drawTitle: withFrame: inView:","drawTitleOfColumn: inRect:","drawTitleWithFrame: inView:","drawUnderlineForGlyphRange: underlineType: baselineOffset: lineFragmentRect: lineFragmentGlyphRange: containerOrigin:","drawViewBackgroundInRect:","drawWellInside:","drawWithBox:","drawWithExpansionFrame: inView:","drawWithFrame: inView:","drawWithFrame: inView: characterIndex:","drawWithFrame: inView: characterIndex: layoutManager:","drawWithRect: options:","drawWithRect: options: attributes:","drawableProperties","drawerDidClose:","drawerDidOpen:","drawerShouldClose:","drawerShouldOpen:","drawerWillClose:","drawerWillOpen:","drawerWillResizeContents: toSize:","drawers","drawingRectForBounds:","drawsBackground","drawsCellBackground","drawsGrid","drawsOutsideLineFragmentForGlyphAtIndex:","driverEvt","driverHardwareGoneErr","driverMask","dropShadowOffsetType","dropShadowTranslucencyType","drscl_","drvQType","drvrActive","drvrActiveMask","ds32BitMode","dsAddressErr","dsBadLaunch","dsBadLibrary","dsBadPatch","dsBadPatchHeader","dsBadSANEOpcode","dsBadSlotInt","dsBadStartupDisk","dsBufPtrTooLow","dsBusError","dsCDEFNotFound","dsCantHoldSystemHeap","dsChkErr","dsCoreErr","dsDirtyDisk","dsDisassemblerInstalled","dsExtensionsDisabled","dsFPErr","dsFSErr","dsFinderErr","dsForcedQuit","dsGibblyMovedToDisabledFolder","dsGreeting","dsHD20Installed","dsHMenuFindErr","dsIOCoreErr","dsIllInstErr","dsIrqErr","dsLineAErr","dsLineFErr","dsLoadErr","dsLostConnectionToNetworkDisk","dsMBATAPISysError","dsMBATASysError","dsMBExternFlpySysError","dsMBFlpySysError","dsMBSysError","dsMBarNFnd","dsMDEFNotFound","dsMacOSROMVersionTooOld","dsMacsBugInstalled","dsMemFullErr","dsMiscErr","dsMixedModeFailure","dsMustUseFCBAccessors","dsNeedToWriteBootBlocks","dsNoExtsDisassembler","dsNoExtsMacsBug","dsNoFPU","dsNoPackErr","dsNoPatch","dsNoPk1","dsNoPk2","dsNoPk3","dsNoPk4","dsNoPk5","dsNoPk6","dsNoPk7","dsNotEnoughRAMToBoot","dsNotThe1","dsOldSystem","dsOvflowErr","dsPCCardATASysError","dsParityErr","dsPrivErr","dsRAMDiskTooBig","dsReinsert","dsRemoveDisk","dsSCSIWarn","dsShutDownOrRestart","dsShutDownOrResume","dsStknHeap","dsSwitchOffOrRestart","dsSysErr","dsSystemFileErr","dsSystemRequiresPowerPC","dsTraceErr","dsUnBootableSystem","dsVMBadBackingStore","dsVMDeferredFuncTableFull","dsWDEFNotFound","dsWriteToSupervisorStackGuardPage","dsZeroDivErr","","dummyType","dupFNErr","duplicate:","duplicateAtomTypeAndIDErr","duplicateFlavorErr","duplicateFolderDescErr","duplicateHandlerErr","duplicateRoutingErr","duplicateScrapFlavorErr","duration","durationDay","durationForever","durationHour","durationMicrosecond","durationMillisecond","durationMinute","durationNoWait","durationSecond","dynamicSpeedChange","dzsum1_","eHRScrollbarAuto","eHRScrollbarOff","eHRScrollbarOn","eLenErr","eMultiErr","eNotStarted","eRunnable","eRunning","eStepIn","eStepOut","eStepOver","eStopped","eTerminated","eWSArrayType","eWSBooleanType","eWSDataType","eWSDateType","eWSDictionaryType","eWSDoubleType","eWSIntegerType","eWSNullType","eWSStringType","eWSUnknownType","earlierDate:","echosBullets","edge","edgeAntialiasingMask","editAction","editButtonItem","editColumn: row: withEvent: select:","editInAddressBook:","editSelf: in:","editText","editWithFrame: inView: editor: delegate: event:","editable","editableDOMRangeForPoint:","edited: range: changeInLength:","editedColumn","editedMask","editedObject","editedRange","editedRow","editing","editingAccessoryType","editingAccessoryView","editingDelegate","editingNotAllowed","editingRectForBounds: ","editingStringForObjectValue:","editingStyle","editionMgrInitErr","editor: didCloseForObject:","editorClassName","editorForObject: create:","effectIsRealtime","effectiveFilesystemMask","eightBitMode","eightToThree","eject:","ejectMedia","elOptionsIncludeNoneInList","elementArrayWithCode:","elementAtIndex:","elementAtPoint:","elementCount","elementDeclarationForName:","elementFlagAlwaysSelfContained","elementFlagPreserveWhiteSpace","elementWithName:","elementWithName: URI:","elementWithName: children: attributes:","elementWithName: stringValue:","element_body","element_head","element_rootlayout","element_xml","elements","elementsForLocalName: URI:","elementsForName:","elevation","emailAddress","emptyCells","emptyImage","emptyPathErr","enable","enableCollectorForPointer:","enableController","enableCursorRects","enableExecution:","enableFilter","enableFilter_Wrapper","enableFlushWindow","enableFreedObjectCheck:","enableKeyEquivalentForDefaultButtonCell","enableMultipleThreads","enablePacketFilter","enableRelease:","enableUndoRegistration","enableUpdates","enabled","enabledEntityNames","enabledRemoteNotificationTypes","enabledTextCheckingTypes","enablesReturnKeyAutomatically","enclosingMenuItem","enclosingScrollView","enclosure: downloadStateDidChange:","encodeArrayOfObjCType: count: at:","encodeBool: forKey:","encodeBycopyObject:","encodeByrefObject:","encodeBytes: length:","encodeBytes: length: forKey:","encodeCGAffineTransform: forKey: ","encodeCGPoint: forKey: ","encodeCGRect: forKey: ","encodeCGSize: forKey: ","encodeClassName: intoClassName:","encodeConditionalObject:","encodeConditionalObject: forKey:","encodeDataObject:","encodeDouble: forKey:","encodeFloat: forKey:","encodeInt32: forKey:","encodeInt64: forKey:","encodeInt: forKey:","encodeInteger: forKey:","encodeNXObject:","encodeObject:","encodeObject: forKey:","encodePoint:","encodePoint: forKey:","encodePortObject:","encodePropertyList:","encodeQTTime: forKey:","encodeQTTimeRange: forKey:","encodeRect:","encodeRect: forKey:","encodeRootObject:","encodeSMPTETime: forKey:","encodeSize:","encodeSize: forKey:","encodeUIEdgeInsets: forKey: ","encodeValueOfObjCType: at:","encodeValuesOfObjCTypes:","encodeWithCoder:","encoding","encodingScheme","enctype","endContainer","endCustomizingAnimated: ","endDocument","endEditing","endEditing:","endEditing: ","endEditingFor:","endEntityMapping: manager: error:","endEntityMapping:manager:error:","endFrame","endGeneratingDeviceOrientationNotifications","endGeneratingLibraryChangeNotifications","endGeneratingPlaybackNotifications","endGrouping","endIgnoringInteractionEvents","endInstanceCreationForEntityMapping: manager: error:","endInstanceCreationForEntityMapping:manager:error:","endInterruption","endLineStyle","endLineWithGlyphRange:","endLoadInBackground","endModalSession:","endOfDataReached","endOffset","endPage","endParagraph","endPoint","endProgress","endRelationshipCreationForEntityMapping: manager: error:","endRelationshipCreationForEntityMapping:manager:error:","endSeeking","endSheet:","endSheet: returnCode:","endSpecifier","endSubelementIdentifier","endSubelementIndex","endTrackingWithTouch: withEvent: ","endUndoGrouping","endUpdates","engineRef","enqueueNotification: postingStyle:","enqueueNotification: postingStyle: coalesceMask: forModes:","ensureAttributesAreFixedInRange:","ensureGlyphsForCharacterRange:","ensureGlyphsForGlyphRange:","ensureLayoutForBoundingRect: inTextContainer:","ensureLayoutForCharacterRange:","ensureLayoutForGlyphRange:","ensureLayoutForTextContainer:","enterExitEventWithType: location: modifierFlags: timestamp: windowNumber: context: eventNumber: trackingNumber: userData:","enterFullScreenMode: withOptions:","enterQTKitOnThread","enterQTKitOnThreadDisablingThreadSafetyProtection","enterRun","enterStandby","entities","entitiesByName","entitiesForConfiguration:","entity","entityDeclarationForName:","entityForName: inManagedObjectContext:","entityForName:inManagedObjectContext:","entityMappings","entityMappingsByName","entityMigrationPolicyClassName","entityName","entityNamesToPull","entityNamesToSync","entityVersionHashesByName","entryEnumeratorSortedBy:","entryType","entryWithIdentifier:","enumAfterDate","enumAliases","enumAllDisks","enumAllDocuments","enumAllLocalDisks","enumAllOpenFolders","enumAllRemoteDisks","enumAnyDate","enumArrangement","enumBeforeDate","enumBetweenDate","enumBooleanValues","enumCodeValue","enumConflicts","enumConsiderations","enumConsidsAndIgnores","enumDate","enumExistingItems","enumFolders","enumFontsPanel","enumGeneralPanel","enumGestalt","enumIconSize","enumInfoWindowPanel","enumLargeIconSize","enumLastMonth","enumLastWeek","enumLastYear","enumMemoryPanel","enumMiniIconSize","enumMiscValues","enumOlderItems","enumOnDate","enumPrefsButtonViewPanel","enumPrefsGeneralPanel","enumPrefsIconViewPanel","enumPrefsLabelPanel","enumPrefsListViewPanel","enumPrefsWindowPanel","enumSharingPanel","enumSmallIconSize","enumSortDirection","enumSortDirectionNormal","enumSortDirectionReverse","enumStationery","enumStatusNConfigPanel","enumThisMonth","enumThisWeek","enumThisYear","enumToday","enumViewBy","enumWhere","enumYesterday","enumeratorAtPath:","env512KE","env68000","env68010","env68020","env68030","env68040","envAExtendKbd","envBadVers","envCPUUnknown","envExtISOADBKbd","envMac","envMacAndPad","envMacII","envMacIIci","envMacIIcx","envMacIIfx","envMacIIx","envMacKbd","envMacPlus","envMacPlusKbd","envMachUnknown","envNotPresent","envPortable","envPrtblADBKbd","envPrtblISOKbd","envSE30","envStandADBKbd","envStdISOADBKbd","envUnknownKbd","envVersTooBig","environment","eofErr","era","eraField","eraMask","eraSymbols","erase","eraseColor","eraseForDevice:","eraseObject","eraseProgressPanel: eraseDidFinish:","eraseProgressPanelDidFinish:","eraseProgressPanelWillBegin:","eraseType","eraseType:","error","errorWithDomain: code: userInfo:","establishConnection","estimateLength","estimateLengthOfTrack:","estimatedProgress","evType","ev_init_lock","ev_is_locked","ev_lock","ev_lock_data_t","ev_try_lock","ev_unlock","evaluate","evaluate: contextNode: resolver: type: inResult:","evaluate: type: inResult:","evaluateWebScript:","evaluateWithObject:","evaluateWithObject: substitutionVariables:","evaluateWithObject:substitutionVariables:","evaluatedArguments","evaluatedReceivers","evaluationErrorNumber","evaluationErrorSpecifier","evenField1ToEvenFieldOut","evenField1ToOddFieldOut","evenField2ToEvenFieldOut","evenField2ToOddFieldOut","event","eventAlreadyPostedErr","eventClass","eventClassIncorrectErr","eventClassInvalidErr","eventDeferAccessibilityEventErr","eventDidFail: withError:","eventForwardingMask","eventHandlerAlreadyInstalledErr","eventHotKeyExistsErr","eventHotKeyInvalidErr","eventID","eventInternalErr","eventKindIncorrectErr","eventLoopQuitErr","eventLoopTimedOutErr","eventNotHandledErr","eventNotInQueueErr","eventNumber","eventParameterNotFoundErr","eventPassToNextTargetErr","eventPhase","eventPredicateWithStartDate: endDate: UID: calendars:","eventPredicateWithStartDate: endDate: calendars:","eventRef","eventTargetBusyErr","eventWithEventRef:","eventWithUID: occurrence:","events","eventsWithPredicate:","everyEvent","evioLLEvent","evioSpecialKeyMsg","evsioKeymapping","evsioMouseScaling","evtNotEnb","exUserBreak","exception","exceptionDuringOperation: error: leftOperand: rightOperand:","exceptionHandler: shouldHandleException: mask:","exceptionHandler: shouldLogException: mask:","exceptionHandlingMask","exceptionHangingMask","exceptionWithName: reason: userInfo:","exceptions","excessCollsns","exchangeObjectAtIndex: withObjectAtIndex:","exchangePageAtIndex: withPageAtIndex:","exchangeSubviewAtIndex: withSubviewAtIndex: ","excludedKeys","excludedMemoryException","exclusiveTouch","executableArchitectures","executablePath","execute: atTime: withArguments:","executeAndReturnDisplayValue: error:","executeAndReturnError:","executeAppleEvent: error:","executeCommand","executeCommandAction","executeFetchRequest: error:","executeFetchRequest:error:","executeHandlerWithName: arguments: error:","execution","executionMode","existingObjectWithID:error:","exit","exitFullScreenModeWithOptions:","exitQTKitOnThread","expand:","expandEntityReferences","expandGroupAtIndex:","expandItem:","expandItem: expandChildren:","expansionFrameWithFrame: inView:","expectedContentLength","expectedResourceDataSize","expiresDate","explanation","explicitFilesystemMask","expm1l","exponentSymbol","exportKey: fromObject: withName:","exportSlideshowItemToApplication:","exportedKeys","exposeBinding:","exposedBindings","expression","expressionForAggregate:","expressionForConstantValue:","expressionForEvaluatedObject","expressionForFetch: context: countOnly:","expressionForFetch:context:countOnly:","expressionForFunction: arguments:","expressionForFunction: selectorName: arguments:","expressionForFunction:arguments:","expressionForFunction:selectorName:arguments:","expressionForIntersectSet: with:","expressionForIntersectSet:with:","expressionForKeyPath:","expressionForMinusSet: with:","expressionForMinusSet:with:","expressionForSubquery: usingIteratorVariable: predicate:","expressionForSubquery:usingIteratorVariable:predicate:","expressionForUnionSet: with:","expressionForUnionSet:with:","expressionForVariable:","expressionResultType","expressionType","expressionValueWithObject: context:","expressionValueWithObject:context:","extFSErr","extModemSelected","extend","extendPowerOffBy:","extendSelectionAtEnd:","extendSelectionAtStart:","extensionXMLElementsUsingNamespace:","extent","extern","externalMovie:","extraLineFragmentRect","extraLineFragmentTextContainer","extraLineFragmentUsedRect","extractContents","extractErr","extraneousStrings","fBadPartsTable","fBestGuess","fBsyErr","fDesktop","fEmptyFormatString","fExtraDecimal","fExtraExp","fExtraPercent","fExtraSeparator","fFormStrIsNAN","fFormatOK","fFormatOverflow","fHasBundle","fInvisible","fLckdErr","fMissingDelimiter","fMissingLiteral","fNegative","fOnDesk","fOutOfSynch","fPositive","fSpuriousChars","fTrash","fVNumber","face","faceBit","fadeDuration","failWithError:","failWithException:","failureAction","failureCount","failureInCondition: isTrue: inFile: atLine: withDescription:","failureInEqualityBetweenObject: andObject: inFile: atLine: withDescription:","failureInEqualityBetweenValue: andValue: withAccuracy: inFile: atLine: withDescription:","failureInFile: atLine: withDescription:","failureInRaise: exception: inFile: atLine: withDescription:","failureInRaise: inFile: atLine: withDescription:","failureReason","failureResponse","false32b","familyName","familyNames","fantasyFontFamily","fastestEncoding","fatalDateTime","faultingState","favoriteDevices","fdisk_part","featureUnsupported","features","feed: didAddEntries:","feed: didChangeFlagsInEntries:","feed: didRemoveEntriesWithIdentifiers:","feed: didUpdateEntries:","feedDidBeginRefresh:","feedDidEndRefresh:","feedPacketInputTap","feedPacketOutputTap","feedWithIdentifier:","feedWithURL:","fetch:","fetchBatchSize","fetchLimit","fetchOffset","fetchPredicate","fetchReference","fetchRequest","fetchRequestFromTemplateWithName: substitutionVariables:","fetchRequestFromTemplateWithName:substitutionVariables:","fetchRequestTemplateForName:","fetchRequestTemplatesByName","fetchWithRequest: merge: error:","fetchedObjects","fiLigature","fidExists","fidNotFound","fieldEditor: forObject:","fieldName","fieldOrderNotIntl","fields","fieldsIncludedAreCleared","fifthVidMode","file","fileAttributes","fileAttributesAtPath: traverseLink:","fileAttributesToWriteToFile: ofType: saveOperation:","fileAttributesToWriteToURL: ofType: forSaveOperation: originalContentsURL: error:","fileBoundsErr","fileCreationDate","fileDescriptor","fileDownload: decideDestinationWithSuggestedPath:","fileDownload: didCreateDestination:","fileDownload: didFailWithError:","fileDownload: didReceiveAttributes:","fileDownload: didReceiveData:","fileDownloadDidBegin:","fileDownloadDidFinish:","fileExistsAtPath:","fileExistsAtPath: isDirectory:","fileExistsAtPathOrLink:","fileExtensionHidden","fileExtensionsFromType:","fileGroupOwnerAccountID","fileGroupOwnerAccountName","fileHFSCreatorCode","fileHFSTypeCode","fileHandleForReading","fileHandleForReadingAtPath:","fileHandleForUpdatingAtPath:","fileHandleForWriting","fileHandleForWritingAtPath:","fileHandleWithNullDevice","fileHandleWithStandardError","fileHandleWithStandardInput","fileHandleWithStandardOutput","fileIsAppendOnly","fileIsImmutable","fileManager: shouldCopyItemAtPath: toPath:","fileManager: shouldLinkItemAtPath: toPath:","fileManager: shouldMoveItemAtPath: toPath:","fileManager: shouldProceedAfterError:","fileManager: shouldProceedAfterError: copyingItemAtPath: toPath:","fileManager: shouldProceedAfterError: linkingItemAtPath: toPath:","fileManager: shouldProceedAfterError: movingItemAtPath: toPath:","fileManager: shouldProceedAfterError: removingItemAtPath:","fileManager: shouldRemoveItemAtPath:","fileManager: willProcessPath:","fileModificationDate","fileName","fileNameExtension: isValidForType:","fileNameExtensionForType: saveOperation:","fileNameExtensionWasHiddenInLastRunSavePanel","fileNameFromRunningSavePanelForSaveOperation:","fileNamesFromRunningOpenPanel","fileOffsetTooBigErr","fileOwnerAccountID","fileOwnerAccountName","filePathInProject","filePosixPermissions","fileSize","fileSystemAttributesAtPath:","fileSystemChanged","fileSystemFileNumber","fileSystemNumber","fileSystemRepresentation","fileSystemRepresentationWithPath:","fileTransferServicesAbortComplete: error:","fileTransferServicesConnectionComplete: error:","fileTransferServicesCopyRemoteFileComplete: error:","fileTransferServicesCopyRemoteFileProgress: transferProgress:","fileTransferServicesCreateFolderComplete: error: folder:","fileTransferServicesDisconnectionComplete: error:","fileTransferServicesFilePreparationComplete: error:","fileTransferServicesPathChangeComplete: error: finalPath:","fileTransferServicesRemoveItemComplete: error: removedItem:","fileTransferServicesRetrieveFolderListingComplete: error: listing:","fileTransferServicesSendFileComplete: error:","fileTransferServicesSendFileProgress: transferProgress:","fileType","fileTypeFromLastRunSavePanel","fileURL","fileURLWithPath:","fileURLWithPath: isDirectory:","fileWithPath:","fileWrapper","fileWrapperFromRange: documentAttributes: error:","fileWrapperOfType: error:","fileWrapperRepresentationOfType:","fileWrappers","filename","filenames","filesForFileType:","fill","fillAttributesCache","fillColor","fillListMsg","fillMode","fillRect:","fillRule","filter","filterBrowserPanelWithStyleMask:","filterBrowserViewWithOptions:","filterGenerator","filterGeneratorWithContentsOfURL:","filterManager","filterMatchingAllFilters:","filterMatchingAtLeastOneFilter:","filterNamesInCategories:","filterNamesInCategory:","filterPanel","filterPredicate","filterPredicates","filterUsingPredicate:","filterView","filterWithImageData: options:","filterWithImageURL: options:","filterWithName:","filterWithName: keysAndValues:key0","filteredArrayUsingPredicate:","filteredSetUsingPredicate:","filters","filtersInDomains:","finalStage","finalWritePrintInfo","finalize","finalizeForWebScript","findApplications","findClass:","findFrameNamed:","findString: fromSelection: ","findString: inBook:","findString: withOptions:","findTextCaseSensitive","findTextEdgeOK","findTextReverseSearch","findTextUseOffset","findTextWrapAround","finderAliasPointingTo: inFilesystem:","finish:","finishAuthentication","finishDecoding","finishEncoding","finishInstantiate","finishLaunching","finishSyncing","finishTransaction:","finishedLoadingWithDataSource:","fire","fireDate","firmwareRevision","firstChild","firstDskErr","firstGlyphIndexOfCurrentLineFragment","firstIndex","firstKeyView","firstLineHeadIndent","firstObjectCommonWithArray:","firstOtherButtonIndex","firstPane","firstPickerError","firstRectForCharacterRange:","firstRectForCharacterRange: actualRange:","firstResponder","firstSoundFormat","firstTextView","firstUnlaidCharacterIndex","firstUnlaidGlyphIndex","firstVidMode","firstVisibleColumn","firstWeekday","fixAttachmentAttributeInRange:","fixAttributesInRange:","fixFontAttributeInRange:","fixParagraphStyleAttributeInRange:","fixed1","fixedCompression","fixedFontFamily","fixesAttributesLazily","flLigature","flagsChanged:","flashScrollIndicators","flatness","flatten","flattenActiveTracksOnly","flattenAddMovieToDataFork","flattenCompressMovieResource","flattenDontInterleaveFlatten","flattenFSSpecPtrIsDataRefRecordPtr","flattenForceMovieResourceBeforeMovieData","flavorDataPromised","flavorNotSaved","flavorSenderOnly","flavorSenderTranslated","flavorSystemTranslated","flavorTypeDirectory","flavorTypeHFS","flavorTypePromiseHFS","flipImageHorizontal:","flipImageVertical:","floatForKey:","floatForKey: inTable:","floatGrowProc","floatProc","floatSideGrowProc","floatSideProc","floatSideZoomGrowProc","floatSideZoomProc","floatValue","floatZoomGrowProc","floatZoomProc","floatingPointException","floorl","flush","flushBuffer","flushBufferedKeyEvents","flushCachedData","flushCmd","flushFromRam","flushGraphics","flushHostCache","flushInputQueue","flushWindow","flushWindowIfNeeded","fmt1Err","fmt2Err","fnOpnErr","fnfErr","focus","focusRingType","focusStack","focusView","folderWithPath:","font","fontAttributes","fontAttributesInRange:","fontBit","fontColor","fontDecError","fontDescriptor","fontDescriptorByAddingAttributes:","fontDescriptorWithFace:","fontDescriptorWithFamily:","fontDescriptorWithFontAttributes:","fontDescriptorWithMatrix:","fontDescriptorWithName: matrix:","fontDescriptorWithName: size:","fontDescriptorWithSize:","fontDescriptorWithSymbolicTraits:","fontDescriptorsInCollection:","fontFamily","fontManager: willIncludeFont:","fontMenu:","fontName","fontNamed: hasTraits:","fontNamesForFamilyName: ","fontNotDeclared","fontNotOutlineErr","fontPanel:","fontPanelFontSelectionQDStyleVersionErr","fontPanelSelectionStyleErr","fontPanelShowErr","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontSubErr","fontVariant","fontWeight","fontWithDescriptor: size:","fontWithDescriptor: textTransform:","fontWithFamily: traits: weight: size:","fontWithName: matrix:","fontWithName: size:","fontWithName: size: ","fontWithSize: ","forceDither","forceReadBit","forceReadMask","forceUpdateNewBuffer","forceUpdateRedraw","foregroundColor","forgetWord:","form","formAlias","formCreator","formIntersectionWithCharacterSet:","formUnionWithCharacterSet:","formUserPropertyID","format","formatDescription","formatDescriptionAttributes","formatDescriptions","formatType","formatWidth","formattedAddressFromDictionary:","formatter","formatterBehavior","formattingDictionary","formattingStringsFilename","forms","forwardInvocation:","forwardItem","forwardListCount","forwardListWithLimit:","foundDevices","fourBitMode","fourthVidMode","fpclassify","fract1","fraction","fractionOfDistanceThroughGlyphForPoint: inTextContainer:","fragAppNotFound","fragArchError","fragConnectionIDNotFound","fragConstErr","fragContextNotFound","fragCorruptErr","fragDupRegLibName","fragFormatUnknown","fragHadUnresolveds","fragImportTooNew","fragImportTooOld","fragInitLoop","fragInitRtnUsageErr","fragInvalidFragmentUsage","fragLastErrCode","fragLibConnErr","fragLibNotFound","fragMgrInitErr","fragNoAddrSpace","fragNoContextIDs","fragNoMem","fragObjectInitSeqErr","fragSectionNotFound","fragSymbolNotFound","fragUserInitProcErr","fragment","frame","frameAutosaveName","frameBorder","frameBorders","frameCenterRotation","frameElement","frameFromLayoutRect:","frameImageAtTime:","frameImageAtTime: withAttributes: error:","frameLength","frameLoadDelegate","frameName","frameOfCellAtColumn: row:","frameOfColumn:","frameOfInsideOfColumn:","frameOfOutlineCellAtRow:","frameRate","frameRectForContentRect:","frameRectForContentRect: styleMask:","frameRotation","frameSizeForContentSize: hasHorizontalScroller: hasVerticalScroller: borderType:","frameView","frames","freeCmd","freePacket","fullJustifyLineAtGlyphIndex:","fullName","fullPathForApplication:","fullScreenAllowEvents","fullScreenCaptureAllDisplays","fullScreenCaptureDisplay","fullScreenDontChangeMenuBar","fullScreenDontSwitchMonitorResolution","fullScreenHideCursor","fullScreenPreflightSize","function","functionWithControlPoints:","functionWithControlPoints: : : : ","functionWithName:","functionWithName: ","function_table_entry","gState","gWorldsNotSameDepthAndSizeErr","gammal","genCdevRangeBit","generalPasteboard","generateApertureModeDimensions","generateGlyphsForGlyphStorage: desiredNumberOfCharacters: glyphIndex: characterIndex:","generatesCalendarDates","generatesDecimalNumbers","generatesDeviceOrientationNotifications","genericCMYKColorSpace","genericGrayColorSpace","genericRGBColorSpace","genresQuery","geometryFlipped","getAccessTypes","getAddress","getAddress:","getAddressString","getAdvancements: forGlyphs: count:","getAdvancements: forPackedGlyphs: length:","getAmpCmd","getArgument: atIndex:","getArgumentTypeAtIndex:","getArrayValue","getAttribute:","getAttributeDataElement:","getAttributeID","getAttributeNS:","getAttributeNS: localName:","getAttributeNode:","getAttributeNodeNS:","getAttributeNodeNS: localName:","getAttributes","getAudioDeviceID","getAudioStreamPacketDescriptions: inRange:","getAvailableCommandPayloadLength:","getAvailableCommandResponsePayloadLength:","getBitmapDataPlanes:","getBluetoothDevice","getBoundingRects: forGlyphs: count:","getBuffer","getBuffer: length:","getBufferType","getBytes:","getBytes: length:","getBytes: maxLength: usedLength: encoding: options: range: remainingRange:","getBytes: range:","getCFRunLoop","getCString:","getCString: maxLength:","getCString: maxLength: encoding:","getCString: maxLength: range: remainingRange:","getChannelID","getCharacters:","getCharacters: range:","getChecksumDemand","getChecksumSupport","getClassOfDevice","getClockComponentCmd","getClockOffset","getColor: location: atIndex:","getCommandClient","getCommandGate","getComponents:","getCompression: factor:","getComputedStyle:","getComputedStyle: pseudoElement:","getConnectionHandle","getControlPointAtIndex: values:","getControlPointAtIndex: values: ","getController","getCounterValue","getCurrentMedium","getCyan: magenta: yellow: black: alpha:","getDataElement","getDataValue","getDefaultVCard:","getDescriptionText","getDevice","getDeviceClassMajor","getDeviceClassMinor","getDeviceRef","getDeviceSelectorControllerRef","getDeviceSupportedFeatures","getElementById:","getElementsByName:","getElementsByTagName:","getElementsByTagNameNS:","getElementsByTagNameNS: localName:","getEncryptionMode","getExternalMethodForIndex","getExtraFlags","getFeatures","getFileSystemInfoForPath: isRemovable: isWritable: isUnmountable: description: type:","getFileSystemRepresentation: maxLength:","getFilters","getFirstUnlaidCharacterIndex: glyphIndex:","getFlags","getFloatValue:","getGatewaySupportedFeatures","getGlyphs: range:","getGlyphsInRange: glyphs: characterIndexes: glyphInscriptions: elasticBits:","getGlyphsInRange: glyphs: characterIndexes: glyphInscriptions: elasticBits: bidiLevels:","getHardwareAddress","getHeaderBytes","getHue: saturation: brightness: alpha:","getIDDataElement","getIfnet","getIncomingMTU","getIncomingRFCOMMChannelID","getIndex","getIndexes:","getIndexes: maxCount: inIndexRange:","getInfoForFile: application: type:","getInputStream: outputStream:","getInterfaceState","getInterfaceType","getKey","getL2CAPChannelRef","getL2CAPPSM:","getLastInquiryUpdate","getLastNameUpdate","getLastServicesUpdate","getLineDash: count: phase:","getLineFragmentInsertionPointsForCharacterAtIndex: alternatePositions: inDisplayOrder: positions: characterIndexes:","getLineFragmentRect: usedRect: forParagraphSeparatorGlyphRange: atProposedOrigin:","getLineFragmentRect: usedRect: remainingRect: forStartingGlyphAtIndex: proposedRect: lineSpacing: paragraphSpacingBefore: paragraphSpacingAfter:","getLineStart: end: contentsEnd: forRange:","getLinkType","getLocalChannelID","getMTU","getMatchedCSSRules: pseudoElement:","getMatchedCSSRules: pseudoElement: authorOnly:","getMaxPacketLength","getMaxPacketSize","getMaxTransferUnit","getMediaAddressLength","getMediaHeaderLength","getMediumDictionary","getMediumWithIndex","getMediumWithType","getMinPacketSize","getModifierState:","getName","getNameOrAddress","getNamePrefix","getNamedItem:","getNamedItemNS:","getNamedItemNS: localName:","getNetworkData","getNetworkDataCapacity","getNetworkDataHandle","getNotificationAction","getNotificationParameter","getNotificationTarget","getNumberOfRows: columns:","getNumberValue","getObjectID","getObjectValue: forString: errorDescription:","getObjectValue: forString: range: error:","getObjects:","getObjects: andKeys:","getObjects: range:","getOpenGLBufferContext: pixelFormat:","getOptions","getOutgoingMTU","getOutgoingRFCOMMChannelID","getOutputHandler","getOutputQueue","getOverrideStyle:","getOverrideStyle: pseudoElement:","getPSM","getPacketBufferConstraints","getPacketFilters","getPageScanMode","getPageScanPeriodMode","getPageScanRepetitionMode","getPairingControllerRef","getParagraphStart: end: contentsEnd: forRange:","getParameter","getPeriodicDelay: interval:","getPixel: atX: y:","getPixelBufferPixelFormat:","getPowerLevel","getPrompt","getPropertyCSSValue:","getPropertyPriority:","getPropertyShorthand:","getPropertyValue:","getRFCOMMChannel","getRFCOMMChannelID:","getRFCOMMChannelRef","getRGBColorValue","getRateCmd","getRateMultiplierCmd","getRectValue","getRectsBeingDrawn: count:","getRectsExposedDuringLiveResize: count:","getRed: green: blue: alpha:","getRemoteChannelID","getRequiredSDPRFCOMMChannelIDForDevice:","getRequiredSDPServiceRecordForDevice:","getResults","getReturnValue:","getRow: column: forPoint:","getRow: column: ofCell:","getSDPDataElementRef","getSDPServiceRecordRef","getSDPUUIDRef","getSearchAttributes","getSelMsg","getSelectedMedium","getService","getServiceBrowserControllerRef","getServiceClassMajor","getServiceName","getServiceRecordForUUID:","getServiceRecordHandle:","getServices","getSize","getSizeDescriptor","getSpeed","getStreamsToHost: port: inputStream: outputStream:","getStringValue","getSupportedFeatures:","getTIFFCompressionTypes: count:","getTitle","getType","getTypeDescriptor","getUUIDValue","getUUIDWithLength:","getUnitNumber","getValue","getValue:","getValues: forAttribute: forVirtualScreen:","getValues: forParameter:","getVlanTagDemand","getVolumeCmd","getWhite: alpha:","getctitle","getitem","glyphAtIndex:","glyphAtIndex: isValidIndex:","glyphGenerator","glyphIndexForCharacterAtIndex:","glyphIndexForPoint: inTextContainer:","glyphIndexForPoint: inTextContainer: fractionOfDistanceThroughGlyph:","glyphIndexToBreakLineByHyphenatingWordAtIndex:","glyphIndexToBreakLineByWordWrappingAtIndex:","glyphInfoWithCharacterIdentifier: collection: baseString:","glyphInfoWithGlyph: forFont: baseString:","glyphInfoWithGlyphName: forFont: baseString:","glyphIsEncoded:","glyphName","glyphPacking","glyphRangeForBoundingRect: inTextContainer:","glyphRangeForBoundingRectWithoutAdditionalLayout: inTextContainer:","glyphRangeForCharacterRange: actualCharacterRange:","glyphRangeForTextContainer:","glyphWithName:","goBack","goBack:","goForward","goForward:","goToBackForwardItem:","goToDestination:","goToFirstPage:","goToItem:","goToLastPage:","goToNextPage:","goToPage:","goToPreviousPage:","goToRect: onPage:","goToSelection:","goodbye","gotoBeginning","gotoBeginning:","gotoEnd","gotoEnd:","gotoNextPane","gotoNextSelectionPoint","gotoNextSelectionPoint:","gotoPane:","gotoPosterFrame:","gotoPosterTime","gotoPreviousPane","gotoPreviousSelectionPoint","gotoPreviousSelectionPoint:","gpt_ent","gpt_hdr","grabPictCurrentImage","grabPictIgnoreClip","grabPictOffScreen","grabTimeComplete","gradientType","graphicsContext","graphicsContextWithAttributes:","graphicsContextWithBitmapImageRep:","graphicsContextWithGraphicsPort: flipped:","graphicsContextWithWindow:","graphicsExporterCanTranscode","graphicsExporterIsBaseExporter","graphicsExporterUsesImageCompressor","graphicsImporterCanValidateFile","graphicsImporterDoesntDrawAllPixels","graphicsImporterDontKnowIfDrawAllPixels","graphicsImporterDrawsAllPixels","graphicsImporterHasMIMEList","graphicsImporterIsBaseImporter","graphicsImporterSubTypeIsFileExtension","graphicsImporterUsesImageDecompressor","graphicsModeComposition","graphicsModePerComponentAlpha","graphicsModePreBlackAlpha","graphicsModePreMulColorAlpha","graphicsModePreWhiteAlpha","graphicsModeStraightAlpha","graphicsModeStraightAlphaBlend","graphicsPort","graveUprE","graveUprI","graveUprO","graveUprU","grayColor","greekingThreshold","green","greenColor","greenComponent","gregorianStartDate ","gridColor","gridForIdentifier:","gridStyleMask","grids","groupDoubleAction","groupIdentityWithPosixGID: authority:","groupName","groupTableViewBackgroundColor","groupedResults","groupingAttributes","groupingLevel","groupingSeparator","groupingSize","groupingType","groups","groupsByEvent","growGlyphCaches: fillGlyphInfo:","guessesForWord:","guestNotAllowedErr","gxPath","gxPaths","gxPoint","hAxisOnly","hMenuCmd","hMenuFindErr","hachek","handleClientClose","handleClientOpen","handleClose","handleCloseScriptCommand:","handleCommand","handleEvent:","handleEvent: client:","handleFailureInFunction: file: lineNumber: description:,...","handleFailureInMethod: object: file: lineNumber: description:,...","handleIncomingRFCOMMChannelOpened: channel:","handleIsOpen","handleMachMessage:","handleMouseEvent:","handleOpen","handlePortMessage:","handlePrintScriptCommand:","handleQueryWithUnboundKey:","handleSaveScriptCommand:","handleTakeValue: forUnboundKey:","handleTextCheckingResults: forRange: types: options: orthography: wordCount:","handlerCGrafPortOnly","handlerCanClip","handlerCanHandleComplexMatrix","handlerCanMatte","handlerCanPicSave","handlerCanSend","handlerCanSendImageData","handlerCanTransferMode","handlerHasSpatial","handlerNeedsBuffer","handlerNoIdle","handlerNoScheduler","handlerNotFoundErr","handlerWantsDestinationPixels","handlerWantsTime","handlesSyncAlerts","handshakeDataLength","hardLinkPointingTo: inFilesystem:","hardwareConfigErr","hardwareRevision","hasAggressiveIdling","hasAlarm","hasAlpha","hasAppearanceStream","hasAttribute:","hasAttributeNS:","hasAttributeNS: localName:","hasAttributes","hasBytesAvailable","hasChanges","hasChapters","hasCharacteristic:","hasChargeNotification","hasChildNodes","hasCloseBox","hasConfigureSheet","hasDeepSleep","hasDeliveryClassBeenConfigured","hasDimSuspendSupport","hasDimmingSupport","hasDynamicDepthLimit","hasEditedDocuments","hasFaultForRelationshipNamed:","hasFeature:","hasFeature: version:","hasHorizontalRuler","hasHorizontalScroller","hasInternalModem","hasLearnedWord:","hasMarkedText","hasMediaType:","hasMemberInPlane:","hasMovieExportUserInterface","hasMovieImportMIMEList","hasMovieImportUserInterface","hasNonContiguousLayout","hasOpenOBEXConnection","hasOpenTransportConnection","hasParameters","hasPassword","hasPrefix:","hasProcessorCycling","hasReducedSpeed","hasSCSIDiskMode","hasServiceFromArray:","hasShadow","hasSharedModemPort","hasSleep","hasSpaceAvailable","hasStartupTimer","hasSubmenu","hasSucceeded","hasSuffix:","hasTestCaseSignature","hasText","hasThousandSeparators","hasTitleBar","hasUnappliedChanges","hasUnautosavedChanges","hasUndoManager","hasUnsavedChanges","hasValidObjectValue","hasVerticalRuler","hasVerticalScroller","hasView","hasWakeOnLid","hasWakeOnNetActivity","hasWakeupTimer","hash","hashTableWithOptions:","hashTableWithWeakObjects","headIndent","headerCell","headerColor","headerLevel","headerRectOfColumn:","headerTextColor","headerToolTip","headerView","headers","headingAccuracy","headingAvailable","headingFilter","height","heightAdjustLimit","heightTracksTextView","helpAnchor","helpInspectorClassName","helpRequested:","hiArchiveEncodingCompleteErr","hiArchiveHIObjectIgnoresArchivingErr","hiArchiveKeyNotAvailableErr","hiArchiveTypeMismatchErr","hiChargeBit","hiChargeMask","hiObjectClassExistsErr","hiObjectClassHasInstancesErr","hiObjectClassHasSubclassesErr","hiObjectClassIsAbstractErr","hidden","hide","hide:","hideOtherApplications","hideOtherApplications:","hidePalettes","hidesAccessoryWhenEditing","hidesBackButton","hidesBottomBarWhenPushed","hidesEmptyCells","hidesForSinglePage","hidesOnDeactivate","hidesWhenStopped","hierMenu","highLevelEventMask","highlight:","highlight: withFrame: inView:","highlightCell: atRow: column:","highlightColor","highlightColorInView:","highlightColorWithFrame: inView:","highlightMode","highlightSelectionInClipRect:","highlightWithLevel:","highlighted","highlightedAnimationImages","highlightedBranchImage","highlightedImage","highlightedItemIndex","highlightedSelections","highlightedTableColumn","highlightedTextColor","highlightsBy","hintsAllowBlacklining","hintsAllowDynamicResize","hintsAllowIdleSleep","hintsAllowInterlace","hintsDeinterlaceFields","hintsDontDraw","hintsDontPurge","hintsDontUseVideoOverlaySurface","hintsEnableSubPixelPositioning","hintsFlushVideoInsteadOfDirtying","hintsHighQuality","hintsIgnoreBandwidthRestrictions","hintsInactive","hintsLoop","hintsNoRenderingTimeOut","hintsOffscreen","hintsPalindrome","hintsPlayingEveryFrame","hintsRenderingMode","hintsScrubMode","hintsSingleField","hintsUseScreenBuffer","hintsUseSoundInterp","historyAgeInDaysLimit","historyItemLimit","hitMsg","hitPart","hitTest:","hitTest: ","hitTest: withEvent: ","hitTestForEvent: inRect: ofView:","hmBalloonAborted","hmCloseViewActive","hmHelpDisabled","hmHelpManagerNotInited","hmNoBalloonUp","hmOperationUnsupported","hmSameAsLastBalloon","hmSkippedBalloon","hmUnknownHelpType","hmWrongVersion","horizontalAccuracy","horizontalCornerRadius","horizontalEdgePadding","horizontalLineScroll","horizontalPageScroll","horizontalPagination","horizontalRulerView","horizontalScroller","host","hostName","hostWindow","hostWithAddress:","hostWithName:","hostname","hotSpot","hour","hourField","hourMask","hourOfDay","hrHTMLRenderingLibNotInstalledErr","hrLeadingZ","hrMiscellaneousExceptionErr","hrURLNotHandledErr","hrUnableToResizeHandleErr","href","hreflang","hspace","htmlFor","httpEquiv","hueComponent","hwParamErr","hyphenCharacterForGlyphAtIndex:","hyphenationFactor","hyphenationFactorForGlyphAtIndex:","hypotl","iIOAbort","iIOAbortErr","iMemFullErr","iPodMusicPlayer","ibAlternateMinimumHeight","ibAlternateMinimumWidth","ibAwakeInDesignableDocument:","ibBaseLineAtIndex:","ibBaseLineForCellSize:","ibBaselineAtIndex:","ibBaselineCount","ibDefaultChildren","ibDefaultImage","ibDefaultLabel","ibDesignableContentView","ibDidAddToDesignableDocument:","ibDidRemoveFromDesignableDocument:","ibDrawFrameWhileResizing","ibEditorClass","ibHasAlternateMinimumHeight","ibHasAlternateMinimumWidth","ibHasBaseLine","ibIncompatibleProperties","ibIsChildInitiallySelectable:","ibIsChildViewUserMovable:","ibIsChildViewUserSizable:","ibIsContainer","ibLayoutInset","ibMatchPrototype:","ibMaximumSize","ibMinimumSize","ibNearestTargetForDrag","ibNumberOfBaseLine","ibObjectAtLocation: inWindowController:","ibPasteboardTypes","ibPopulateAttributeInspectorClasses:","ibPopulateKeyPaths:","ibPreferredDesignSize","ibPreferredResizeDirection","ibRectForChild: inWindowController:","ibShadowInset","ibShouldShowContainerGuides","ibSupportsInsideOutSelection","ibSupportsLiveResize","ibWidgetType","icmFrameAlreadyDecoded","icmFrameTimeDecodeImmediately","icmFrameTimeDoNotDisplay","icmFrameTimeHasDecodeTime","icmFrameTimeHasVirtualStartTimeAndDuration","icmFrameTimeIsNonScheduledDisplayTime","icmax1_","icon","iconForFile:","iconForFileType:","iconForFiles:","iconItem","iconType","idName","identifier","identifierAtIndex:","identifiersForRecordsToDeleteForEntityName: moreComing: error:","identity","identityAuthorityWithCSIdentityAuthority:","identityMatrixType","identityUniqueId","identityWithCSIdentity:","identityWithName: authority:","identityWithPersistentReference:","identityWithUUIDString: authority:","idleTimerDisabled","ieeeck_","ifnet_stat_increment_param","ignore","ignoreModifierKeysWhileDragging","ignoreSpelling:","ignoreWord: inSpellDocumentWithTag:","ignoredWordsInSpellDocumentWithTag:","ignoresAlpha","ignoresInput","ignoresMouseEvents","ignoresMultiClick","ilaenv_","illegalChannelErr","illegalChannelOSErr","illegalCharacterSet","illegalControllerErr","illegalControllerOSErr","illegalInstructionException","illegalInstrumentErr","illegalInstrumentOSErr","illegalKnobErr","illegalKnobOSErr","illegalKnobValueErr","illegalKnobValueOSErr","illegalNoteChannelErr","illegalNoteChannelOSErr","illegalPartErr","illegalPartOSErr","illegalScrapFlavorFlagsErr","illegalScrapFlavorSizeErr","illegalScrapFlavorTypeErr","illegalVoiceAllocationErr","illegalVoiceAllocationOSErr","image","image: didLoadPartOfRepresentation: withValidRows:","image: didLoadRepresentation: withStatus:","image: didLoadRepresentationHeader:","image: willLoadRepresentation:","imageAccumulatorWithExtent: format:","imageAlignment","imageAndTitleOffset","imageAndTitleWidth","imageBounds","imageBrowser: backgroundWasRightClickedWithEvent:","imageBrowser: cellAtIndex:","imageBrowser: cellWasDoubleClickedAtIndex:","imageBrowser: cellWasRightClickedAtIndex: withEvent:","imageBrowser: groupAtIndex:","imageBrowser: itemAtIndex:","imageBrowser: moveCellsAtIndexes: toIndex:","imageBrowser: moveItemsAtIndexes: toIndex:","imageBrowser: removeCellsAtIndexes:","imageBrowser: removeItemsAtIndexes:","imageBrowser: writeCellsAtIndexes: toPasteboard:","imageBrowser: writeItemsAtIndexes: toPasteboard:","imageBrowserSelectionDidChange:","imageByApplyingTransform:","imageByCroppingToRect:","imageColorSpace","imageCropRect","imageData","imageDidNotDraw: inRect:","imageDimsWhenDisabled","imageEdgeInsets","imageFileTypes","imageForSegment:","imageForSegmentAtIndex: ","imageForState: ","imageForViewer","imageFrameStyle","imageInsets","imageInterpolation","imageNameForStatus:","imageNamed:","imageNamed: ","imageOrientation","imageOrigin","imagePasteboardTypes","imagePath","imagePicker","imagePickerController: didFinishPickingImage: editingInfo: ","imagePickerController:didFinishPickingMediaWithInfo:","imagePickerControllerDidCancel: ","imagePosition","imageProperties","imageRectForBounds:","imageRectForContentRect: ","imageRectForPaper:","imageRectInRuler","imageRepClassForData:","imageRepClassForFileType:","imageRepClassForPasteboardType:","imageRepClassForType:","imageRepWithCIImage:","imageRepWithContentsOfFile:","imageRepWithContentsOfURL:","imageRepWithData:","imageRepWithPasteboard:","imageRepresentation","imageRepresentationType","imageRepsWithContentsOfFile:","imageRepsWithContentsOfURL:","imageRepsWithData:","imageRepsWithPasteboard:","imageScaling","imageScalingForSegment:","imageSize","imageSubtitle","imageTitle","imageTypes","imageUID","imageURLForStatus:","imageUTType","imageUnfilteredFileTypes","imageUnfilteredPasteboardTypes","imageUnfilteredTypes","imageVersion","imageView","imageWidth","imageWithBitmapData: bytesPerRow:","imageWithCGImage:","imageWithCGImage: ","imageWithCGImage: options:","imageWithCGLayer:","imageWithCGLayer: options:","imageWithCVImageBuffer:","imageWithCVImageBuffer: options:","imageWithColor:","imageWithContentsOfFile: ","imageWithContentsOfURL:","imageWithContentsOfURL: options:","imageWithData:","imageWithData: ","imageWithData: options:","imageWithImageProvider: size:","imageWithSize:","imageWithTexture: size:","imageablePageBounds","images","implementation","importFilter:","importNode:","importNode: deep:","importsGraphics","inButton","inCheckBox","inCollapseBox","inContent","inDesk","inDownButton","inDrag","inGoAway","inGrow","inLabel","inLiveResize","inMenu","inMenuBar","inNoWindow","inPageDown","inPageUp","inProxyIcon","inStructure","inSysWindow","inThumb","inToolbarButton","inTriangle","inUpButton","inZoomIn","inZoomOut","includedKeys","includesPendingChanges","includesPropertyValues","includesSubentities","incompatibleVoice","increaseLengthBy:","increment","incrementBy:","incrementalLoadFromData: complete:","indent:","indentWidth","indentationLevel","indentationMarkerFollowsCell","indentationPerLevel","indentationWidth","indentsWrappedLines","independentConversationQueueing","index","indexAtLocationOfDroppedItem","indexAtPosition:","indexForIdentifier:","indexForPage:","indexGreaterThanIndex:","indexGreaterThanOrEqualToIndex:","indexLessThanIndex:","indexLessThanOrEqualToIndex:","indexOfAccessibilityElement:","indexOfCellWithTag:","indexOfCurrentSlideshowItem","indexOfItem:","indexOfItemAtPoint:","indexOfItemWithObjectValue:","indexOfItemWithRepresentedObject:","indexOfItemWithSubmenu:","indexOfItemWithTag:","indexOfItemWithTarget: andAction:","indexOfItemWithTitle:","indexOfModeWithIdentifier:","indexOfObject:","indexOfObject: inRange:","indexOfObjectIdenticalTo:","indexOfObjectIdenticalTo: inRange:","indexOfResult:","indexOfSelectedItem","indexOfTabViewItem:","indexOfTabViewItemWithIdentifier:","indexOfTickMarkAtPoint:","indexPathByAddingIndex:","indexPathByRemovingLastIndex","indexPathForCell: ","indexPathForObject:","indexPathForRow: inSection: ","indexPathForRowAtPoint: ","indexPathForSelectedRow","indexPathWithIndex:","indexPathWithIndexes: length:","indexPathsForRowsInRect: ","indexPathsForVisibleRows","indexSet","indexSetWithIndex:","indexSetWithIndexesInRange:","indexTitle","indicatorImageInTableColumn:","indicatorStyle","indicesOfObjectsByEvaluatingObjectSpecifier:","indicesOfObjectsByEvaluatingWithContainer: count:","inferredMappingModelForSourceModel:destinationModel:error:","info","infoDictionary","infoForAllScreenNames","infoForBinding:","infoForPreferredScreenNames","infoForScreenName:","information","informativeText","init","initAndTestWithTests:","initAsTearOff","initByReferencingFile:","initByReferencingURL:","initChan0","initChan1","initChan2","initChan3","initChanLeft","initChanRight","initCmd","initCntl","initCompMask","initDailyRecurrenceWithInterval: end:","initDirectoryWithFileWrappers:","initEvent:","initEvent: canBubbleArg: cancelableArg:","initFileURLWithPath:","initFileURLWithPath: isDirectory:","initForConnectionToDevice:","initForIncrementalLoad","initForReadingWithData:","initForURL: withContentsOfURL: ofType: error:","initForWritingWithMutableData:","initIWMErr","initIfnet","initIfnetParams","initImageCell:","initListDescriptor","initMACE3","initMACE6","initMono","initMonthlyRecurrenceWithInterval:","initMonthlyRecurrenceWithInterval: end:","initMonthlyRecurrenceWithInterval: forDayOfTheWeek: forWeekOfTheMonth: end:","initMonthlyRecurrenceWithInterval: forDaysOfTheMonth: end:","initMouseEvent:","initMouseEvent: canBubble: cancelable: view: detail: screenX: screenY: clientX: clientY: ctrlKey: altKey: shiftKey: metaKey: button: relatedTarget:","initMsg","initMutationEvent:","initMutationEvent: canBubble: cancelable: relatedNode: prevValue: newValue: attrName: attrChange:","initNoDrop","initNoInterp","initNotTestWithTest:","initObjectPushWithBluetoothDevice: ","initOffScreenWithSize: colorSpace: composition:","initOrTestWithTests:","initPanMask","initRecordDescriptor","initRegularFileWithContents:","initRemoteWithProtocolFamily: socketType: protocol: address:","initRemoteWithTCPPort: host:","initSRateMask","initStereo","initStereoMask","initSymbolicLinkWithDestination:","initTextCell:","initTextCell: pullsDown:","initToBuffer: capacity:","initToFileAtPath: append:","initToMemory","initToWritableData: error:","initToWritableDataReference: error:","initToWritableFile: error:","initUIEvent:","initUIEvent: canBubble: cancelable: view: detail:","initWeeklyRecurrenceWithInterval:","initWeeklyRecurrenceWithInterval: end:","initWeeklyRecurrenceWithInterval: forDaysOfTheWeek: end:","initWithAEDescNoCopy:","initWithAccessibilityContainer:","initWithAccessory:forProtocol:","initWithActivityIndicatorStyle: ","initWithAddressBook:","initWithAnnotation:reuseIdentifier:","initWithArray:","initWithArray: copyItems:","initWithAttribute:","initWithAttributedString:","initWithAttributes:","initWithAttributes: error:","initWithAudioUnit:","initWithAudioUnit: displayFlags:","initWithAuthenticationChallenge: sender:","initWithBarButtonSystemItem: target: action: ","initWithBitmapData: bytesPerRow: size:","initWithBitmapDataPlanes: pixelsWide: pixelsHigh: bitsPerSample: samplesPerPixel: hasAlpha: isPlanar: colorSpaceName: bitmapFormat: bytesPerRow: bitsPerPixel:","initWithBitmapDataPlanes: pixelsWide: pixelsHigh: bitsPerSample: samplesPerPixel: hasAlpha: isPlanar: colorSpaceName: bytesPerRow: bitsPerPixel:","initWithBitmapHandle:","initWithBitmapImageRep:","initWithBool:","initWithBounds:","initWithBundle:","initWithBundleIdentifier:","initWithBytes: length:","initWithBytes: length: encoding:","initWithBytes: objCType:","initWithBytesNoCopy: length:","initWithBytesNoCopy: length: encoding: freeWhenDone:","initWithBytesNoCopy: length: freeWhenDone:","initWithCGColor:","initWithCGColor: ","initWithCGColorSpace:","initWithCGImage:","initWithCGImage: ","initWithCGImage: options:","initWithCGLContext: pixelFormat: colorSpace: composition:","initWithCGLayer:","initWithCGLayer: options:","initWithCIImage:","initWithCString:","initWithCString: encoding:","initWithCString: length:","initWithCStringNoCopy: length: freeWhenDone:","initWithCVImageBuffer:","initWithCVImageBuffer: options:","initWithCalendarIdentifier:","initWithCallbacks: andEngineRef:","initWithCapacity:","initWithChangeType: recordIdentifier: changes:","initWithChar:","initWithCharacters: length:","initWithCharactersNoCopy: length: freeWhenDone:","initWithClassPath:","initWithCoder:","initWithColor:","initWithColorSyncProfile:","initWithColors:","initWithColors: atLocations: colorSpace:","initWithColorsAndLocations:","initWithCommandDescription:","initWithCompiledData: error:","initWithComponent:","initWithComposition:","initWithComposition: colorSpace:","initWithCompoundTypes:","initWithCondition:","initWithConnection:","initWithContainerClassDescription: containerSpecifier: key:","initWithContainerClassDescription: containerSpecifier: key: index:","initWithContainerClassDescription: containerSpecifier: key: name:","initWithContainerClassDescription: containerSpecifier: key: relativePosition: baseSpecifier:","initWithContainerClassDescription: containerSpecifier: key: startSpecifier: endSpecifier:","initWithContainerClassDescription: containerSpecifier: key: test:","initWithContainerClassDescription: containerSpecifier: key: uniqueID:","initWithContainerSize:","initWithContainerSpecifier: key:","initWithContent:","initWithContentRect: styleMask: backing: defer:","initWithContentRect: styleMask: backing: defer: screen:","initWithContentSize: preferredEdge:","initWithContentsOfFile:","initWithContentsOfFile: ","initWithContentsOfFile: byReference:","initWithContentsOfFile: encoding: error:","initWithContentsOfFile: ofType:","initWithContentsOfFile: options: error:","initWithContentsOfFile: usedEncoding: error:","initWithContentsOfMappedFile:","initWithContentsOfURL:","initWithContentsOfURL: byReference:","initWithContentsOfURL: encoding: error:","initWithContentsOfURL: error:","initWithContentsOfURL: language: error:","initWithContentsOfURL: ofType:","initWithContentsOfURL: ofType: error:","initWithContentsOfURL: options:","initWithContentsOfURL: options: error:","initWithContentsOfURL: usedEncoding: error:","initWithControlPoints: : : :","initWithControlPoints: : : : ","initWithCoordinate:","initWithCoordinate:addressDictionary:","initWithCustomView: ","initWithData:","initWithData: ","initWithData: MIMEType:","initWithData: URL: MIMEType: textEncodingName: frameName:","initWithData: encoding:","initWithData: error:","initWithData: options:","initWithData: options: documentAttributes: error:","initWithData: options: error:","initWithDataRef: type:","initWithDataRefData: type:","initWithDataReference: error:","initWithDateFormat: allowNaturalLanguage:","initWithDecimal:","initWithDefaults: initialValues:","initWithDefinition: fromArchive:","initWithDelegate:","initWithDelegate: name:","initWithDescriptorType: bytes: length:","initWithDescriptorType: data:","initWithDestination:","initWithDevice:","initWithDictionary:","initWithDictionary: copyItems:","initWithDocFormat: documentAttributes:","initWithDocument:","initWithDomain: code: userInfo:","initWithDomain: type: name:","initWithDomain: type: name: port:","initWithDouble:","initWithDrawSelector: delegate:","initWithDuration: animationCurve:","initWithElementCode: properties: data:","initWithElementValue:","initWithEntity: insertIntoManagedObjectContext:","initWithEntity:insertIntoManagedObjectContext:","initWithEventClass: eventID: targetDescriptor: returnID: transactionID:","initWithExpressionType:","initWithExtent: format:","initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:","initWithFile: delegate:","initWithFile: error:","initWithFileAtPath:","initWithFileDescriptor:","initWithFileDescriptor: closeOnDealloc:","initWithFilePath:","initWithFileWrapper:","initWithFilterPredicates:","initWithFireDate: interval: target: selector: userInfo: repeats:","initWithFlags: rights: environment:","initWithFloat:","initWithFocusedViewRect:","initWithFontAttributes:","initWithFormat:","initWithFormat: arguments:","initWithFormat: locale:","initWithFormat: locale: arguments:","initWithFormat: shareContext:","initWithFrame:","initWithFrame: ","initWithFrame: filter:","initWithFrame: frameName: groupName:","initWithFrame: isPreview:","initWithFrame: javaFrameClassName:","initWithFrame: mode: cellClass: numberOfRows: numberOfColumns:","initWithFrame: mode: prototype: numberOfRows: numberOfColumns:","initWithFrame: pixelFormat:","initWithFrame: pullsDown:","initWithFrame: reuseIdentifier: ","initWithFrame: style: ","initWithFrame: textContainer:","initWithFrames:","initWithHTML: baseURL: documentAttributes:","initWithHTML: documentAttributes:","initWithHTML: options: documentAttributes:","initWithHTMLString:","initWithHost: port: protocol: realm: authenticationMethod:","initWithHostname: portnumber:","initWithHue: saturation: brightness: alpha: ","initWithICCProfileData:","initWithID: attributeElement:","initWithID: attributeElementValue:","initWithIconHandle:","initWithIconRef:","initWithIdentifier:","initWithIdentity:certificates:persistence:","initWithImage:","initWithImage: ","initWithImage: foregroundColorHint: backgroundColorHint: hotSpot:","initWithImage: hotSpot:","initWithImage: keysAndValues:key0","initWithImage: options:","initWithImage: style: target: action: ","initWithImage:highlightedImage:","initWithImageProperties:","initWithImageProvider: size:","initWithIncomingDevice:","initWithIncomingRFCOMMChannel:","initWithIndex:","initWithIndexSet:","initWithIndexes: length:","initWithIndexesInRange:","initWithInt:","initWithInteger:","initWithInvocation:","initWithItemIdentifier:","initWithItems:","initWithItems: ","initWithKey: ascending:","initWithKey: ascending: selector:","initWithKeyOptions: valueOptions: capacity:","initWithKeyPointerFunctions: valuePointerFunctions: capacity:","initWithKind:","initWithKind: options:","initWithLanguage: encoding:","initWithLayer: ","initWithLeftExpression: rightExpression: customSelector:","initWithLeftExpression: rightExpression: modifier: type: options:","initWithLeftExpression:rightExpression:customSelector:","initWithLeftExpression:rightExpression:modifier:type:options:","initWithLeftExpressions: rightExpressionAttributeType: modifier: operators: options:","initWithLeftExpressions: rightExpressions: modifier: operators: options:","initWithLength:","initWithLevelIndicatorStyle:","initWithLinkType: pointingTo: inFilesystem:","initWithLocal: connection:","initWithLocaleIdentifier:","initWithLong:","initWithLongLong:","initWithMachPort:","initWithMachPort: options: ","initWithMainResource: subresources: subframeArchives:","initWithManagedObjectModel:","initWithMantissa: exponent: isNegative:","initWithMarkerFormat: options:","initWithMediaTypes:","initWithMemoryCapacity: diskCapacity: diskPath:","initWithMovie:","initWithMovie: timeRange: error:","initWithName:","initWithName: URI:","initWithName: bundleIdentifier:","initWithName: controllerClass: delegateClass:","initWithName: data:","initWithName: dataProducer:","initWithName: fromFile:","initWithName: host:","initWithName: reason: userInfo:","initWithName: stringValue:","initWithName: webFrameView: webView:","initWithNativeHandle:","initWithNativeHandle: closeOnDealloc:","initWithNetService:","initWithNibName:","initWithNibName: bundle:","initWithNibName: bundle: ","initWithNibNamed: bundle:","initWithNotificationCenter:","initWithOBEXSession:","initWithObject: inDocument:","initWithObjectID:","initWithObjectSpecifier: comparisonOperator: testObject:","initWithObjects:","initWithObjects: NS_REQUIRES_NIL_TERMINATION","initWithObjects: count:","initWithObjects: forKeys:","initWithObjects: forKeys: count:","initWithObjectsAndKeys:","initWithObjectsAndKeys: NS_REQUIRES_NIL_TERMINATION","initWithOpenGLContext: pixelFormat: file:","initWithOptions:","initWithOptions: capacity:","initWithPID:","initWithPage: atPoint:","initWithPageIndex: atPoint: fileURL:","initWithPasteboard:","initWithPasteboard: error:","initWithPath:","initWithPath: documentAttributes:","initWithPatternImage: ","initWithPersistentStoreCoordinator: configurationName: URL: options:","initWithPersistentStoreCoordinator:configurationName:URL:options:","initWithPickerMask: colorPanel:","initWithPlainTextString:","initWithPlugIn: viewNibName:","initWithPointerFunctions:","initWithPointerFunctions: capacity:","initWithPosition: objectSpecifier:","initWithProducer:","initWithProductIdentifiers:","initWithProgressViewStyle: ","initWithProperties:","initWithProtectionSpace: proposedCredential: previousFailureCount: failureResponse: error: sender:","initWithProtocolFamily: socketType: protocol: address:","initWithProtocolFamily: socketType: protocol: socket:","initWithProxyHost: port: type: realm: authenticationMethod:","initWithQuickTimeMedia: error:","initWithQuickTimeMovie: disposeWhenDone: error:","initWithQuickTimeTrack: error:","initWithRTF: documentAttributes:","initWithRTFD: documentAttributes:","initWithRTFDFileWrapper: documentAttributes:","initWithReceivePort: sendPort:","initWithReceivePort: sendPort: components:","initWithRect:","initWithRect: options: owner: userInfo:","initWithRed: green: blue: alpha: ","initWithReferenceToData:","initWithReferenceToData: name: MIMEType:","initWithReferenceToFile:","initWithReferenceToURL:","initWithRepresentedObject:","initWithRequest:","initWithRequest: cachedResponse: client:","initWithRequest: delegate:","initWithRequest: delegate: startImmediately: ","initWithResource: action: parameters:","initWithResponse: data:","initWithResponse: data: userInfo: storagePolicy:","initWithResumeData: delegate: path:","initWithRootElement:","initWithRootViewController: ","initWithRoundingMode: scale: raiseOnExactness: raiseOnOverflow: raiseOnUnderflow: raiseOnDivideByZero:","initWithRubyObject:","initWithRubyScriptCString:","initWithRubyScriptString:","initWithRulerView: markerLocation: image: imageOrigin:","initWithSDPServiceRecord:","initWithScheme: host: path:","initWithScrollView: orientation:","initWithSearchBar:contentsController:","initWithSection:","initWithSelector:","initWithSendPort: receivePort: components:","initWithSerializedRepresentation:","initWithServer: delegate: client:","initWithServer: panelType:","initWithSession:","initWithSessionID:displayName:sessionMode:","initWithSet:","initWithSet: copyItems:","initWithShort:","initWithSize:","initWithSize: depth: separate: alpha:","initWithSource:","initWithSource: language:","initWithSourceModel: destinationModel:","initWithSourceModel:destinationModel:","initWithStartingColor: endingColor:","initWithString:","initWithString: attributes:","initWithString: calendarFormat:","initWithString: calendarFormat: locale:","initWithString: locale:","initWithString: relativeToURL:","initWithStyle: ","initWithStyle:reuseIdentifier:","initWithSuiteName: className: dictionary:","initWithSuiteName: commandName: dictionary:","initWithTCPPort:","initWithTabBarSystemItem: tag: ","initWithTable: startingRow: rowSpan: startingColumn: columnSpan:","initWithTarget: connection:","initWithTarget: protocol:","initWithTarget: selector: object:","initWithTest:","initWithTextAlignment: location: options:","initWithTexture: size: flipped:","initWithTextureTarget: textureInternalFormat: textureMaxMipMapLevel: pixelsWide: pixelsHigh:","initWithTimeInterval: sinceDate:","initWithTimeIntervalSinceNow:","initWithTimeIntervalSinceReferenceDate:","initWithTitle:","initWithTitle: ","initWithTitle: action: keyEquivalent:","initWithTitle: delegate: cancelButtonTitle: destructiveButtonTitle: otherButtonTitles: , ...","initWithTitle: image: tag: ","initWithTitle: message: delegate: cancelButtonTitle: otherButtonTitles: , ...","initWithTitle: style: target: action: ","initWithTransform:","initWithTrust:","initWithType: error:","initWithType: location:","initWithType: sizeDescriptor: size: value:","initWithType: subpredicates:","initWithType:subpredicates:","initWithURL:","initWithURL: MIMEType: expectedContentLength: textEncodingName:","initWithURL: byReference:","initWithURL: cachePolicy: timeoutInterval:","initWithURL: cached:","initWithURL: documentAttributes:","initWithURL: error:","initWithURL: options: documentAttributes: error:","initWithURL:settings:error:","initWithURLString: title: lastVisitedTimeInterval:","initWithUTF8String:","initWithUUID16:","initWithUUID32:","initWithUnsignedChar:","initWithUnsignedInt:","initWithUnsignedInteger:","initWithUnsignedLong:","initWithUnsignedLongLong:","initWithUnsignedShort:","initWithUser:","initWithUser: password: persistence:","initWithVCardRepresentation:","initWithValues: count:","initWithVendor:","initWithViewAnimations:","initWithVoice:","initWithWhite: alpha: ","initWithWindow:","initWithWindow: rect:","initWithWindowNibName:","initWithWindowNibName: owner:","initWithWindowNibPath: owner:","initWithWindowRef:","initWithX:","initWithX: Y:","initWithX: Y: Z:","initWithX: Y: Z: W:","initWithXMLString:","initWithXMLString: error:","initWithXMLString: options: error:","initWithYear: month: day: hour: minute: second: timeZone:","initYearlyRecurrenceWithInterval:","initYearlyRecurrenceWithInterval: end:","initYearlyRecurrenceWithInterval: forDayOfTheWeek: forWeekOfTheMonth: forMonthsOfTheYear: end:","initYearlyRecurrenceWithInterval: forMonthsOfTheYear: end:","initialFirstResponder","initialKeyView","initialPlaybackTime","initialRequest","initialValues","initialize","initializeEnterpriseObjectsFramework","innerHTML","innerRect","innerText","inputClientBecomeActive:","inputClientDisabled:","inputClientEnabled:","inputClientResignActive:","inputDevices","inputDevicesWithMediaType:","inputEvent","inputFieldSeparator","inputImage","inputIsAvailable","inputIsAvailableChanged:","inputKeys","inputMeterLevel","inputMeteringEnabled","inputOutOfBounds","inputPacket","inputStream","inputStreamWithData:","inputStreamWithFileAtPath:","inputText: client:","inputText: key: modifiers: client:","inputs","inquiryLength","inquiryWithDelegate:","insert:","insertAction: atIndex:","insertAttributedString: atIndex:","insertBacktab:","insertBefore:","insertBefore: refChild:","insertCell:","insertChild:","insertChild: atIndex:","insertChildren: atIndex:","insertColor: key: atIndex:","insertColumn:","insertColumn: withCells:","insertCompletion: forPartialWordRange: movement: isFinal:","insertContainerBreak:","insertData:","insertData: data:","insertDescriptor: atIndex:","insertEmptySegmentAt:","insertEntry: atIndex:","insertGlyph: atGlyphIndex: characterIndex:","insertGlyphs: length: forStartingGlyphAtIndex: characterIndex:","insertItem: atIndex:","insertItemWithItemIdentifier: atIndex:","insertItemWithObjectValue: atIndex:","insertItemWithTitle: action: keyEquivalent: atIndex:","insertItemWithTitle: atIndex:","insertLineBreak:","insertNewButtonImage: in:","insertNewObjectForEntityForName: inManagedObjectContext:","insertNewObjectForEntityForName:inManagedObjectContext:","insertNewline:","insertNewlineIgnoringFieldEditor:","insertNode:","insertObject:","insertObject: atArrangedObjectIndex:","insertObject: atArrangedObjectIndexPath:","insertObject: atIndex:","insertObjects: atArrangedObjectIndexPaths:","insertObjects: atArrangedObjectIndexes:","insertObjects: atIndexes:","insertPage: atIndex:","insertParagraphSeparator:","insertPointer: atIndex:","insertRow:","insertRow: withCells:","insertRowAtIndex: withType: asSubrowOfRow: animate:","insertRowsAtIndexPaths: withRowAnimation: ","insertRule:","insertRule: index:","insertSections: withRowAnimation: ","insertSegmentOfMovie: fromRange: scaledToRange:","insertSegmentOfMovie: timeRange: atTime:","insertSegmentOfTrack: fromRange: scaledToRange:","insertSegmentOfTrack: timeRange: atTime:","insertSegmentWithImage:  atIndex: animated: ","insertSegmentWithTitle: atIndex: animated: ","insertString: atIndex:","insertSublayer: above:","insertSublayer: above: ","insertSublayer: atIndex:","insertSublayer: atIndex: ","insertSublayer: below:","insertSublayer: below: ","insertSubview: aboveSubview: ","insertSubview: atIndex: ","insertSubview: belowSubview: ","insertTab:","insertTabIgnoringFieldEditor:","insertTabViewItem: atIndex:","insertText:","insertText: client:","insertText: replacementRange:","insertTextContainer: atIndex:","insertValue: atIndex: inPropertyWithKey:","insertValue: inPropertyWithKey:","insertValue: withLabel: atIndex:","insertedObjects","insertionContainer","insertionIndex","insertionKey","insertionPointColor","insertionReplaces","insetByX: Y:","insideCmpSH","insmenuitem","inspectedDocument","inspectedObjects","inspectedObjectsController","inspectorClassName","instSamplePreProcessFlag","installStarted","installSucceeded","installerState","instanceAlphaOffset","instanceBlueOffset","instanceColor","instanceCount","instanceDelay","instanceGreenOffset","instanceMethodForSelector:","instanceMethodSignatureForSelector:","instanceRedOffset","instanceTransform","instancesRespondToSelector:","instantiateNibWithExternalNameTable:","instantiateNibWithOwner: topLevelObjects:","instructionBreakpointException","insufficientStackErr","int32Value","int32_t","intArabic","intAttribute: forGlyphAtIndex:","intDrawHook","intEOLHook","intEuropean","intForKey: inTable:","intHitTestHook","intInlineInputTSMTEPostUpdateHook","intInlineInputTSMTEPreUpdateHook","intJapanese","intModemOffHook","intModemRingDetect","intModemRingWakeEnb","intNWidthHook","intOutputMask","intRoman","intTextWidthHook","intValue","intWestern","intWidthHook","integerException","integerForKey:","integerValue","intercellSpacing","interceptEvent:","interest","interfaceOrientation","interfaceStyle","interfaceVersion","interfaces","interiorBackgroundStyle","interiorColor","internalComponentErr","internalQuickTimeError","internalScrapErr","internalSubset","internationalCurrencySymbol","interpolatedColorAtLocation:","interpretKeyEvents:","interrupt","interruptsMaskedErr","intersectHashTable:","intersectSet:","intersectWith:","intersectWithRect:","intersectsHashTable:","intersectsIndexesInRange:","intersectsSet:","intlCurrency","invalidAtomContainerErr","invalidAtomErr","invalidAtomTypeErr","invalidChunkCache","invalidChunkNum","invalidComponentID","invalidDataRef","invalidDataRefContainer","invalidDuration","invalidEditState","invalidFolderTypeErr","invalidHandler","invalidHotSpotIDErr","invalidIconRefErr","invalidImageIndexErr","invalidIndexErr","invalidMedia","invalidMovie","invalidNodeFormatErr","invalidNodeIDErr","invalidPickerType","invalidProductIdentifiers","invalidRect","invalidSampleDescIndex","invalidSampleDescription","invalidSampleNum","invalidSampleTable","invalidSpriteIDErr","invalidSpriteIndexErr","invalidSpritePropertyErr","invalidSpriteWorldPropertyErr","invalidTime","invalidTrack","invalidTranslationPathErr","invalidViewStateErr","invalidate","invalidateAttributesInRange:","invalidateClassDescriptionCache","invalidateCredentials","invalidateCursorRectsForView:","invalidateDisplayForCharacterRange:","invalidateDisplayForGlyphRange:","invalidateGlyphsForCharacterRange: changeInLength: actualCharacterRange:","invalidateGlyphsOnLayoutInvalidationForGlyphRange:","invalidateHashMarks","invalidateLayoutForCharacterRange: actualCharacterRange:","invalidateLayoutForCharacterRange: isSoft: actualCharacterRange:","invalidateLayoutOfLayer:","invalidateShadow","invalidateTextContainerOrigin","inverseForRelationshipKey:","inverseRelationship","invert","invertedSet","invocation","invocationWithMethodSignature:","invoke","invokeDefaultMethodWithArguments:","invokeTest","invokeUndefinedMethodFromWebScript: withArguments:","invokeWithTarget:","ioDirFlg","ioDirMask","ioInProgress","ioQType","ioRegistryEntryPath","io_object_t","ioc_gid","ioc_uid","iocblk","ioctl_shim","iokit_MSG_COUNT","iokit_common_err","iokit_common_msg","iokit_family_err","iokit_family_msg","iokit_fw_err","iokit_usb_err","iokit_usb_msg","iokit_vendor_specific_err","iokit_vendor_specific_msg","isARepeat","isAbsolutePath","isAbstract","isAccessibilityElement","isActive","isAlternate","isAncestorOfProject:","isAnimating","isAnyApplicationSpeaking","isAtEnd","isAttached","isAutodisplay","isAutomaticDashSubstitutionEnabled:","isAutomaticDataDetectionEnabled:","isAutomaticLinkDetectionEnabled","isAutomaticQuoteSubstitutionEnabled","isAutomaticSpellingCorrectionEnabled:","isAutomaticTextReplacementEnabled:","isAutoscroll","isBackButtonVisible","isBaseFont","isBezeled","isBordered","isBusy","isButtonBordered","isBycopy","isByref","isCachedSeparately","isCancelled","isCaseInsensitiveLike:","isClosed","isCollecting","isColor","isColumnSelected:","isCompiled","isCompiling","isCompositionLoaded","isConcurrent","isConfiguration: compatibleWithStoreMetadata:","isConfiguration:compatibleWithStoreMetadata:","isConnected","isConnecting","isContentEditable","isContextHelpModeActive","isContinuous","isContinuousSpellCheckingEnabled","isControllerVisible","isCopyingOperation","isCountOnlyRequest","isCurrent","isCustomButtonVisible","isCustomizing","isDataRetained","isDaylightSavingTime","isDaylightSavingTimeForDate:","isDefault","isDeletableFileAtPath:","isDeleted","isDescendantOf:","isDescendantOfProject:","isDescendantOfView: ","isDeviceConnected","isDirectory","isDisplayedWhenStopped","isDocumentEdited","isDragging","isDrawingToScreen","isEditable","isEditing","isEmpty","isEnabled","isEnabledForEntityName:","isEnabledForSegment:","isEnabledForSegmentAtIndex: ","isEncrypted","isEnteringProximity","isEntryAcceptable:","isEqual:","isEqualNode:","isEqualTo","isEqualTo:","isEqualToArray:","isEqualToAttributedString:","isEqualToCompressionOptions:","isEqualToData:","isEqualToDate:","isEqualToDevice:","isEqualToDictionary:","isEqualToFormatDescription:","isEqualToHashTable:","isEqualToHost:","isEqualToIndexSet:","isEqualToMSF:","isEqualToNumber:","isEqualToSet:","isEqualToString:","isEqualToTimeZone:","isEqualToUUID:","isEqualToValue:","isExcludedFromWindowsMenu","isExecutableFileAtPath:","isExecuting","isExpandable:","isExpanded","isExplicitlyIncluded","isExtensionHidden","isExternal","isFault","isFavorite","isFieldEditor","isFilePackageAtPath:","isFileURL","isFinding","isFinished","isFirstResponder","isFixedPitch","isFlagged","isFlipped","isFloatingPanel","isFlushWindowDisabled","isFontAvailable:","isGathering","isGrammarCheckingEnabled","isGreaterThan:","isGreaterThanOrEqualTo:","isGroupExpandedAtIndex:","isHidden","isHiddenOrHasHiddenAncestor","isHighlighted","isHorizontal","isHorizontallyCentered","isHorizontallyResizable","isHostCacheEnabled","isHotSpotButtonVisible","isIdling","isIgnoringInteractionEvents","isInFullScreenMode","isInUseByAnotherApplication","isIncoming","isIndeterminate","isIndexed","isInserted","isItemExpanded:","isJavaEnabled","isJavaScriptEnabled","isKey: inTable:","isKeyExcludedFromWebScript:","isKeyWindow","isKindOfClass:","isKindOfEntity:","isLeaf","isLenient","isLenient ","isLessThan:","isLessThanOrEqualTo:","isLike:","isListChoice","isLive","isLoaded","isLoading","isLocalized","isLocationRequiredToCreateForKey:","isLocked","isMainThread","isMainWindow","isMap","isMemberOfClass:","isMemberOfGroup:","isMiniaturizable","isMiniaturized","isModalPanel","isMovable","isMovableByWindowBackground","isMultiThreaded","isMultiple","isMuted","isNativeType:","isNotEqualTo:","isOneShot","isOneway","isOpaque","isOpen","isOpened","isOptional","isOptionalArgumentWithName:","isOutputStackInReverseOrder","isPaired","isPaneSplitter","isPartialStringValid: newEditingString: errorDescription:","isPartialStringValid: proposedSelectedRange: originalString: originalSelectedRange: errorDescription:","isPartialStringValidationEnabled ","isPausedRendering","isPlanar","isPlaying","isPreview","isPrimaryInterface","isPrivate","isPropertyImplicit:","isProxy","isRBObject","isRFCOMMChannelOpen","isReadOnly","isReadOnlyKey:","isReadableFileAtPath:","isReady","isRedoing","isRefreshing","isRegistered","isRegularFile","isReleasedWhenClosed","isRemovable","isRendering","isResizable","isRichText","isRotatedFromBase","isRotatedOrScaledFromBase","isRowSelected:","isRulerVisible","isRunning","isSCOConnected","isSameNode:","isScrollable","isSecure","isSelectable","isSelected","isSelectedForSegment:","isSelectionByRect","isSelectorExcludedFromWebScript:","isSeparatorItem","isSessionOnly","isSessionTargetAMac","isSetOnMouseEntered","isSetOnMouseExited","isSheet","isSimpleRectangularTextContainer","isSourceTypeAvailable: ","isSpeaking","isStandalone","isStarted","isStopped","isSubclassOfClass:","isSubsetOfHashTable:","isSubsetOfSet:","isSubviewCollapsed:","isSupersetOfSet:","isSupported:","isSupported: version:","isSuspended","isSymbolicLink","isTemporaryID","isTesting","isTestingInterface","isTitled","isToMany","isTornOff","isTransferInProgress","isTransient","isTranslateButtonVisible","isTransmissionPaused","isTransparent","isTrue","isTrustDisplayed","isUndoRegistrationEnabled","isUndoing","isUntitled","isUpdated","isUpdating","isValid","isValidGlyphIndex:","isVertical","isVerticallyCentered","isVerticallyResizable","isViewLoaded","isVirtual","isVisible","isVolumeButtonVisible","isWellFormed","isWindowLoaded","isWordInUserDictionaries: caseSensitive:","isWritableFileAtPath:","isZoomable","isZoomed","isfinite","isl_const_data","isl_data","isnormal","italic","italicAngle","italicSystemFontOfSize: ","item:","itemAdded:","itemArray","itemAtIndex:","itemAtRow:","itemChanged:","itemDisable","itemForURL:","itemFrameAtIndex:","itemHeight","itemIdentifier","itemNumberInTextList: atIndex:","itemObjectValueAtIndex:","itemPrototype","itemRemoved:","itemSetWithPasteboardTypes:","itemTitleAtIndex:","itemTitles","itemWithTag:","itemWithTitle:","items","iterateNext","ivar_getName  ","ivar_getOffset  ","ivar_getTypeEncoding  ","izmax1_","javaFrame","javaFrameClassName","javaFrameView: didCreateJavaFrame: withJNIEnv:","javaScriptCanOpenWindowsAutomatically","job","jobDisposition","jobForIdentifier:","jobStyleHint","jobTemplate","jobTitle","jobs","jobsPredicateString","key","keyCode","keyCodeMask","keyContextualMenuAttributes","keyContextualMenuCommandID","keyContextualMenuModifiers","keyContextualMenuName","keyContextualMenuSubmenu","keyDown","keyDown:","keyDownMask","keyEnumerator","keyEquivalent","keyEquivalentFont","keyEquivalentModifierMask","keyEquivalentOffset","keyEquivalentRectForBounds:","keyEquivalentWidth","keyEventWithType: location: modifierFlags: timestamp: windowNumber: context: characters: charactersIgnoringModifiers: isARepeat: keyCode:","keyEvtMsg","keyForFileWrapper:","keyGlobalPositionList","keyGlobalsNames","keyIconAndMask","keyLocalPositionList","keyLocalsNames","keyMini1BitMask","keyMini4BitIcon","keyMini8BitIcon","keyOSADialectCode","keyOSADialectLangCode","keyOSADialectName","keyOSADialectScriptCode","keyOSASourceEnd","keyOSASourceStart","keyOldFinderItems","keyParamsNames","keyPath","keyPathsForValuesAffectingPreview","keyPathsForValuesAffectingValueForKey:","keyPointerFunctions","keyProcedureName","keyProgramState","keyRedirectedDocumentList","keySRRecognizer","keySRSpeechResult","keySRSpeechStatus","keyScszResource","keySmall32BitIcon","keySmall4BitIcon","keySmall8BitIcon","keySmall8BitMask","keySmallIconAndMask","keySpecifier","keyStatementRange","keySubjectAttr","keyTimes","keyUp:","keyUpMask","keyViewSelectionDirection","keyWindow","keyWithAppleEventCode:","keyboardAppearance","keyboardFocusIndicatorColor","keyboardType","keychain","keysSortedByValueUsingSelector:","keywordForDescriptorAtIndex:","kfullPrivileges","kicnsIconFamily","killCode","kind","knobColor","knobProportion","knobRectFlipped:","knobThickness","knownTimeZoneNames","knowsPageRange:","label","labelAtIndex:","labelFontOfSize:","labelFontSize","labelForSegment:","lang","langAfricaans","langAfrikaans","langAlbanian","langAmharic","langArabic","langArmenian","langAssamese","langAymara","langAzerbaijanAr","langAzerbaijanRoman","langAzerbaijani","langBasque","langBelorussian","langBengali","langBreton","langBulgarian","langBurmese","langByelorussian","langCatalan","langChewa","langChinese","langCroatian","langCzech","langDanish","langDutch","langDzongkha","langEnglish","langEsperanto","langEstonian","langFaeroese","langFaroese","langFarsi","langFinnish","langFlemish","langFrench","langGalician","langGalla","langGeorgian","langGerman","langGreek","langGreekAncient","langGreekPoly","langGreenlandic","langGuarani","langGujarati","langHebrew","langHindi","langHungarian","langIcelandic","langIndonesian","langInuktitut","langIrish","langIrishGaelic","langIrishGaelicScript","langItalian","langJapanese","langJavaneseRom","langKannada","langKashmiri","langKazakh","langKhmer","langKinyarwanda","langKirghiz","langKorean","langKurdish","langLao","langLappish","langLapponian","langLatin","langLatvian","langLettish","langLithuanian","langMacedonian","langMalagasy","langMalayArabic","langMalayRoman","langMalayalam","langMalta","langMaltese","langManxGaelic","langMarathi","langMoldavian","langMongolian","langMongolianCyr","langNepali","langNorwegian","langNyanja","langNynorsk","langOriya","langOromo","langPashto","langPersian","langPolish","langPortugese","langPortuguese","langPunjabi","langQuechua","langRomanian","langRuanda","langRundi","langRussian","langSaamisk","langSami","langSanskrit","langScottishGaelic","langSerbian","langSimpChinese","langSindhi","langSinhalese","langSlovak","langSlovenian","langSomali","langSpanish","langSundaneseRom","langSwahili","langSwedish","langTagalog","langTajiki","langTamil","langTatar","langTelugu","langThai","langTibetan","langTigrinya","langTongan","langTradChinese","langTurkish","langTurkmen","langUighur","langUkrainian","langUnspecified","langUrdu","langUzbek","langVietnamese","langWelsh","langYiddish","langYugoslavian","language","languageForFileAtPath:","languageForName:","languageLevel","lapProtErr","large1BitMask","large4BitData","large8BitData","lastAnchorForDataClassName:","lastChild","lastColumn","lastComponentOfFileName","lastDskErr","lastError","lastIndex","lastItem","lastKeyView","lastModifiedDate","lastObject","lastPathComponent","lastSyncDateForEntityName:","lastSyncStatusForEntityName:","lastVisibleColumn","lastVisitedTimeInterval","laterDate:","launch","launchAppWithBundleIdentifier: options: additionalEventParamDescriptor: launchIdentifier:","launchApplication:","launchApplication: showIcon: autolaunch:","launchFlags","launchPath","launchedApplications","launchedTaskWithLaunchPath: arguments:","layer","layerClass","layerWithMovie:","layerWithSession:","layout","layoutAlgorithm","layoutControlGlyphForLineFragment:","layoutDocumentView","layoutForImageFile:","layoutGlyphsInHorizontalLineFragment: baseline:","layoutGlyphsInLayoutManager: startingAtGlyphIndex: maxNumberOfLineFragments: nextGlyphIndex:","layoutIfNeeded","layoutManager","layoutManager: didCompleteLayoutForTextContainer: atEnd:","layoutManager: shouldUseTemporaryAttributes: forDrawingToScreen: atCharacterIndex: effectiveRange:","layoutManagerDidInvalidateLayout:","layoutManagerOwnsFirstResponderInWindow:","layoutManagers","layoutOptions","layoutParagraphAtPoint:","layoutRect","layoutRectForTextBlock: atIndex: effectiveRange:","layoutRectForTextBlock: glyphRange:","layoutRectFromFrame:","layoutSublayers","layoutSublayersOfLayer:","layoutSublayersOfLayer: ","layoutSubviews","layoutTab","ldexpl","ldtox80","leading","leadingOffset","leafKeyPath","leafKeyPathForNode:","learnWord:","left","leftBarButtonItem","leftCalloutAccessoryView","leftCapWidth","leftExpression","leftExpressions","leftMargin","leftOverBlockSize","leftOverChars","leftSingGuillemet","leftView","leftViewMode","leftViewRectForBounds: ","length","lengthOfBytesUsingEncoding:","letterCharacterSet","letterSpacing","level","levelForItem:","levelForRow:","levelIndicatorStyle","levelsOfDetail","levelsOfDetailBias","levelsOfUndo","lgamma","lgammal","libraryNibNames","licenseAgreed","licenseAgreedLanguage","lightGrayColor","lightTextColor","limitDateForMode:","limitReachedErr","lineBoxRects","lineBreakBeforeIndex: withinRange:","lineBreakByHyphenatingBeforeIndex: withinRange:","lineBreakMode","lineCap","lineCapStyle","lineDashPattern","lineDashPhase","lineFragmentPadding","lineFragmentRectForGlyphAtIndex: effectiveRange:","lineFragmentRectForGlyphAtIndex: effectiveRange: withoutAdditionalLayout:","lineFragmentRectForProposedRect: remainingRect:","lineFragmentRectForProposedRect: sweepDirection: movementDirection: remainingRect:","lineFragmentUsedRectForGlyphAtIndex: effectiveRange:","lineFragmentUsedRectForGlyphAtIndex: effectiveRange: withoutAdditionalLayout:","lineHeight","lineHeightMultiple","lineJoin","lineJoinStyle","lineNumber","lineRangeForRange:","lineScroll","lineSpacing","lineSpacingAfterGlyphAtIndex: withProposedLineFragmentRect:","lineToPoint:","lineWidth","linearMatrixType","linearTranslateMatrixType","link","linkItemAtPath: toPath: error:","linkPath: toPath: handler:handler","linkSoundComponentsCmd","linkTextAttributes","linkblk","links","linksInXML: baseURL:","listDescriptor","listOptions","listStyle","listStyleImage","listStylePosition","listStyleType","listensInForegroundOnly","load","load:","loadAllPlugIns","loadAlternateHTMLString: baseURL: forUnreachableURL:","loadAndReturnError:","loadArchive:","loadBackwardTrackEdits","loadCmd","loadColumnZero","loadComposition:","loadCompositionFromFile:","loadData: MIMEType: textEncodingName: baseURL:","loadData: MIMEType: textEncodingName: baseURL: ","loadDataRepresentation: ofType:","loadFileWrapperRepresentation: ofType:","loadForwardTrackEdits","loadFromURL: error:","loadHTMLString: baseURL:","loadHTMLString: baseURL: ","loadInBackground","loadInForeground","loadMainView","loadMetadata:","loadNibFile: externalNameTable: withZone:","loadNibNamed: owner:","loadNibNamed: owner: options: ","loadNonExecutablePlugIns","loadPlugIn: allowNonExecutable:","loadPlugInAtPath:","loadRequest:","loadRequest: ","loadResourceDataNotifyingClient: usingCache:","loadSuiteWithDictionary: fromBundle:","loadSuitesFromBundle:","loadView","loadWindow","loadedCellAtRow: column:","loading","loadsImagesAutomatically","localIdentityAuthority","localName","localNameForName:","localObjects","localOnlyErr","localTimeZone","locale","localeIdentifier","localeIdentifierFromComponents:","locality","localizationDictionary","localizations","localizedCaseInsensitiveCompare:","localizedCatalogNameComponent","localizedColorNameComponent","localizedCompare:","localizedCompressionOptionsSummary","localizedDescription","localizedDescriptionForFilterName:","localizedDescriptionForType:","localizedDisplayName","localizedFailureReason","localizedFormatSummary","localizedInfoDictionary","localizedInputManagerName","localizedKey","localizedKeyDictionary","localizedKeyTable","localizedModel","localizedName","localizedName: locale: ","localizedNameForCategory:","localizedNameForFamily: face:","localizedNameForFilterName:","localizedNameForTIFFCompressionType:","localizedNameOfStringEncoding:","localizedPaperName","localizedRecoveryOptions","localizedRecoverySuggestion","localizedReferenceDocumentationForFilterName:","localizedScannerWithString:","localizedShortName","localizedStringForKey: value: table:","localizedStringForStatusCode:","localizedStringWithFormat:","localizedSummaryItems","localizedTitle","localizesFormat","location","locationForGlyphAtIndex:","locationForSubmenu:","locationInView: ","locationInWindow","locationManager:didUpdateHeading:","locationManagerShouldDisplayHeadingCalibration:","locationOfPrintRect:","locationServicesEnabled","locations","lock","lockBeforeDate:","lockBufferRepresentationWithPixelFormat: colorSpace: forBounds:","lockDate","lockFocus","lockFocusIfCanDraw","lockFocusIfCanDrawInContext:","lockFocusOnRepresentation:","lockPortBitsBadPortErr","lockPortBitsBadSurfaceErr","lockPortBitsSurfaceLostErr","lockPortBitsWindowClippedErr","lockPortBitsWindowMovedErr","lockPortBitsWindowResizedErr","lockPortBitsWrongGDeviceErr","lockTextureRepresentationWithColorSpace: forBounds:","lockWhenCondition:","lockWhenCondition: beforeDate:","lockWithPath:","log10l","log1pl","logMessage:","log_ctl","longCharacterIsMember:","longDate","longDateFound","longDay","longDesc","longEraSymbols ","longLongValue","longMonth","longValue","longWeek","longYear","lookupNamespaceURI:","loopMode","loopTimeBase","loops","loosenKerning:","lossyCString","lowerBaseline:","lowercaseLetterCharacterSet","lowercaseString","lowercaseWord:","machPort","mach_port_t","macron","magentaColor","magentaComponent","magneticHeading","magnificationFilter","mailComposeController:didFinishWithResult:error:","mailComposeDelegate","mainBundle","mainDocumentURL","mainFrame","mainFrameDocument","mainFrameIcon","mainFrameTitle","mainFrameURL","mainMenu","mainNibFileForInterfaceStyle:","mainNibName","mainResource","mainRunLoop ","mainScreen","mainThread","mainView","mainViewDidLoad","mainWindow","maintainTimeBaseZero","maintainsInactiveSelection","majorVersion","makeCellAtRow: column:","makeCurrentContext","makeDocumentForURL: withContentsOfURL: ofType: error:","makeDocumentWithContentsOfFile: ofType:","makeDocumentWithContentsOfURL: ofType:","makeDocumentWithContentsOfURL: ofType: error:","makeFirstResponder:","makeKeyAndOrderFront:","makeKeyAndVisible","makeKeyWindow","makeMainWindow","makeNewConnection: sender:","makeNextSegmentKey","makeObjectsPerformSelector:","makeObjectsPerformSelector: withObject:","makePreviousSegmentKey","makeSelectionVisible:","makeTextLarger:","makeTextSmaller:","makeTextStandardSize:","makeUntitledDocumentOfType:","makeUntitledDocumentOfType: error:","makeVirtual","makeWindowControllers","makeWindowsPerform: inOrder:","managedIdentityAuthority","managedObjectClassName","managedObjectContext","managedObjectContextsToMonitorWhenSyncingPersistentStoreCoordinator:","managedObjectContextsToReloadAfterSyncingPersistentStoreCoordinator:","managedObjectIDForURIRepresentation:","managedObjectModel","mangledNameForFilesystem:","mangledNames","manufacturer","mapChanged","mapChangedBit","mapCompact","mapCompactBit","mapReadErr","mapReadOnly","mapReadOnlyBit","mapTableWithKeyOptions: valueOptions:","mapTableWithStrongToStrongObjects","mapTableWithStrongToWeakObjects","mapTableWithWeakToStrongObjects","mapTableWithWeakToWeakObjects","mapType","mapView:annotationView:calloutAccessoryControlTapped:","mapView:didAddAnnotationViews:","mapView:regionDidChangeAnimated:","mapView:regionWillChangeAnimated:","mapView:viewForAnnotation:","mapViewDidFailLoadingMap:withError:","mapViewDidFinishLoadingMap:","mapViewWillStartLoadingMap:","mappingModel","mappingModelFromBundles: forSourceModel: destinationModel:","mappingModelFromBundles:forSourceModel:destinationModel:","mappingType","mappings","marg_free  ","marg_getRef  ","marg_getValue  ","marg_list","marg_malloc  ","marg_setValue  ","margin","marginBottom","marginHeight","marginLeft","marginRight","marginTop","marginWidth","markForStyle: atRange:","markedRange","markedTextAbandoned:","markedTextAttributes","markedTextSelectionChanged: client:","markerForItemNumber:","markerFormat","markerLocation","markerOffset","markers","marks","markupString","markupType","mask","masksToBounds","matchForPredicate:","matchPropertyTable","matchesAppleEventCode:","matchesOnMultipleResolution","matchesRecord:","matchesSearchArray:","matchesUUIDArray:","matchingFontDescriptorWithMandatoryKeys: ","matchingFontDescriptorsWithMandatoryKeys:","matrix","matrixClass","matrixErr","matrixFlagScale1x","matrixFlagScale2x","matrixFlagScaleHalf","matrixInColumn:","maxAnimationFrameRate","maxCDBLength","maxConcurrentOperationCount","maxContentSize","maxCount","maxCountry","maxDate","maxDateField","maxHeight","maxItemSize","maxLength","maxNumberOfColumns","maxNumberOfRows","maxPossiblePositionOfDividerAtIndex:","maxRenderingFrameRate","maxSize","maxSizeToGrowTooSmall","maxValue","maxVisibleColumns","maxWidth","maximum","maximumAdvancement","maximumDate","maximumDecimalNumber","maximumFractionDigits","maximumFrameSizeFromKnobPosition:","maximumIntegerDigits","maximumLengthOfBytesUsingEncoding:","maximumLineHeight","maximumNumberOfColumns","maximumRangeOfUnit:","maximumRecentDocumentCount","maximumRecents","maximumRecordedDuration","maximumRecordedFileSize","maximumSignificantDigits ","maximumSizeForCellSize: knobPosition:","maximumTrackImageForState: ","maximumValue","maximumValueImage","maximumValueImageRectForBounds: ","maximumZoomScale","measurementUnits","media","mediaAttributes","mediaHandlerFlagBaseClient","mediaIsAppendable","mediaIsBlank","mediaIsBusy","mediaIsErasable","mediaIsOverwritable","mediaIsPresent","mediaIsReserved","mediaIsTransitioning","mediaPicker:didPickMediaItems:","mediaPickerDidCancel:","mediaQualityBest","mediaQualityBetter","mediaQualityDraft","mediaQualityNormal","mediaSampleDependsOnOthers","mediaSampleDoesNotDependOnOthers","mediaSampleDroppable","mediaSampleEarlierDisplayTimesAllowed","mediaSampleHasNoRedundantCoding","mediaSampleHasRedundantCoding","mediaSampleIsDependedOnByOthers","mediaSampleIsNotDependedOnByOthers","mediaSampleNotSync","mediaSamplePartialSync","mediaSampleShadowSync","mediaSpaceFree","mediaSpaceOverwritable","mediaSpaceUsed","mediaStateChanged:","mediaStyle","mediaText","mediaType","mediaTypes","mediaTypesDontMatch","mediaWithQuickTimeMedia: error:","medium","memAZErr","memAdrErr","memBCErr","memFragErr","memFullErr","memLockedErr","memPCErr","memPurErr","memROZErr","memROZError","memROZWarn","memSCErr","memWZErr","member","member:","members","memoryCapacity","menu","menu: updateItem: atIndex: shouldCancel:","menu: willHighlightItem:","menuBarFontOfSize:","menuBarHeight","menuBarVisible","menuChanged:","menuChangedMessagesEnabled","menuDidClose:","menuFontOfSize:","menuForEvent:","menuForEvent: inRect: ofView:","menuForSegment:","menuFormRepresentation","menuFrame","menuHasKeyEquivalent: forEvent: target: action:","menuInvalidErr","menuItem","menuItemCellForItemAtIndex:","menuItemNotFoundErr","menuNeedsUpdate:","menuNotFoundErr","menuPrgErr","menuPropertyInvalid","menuPropertyInvalidErr","menuPropertyNotFoundErr","menuRepresentation","menuUsesSystemDefErr","menuView","menuVisible","menuWillOpen:","menuZone","mergeChangesFromContextDidSaveNotification:","mergePolicy","mergedModelFromBundles:","mergedModelFromBundles: forStoreMetadata:","mergedModelFromBundles:forStoreMetadata:","message","messageFontOfSize:","messageText","messages","metaKey","metadata","metadataForKey: ofObject:","metadataForPersistentStore:","metadataForPersistentStoreOfType: URL: error:","metadataForPersistentStoreOfType:URL:error:","metadataForPersistentStoreWithURL: error:","metadataForPersistentStoreWithURL:error:","metadataQuery: replacementObjectForResultObject:","metadataQuery: replacementValueForAttribute: value:","meteringEnabled","method","methodForSelector:","methodReturnLength","methodReturnType","methodSignature","methodSignatureForSelector:","method_copyArgumentType  ","method_copyReturnType  ","method_exchangeImplementations  ","method_getArgumentType  ","method_getImplementation  ","method_getName  ","method_getNumberOfArguments  ","method_getReturnType  ","method_getTypeEncoding  ","method_setImplementation  ","methods","microphoneMuted","midiDupIDErr","midiInvalidCmdErr","midiManagerAbsentErr","midiManagerAbsentOSErr","midiNameLenErr","midiNoClientErr","midiNoConErr","midiNoPortErr","midiTooManyConsErr","midiTooManyPortsErr","midiVConnectErr","midiVConnectMade","midiVConnectRmvd","midiWriteErr","migratePersistentStore: toURL: options: withType: error:","migratePersistentStore:toURL:options:withType:error:","migrateStoreFromURL: type: options: withMappingModel: toDestinationURL: destinationType: destinationOptions: error:","migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:","migrationManagerClass","migrationProgress","minColumnWidth","minContentSize","minCount","minCountry","minDate","minFrameWidthWithTitle: styleMask:","minHeight","minItemSize","minLeadingZ","minPossiblePositionOfDividerAtIndex:","minSize","minValue","minWidth","mini1BitMask","mini4BitData","mini8BitData","miniaturize:","miniaturizeAll:","minificationFilterBias","minimum","minimumDate","minimumDaysInFirstWeek","minimumDecimalNumber","minimumFontSize","minimumFractionDigits","minimumFrameSizeFromKnobPosition:","minimumIntegerDigits","minimumLineHeight","minimumLogicalFontSize","minimumRangeOfUnit:","minimumSignificantDigits ","minimumSize","minimumSizeForCellSize: knobPosition:","minimumTrackImageForState: ","minimumValue","minimumValueImage","minimumValueImageRectForBounds: ","minimumZoomScale","miniwindowImage","miniwindowTitle","minorVersion","minusHashTable:","minusSet:","minusSign","minute","minuteField","minuteInterval","minuteMask","minuteOfHour","minutes","missingRequiredParameterErr","miterLimit","mixedStateImage","mmInternalError","mnemonic","mnemonicLocation","mntLdingZ","modalTransitionStyle","modalViewController","modalWindow","mode","model","modelByMergingModels:","modelByMergingModels: forStoreMetadata:","modelByMergingModels:forStoreMetadata:","modelLayer","modelNumber","modelUniqueID","modemInstalledBit","modemInstalledMask","modemOnBit","modemOnHookBit","modemOnHookMask","modemOnMask","modemSetBit","modificationDate","modifierFlags","modifyFont:","modifyFontViaPanel:","module_info","module_stat","momentary","month","monthField","monthMask","monthOfYear","monthSymbols","moreNavigationController","mostCompatibleStringEncoding","motionBegan:withEvent:","motionCancelled:withEvent:","motionEnded:withEvent:","mountNewRemovableMedia","mountedLocalVolumePaths","mountedRemovableMedia","mouse: inRect:","mouseDown","mouseDown:","mouseDownCanMoveWindow","mouseDownFlags","mouseDownOnCharacterIndex: atCoordinate: withModifier: client:","mouseDownOnCharacterIndex: coordinate: withModifier: continueTracking: client:","mouseDragged:","mouseDraggedOnCharacterIndex: atCoordinate: withModifier: client:","mouseEntered:","mouseEntered: withFrame: inView:","mouseEventWithType: location: modifierFlags: timestamp: windowNumber: context: eventNumber: clickCount: pressure:","mouseExited:","mouseExited: withFrame: inView:","mouseLocation","mouseLocationOutsideOfEventStream","mouseMoved:","mouseMovedMessage","mouseMovedOnCharacterIndex: coordinate: withModifier: client:","mouseUp","mouseUp:","mouseUpAction","mouseUpOnCharacterIndex: atCoordinate: withModifier: client:","mouseUpOnCharacterIndex: coordinate: withModifier: client:","movableDBoxProc","moveActionAtIndex: toIndex:","moveBackward:","moveBackwardAndModifySelection:","moveColumn: toColumn:","moveDown:","moveDownAndModifySelection:","moveDragCaretToPoint:","moveForward:","moveForwardAndModifySelection:","moveItemAtPath: toPath: error:","moveLeft:","moveLeftAndModifySelection:","moveNode: toIndexPath:","moveNodes: toIndexPath:","moveObject: toParent:","movePath: toPath: handler:handler","moveRight:","moveRightAndModifySelection:","moveRulerlineFromLocation: toLocation:","moveToBeginningOfDocument:","moveToBeginningOfDocumentAndModifySelection:","moveToBeginningOfLine:","moveToBeginningOfLineAndModifySelection:","moveToBeginningOfParagraph:","moveToBeginningOfParagraphAndModifySelection:","moveToBeginningOfSentence:","moveToBeginningOfSentenceAndModifySelection:","moveToEndOfDocument:","moveToEndOfDocumentAndModifySelection:","moveToEndOfLine:","moveToEndOfLineAndModifySelection:","moveToEndOfParagraph:","moveToEndOfParagraphAndModifySelection:","moveToEndOfSentence:","moveToEndOfSentenceAndModifySelection:","moveToPoint:","moveUp:","moveUpAndModifySelection:","moveWordBackward:","moveWordBackwardAndModifySelection:","moveWordForward:","moveWordForwardAndModifySelection:","moveWordLeft:","moveWordLeftAndModifySelection:","moveWordRight:","moveWordRightAndModifySelection:","movie","movie: linkToURL:","movie: shouldContinueOperation: withPhase: atPercent: withAttributes:","movieAttributes","movieBounds","movieControlMode","movieController","movieControllerBounds","movieDrawingCallAlways","movieDrawingCallWhenChanged","movieExecuteWiredActionDontExecute","movieExportChannelLayoutSize","movieExportDuration","movieExportHeight","movieExportMagicCookieSize","movieExportMustGetSourceMediaType","movieExportNeedsResourceFork","movieExportTimeScale","movieExportUseConfiguredSettings","movieExportUseHighResolutionAudioProperties","movieExportVideoFilter","movieExportWidth","movieFileSpecValid","movieFileTypes:","movieFormatRepresentation","movieImportCreateTrack","movieImportInParallel","movieImportMustGetDestinationMediaType","movieImportMustUseTrack","movieImportResultComplete","movieImportResultNeedIdles","movieImportResultUsedMultipleTracks","movieImportSubTypeIsFileExtension","movieImportWithIdle","movieImporterIsXMLBased","movieInDataForkResID","movieNamed: error:","movieProgressClose","movieProgressOpen","movieProgressUpdatePercent","movieRect","movieScrapDontZeroScrap","movieScrapOnlyPutMovie","movieShouldLoadData:","movieShouldTask:","movieTextNotFoundErr","movieToFileOnlyExport","movieToolboxUninitialized","movieTrackCharacteristic","movieTrackEnabledOnly","movieTrackMediaType","movieTypesWithOptions:","movieUnfilteredFileTypes","movieUnfilteredPasteboardTypes","movieWithAttributes: error:","movieWithData: error:","movieWithDataReference: error:","movieWithFile: error:","movieWithPasteboard: error:","movieWithQuickTimeMovie: disposeWhenDone: error:","movieWithTimeRange: error:","movieWithURL: error:","mpWorkFlagCopyWorkBlock","mpWorkFlagDoCompletion","mpWorkFlagDoWork","mpWorkFlagDontBlock","mpWorkFlagGetIsRunning","mpWorkFlagGetProcessorCount","msf","msfByAdding:","msfBySubtracting:","msfWithFrames:","msfWithString:","msgid","multiple","multiplePublisherWrn","multipleThreadsEnabled","multipleTouchEnabled","multiplier","multivalued","mungeMaxPacketSize","mustProcessorCycle","mutableArrayValueForKey:","mutableArrayValueForKeyPath:","mutableBytes","mutableChildNodes","mutableCopy","mutableCopyWithZone:","mutableSetValueForKey:","mutableSetValueForKeyPath:","mutableString","muted","myIdleTime","myStatus","nWIDTHHook","name","name ","nameDoubleAction","nameFieldLabel","nameForObject:","nameForType","nameOfSlideshowItemAtIndex:","nameSpaceIDNone","nameTypeErr","namedItem:","names","namesOfPromisedFilesDroppedAtDestination:","namespaceForPrefix:","namespaceURI","namespaceWithName: stringValue:","namespaces","nativeHandle","natural_t","navigationBar","navigationBar: didPopItem: ","navigationBar: didPushItem: ","navigationBar: shouldPopItem: ","navigationBar: shouldPushItem: ","navigationBarHidden","navigationController","navigationController: didShowViewController: animated: ","navigationController: willShowViewController: animated: ","navigationItem","nbpBuffOvr","nbpConfDiff","nbpDuplicate","nbpNISErr","nbpNoConfirm","nbpNotFound","nearbyint","nearbyintl","needClearScrapErr","needsDisplay","needsDisplayForKey:","needsDisplayForKey: ","needsDisplayOnBoundsChange","needsLayout","needsPanelToBecomeKey","needsSizing","needsToBeUpdatedFromPath:","needsToDrawRect:","negZcbFreeErr","negativeFormat","negativeInfinity","negativeInfinitySymbol","negativePrefix","negativeSuffix","nestingMode","netService","netService: didNotPublish:","netService: didNotResolve:","netService: didUpdateTXTRecordData:","netServiceBrowser: didFindDomain: moreComing:","netServiceBrowser: didFindService: moreComing:","netServiceBrowser: didNotSearch:","netServiceBrowser: didRemoveDomain: moreComing:","netServiceBrowser: didRemoveService: moreComing:","netServiceBrowserDidStopSearch:","netServiceBrowserWillSearch:","netServiceDidPublish:","netServiceDidResolveAddress:","netServiceDidStop:","netServiceWillPublish:","netServiceWillResolve:","network","networkActivityIndicatorVisible","networkErr","networkEvt","networkMask","new","newCacheNodeForManagedObject:","newDocument:","newItemForRepresentedObject:","newLineBit","newLineCharMask","newLineMask","newModelString","newMovieActive","newMovieAsyncOK","newMovieDontAskUnresolvedDataRefs","newMovieDontAutoAlternates","newMovieDontAutoUpdateClock","newMovieDontInteractWithUser","newMovieDontResolveDataRefs","newMovieDontUpdateForeBackPointers","newMovieIdleImportOK","newObject","newPMSigWord","newPersonViewDelegate","newReferenceObjectForManagedObject:","newRevisionString","newSelMsg","newUserClient","newValue","newVendorString","newWithSignature:","newWithSignature: arguments:","newlineCharacterSet","nextAlarmDate","nextAnchorForDataClassName:","nextDaylightSavingTimeTransition ","nextDaylightSavingTimeTransitionAfterDate: ","nextEnabled","nextEventMatchingMask:","nextEventMatchingMask: untilDate: inMode: dequeue:","nextFrameTime","nextKeyView","nextNode","nextObject","nextPane","nextResponder","nextSibling","nextState","nextTimeEdgeOK","nextTimeIgnoreActiveSegment","nextTimeMediaEdit","nextTimeMediaSample","nextTimePartialSyncSample","nextTimeStep","nextTimeSyncSample","nextTimeTrackEdit","nextValidKeyView","nextWordFromIndex: forward:","nextafterd","nextafterf","nextafterl","nibBundle","nibInstantiate","nibLabel:","nibName","nilHandleErr","nilScrapFlavorDataErr","nilSymbol","nmTypErr","nmType","noAdrMkErr","noBridgeErr","noCacheBit","noCacheMask","noCalls","noCodecErr","noCollectionAttributes","noConstraint","noDMAErr","noDataArea","noDataHandler","noDefaultDataRef","noDefaultOpcodes","noDefaultUserErr","noDeviceForChannel","noDriveErr","noDtaMkErr","noExportProcAvailableErr","noGlobalsErr","noGrowDocProc","noHardware","noHardwareErr","noHelpForItem","noHref","noIconDataAvailableErr","noInformErr","noMMUErr","noMPPErr","noMacDskErr","noMachineNameErr","noMark","noMaskFoundErr","noMediaHandler","noMemForPictPlaybackErr","noMemoryNodeFailedInitialize","noMoreFolderDescErr","noMoreKeyColorsErr","noMoreRealTime","noMovieFound","noNybErr","noOutstandingHLE","noPathMappingErr","noPortErr","noPrefAppErr","noQueueBit","noRecordOfApp","noRelErr","noRequest","noResize","noResponderFor:","noResponseErr","noScrapErr","noScrapPromiseKeeperErr","noSecuritySession","noSendResp","noSessionErr","noShade","noSoundTrackInMovieErr","noSourceTreeFoundErr","noSuchIconErr","noSuitableDisplaysErr","noSynthFound","noThumbnailFoundErr","noToolboxNameErr","noTranslationPathErr","noTypeErr","noUserInteractionAllowed","noUserNameErr","noUserRecErr","noUserRefErr","noVideoTrackInMovieErr","noWrap","nodeID","nodeName","nodeType","nodeValue","nodesForXPath: error:","nonBaseCharacterSet","nonDragOriginatorErr","nonMatchingEditState","nonretainedObjectValue","normal","normalMsg","normalize","normalizeAdjacentTextNodesPreservingCDATA:","notAFileErr","notANumber","notANumberSymbol","notAQTVRMovieErr","notARemountErr","notAllowedToSaveMovieErr","notAppropriateForClassic","notBTree","notCompressed","notEnoughBufferSpace","notEnoughDataErr","notEnoughDiskSpaceToGrab","notEnoughHardware","notEnoughHardwareErr","notEnoughMemoryErr","notEnoughMemoryToGrab","notExactMatrixErr","notExactSizeErr","notHeldErr","notImplementedMusicErr","notImplementedMusicOSErr","notInitErr","notLeafAtomErr","notLockedErr","notLoggedInErr","notOpenErr","notPredicateWithSubpredicate:","notRegisteredSectionErr","notShownAttributeForGlyphAtIndex:","notThePublisherWrn","notationDeclarationForName:","notationName","notations","note","noteAttributesWillChangeForObject:","noteChannelNotAllocatedErr","noteChannelNotAllocatedOSErr","noteFileSystemChanged","noteFileSystemChanged:","noteHeightOfRowsWithIndexesChanged:","noteIcon","noteNewRecentDocument:","noteNewRecentDocumentURL:","noteNumberOfItemsChanged","noteNumberOfRowsChanged","noteUserDefaultsChanged","notificationBatchingInterval","notificationCenter","notificationCenterForType:","notificationWithName: object:","notificationWithName: object: userInfo:","nowPlayingItem","null","nullCmd","nullDescriptor","nullEvent","num2dec","num2decl","numberFormattingBadCurrencyPositionErr","numberFormattingBadFormatErr","numberFormattingBadNumberFormattingObjectErr","numberFormattingBadOptionsErr","numberFormattingBadTokenErr","numberFormattingDelimiterMissingErr","numberFormattingEmptyFormatErr","numberFormattingLiteralMissingErr","numberFormattingNotADigitErr","numberFormattingNotANumberErr","numberFormattingOverflowInDestinationErr","numberFormattingSpuriousCharErr","numberFormattingUnOrderedCurrencyRangeErr","numberFormattingUnOrdredCurrencyRangeErr","numberFortmattingNotADigitErr","numberFromString:","numberOfArguments","numberOfAudioChannels","numberOfButtons","numberOfCellsInImageBrowser:","numberOfChannels","numberOfCharacters","numberOfChildren","numberOfColorComponents","numberOfColorStops","numberOfColumns","numberOfComponents","numberOfComponentsInPickerView: ","numberOfGlyphs","numberOfGroupsInImageBrowser:","numberOfItems","numberOfItemsInComboBox:","numberOfItemsInComboBoxCell:","numberOfItemsInImageBrowser:","numberOfItemsInMenu:","numberOfLines","numberOfLoops","numberOfMajorTickMarks","numberOfObjects","numberOfPages","numberOfPlanes","numberOfRows","numberOfRowsInComponent: ","numberOfRowsInSection: ","numberOfRowsInTableView:","numberOfSamples","numberOfSections","numberOfSectionsInTableView: ","numberOfSegments","numberOfSelectedColumns","numberOfSelectedRows","numberOfSlideshowItems","numberOfTabViewItems","numberOfTickMarks","numberOfVirtualScreens","numberOfVisibleColumns","numberOfVisibleItems","numberStyle","numberWithBool:","numberWithChar:","numberWithDouble:","numberWithFloat:","numberWithInt:","numberWithInteger:","numberWithLong:","numberWithLongLong:","numberWithShort:","numberWithUnsignedChar:","numberWithUnsignedInt:","numberWithUnsignedInteger:","numberWithUnsignedLong:","numberWithUnsignedLongLong:","numberWithUnsignedShort:","numtostring","objCType","objc_allocateClassPair  ","objc_cache","objc_copyProtocolList  ","objc_duplicateClass  ","objc_getClass  ","objc_getClassList  ","objc_getFutureClass  ","objc_getMetaClass  ","objc_getProtocol  ","objc_getRequiredClass  ","objc_lookUpClass  ","objc_method_list","objc_msgSend","objc_msgSend  ","objc_msgSendSuper","objc_msgSendSuper  ","objc_msgSendSuper_stret","objc_msgSendSuper_stret  ","objc_msgSend_fpret  ","objc_msgSend_stret","objc_msgSend_stret  ","objc_object","objc_property_t","objc_protocol_list","objc_registerClassPair  ","objc_setFutureClass  ","objc_super","object","objectAtIndex:","objectAtIndexPath:","objectBeingTested","objectByApplyingXSLT: arguments: error:","objectByApplyingXSLTAtURL: arguments: error:","objectByApplyingXSLTString: arguments: error:","objectClass","objectController","objectDidBeginEditing:","objectDidEndEditing:","objectEnumerator","objectForInfoDictionaryKey:","objectForKey:","objectForKey: ofTrack:","objectForProperty: error:","objectForWebScript","objectID","objectIDForEntity: referenceObject:","objectIDForEntity:referenceObject:","objectIsForcedForKey:","objectIsForcedForKey: inDomain:","objectNameForInspectorTitle","objectRegisteredForID:","objectSpecifier","objectValue","objectValueOfSelectedItem","objectValues","objectWithID:","objectWithName:","objectZone","object_copy  ","object_dispose  ","object_getClass  ","object_getClassName  ","object_getIndexedIvars  ","object_getInstanceVariable  ","object_getIvar  ","object_setClass  ","object_setInstanceVariable  ","object_setIvar  ","objects","objectsAtIndexes:","objectsByEvaluatingSpecifier","objectsByEvaluatingWithContainers:","objectsForKeys: notFoundMarker:","objectsForXQuery: constants: error:","objectsForXQuery: error:","observationInfo","observeValueForKeyPath: ofObject: change: context:","observeValueForKeyPath:ofObject:change:context:","obtainPermanentIDsForObjects: error:","obtainPermanentIDsForObjects:error:","obtainWithRight: flags: error:","obtainWithRights: flags: environment: authorizedRights: error:","oddField1ToEvenFieldOut","oddField1ToOddFieldOut","oddField2ToEvenFieldOut","oddField2ToOddFieldOut","offLinErr","offStateImage","offsetInFile","offsetof","ogonek","ok:","okButton","oldPMSigWord","on","onStateImage","onStateValue","one","oneBitMode","opWrErr","opacity","opaque","opaqueAncestor","open","open:","openConnection","openConnection:","openConnection: withPageTimeout: authenticationRequired:","openDeviceConnection","openDocument:","openDocumentWithContentsOfFile: display:","openDocumentWithContentsOfURL: display:","openDocumentWithContentsOfURL: display: error:","openEditorForObject:","openEditorForObject: makeKeyAndOrderFront:","openErr","openFile:","openFile: fromImage: at: inView:","openFile: withApplication:","openFile: withApplication: andDeactivate:","openGLContext","openGLPixelFormat","openHandCursor","openHelpAnchor: inBook:","openL2CAPChannel: findExisting: newChannel:","openL2CAPChannelAsync: withPSM: delegate:","openL2CAPChannelAsync: withPSM: withConfiguration: delegate:","openL2CAPChannelSync: withPSM: delegate:","openL2CAPChannelSync: withPSM: withConfiguration: delegate:","openOnEdge:","openPanel","openRFCOMMChannel: channel:","openRFCOMMChannelAsync: withChannelID: delegate:","openRFCOMMChannelSync: withChannelID: delegate:","openSCOConnection","openSubeditorForObject:","openTempFile:","openTransportConnection:","openTray","openURL:","openURL: ","openURLs: withAppBundleIdentifier: options: additionalEventParamDescriptor: launchIdentifiers:","openUntitledDocumentAndDisplay: error:","openUntitledDocumentOfType: display:","opened","operand","operands","operatingSystem","operatingSystemName","operatingSystemVersionString","operation","operationQueuePriority","operations","operators","optionDescriptionsForBinding:","optionKey","optionKeyBit","optionalSharedHistory","options","orPredicateWithSubpredicates:","orangeColor","orderBack:","orderFront","orderFront:","orderFrontCharacterPalette:","orderFrontColorPanel:","orderFrontFontPanel:","orderFrontLinkPanel:","orderFrontListPanel:","orderFrontRegardless","orderFrontSpacingPanel:","orderFrontStandardAboutPanel:","orderFrontStandardAboutPanelWithOptions:","orderFrontStylesPanel:","orderFrontSubstitutionsPanel:","orderFrontTablePanel:","orderOut:","orderWindow: relativeTo:","orderedDocuments","orderedIndex","orderedItemsLastVisitedOnDay:","orderedLastVisitedDays","orderedWindows","ordinalityOfUnit: inUnit: forDate:","orientation","originOffset","originalTransaction","originalURLString","originalWindow","orphans","osEvtMessageMask","osMask","otherEventWithType: location: modifierFlags: timestamp: windowNumber: context: subtype: data1: data2:","otherMouseDown:","otherMouseDragged:","otherMouseUp:","otherwise","outcome","outerHTML","outerText","outline","outline:","outlineColor","outlineItemForSelection:","outlineRoot","outlineStyle","outlineTableColumn","outlineView: acceptDrop: item: childIndex:","outlineView: child: ofItem:","outlineView: dataCellForTableColumn: item:","outlineView: didClickTableColumn:","outlineView: didDragTableColumn:","outlineView: heightOfRowByItem:","outlineView: isGroupItem:","outlineView: isItemExpandable:","outlineView: itemForPersistentObject:","outlineView: mouseDownInHeaderOfTableColumn:","outlineView: namesOfPromisedFilesDroppedAtDestination: forDraggedItems:","outlineView: nextTypeSelectMatchFromItem: toItem: forString:","outlineView: numberOfChildrenOfItem:","outlineView: objectValueForTableColumn: byItem:","outlineView: persistentObjectForItem:","outlineView: selectionIndexesForProposedSelection:","outlineView: setObjectValue: forTableColumn: byItem:","outlineView: shouldCollapseItem:","outlineView: shouldEditTableColumn: item:","outlineView: shouldExpandItem:","outlineView: shouldSelectItem:","outlineView: shouldSelectTableColumn:","outlineView: shouldShowCellExpansionForTableColumn: item:","outlineView: shouldTrackCell: forTableColumn: item:","outlineView: shouldTypeSelectForEvent: withCurrentSearchString:","outlineView: sortDescriptorsDidChange:","outlineView: toolTipForCell: rect: tableColumn: item: mouseLocation:","outlineView: typeSelectStringForTableColumn: item:","outlineView: validateDrop: proposedItem: proposedChildIndex:","outlineView: willDisplayCell: forTableColumn: item:","outlineView: willDisplayOutlineCell: forTableColumn: item:","outlineView: writeItems: toPasteboard:","outlineViewColumnDidMove:","outlineViewColumnDidResize:","outlineViewItemDidCollapse:","outlineViewItemDidExpand:","outlineViewItemWillCollapse:","outlineViewItemWillExpand:","outlineViewSelectionDidChange:","outlineViewSelectionIsChanging:","outlineWidth","outputDeviceUniqueID","outputFieldSeparator","outputFileURL","outputFormat","outputImage","outputKeys","outputMeterLevel","outputMeteringEnabled","outputPacket","outputStream","outputStreamToBuffer: capacity:","outputStreamToFileAtPath: append:","outputStreamToMemory","outputVideoFrame: withSampleBuffer: fromConnection:","output_shim","outputs","outsideCmpSH","overDot","overflow","overlayDITL","overlayForType:","overrideKeyboardWithKeyboardNamed:","owner","ownerDocument","ownerElement","ownerNode","ownerRule","packet","packets","padding","paddingBottom","paddingCharacter","paddingLeft","paddingPosition","paddingRight","paddingTop","page","pageAtIndex:","pageBreakAfter","pageBreakBefore","pageBreakInside","pageCacheSize","pageCount","pageDown:","pageFooter","pageForPoint: nearest:","pageFormat","pageHeader","pageIndex","pageLayout","pageOrder","pageRange","pageScroll","pageSizeForPaper:","pageTitle","pageUp:","pages","pagingEnabled","pairedDevices","pairingController","paletteDocument","paletteFontOfSize:","paletteLabel","palindromeLoopTimeBase","panel: compareFilename: with: caseSensitive:","panel: directoryDidChange:","panel: isValidFilename:","panel: shouldShowFilename:","panel: userEnteredFilename: confirmed:","panel: willExpand:","panelConvertFont:","panelKind","panelName","panelSelectionDidChange:","panelType","panelView","panelViewDidResize","paperName","paperSize","paragraphCharacterRange","paragraphGlyphRange","paragraphRangeForRange:","paragraphSeparatorCharacterRange","paragraphSeparatorGlyphRange","paragraphSpacing","paragraphSpacingAfterGlyphAtIndex: withProposedLineFragmentRect:","paragraphSpacingBefore","paragraphSpacingBeforeGlyphAtIndex: withProposedLineFragmentRect:","paragraphs","paramDescriptorForKeyword:","paramErr","parameterString","parameters","parametersUpdated","parent","parentEditorForEditor:","parentForItem:","parentFrame","parentGroup","parentGroups","parentID","parentNode","parentOfObject:","parentRowForRow:","parentRule","parentStyleSheet","parentViewController","parentWindow","parse","parser: didEndElement: namespaceURI: qualifiedName:","parser: didEndMappingPrefix:","parser: didStartElement: namespaceURI: qualifiedName: attributes:","parser: didStartMappingPrefix: toURI:","parser: foundAttributeDeclarationWithName: forElement: type: defaultValue:","parser: foundCDATA:","parser: foundCharacters:","parser: foundComment:","parser: foundElementDeclarationWithName: model:","parser: foundExternalEntityDeclarationWithName: publicID: systemID:","parser: foundIgnorableWhitespace:","parser: foundInternalEntityDeclarationWithName: value:","parser: foundNotationDeclarationWithName: publicID: systemID:","parser: foundProcessingInstructionWithTarget: data:","parser: foundUnparsedEntityDeclarationWithName: publicID: systemID: notationName:","parser: parseErrorOccurred:","parser: resolveExternalEntityName: systemID:","parser: validationErrorOccurred:","parserDidEndDocument:","parserDidStartDocument:","parserError","participantID","pascal","password","paste:","pasteAsPlainText:","pasteAsRichText:","pasteFont:","pasteInParallel","pasteInSelection","pasteRuler:","pasteType:","pasteboard: provideDataForType:","pasteboardByFilteringData: ofType:","pasteboardByFilteringFile:","pasteboardByFilteringTypesInPasteboard:","pasteboardChangedOwner:","pasteboardObjectsForDraggedLibraryView:","pasteboardTypes","pasteboardTypesForElement:","pasteboardTypesForItemSet:","pasteboardTypesForSelection","pasteboardWithName:","pasteboardWithName:create:","pasteboardWithUniqueName","path","pathCell: willDisplayOpenPanel:","pathCell: willPopUpMenu:","pathComponentCellAtPoint: withFrame: inView:","pathComponentCellClass","pathComponentCells","pathComponents","pathContentOfSymbolicLinkAtPath:","pathControl: acceptDrop:","pathControl: shouldDragPathComponentCell: withPasteboard:","pathControl: validateDrop:","pathControl: willDisplayOpenPanel:","pathControl: willPopUpMenu:","pathExtension","pathForAuxiliaryExecutable:","pathForFilename:","pathForImageResource:","pathForResource: ofType:","pathForResource: ofType: inDirectory:","pathForResource: ofType: inDirectory: forLocalization:","pathForSoundResource:","pathNotVerifiedErr","pathSeparator","pathStyle","pathToColumn:","pathTooLongErr","pathWithComponents:","paths","pathsForResourcesOfType: inDirectory:","pathsForResourcesOfType: inDirectory: forLocalization:","pathsMatchingExtensions:","pattern","patternImage","patternPhase","pause","pause:","pauseAfter","pauseBefore","pauseCmd","pauseRendering","pauseSpeakingAtBoundary:","payment","paymentQueue:removedTransactions:","paymentQueue:restoreCompletedTransactionsFailedWithError:","paymentQueue:updatedTransactions:","paymentQueueRestoreCompletedTransactionsFinished:","paymentWithProduct:","paymentWithProductIdentifier:","peakPowerForChannel:","peerID","peerPickerController:didConnectPeer:toSession:","peerPickerController:didSelectConnectionType:","peerPickerController:sessionForConnectionType:","peerPickerControllerDidCancel:","peersWithConnectionState:","people","peoplePickerDelegate","peopleWithScreenName:","perMillSymbol","perThousand","percentDone","percentSymbol","performAction","performAction: withParameters:","performActionForItemAtIndex:","performActionForPerson: identifier:","performActionWithHighlightingForItemAtIndex:","performClick:","performClick:sender","performClickWithFrame: inView:","performClose:","performCommand","performCustomValidationForEntityMapping: manager: error:","performCustomValidationForEntityMapping:manager:error:","performDefaultImplementation","performDeleteAction","performDragOperation:","performFetch:","performFileOperation: source: destination: files: tag:","performFindPanelAction:","performGammaFade","performGatedCommand","performGetOutputFilesAction","performGetOutputStreamsAction","performGetSpecificationAction","performKeyEquivalent:","performMiniaturize:","performMnemonic:","performRestartAction","performResumeAction","performSDPQuery:","performSelector:","performSelector: onThread: withObject: waitUntilDone:","performSelector: onThread: withObject: waitUntilDone: modes:","performSelector: target: argument: order: modes:","performSelector: withObject:","performSelector: withObject: afterDelay:","performSelector: withObject: afterDelay: inModes:","performSelector: withObject: withObject:","performSelectorInBackground: withObject:","performSelectorOnMainThread: withObject: waitUntilDone:","performSelectorOnMainThread: withObject: waitUntilDone: modes:","performStopAction","performSubmitJobActionWithJobSpecification: gridIdentifier:","performSuspendAction","performTest:","performZoom:","permErr","permitWithRight: flags:","permitWithRights: flags: environment: authorizedRights:","persistence","persistent","persistentDomainForName:","persistentDomainNames","persistentReference","persistentStore","persistentStoreCoordinator","persistentStoreCoordinator: didApplyChange: toManagedObject: inSyncSession:","persistentStoreCoordinator: didCancelSyncSession: error:","persistentStoreCoordinator: didCommitChanges: inSyncSession:","persistentStoreCoordinator: didFinishSyncSession:","persistentStoreCoordinator: didPullChangesInSyncSession:","persistentStoreCoordinator: didPushChangesInSyncSession:","persistentStoreCoordinator: willApplyChange: toManagedObject: inSyncSession:","persistentStoreCoordinator: willDeleteRecordWithIdentifier: inSyncSession:","persistentStoreCoordinator: willPullChangesInSyncSession:","persistentStoreCoordinator: willPushChangesInSyncSession:","persistentStoreCoordinator: willPushRecord: forManagedObject: inSyncSession:","persistentStoreCoordinatorShouldStartSyncing:","persistentStoreForURL:","persistentStoreTypeForFileType:","persistentStores","personViewDelegate","perspectiveMatrixType","phase","phaseCmd","phonemesFromText:","physicalMemory","picItem","pickedAllPages:","pickedButton:","pickedLayoutList:","pickedOrientation:","pickedPaperSize:","pickedUnits:","pickerCantLive","pickerResourceError","pickerView: didSelectRow: inComponent: ","pickerView: numberOfRowsInComponent: ","pickerView: rowHeightForComponent: ","pickerView: titleForRow: forComponent: ","pickerView: viewForRow: forComponent: reusingView: ","pickerView: widthForComponent: ","pictInfoIDErr","pictInfoVerbErr","pictInfoVersionErr","pictureDataErr","pictureTaker","piggyback","pinColor","pipe","pitch","pitchRange","pixMapTooDeepErr","pixelBuffer","pixelBufferCubeMapFace","pixelBufferMipMapLevel","pixelFormat","pixelsHigh","pixelsWide","placeView:","placeholder","placeholderAttributedString","placeholderRectForBounds: ","placeholderString","plainDBox","platform68k","platformAIXppc","platformIA32NativeEntryPoint","platformIRIXmips","platformInterpreted","platformLinuxintel","platformLinuxppc","platformMacOSx86","platformNeXT68k","platformNeXTIntel","platformNeXTppc","platformNeXTsparc","platformPowerPC","platformPowerPCNativeEntryPoint","platformSunOSintel","platformSunOSsparc","platformWin32","play","play:","playDuring","playbackState","player","playing","playlistsQuery","playsEveryFrame","playsSelectionOnly","pleaseCacheBit","pleaseCacheMask","plugInKeys","plugInViewWithArguments:","pluginDidLoad:","plusSign","pmBusyErr","pmChargeStatusChanged","pmChargeStatusChangedMask","pmDimmingEnableChanged","pmDimmingEnableChangedMask","pmDimmingTimeoutChanged","pmDimmingTimeoutChangedMask","pmDiskModeAddressChanged","pmDiskModeAddressChangedMask","pmField","pmHardDiskPowerRemovedbyUser","pmHardDiskPowerRemovedbyUserMask","pmHardDiskSpindownChanged","pmHardDiskSpindownChangedMask","pmHardDiskTimeoutChanged","pmHardDiskTimeoutChangedMask","pmMask","pmPowerLevelChanged","pmPowerLevelChangedMask","pmProcessorCyclingChanged","pmProcessorCyclingChangedMask","pmProcessorSpeedChanged","pmProcessorSpeedChangedMask","pmRecvEndErr","pmRecvStartErr","pmReplyTOErr","pmSendEndErr","pmSendStartErr","pmSleepEnableChanged","pmSleepEnableChangedMask","pmSleepTimeoutChanged","pmSleepTimeoutChangedMask","pmStartupTimerChanged","pmStartupTimerChangedMask","pmWakeOnNetActivityChanged","pmWakeOnNetActivityChangedMask","pmWakeupTimerChanged","pmWakeupTimerChangedMask","pnotComponentNeedsNoCache","pnotComponentWantsEvents","podcastsQuery","point","pointInside: withEvent: ","pointSize","pointValue","pointerArrayWithOptions:","pointerArrayWithPointerFunctions:","pointerArrayWithStrongObjects","pointerArrayWithWeakObjects","pointerAtIndex:","pointerFunctions","pointerFunctionsWithOptions:","pointerValue","pointingDeviceID","pointingDeviceSerialNumber","pointingDeviceType","pointingHandCursor","policies","policiesDisclosed","policyDelegate","poolCountHighWaterMark","poolCountHighWaterResolution","pop","popNavigationItemAnimated: ","popToRootViewControllerAnimated: ","popToViewController: animated: ","popUpContextMenu: withEvent: forView:","popUpContextMenu: withEvent: forView: withFont:","popUpRecentsMenuForView: withDelegate: didEndSelector: contextInfo:","popUpStatusItemMenu:","popViewControllerAnimated: ","popupFixedWidth","popupMenuProc","popupTitleBold","popupTitleCenterJust","popupTitleCondense","popupTitleExtend","popupTitleItalic","popupTitleLeftJust","popupTitleNoStyle","popupTitleOutline","popupTitleRightJust","popupTitleShadow","popupTitleUnderline","popupUseAddResMenu","popupUseWFont","popupVariableWidth","port","portClosedErr","portCoderWithReceivePort: sendPort: components:","portForName:","portForName: host:","portForName: host: nameServerPortNumber:","portInUse","portList","portNameExistsErr","portNotCf","portNotPwr","portWithMachPort:","portWithMachPort: options: ","portnumber","posCntl","posErr","poseAsClass:","position","positionOfGlyph: forCharacter: struckOverRect:","positionOfGlyph: precededByGlyph: isNominal:","positionOfGlyph: struckOverGlyph: metricsExist:","positionOfGlyph: struckOverRect: metricsExist:","positionOfGlyph: withRelation: toBaseGlyph: totalAdvancement: metricsExist:","positions","positionsForCompositeSequence: numberOfGlyphs: pointArray:","positiveFormat","positiveInfinity","positiveInfinitySymbol","positivePrefix","positiveSuffix","posixGID","posixName","posixUID","possibleTitles","postEvent: atStart:","postNotification:","postNotificationName: object:","postNotificationName: object: userInfo:","postNotificationName: object: userInfo: deliverImmediately:","postNotificationName: object: userInfo: options:","postNotificationName: userInfo:","postalCode","posterImage","postsBoundsChangedNotifications","postsFrameChangedNotifications","postscriptName","powerChangeHandler","powerStateDidChangeTo","powerStateWillChangeTo","ppdFile","prInitErr","prWrErr","preGap","precomposedStringWithCanonicalMapping","precomposedStringWithCompatibilityMapping","predefinedEntityDeclarationForName:","predefinedNamespaceForPrefix:","predicate","predicateForRow:","predicateFormat","predicateOperatorType","predicateWithFormat:","predicateWithFormat: argumentArray:","predicateWithFormat: arguments:","predicateWithFormat:argumentArray:","predicateWithFormat:arguments:","predicateWithLeftExpression: rightExpression: customSelector:","predicateWithLeftExpression: rightExpression: modifier: type: options:","predicateWithLeftExpression:rightExpression:customSelector:","predicateWithLeftExpression:rightExpression:modifier:type:options:","predicateWithSubpredicates:","predicateWithSubstitutionVariables:","predicateWithValue:","predicateWithValue:forProperty:","predicateWithValue:forProperty:comparisonType:","preferences","preferencesIdentifier","preferencesView","preferredBackingLocation","preferredEdge","preferredFileNameExtensionForType:","preferredFilename","preferredFontNames","preferredFrameSize","preferredHardwareSampleRate","preferredIOBufferDuration","preferredLanguages ","preferredLocalizations","preferredLocalizationsFromArray:","preferredLocalizationsFromArray: forPreferences:","preferredPasteboardTypeFromArray: restrictedToTypesFromArray:","preferredSizeOfLayer:","preferredSyncModeForEntityName:","prefersAllColumnUserResizing","prefersColorMatch","prefersTrackingUntilMouseUp","prefix","prefixForName:","preflightAndReturnError:","preloadAlways","preloadOnlyIfEnabled","prepare","prepareContent","prepareFileForBurn:","prepareFileForVerification:","prepareForDeletion","prepareForDragOperation:","prepareForReuse","prepareGState","prepareOpenGL","preparePageLayout:","prepareSavePanel:","prepareToPullChangesForEntityNames: beforeDate:","prepareToPullChangesInBackgroundForEntityNames: target: selector:","prepareToRecord","prepareTrack: forBurn: toMedia:","prepareTrackForVerification:","prepareWithInvocationTarget:","preparedCellAtColumn: row:","prependTransform:","presentError:","presentError: modalForWindow: delegate: didPresentSelector: contextInfo:","presentModalViewController: animated: ","presentationLayer","presentationTime","preservesAspectRatio","preservesContentDuringLiveResize","preservesDepth","preservesSelection","pressed","pressure","prevValue","preventDefault","preventWindowOrdering","previewBounds","previousEnabled","previousFailureCount","previousKeyView","previousLocationInView: ","previousNode","previousSibling","previousValidKeyView","price","priceLocale","primaryIdentifier","primitiveType","primitiveValueForKey:","principalClass","print:","printDocument:","printDocumentView","printDocumentWithSettings: showPrintPanel: delegate: didPrintSelector: contextInfo:","printInfo","printJobTitle","printOperationDidRun: success: contextInfo:","printOperationWithPrintInfo:","printOperationWithSettings: error:","printOperationWithView:","printOperationWithView: printInfo:","printPanel","printSession","printSettings","printShowingPrintPanel:","printWithInfo: autoRotate:","printWithInfo: autoRotate: pageScaling:","printer","printerFont","printerInfoTicket","printerNames","printerStatusOpCodeNotSupportedErr","printerTypes","printerWithName:","printerWithName: domain: includeUnavailable:","printerWithType:","printingAdjustmentInLayoutManager: forNominallySpacedGlyphRange: packedGlyphs: count:","privateBrowsingEnabled","privateController","privateFrameworksPath","privilegeViolationException","procNotFound","processEditing","processIdentifier","processInfo","processName","processPendingChanges","processStateIncorrectErr","processingInstructionWithName: stringValue:","processorCount","produceDataForTrack: intoBuffer: length: atAddress: blockSize: ioFlags:","produceFile: fork: intoBuffer: length: atAddress: blockSize:","producePreGapForTrack: intoBuffer: length: atAddress: blockSize: ioFlags:","productIdentifier","products","productsRequest:didReceiveResponse:","profile","profileURI","program","progress","progressMarks","progressOpAddMovieSelection","progressOpCopy","progressOpCut","progressOpExportMovie","progressOpFlatten","progressOpImportMovie","progressOpInsertMovieSegment","progressOpInsertTrackSegment","progressOpLoadMediaIntoRam","progressOpLoadMovieIntoRam","progressOpLoadTrackIntoRam","progressOpPaste","progressPanel","progressProcAborted","progressViewStyle","project","project:","projectDirectory","projectManager","projectName","prompt","propagatesDeletesAtEndOfEvent","properties","propertiesByName","propertiesForFilesystem: mergeWithOtherFilesystems:","propertiesToFetch","property","propertyCache","propertyForKey:","propertyForKey: inFilesystem: mergeWithOtherFilesystems:","propertyForKey: inRequest:","propertyForKeyIfAvailable:","propertyList","propertyList: isValidForFormat:","propertyListForType:","propertyListFromData: mutabilityOption: format: errorDescription:","propertyListFromStringsFileFormat","propertyNotSupportedByNodeErr","propertyType","propertyWithClass: code:","propertyWithCode:","property_getAttributes ","property_getName  ","proposedCredential","protectionSpace","prototype","provideImageData: bytesPerRow:","provideNewButtonImage","provideNewView:","provideViewForUIConfiguration: excludedKeys:","provisionalDataSource","proximityMonitoringEnabled","proximitySensingEnabled","proximityState","proxyType","proxyWithLocal: connection:","proxyWithTarget: connection:","publicID","publicId","publish","publishMediumDictionary","publishProperties","publishWithOptions:","pullsDown","punctuationCharacterSet","purpleColor","push","pushButProc","pushChange:","pushChangesFromRecord: withIdentifier:","pushNavigationItem: animated: ","pushViewController: animated: ","putCell: atRow: column:","putObjects: onPasteboard: forOwner:","quadrilateralPoints","quantity","quarterSymbols ","quartzFilterManager: didAddFilter:","quartzFilterManager: didModifyFilter:","quartzFilterManager: didRemoveFilter:","quartzFilterManager: didSelectFilter:","quartzFilterWithOutputIntents:","quartzFilterWithProperties:","quartzFilterWithURL:","query","querying","queueFull","quickTimeImageFileColorSyncProfileAtom","quickTimeImageFileImageDataAtom","quickTimeImageFileImageDescriptionAtom","quickTimeImageFileMetaDataAtom","quickTimeMedia","quickTimeMovie","quickTimeMovieController","quickTimeSampleDescription","quickTimeTrack","quietCmd","quotes","rDocProc","radioButProc","raise","raise: format:","raise: format: arguments:","raiseAfterFailure","raiseBaseline:","randomx","rangeContainerObject","rangeForUserCharacterAttributeChange","rangeForUserCompletion","rangeForUserParagraphAttributeChange","rangeForUserTextChange","rangeOfCharacterFromSet:","rangeOfCharacterFromSet: options:","rangeOfCharacterFromSet: options: range:","rangeOfComposedCharacterSequenceAtIndex:","rangeOfComposedCharacterSequencesForRange:","rangeOfNominallySpacedGlyphsContainingIndex:","rangeOfString:","rangeOfString: options:","rangeOfString: options: range:","rangeOfString: options: range: locale:","rangeOfTextBlock: atIndex:","rangeOfTextList: atIndex:","rangeOfTextTable: atIndex:","rangeOfUnit: inUnit: forDate:","rangeOfUnit: startDate: interval: forDate: ","rangeValue","rangesForUserCharacterAttributeChange","rangesForUserParagraphAttributeChange","rangesForUserTextChange","read: maxLength:","readBytes","readDataOfLength:","readDataToEndOfFile","readErr","readFileContentsType: toFile:","readFileWrapper","readFromData: ofType: error:","readFromData: options: documentAttributes:","readFromData: options: documentAttributes: error:","readFromFile: ofType:","readFromFileWrapper: ofType: error:","readFromURL: ofType:","readFromURL: ofType: error:","readFromURL: options: documentAttributes:","readFromURL: options: documentAttributes: error:","readInBackgroundAndNotify","readInBackgroundAndNotifyForModes:","readNetworkData","readOnly","readOnlyMemoryException","readPrintInfo","readQErr","readRTFDFromFile:","readReference","readSelectionFromPasteboard:","readSelectionFromPasteboard: type:","readToEndOfFileInBackgroundAndNotify","readToEndOfFileInBackgroundAndNotifyForModes:","readablePasteboardTypes","readableTypes","realm","rearrangeObjects","reason","recNotFnd","recache","recalculateKeyViewLoop","receiveData:","receivePacket","receivePort","receivedData: withDataSource:","receivedData:fromParticipantID:","receivedError: withDataSource:","receivedRealTimeData:fromParticipantID:","receiversSpecifier","receivesCredentialSecurely","recentAccessDate","recentDevices:","recentDocumentURLs","recentSearches","recentsAutosaveName","reclaimResources","recognizedEvents:","record","recordClassFromUniqueId:","recordDataTooBigErr","recordDescriptor","recordForDuration:","recordForUniqueId:","recordIdentifier","recordIdentifierForReference: isModified:","recordReferenceForRecordWithIdentifier:","recordScript:","recordToOutputFileURL:","recordToOutputFileURL: bufferDestination:","recordedDuration","recordedFileSize","recording","recordsForEntityName: moreComing: error:","recordsMatchingSearchElement:","recordsWithIdentifiers:","recordsWithMatchingAttributes:","recoveryAttempter","rect","rectArrayForCharacterRange: withinSelectedCharacterRange: inTextContainer: rectCount:","rectArrayForGlyphRange: withinSelectedGlyphRange: inTextContainer: rectCount:","rectForBlock: layoutAtPoint: inRect: textContainer: characterRange:","rectForFooterInSection: ","rectForHeaderInSection: ","rectForKey: inTable:","rectForLayoutAtPoint: inRect: textContainer: characterRange:","rectForPage:","rectForPart:","rectForRowAtIndexPath: ","rectForSection: ","rectOfColumn:","rectOfItemAtIndex:","rectOfPathComponentCell: withFrame: inView:","rectOfRow:","rectOfTickMarkAtIndex:","rectPreservedDuringLiveResize","rectValue","recurrenceEndWithEndDate:","recurrenceEndWithOccurrenceCount:","red","redColor","redComponent","redo","redoActionName","redoMenuItemTitle","redoMenuTitleForUndoActionName:","referenceData","referenceFile","referenceObjectForObjectID:","referenceURL","referrer","reflectScrolledClipView:","refresh:","refreshObject: mergeChanges:","refreshObject:mergeChanges:","refusesFirstResponder","region","regionThatFits:","register","registerClass:","registerClassDescription:","registerClassDescription: forClass:","registerClientWithIdentifier: descriptionFilePath:","registerCoercer: selector: toConvertFromClass: toClass:","registerCommandDescription:","registerComponentAfterExisting","registerComponentAliasesOnly","registerComponentGlobal","registerComponentNoDuplicates","registerDefaults:","registerFilterName: constructor:","registerForChannelCloseNotification: selector:","registerForChannelOpenNotifications: selector:","registerForChannelOpenNotifications: selector: withChannelID: direction:","registerForChannelOpenNotifications: selector: withPSM: direction:","registerForConnectNotifications: selector:","registerForDisconnectNotification: selector:","registerForDraggedTypes:","registerForLocalNotifications","registerForRemoteNotificationTypes:","registerForServices","registerI2C","registerImageRepClass:","registerIncomingDataListener: refCon:","registerIncomingEventListener: refCon:","registerLanguage: byVendor:","registerName:","registerName: withNameServer:","registerOutputHandler","registerPlugInClass:","registerPort: name:","registerPort: name: nameServerPortNumber:","registerResourceManagerClass:","registerResourceManagerClass: forFrameworks:","registerSchemaWithBundlePath:","registerServicesMenuSendTypes: returnTypes:","registerStoreClass: forStoreType:","registerStoreClass:forStoreType:","registerURLHandleClass:","registerUndoWithTarget: selector: object:","registerUndoWithTarget:selector:object:","registerUnitWithName: abbreviation: unitToPointsConversionFactor: stepUpCycle: stepDownCycle:","registerViewClass: representationClass: forMIMEType:","registerViewResourceDraggingDelegate:","registerWithPolicyMaker","registeredDraggedTypes","registeredImageRepClasses","registeredObjects","registeredResourceManagerClasses","registeredResourceManagerClassesForFramework:","registeredStoreTypes","registeredViewResourceDraggingDelegates","regularFileContents","rel","relatedNode","relatedTarget","relation","relationl","relationshipKeyPathsForPrefetching","relationshipMappings","relationshipsByName","relationshipsWithDestinationEntity:","relativeCurveToPoint:","relativeLineToPoint:","relativeMoveToPoint:","relativePath","relativePosition","relativeString","releaseCGLContext:","releaseCGLPixelFormat:","releaseDebuggerLock","releaseExclusiveAccess","releaseFreePackets","releaseGState","releaseGlobally","releaseMediaReservation","releaseRenderedTexture: forCGLContext:_ctx","reload","reload:","reloadAllComponents","reloadColumn:","reloadComponent: ","reloadCriteria","reloadData","reloadDefaultFontFamilies","reloadItem:","reloadItem: reloadChildren:","reloadPredicate","reloadRowsAtIndexPaths:withRowAnimation:","reloadSectionIndexTitles","reloadSections:withRowAnimation:","reloadSlideshowItemAtIndex:","reloadThumbnails","relstring","remainder","remainderl","remapLineEndings","remoteNameRequest:","remoteNameRequest: withPageTimeout:","remoteNameRequestComplete: status:","remoteObjects","remoteParticipantVolume","remove:","removeAccessoryController:","removeAction:","removeAlarm:","removeAlarms:","removeAllActions","removeAllActionsWithTarget:","removeAllAnimations","removeAllAppearanceStreams","removeAllCachedResponses","removeAllIndexes","removeAllItems","removeAllObjects","removeAllPoints","removeAllSegments","removeAllToolTips","removeAnimationForKey:","removeAnimationForKey: ","removeAnimationsForKey:","removeAnnotation:","removeAnnotations:","removeApertureModeDimensions","removeAttribute:","removeAttribute: range:","removeAttributeForName:","removeAttributeNS:","removeAttributeNS: localName:","removeAttributeNode:","removeBezierPath:","removeCachedResponseForRequest:","removeCalendar: error:","removeChapters","removeCharactersInRange:","removeCharactersInString:","removeChild:","removeChildAtIndex:","removeChildWindow:","removeClient:","removeCollection:","removeColorWithKey:","removeColumn:","removeConnection: fromRunLoop: forMode:","removeConnector:","removeContextHelpForObject:","removeCredential: forProtectionSpace:","removeCursorRect: cursor:","removeDecriptorAtIndex:","removeDependency:","removeDescriptorAtIndex:","removeDescriptorWithKeyword:","removeDocument:","removeDragCaret","removeEntryAtIndex:","removeEvent: span: error:","removeEventHandlerForEventClass: andEventID:","removeEventListener:","removeEventListener: listener: useCapture:","removeExportedKey:","removeFeed:","removeFile","removeFileAtPath: handler:handler","removeFileWrapper:","removeFilterPredicate:","removeFontDescriptor: fromCollection:","removeFontTrait:","removeFrameUsingName:","removeFromContext:","removeFromFavorites","removeFromParent","removeFromRunLoop: forMode:","removeFromSuperlayer","removeFromSuperview","removeFromSuperviewWithoutNeedingDisplay","removeIndex:","removeIndexes:","removeIndexesInRange:","removeInput:","removeInputPortForKey:","removeItem:","removeItemAtIndex:","removeItemAtPath: error:","removeItemWithObjectValue:","removeItemWithTitle:","removeItems:","removeLastObject","removeLayoutManager:","removeMarker:","removeMedium","removeMember:","removeNamedItem:","removeNamedItemNS:","removeNamedItemNS: localName:","removeNamespaceForPrefix:","removeNetworkData","removeObject:","removeObject: inRange:","removeObjectAtArrangedObjectIndex:","removeObjectAtArrangedObjectIndexPath:","removeObjectAtIndex:","removeObjectForKey:","removeObjectIdenticalTo:","removeObjectIdenticalTo: inRange:","removeObjects:","removeObjectsAtArrangedObjectIndexPaths:","removeObjectsAtArrangedObjectIndexes:","removeObjectsAtIndexes:","removeObjectsForKeys:","removeObjectsFromIndices: numIndices:","removeObjectsInArray:","removeObjectsInRange:","removeObserver:","removeObserver: forKeyPath:","removeObserver: fromObjectsAtIndexes: forKeyPath:","removeObserver: name: object:","removeOutput:","removeOutputPortForKey:","removePageAtIndex:","removeParamDescriptorWithKeyword:","removePasteboardWithName:","removePersistentDomainForName:","removePersistentStore: error:","removePersistentStore:error:","removePointerAtIndex:","removePort: forMode:","removePortForName:","removeProgressMark:","removeProperties:","removeProperty:","removePropertyForKey: inRequest:","removeRecord:","removeRepresentation:","removeRequestMode:","removeRow:","removeRowAtIndex:","removeRowsAtIndexes: includeSubrows:","removeRunLoop:","removeSavedColumnsWithAutosaveName:","removeSegmentAtIndex: animated: ","removeSelectedObjects:","removeSelectionIndexPaths:","removeSelectionIndexes:","removeStatusItem:","removeSubgroup:","removeSuiteNamed:","removeTabStop:","removeTabViewItem:","removeTableColumn:","removeTarget: action: forControlEvents: ","removeTask: error:","removeTemporaryAttribute: forCharacterRange:","removeTextContainerAtIndex:","removeToolTip:","removeTrackingArea:","removeTrackingRect:","removeTransactionObserver:","removeValueAndLabelAtIndex:","removeValueAtIndex: fromPropertyWithKey:","removeValueForProperty:","removeVolatileDomainForName:","removeWebScriptKey:","removeWindowController:","removeWindowsItem:","removedOnCompletion","remquo","remquol","renamingIdentifier","render: toBitmap: rowBytes:","renderAtTime: arguments:","renderInContext:","renderInContext: ","renderIntoOpenGLBuffer: onScreen: forTime:","renderIntoPixelBuffer: forTime:","renderToBuffer: withBytesPerRow: pixelFormat: forBounds:","renderWithCGLContext:_ctx forBounds:","rendererWithCGLContext:","renderingMode","renewGState","renewRows: columns:","reopenDocumentForURL: withContentsOfURL: error:","repeatCount","repeatDuration","repeatMode","replace:","replaceBytesInRange: withBytes:","replaceBytesInRange: withBytes: length:","replaceCharactersInRange: withAttributedString:","replaceCharactersInRange: withRTF:","replaceCharactersInRange: withRTFD:","replaceCharactersInRange: withString:","replaceChild:","replaceChild: oldChild:","replaceChildAtIndex: withNode:","replaceData:","replaceData: length: data:","replaceGlyphAtIndex: withGlyph:","replaceLabelAtIndex: withLabel:","replaceLayoutManager:","replaceObject: withObject:","replaceObjectAtIndex: withObject:","replaceObjectsAtIndexes: withObjects:","replaceObjectsInRange: withObjectsFromArray:","replaceObjectsInRange: withObjectsFromArray: range:","replaceOccurrencesOfString: withString: options: range:","replaceOrCopyPacket","replacePacket","replacePointerAtIndex: withPointer:","replaceSelectionWithArchive:","replaceSelectionWithMarkupString:","replaceSelectionWithNode:","replaceSelectionWithSelectionFromMovie:","replaceSelectionWithText:","replaceSublayer: with:","replaceSublayer: with: ","replaceSubview: with:","replaceTextContainer:","replaceTextStorage:","replaceValueAtIndex: inPropertyWithKey: withValue:","replaceValueAtIndex: withValue:","replacementClassForClass:","replacementObjectForArchiver:","replacementObjectForCoder:","replacementObjectForKeyedArchiver:","replacementObjectForPortCoder:","replacementRange","replyAppleEventForSuspensionID:","replyTimeout","replyToApplicationShouldTerminate:","replyToOpenOrPrint:","replyToShouldUnselect:","replyWithException:","reportException:","representation","representationOfImageRepsInArray: usingType: properties:","representationUsingType: properties:","representations","representativeItem","representedFilename","representedObject","representedURL","reqAborted","reqFailed","request","request:didFailWithError:","requestAuthentication","requestData","requestDidFinish:","requestExpression","requestHeaderFieldsWithCookies:","requestIsCacheEquivalent: toRequest:","requestModes","requestRemoteMTU:","requestTimeout","requestUserAttention:","requestWithURL:","requestWithURL: cachePolicy: timeoutInterval:","requestedBurnSpeed","require","require_action","require_action_quiet","require_action_string","require_quiet","require_string","require_tasklevel0","require_tasklevel0_action","require_tasklevel0_action_quiet","require_tasklevel0_action_string","require_tasklevel0_quiet","require_tasklevel0_string","requiredFileType","requiredFlagsDontMatch","requiredFrameworks","requiredThickness","res1Field","res2Field","res3Field","resAttrErr","resChanged","resChangedBit","resCtrl","resFNotFound","resLocked","resLockedBit","resNotFound","resPreload","resPreloadBit","resProblem","resProtected","resProtectedBit","resPurgeable","resPurgeableBit","resSysHeap","resSysHeapBit","resSysRefBit","reserveDebuggerLock","reservedForUseByGraphicsImporters","reservedSpaceLength","reservedThicknessForAccessoryView","reservedThicknessForMarkers","reset","resetBytesInRange:","resetCancelButtonCell","resetCursorRect: inView:","resetCursorRects","resetDefaultInputValues","resetNetworkData","resetObject:","resetSearchButtonCell","resetStandardUserDefaults","resetSystemTimeZone","resetTotalAutoreleasedObjects","reshape","resignFirstResponder","resignKeyWindow","resignMainWindow","resignSelectionForEditor:","resizeDownCursor","resizeFlags","resizeIncrements","resizeLeftCursor","resizeLeftRightCursor","resizeRightCursor","resizeSublayersWithOldSize:","resizeSubviewsWithOldSize:","resizeUpCursor","resizeUpDownCursor","resizeWithMagnification:","resizeWithOldSuperlayerSize:","resizeWithOldSuperviewSize:","resizedColumn","resizingMask","resolve","resolveNamespaceForName:","resolvePrefixForNamespaceURI:","resolveWithTimeout:","resolvedKeyDictionary","resolvesAliases","resource","resourceData","resourceDataUsingCache:","resourceFileTypes","resourceInMemory","resourceLoadDelegate","resourcePasteboardTypes","resourcePath","resourceSpecifier","resourcesForObjects:","respondsToSelector:","response","restCmd","restartTransmission","restoreCachedImage","restoreCompletedTransactions","restoreGraphicsState","restoreValuesAndReturnError:","resultAtIndex:","resultCount","resultType","resultView","results","resume","resumeCmd","resumeData","resumeExecutionWithResult:","resumeFlag","resumeObservation","resumeRendering","resumeWithSuspensionID:","retrieveFolderListing","retryComponentRegistrationErr","return","returnID","returnKeyType","returnType","returnsDistinctResults","returnsObjectsAsFaults","reuseIdentifier","reusesColumns","rev","reverseGeocoder:didFailWithError:","reverseGeocoder:didFindPlacemark:","reverseObjectEnumerator","reverseTransformedValue:","reversedSortDescriptor","reversesTitleShadowWhenHighlighted","revert:","revertButton","revertDocumentToSaved:","revertToContentsOfURL: ofType: error:","revertToInitialValues:","revertToSavedFromFile: ofType:","revertToSavedFromURL: ofType:","reviewUnsavedDocumentsWithAlertTitle: cancellable:","reviewUnsavedDocumentsWithAlertTitle: cancellable: delegate: didReviewAllSelector: contextInfo:","rfNumErr","rfcommChannelClosed:","rfcommChannelControlSignalsChanged:","rfcommChannelData: data: length:","rfcommChannelFlowControlChanged:","rfcommChannelOpenComplete: status:","rfcommChannelQueueSpaceAvailable:","rfcommChannelWriteComplete: refcon: status:","rgbComponentIn","rgbComponentSyncIn","rgnOverflowErr","rgnTooBigErr","rgnTooBigError","richTextFromDescriptor:","richTextSource","richness","right","rightBarButtonItem","rightCalloutAccessoryView","rightControlKey","rightControlKeyBit","rightExpression","rightExpressionAttributeType","rightExpressions","rightMargin","rightMouseDown:","rightMouseDragged:","rightMouseUp:","rightOptionKey","rightOptionKeyBit","rightShiftKey","rightShiftKeyBit","rightSingGuillemet","rightView","rightViewMode","rightViewRectForBounds: ","ringDetectBit","ringDetectMask","ringMark","ringWakeUpBit","ringWakeUpMask","rinttol","rinttoll","rmvRefFailed","rmvResFailed","rollback","romanAppFond","romanFlags","romanSysFond","root","rootDocument","rootElement","rootObject","rootProject","rootProxy","rootProxyForConnectionWithRegisteredName: host:","rootProxyForConnectionWithRegisteredName: host: usingNameServer:","rotateByAngle:","rotateByDegrees:","rotateByRadians:","rotatingFooterView","rotatingHeaderView","rotation","rotationMode","roundingBehavior","roundingIncrement","roundingMode","roundl","roundtol","roundtoll","routines","routingNotFoundErr","row","rowAtPoint:","rowClass","rowForDisplayValue:","rowForItem:","rowHeight","rowIndex","rowSizeForComponent: ","rowSizeForPage:","rowSpan","rowTemplates","rowTypeForRow:","rowTypeKeyPath","rows","rowsInRect:","ruleEditor: child: forCriterion: withRowType:","ruleEditor: displayValueForCriterion: inRow:","ruleEditor: numberOfChildrenForCriterion: withRowType:","ruleEditor: predicatePartsForCriterion: withDisplayValue: inRow:","ruleEditorRowsDidChange:","ruleThickness","ruler","rulerAccessoryViewForTextView: paragraphStyle: ruler: enabled:","rulerAttributesInRange:","rulerMarkersForTextView: paragraphStyle: ruler:","rulerView: didAddMarker:","rulerView: didMoveMarker:","rulerView: didRemoveMarker:","rulerView: handleMouseDown:","rulerView: shouldAddMarker:","rulerView: shouldMoveMarker:","rulerView: shouldRemoveMarker:","rulerView: willAddMarker: atLocation:","rulerView: willMoveMarker: toLocation:","rulerView: willSetClientView:","rulerViewClass","rulersVisible","rules","run","run:","runActionForKey: object:","runActionForKey: object: ","runAsynchronouslyWithInput:","runCustomizationPalette:","runInNewThread","runLoopModes","runLoopModesForAnimating","runModal","runModalForCertificates: showGroup:","runModalForDirectory: file:","runModalForDirectory: file: types:","runModalForIdentities: message:","runModalForSettings: keychain:","runModalForTrust: message:","runModalForTrust: showGroup:","runModalForTypes:","runModalForWindow:","runModalForWindow: modalDelegate: didEndSelector: contextInfo:","runModalForWindow: relativeToWindow:","runModalIdentityPicker","runModalOpenPanel: forTypes:","runModalPageLayoutWithPrintInfo:","runModalPageLayoutWithPrintInfo: delegate: didRunSelector: contextInfo:","runModalPrintOperation: delegate: didRunSelector: contextInfo:","runModalSavePanel: withAccessoryView:","runModalSavePanelForSaveOperation: delegate: didSaveSelector: contextInfo:","runModalSession:","runModalWithOptions:","runModalWithPrintInfo:","runMode: beforeDate:","runOperation","runOperationModalForWindow: delegate: didRunSelector: contextInfo:","runPageLayout:","runPanel","runPanelWithAttributes:","runScript:","runSetupPanel","runSlideshowWithDataSource:","runToolbarCustomizationPalette:","runUntilDate:","runWithInput: fromAction: error:","runWorkflowAtURL: withInput: error:","sIQType","sPollForMedia","sRGBColorSpace","sVideoIn","sameFileErr","sampleBufferAttributes","sampledSynth","samplerWithImage:","samplerWithImage: keysAndValues:key0","samplerWithImage: options:","samplesAlreadyInMediaErr","samplesPerPixel","sansSerifFontFamily","saturationComponent","save","save:","saveAllDocuments:","saveAndReturnError:","saveCalendar: error:","saveDocument:","saveDocumentAs:","saveDocumentTo:","saveDocumentWithDelegate: didSaveSelector: contextInfo:","saveEvent: span: error:","saveFrameUsingName:","saveGraphicsState","saveOptions","savePanel","saveTask: error:","saveToFile: saveOperation: delegate: didSaveSelector: contextInfo:","saveToURL: error:","saveToURL: ofType: forSaveOperation: delegate: didSaveSelector: contextInfo:","saveToURL: ofType: forSaveOperation: error:","saveTrustSettings","saveValuesAndReturnError:","scale","scaleBy:","scaleFactor","scaleMatrixType","scaleSegment: newDuration:","scaleTranslateMatrixType","scaleUnitSquareToSize:","scaleXBy: yBy:","scalesPageToFit","scalesWhenResized","scalingMode","scanCharactersFromSet: intoString:","scanDecimal:","scanDouble:","scanFloat:","scanHexInt:","scanInt:","scanInteger:","scanLocation","scanLongLong:","scanString: intoString:","scanUpToCharactersFromSet: intoString:","scanUpToString: intoString:","scannerWithString:","scheduleInRunLoop: forMode:","scheduleInRunLoop: forMode: ","scheduledSoundCmd","scheduledTimerWithTimeInterval: invocation: repeats:","scheduledTimerWithTimeInterval: target: selector: userInfo: repeats:","schemaBundleURLs","scheme","scope","scopeButtonTitles","scrapFlavorFlagsMismatchErr","scrapFlavorNotFoundErr","scrapFlavorSizeMismatchErr","scrapPromiseNotKeptErr","screen","screenFont","screenFontWithRenderingMode:","screenNamesForPerson:","screenX","screenY","screens","script","scriptCurLang","scriptDefLang","scriptErrorNumber","scriptErrorString","scriptState","scriptView","scriptingBeginsWith:","scriptingContains:","scriptingEndsWith:","scriptingIsEqualTo:","scriptingIsGreaterThan:","scriptingIsGreaterThanOrEqualTo:","scriptingIsLessThan:","scriptingIsLessThanOrEqualTo:","scriptingProperties","scrollBarColor","scrollBarProc","scrollCellToVisibleAtRow: column:","scrollClipView: toPoint:","scrollColumnToVisible:","scrollColumnsLeftBy:","scrollColumnsRightBy:","scrollEnabled","scrollIndexToVisible:","scrollIndicatorInsets","scrollIntoView:","scrollIntoViewIfNeeded:","scrollItemAtIndexToTop:","scrollItemAtIndexToVisible:","scrollLineDown:","scrollLineUp:","scrollMode","scrollPageDown:","scrollPageUp:","scrollPoint:","scrollPoint: ","scrollRangeToVisible:","scrollRangeToVisible: ","scrollRect: by:","scrollRectToVisible:","scrollRectToVisible: ","scrollRectToVisible: animated: ","scrollRowToVisible:","scrollSelectionToVisible:","scrollToNearestSelectedRowAtScrollPosition: animated: ","scrollToPoint:","scrollToPoint: ","scrollToRect:","scrollToRect: ","scrollToRowAtIndexPath: atScrollPosition: animated: ","scrollViaScroller:","scrollView","scrollViewDidEndDecelerating: ","scrollViewDidEndDragging: willDecelerate: ","scrollViewDidEndScrollingAnimation: ","scrollViewDidEndZooming: withView: atScale: ","scrollViewDidScroll: ","scrollViewDidScrollToTop: ","scrollViewShouldScrollToTop: ","scrollViewWillBeginDecelerating: ","scrollViewWillBeginDragging: ","scrollWheel:","scrollerWidth","scrollerWidthForControlSize:","scrolling","scrollsDynamically","scrollsToTop","scsiAbortCmdFixed","scsiAutosenseFailed","scsiAutosenseValid","scsiBDRsent","scsiBadConnID","scsiBadConnType","scsiBadDataLength","scsiBusCacheCoherentDMA","scsiBusDMAavailable","scsiBusDataBuffer","scsiBusDataIOTable","scsiBusDataReserved","scsiBusDataSG","scsiBusDataTIB","scsiBusDifferential","scsiBusErrorsUnsafe","scsiBusExternal","scsiBusFastSCSI","scsiBusInternal","scsiBusInternalExternal","scsiBusInternalExternalMask","scsiBusInternalExternalUnknown","scsiBusInvalid","scsiBusLVD","scsiBusLinkedCDB","scsiBusLoadsROMDrivers","scsiBusMDP","scsiBusNotFree","scsiBusOldCallCapable","scsiBusSDTR","scsiBusScansDevices","scsiBusScansOnInit","scsiBusSoftReset","scsiBusTagQ","scsiBusUltra2SCSI","scsiBusUltra3SCSI","scsiBusUltraSCSI","scsiBusWide16","scsiBusWide32","scsiBusy","scsiCDBIsPointer","scsiCDBLengthInvalid","scsiCDBLinked","scsiCDBReceived","scsiCannotLoadPlugin","scsiCommandTimeout","scsiDataBuffer","scsiDataIOTable","scsiDataPhysical","scsiDataReadyForDMA","scsiDataRunError","scsiDataSG","scsiDataTIB","scsiDataTypeInvalid","scsiDeviceConflict","scsiDeviceNoOldCallAccess","scsiDeviceNotThere","scsiDeviceSensitive","scsiDirectionIn","scsiDirectionMask","scsiDirectionNone","scsiDirectionOut","scsiDirectionReserved","scsiDisableAutosense","scsiDisableDiscipline","scsiDisableSelectWAtn","scsiDisableSyncData","scsiDisableWide","scsiDoDisconnect","scsiDontDisconnect","scsiErrorBase","scsiExecutionErrors","scsiFamilyInternalError","scsiFireWireBridgeBus","scsiFlagReserved0","scsiFlagReserved1","scsiFlagReserved3","scsiFlagReserved5","scsiFlagReserved6","scsiFlagReserved7","scsiFlagReserved8","scsiFlagReservedA","scsiFunctionNotAvailable","scsiIDInvalid","scsiIOFlagReserved0080","scsiIOFlagReserved8000","scsiIOInProgress","scsiIdentifyMessageRejected","scsiInitiateSyncData","scsiInitiateWide","scsiInvalidMsgType","scsiLUNInvalid","scsiMeshACKTimingFixed","scsiMessageRejectReceived","scsiMotherboardBus","scsiNoBucketIn","scsiNoBucketOut","scsiNoHBA","scsiNoNexus","scsiNoParityCheck","scsiNoSuchXref","scsiNonZeroStatus","scsiNotExecutedErrors","scsiNuBus","scsiOddCountForPhysicalUnsafe","scsiOddDisconnectUnsafeRead1","scsiOddDisconnectUnsafeWrite1","scsiPBLengthError","scsiPCIBus","scsiPCMCIABus","scsiPDSBus","scsiParameterErrors","scsiParityError","scsiPartialPrepared","scsiPluginInternalError","scsiProvideFail","scsiQEnable","scsiQLinkInvalid","scsiRenegotiateSense","scsiRequestAborted","scsiRequestInProgress","scsiRequestInvalid","scsiRequiresHandshake","scsiSCSIBusReset","scsiSIMQFreeze","scsiSIMQFrozen","scsiSIMQHead","scsiSIMQNoFreeze","scsiSavePtrOnDisconnect","scsiSelectTimeout","scsiSensePhysical","scsiSequenceFailed","scsiStatBusy","scsiStatCheckCondition","scsiStatConditionMet","scsiStatGood","scsiStatIntermedMet","scsiStatIntermediate","scsiStatQFull","scsiStatResvConflict","scsiStatTerminated","scsiTIDInvalid","scsiTargetDrivenSDTRSafe","scsiTargetReserved","scsiTerminated","scsiTooManyBuses","scsiTransferBlind","scsiTransferPolled","scsiTransferTypeInvalid","scsiUSBBus","scsiUnableToAbort","scsiUnableToTerminate","scsiUnexpectedBusFree","scsiUnused05","scsiUnused06","scsiUnused07","scsiUnused08","scsiUnused11","scsiUnused16","scsiUnused74","scsiUnused75","scsiUnused79","scsiUnused81","scsiUnused84","scsiUnused85","scsiVERSION","scsiVendorSpecificErrorBase","scsiVendorSpecificErrorCount","scsiWrongDirection","scsum1_","sdisna_","sdmInitErr","sdmJTInitErr","sdmPRAMInitErr","sdmPriInitErr","sdmSRTInitErr","sdpQueryComplete: status:","seNoDB","searchBar","searchBar: textDidChange: ","searchBar:selectedScopeButtonIndexDidChange:","searchBar:shouldChangeTextInRange:replacementText:","searchBarBookmarkButtonClicked: ","searchBarCancelButtonClicked: searchBar","searchBarSearchButtonClicked: ","searchBarShouldBeginEditing: ","searchBarShouldEndEditing: ","searchBarTextDidBeginEditing: ","searchBarTextDidEndEditing: ","searchButtonCell","searchButtonRectForBounds:","searchContentsController","searchDisplayController","searchDisplayController:didHideSearchResultsTableView:","searchDisplayController:didLoadSearchResultsTableView:","searchDisplayController:didShowSearchResultsTableView:","searchDisplayController:shouldReloadTableForSearchScope:","searchDisplayController:shouldReloadTableForSearchString:","searchDisplayController:willHideSearchResultsTableView:","searchDisplayController:willShowSearchResultsTableView:","searchDisplayController:willUnloadSearchResultsTableView:","searchDisplayControllerDidBeginSearch:","searchDisplayControllerDidEndSearch:","searchDisplayControllerWillBeginSearch:","searchDisplayControllerWillEndSearch:","searchElementForConjunction: children:","searchElementForProperty:","searchFor: direction: caseSensitive: wrap:","searchForAllDomains","searchForBrowsableDomains","searchForRegistrationDomains","searchForServicesOfType: inDomain:","searchMenuTemplate","searchResultsDataSource","searchResultsDelegate","searchResultsTableView","searchScopes","searchTextDontGoToFoundTime","searchTextDontHiliteFoundText","searchTextEnabledTracksOnly","searchTextOneTrackOnly","searchTextRectForBounds:","secLeadingZ","secamIn","second","secondField","secondMask","secondOfMinute","secondSoundFormat","secondVidMode","second_","secondaryGroupingSize","secondarySelectedControlColor","seconds","secondsFromGMT","secondsFromGMTForDate:","sectNFErr","section","sectionFooterHeight","sectionForObject:collationStringSelector:","sectionForSectionIndexTitle:atIndex:","sectionForSectionIndexTitleAtIndex:","sectionHeaderHeight","sectionIndexMinimumDisplayRowCount","sectionIndexTitleForSectionName:","sectionIndexTitles","sectionIndexTitlesForTableView: ","sectionNameKeyPath","sectionRowIndex","sectionTitles","sections","sectors","secureTextEntry","seekErr","seekToEndOfFile","seekToFileOffset:","segmentCount","segmentStyle","segmentedControlStyle","sel_getName  ","sel_getUid  ","sel_isEqual  ","sel_registerName  ","select","select:","selectAll","selectAll:","selectAnnotation:animated:","selectCell:","selectCellAtRow: column:","selectCellWithTag:","selectColumn: byExtendingSelection:","selectColumnIndexes: byExtendingSelection:","selectFile: inFileViewerRootedAtPath:","selectFilter:","selectFirstTabViewItem:","selectGroup: byExtendingSelection:","selectIdentifier: forPerson: byExtendingSelection:","selectInAddressBook:","selectInputMode:","selectItem:","selectItemAtIndex:","selectItemWithObjectValue:","selectItemWithTag:","selectItemWithTitle:","selectKeyViewFollowingView:","selectKeyViewPrecedingView:","selectLastTabViewItem:","selectLine:","selectMedium","selectMediumWithName","selectMsg","selectNext:","selectNextKeyView:","selectNextTabViewItem:","selectNode:","selectNodeContents:","selectNone:","selectObjects:","selectParagraph:","selectPrevious:","selectPreviousKeyView:","selectPreviousTabViewItem:","selectRecord: byExtendingSelection:","selectRow: byExtendingSelection:","selectRow: inColumn:","selectRow: inComponent: animated: ","selectRowAtIndexPath: animated: scrollPosition: ","selectRowIndexes: byExtendingSelection:","selectRowIndexes: inColumn:","selectSegmentWithTag:","selectSentence:","selectTabViewItem:","selectTabViewItemAtIndex:","selectTabViewItemWithIdentifier:","selectText:","selectTextAtIndex:","selectTextAtRow: column:","selectToMark:","selectWithFrame: inView: editor: delegate: start: length:","selectWord:","selected","selectedAnnotations","selectedAttributedString","selectedBackgroundView","selectedCell","selectedCellInColumn:","selectedCells","selectedColumn","selectedColumnEnumerator","selectedColumnIndexes","selectedComposition","selectedControlColor","selectedControlTextColor","selectedDOMRange","selectedFilter","selectedFont","selectedFrame","selectedGroups","selectedIdentifiersForPerson:","selectedImage","selectedIndex","selectedItem","selectedItemIdentifier","selectedKnobColor","selectedMenuItemColor","selectedMenuItemTextColor","selectedNodes","selectedObject","selectedObjects","selectedRange","selectedRanges","selectedRecords","selectedRow","selectedRowEnumerator","selectedRowInColumn:","selectedRowInComponent: ","selectedRowIndexes","selectedRowIndexesInColumn:","selectedScopeButtonIndex","selectedSegment","selectedSegmentIndex","selectedString","selectedTabViewItem","selectedTag","selectedTextAttributes","selectedTextBackgroundColor","selectedTextColor","selectedValues","selectedViewController","selection","selectionAffinity","selectionCount","selectionDuration","selectionEnd","selectionForEntireDocument","selectionForLineAtPoint:","selectionForRange:","selectionForRect:","selectionForWordAtPoint:","selectionFromPage: atCharacterIndex: ","selectionFromPage: atPoint: toPage: ","selectionFromPoint: toPoint:","selectionGranularity","selectionHighlightStyle","selectionIndex","selectionIndexPath","selectionIndexPaths","selectionIndexes","selectionKeys","selectionKeysKeylayout","selectionOwner","selectionRangeForProposedRange: granularity:","selectionShouldChangeInOutlineView:","selectionShouldChangeInTableView:","selectionStart","selectionStyle","selectionsByLine","selector","selectorForCommand:","selectorNotSupportedByNodeErr","selectorText","selectsInsertedObjects","self","sendAction","sendAction: to:","sendAction: to: forAllCells:","sendAction: to: forEvent: ","sendAction: to: from:","sendAction: to: from: forEvent: ","sendActionOn:","sendActionsForControlEvents: ","sendBeforeDate:","sendBeforeDate: components: from: reserved:","sendBeforeDate: msgid: components: from: reserved:","sendBufferTroughChannel","sendChangesSinceDate:","sendData:","sendData:toPeers:withDataMode:error:","sendDataToAllPeers:withDataMode:error:","sendDataToTransport:","sendDoubleAction","sendEvent:","sendEvent: ","sendEvent: id: parameters:","sendFile:","sendL2CAPEchoRequest: length:","sendMode","sendPacket","sendPort","sendRFCOMMData: length:","sendRemoteLineStatus:","sendSubviewToBack: ","sendSynchronousRequest: returningResponse: error:","sender","sendsActionOnArrowKeys","sendsActionOnEndEditing","sendsSearchStringImmediately","sendsWholeSearchString","sepNotConsistent","sepNotIntlSep","separatesColumns","separator","separatorColor","separatorItem","separatorStyle","seqGrabAlwaysUseTimeBase","seqGrabAppendToFile","seqGrabCanMoveWindowWhileRecording","seqGrabDataProcDoesOverlappingReads","seqGrabDataProcIsInterruptSafe","seqGrabDoNotBufferizeData","seqGrabDontAddMovieResource","seqGrabDontMakeMovie","seqGrabDontPreAllocateFileSize","seqGrabDontUseTempMemory","seqGrabHasBounds","seqGrabHasDiscreteSamples","seqGrabHasVolume","seqGrabInfoNotAvailable","seqGrabLowLatencyCapture","seqGrabPause","seqGrabPauseForMenu","seqGrabPlayDuringRecord","seqGrabPreExtendFile","seqGrabPreview","seqGrabRecord","seqGrabRecordPreferQualityOverFrameRate","seqGrabSettingsPreviewOnly","seqGrabToDisk","seqGrabToMemory","seqGrabUnpause","seqGrabWriteAppend","seqGrabWriteFill","seqGrabWriteReserve","serialNumber","serialize","serializeAlignedBytesLength:","serializeDataAt: ofObjCType: context:","serializeInt:","serializeInt: atIndex:","serializeInts: count:","serializeInts: count: atIndex:","serializeObjectAt: ofObjCType: intoData:","serializeProperties","serializePropertyList:","serializePropertyList: intoData:","serializedRepresentation","serializedValueForKey:","serifFontFamily","server","serverHandleIncomingData:","serverTrust","serviceBrowserController:","serviceConnectionWithName: rootObject: ","serviceConnectionWithName: rootObject: usingNameServer: ","servicePortWithName: ","servicePrincipal","serviceWithName:","servicesMenu","servicesProvider","sessClosedErr","sessTableErr","session:connectionWithPeerFailed:withError:","session:didFailWithError:","session:didReceiveConnectionRequestFromPeer:","session:peer:didChangeState:","sessionBeginTimeout","sessionDriver: didPullAndReturnError:","sessionDriver: didPushAndReturnError:","sessionDriver: didRegisterClientAndReturnError:","sessionDriver: willFinishSessionAndReturnError:","sessionDriver: willPullAndReturnError:","sessionDriver: willPushAndReturnError:","sessionDriverDidCancelSession:","sessionDriverDidFinishSession:","sessionDriverWillCancelSession:","sessionDriverWithDataSource:","sessionHasGraphicAccess","sessionHasTTY","sessionID","sessionIsRemote","sessionIsRoot","sessionKeepCurrentBootstrap","sessionMode","sessionPullChangesTimeout","sessionWasInitialized","set","setALink:","setAMSymbol:","setAbbr:","setAbstract:","setAccept:","setAcceptCharset:","setAcceptsArrowKeys:","setAcceptsGlyphInfo:","setAcceptsMouseMovedEvents:","setAccessKey:","setAccessTypes","setAccessibilityFrame:","setAccessibilityHint:","setAccessibilityLabel:","setAccessibilityTraits:","setAccessibilityValue:","setAccessoryView:","setAction:","setActionName:","setActive:animated:","setActive:error:","setAffectedStores:","setAffineTransform:","setAffineTransform: ","setAlertStyle:","setAlign:","setAlignment:","setAlignment: range:","setAlignmentRect:","setAllHTTPHeaderFields:","setAllowedFileTypes:","setAllowedInputSourceLocales:","setAllowedTypes:","setAllowsAnimatedImageLooping:","setAllowsAnimatedImages:","setAllowsBranchSelection:","setAllowsColumnReordering:","setAllowsColumnResizing:","setAllowsColumnSelection:","setAllowsCutCopyPaste:","setAllowsDocumentBackgroundColorChange:","setAllowsDragging:","setAllowsEditingTextAttributes:","setAllowsEmptySelection:","setAllowsFloats:","setAllowsGroupSelection:","setAllowsImageEditing:","setAllowsMixedState:","setAllowsMultipleSelection:","setAllowsNonContiguousLayout:","setAllowsOtherFileTypes:","setAllowsReordering:","setAllowsScrolling:","setAllowsTickMarkValuesOnly:","setAllowsToolTipsWhenApplicationIsInactive:","setAllowsTruncatedLabels:","setAllowsTypeSelect:","setAllowsUndo:","setAllowsUserCustomization:","setAlpha:","setAlphaValue:","setAlt:","setAltIncrementValue:","setAlternate:","setAlternateButtonTitle:","setAlternateImage:","setAlternateMnemonicLocation:","setAlternateTitle:","setAlternateTitleWithMnemonic:","setAltersStateOfSelectedItem:","setAlwaysShowsDecimalSeparator:","setAlwaysUsesMultipleValuesMarker:","setAnimates:","setAnimationBeginsFromCurrentState: ","setAnimationBlockingMode:","setAnimationCurve:","setAnimationCurve: ","setAnimationDelay:","setAnimationDelay: ","setAnimationDelegate: ","setAnimationDidStopSelector: ","setAnimationDuration:","setAnimationDuration: ","setAnimationRepeatAutoreverses: ","setAnimationRepeatCount: ","setAnimationStartDate: ","setAnimationTimeInterval:","setAnimationTimingFunction:","setAnimationTimingFunction: ","setAnimationTransition: forView: cache: ","setAnimationWillStartSelector: ","setAnimations:","setAnimationsEnabled: ","setApertureModeDimensions: forMode:","setAppendable:","setAppleMenu:","setAppleScriptEventHandlerNames:","setAppleScriptObjectID:","setAppleScriptObjectName:","setAppleScriptScriptName:","setAppleScriptScriptScope:","setApplicationHandle: previousHandle: commandLine: show:","setApplicationIconImage:","setApplicationNameForUserAgent:","setAppliesImmediately:","setArchive:","setArgument: atIndex:","setArguments:","setArray:","setArrowPosition:","setArrowsPosition:","setAspectRatio:","setAssociatedPoints: atIndex:","setAttachment:","setAttachmentCell:","setAttachmentSize: forGlyphRange:","setAttribute:","setAttribute: forKey:","setAttribute: value:","setAttributeDescriptor: forKeyword:","setAttributeMappings:","setAttributeNS:","setAttributeNS: qualifiedName: value:","setAttributeNode:","setAttributeNodeNS:","setAttributeRuns:","setAttributeType:","setAttributeValueClassName:","setAttributedAlternateTitle:","setAttributedString:","setAttributedStringForNil:","setAttributedStringForNotANumber:","setAttributedStringForZero:","setAttributedStringValue:","setAttributedTitle:","setAttributes:","setAttributes: forExportedKey:","setAttributes: ofItemAtPath: error:","setAttributes: range:","setAttributesAsDictionary:","setAuthenticator:","setAuthorizationRights:","setAutoScales:","setAutodisplay:","setAutoenablesItems:","setAutohidesScrollers:","setAutomaticDashSubstitutionEnabled:","setAutomaticDataDetectionEnabled:","setAutomaticLinkDetectionEnabled:","setAutomaticQuoteSubstitutionEnabled:","setAutomaticSpellingCorrectionEnabled:","setAutomaticTextReplacementEnabled:","setAutomaticallyPreparesContent:","setAutomaticallyRearrangesObjects:","setAutorecalculatesKeyViewLoop:","setAutorepeat:","setAutoresizesAllColumnsToFit:","setAutoresizesOutlineColumn:","setAutoresizesSubviews:","setAutoresizingMask:","setAutosaveExpandedItems:","setAutosaveName:","setAutosaveTableColumns:","setAutosavedContentsFileURL:","setAutosaves:","setAutosavesConfiguration:","setAutosavingDelay:","setAutoscroll:","setAutosizesCells:","setAutostartsRendering:","setAutoupdate:","setAutoupdate: interval:","setAutovalidates:","setAvoidsEmptySelection:","setAxis:","setAzimuth:","setBackButtonVisible:","setBackground:","setBackgroundAttachment:","setBackgroundColor:","setBackgroundColors:","setBackgroundFilters:","setBackgroundImage:","setBackgroundImage: forState: ","setBackgroundLayoutEnabled:","setBackgroundPosition:","setBackgroundRepeat:","setBackgroundStyle:","setBackingType:","setBadgeLabel:","setBannerText:","setBaseName:","setBaseSpecifier:","setBaseWritingDirection:","setBaseWritingDirection: range:","setBccRecipients:","setBecomesKeyOnlyIfNeeded:","setBegin:","setBezelStyle:","setBezeled:","setBgColor:","setBidiLevels: forGlyphRange:","setBidiProcessingEnabled:","setBitsPerSample:","setBlocksOtherRecognizers:","setBody:","setBool: forKey:","setBorder:","setBorderBottom:","setBorderBottomColor:","setBorderBottomStyle:","setBorderBottomWidth:","setBorderCollapse:","setBorderColor:","setBorderColor: forEdge:","setBorderLeft:","setBorderLeftColor:","setBorderLeftStyle:","setBorderLeftWidth:","setBorderRight:","setBorderRightColor:","setBorderRightStyle:","setBorderRightWidth:","setBorderSpacing:","setBorderStyle:","setBorderTop:","setBorderTopColor:","setBorderTopStyle:","setBorderTopWidth:","setBorderType:","setBorderWidth:","setBordered:","setBottom:","setBottomMargin:","setBounds:","setBounds: forBox:","setBoundsOrigin:","setBoundsRect: forTextBlock: glyphRange:","setBoundsRotation:","setBoundsSize:","setBoxType:","setButton: enabled:","setButtonBordered:","setButtonType:","setByAddingObject: ","setByAddingObjectsFromArray: ","setByAddingObjectsFromSet: ","setCacheDepthMatchesImageDepth:","setCacheMode:","setCachePolicy:","setCachedSeparately:","setCachesBezierPath:","setCalendar:","setCalendarFormat:","setCanBeVisibleOnAllSpaces:","setCanBecomeVisibleWithoutLogin:","setCanChooseDirectories:","setCanChooseFiles:","setCanCreateDirectories:","setCanHide:","setCanRemoveAllRows:","setCanSelectAppendableMedia:","setCanSelectHiddenExtension:","setCanSelectTestBurn:","setCanSpawnSeparateThread:","setCancelButtonCell:","setCapacity:","setCaption:","setCaptionSide:","setCaptureSession:","setCaseSensitive:","setCategory:error:","setCcRecipients:","setCell:","setCellAttribute: to:","setCellBackgroundColor:","setCellClass:","setCellPadding:","setCellPrototype:","setCellSize:","setCellSpacing:","setCellsStyleMask:","setCenterCoordinate:animated:","setCertificate:","setCh:","setChOff:","setCharacterEncoding:","setCharacterIndex: forGlyphAtIndex:","setCharacters:","setCharactersToBeSkipped:","setCharset:","setChecked:","setChecksumResult","setChildSpecifier:","setChildren:","setChildrenKeyPath:","setChoices:","setCite:","setClass: forClassName:","setClassAttributes:","setClassName:","setClassName: forClass:","setClassOfDevice: forTimeInterval:","setClear:","setClearsFilterPredicateOnInsertion:","setClientInfo: forRecordWithIdentifier:","setClientView:","setClip","setClip:","setCode:","setCodeBase:","setCodeType:","setColSpan:","setCollapsesBorders:","setCollectionBehavior:","setColor:","setColor: atX: y:","setColor: forKey:","setColorRenderingIntent:","setColorSpaceName:","setCols:","setColumnAutoresizingStyle:","setColumnResizingType:","setColumnTitle: forProperty:","setColumnsAutosaveName:","setCommands:","setCompact:","setCompletes:","setCompletionAction:","setCompletionDelay:","setCompositingFilter:","setCompositingOperation:","setCompositionAspectRatio:","setCompositionRenderer:","setCompositionsFromRepositoryWithProtocol: andAttributes:","setCompression: factor:","setCompressionOptions: forConnection:","setConfigurationFromDictionary:","setConnectionAttributes:","setConstrainedFrameSize:","setConstrainsToOriginalSize:","setContainerClassDescription:","setContainerIsObjectBeingTested:","setContainerIsRangeContainerObject:","setContainerSize:","setContainerSpecifier:","setContent:","setContentAspectRatio:","setContentEditable:","setContentFilters:","setContentMaxSize:","setContentMinSize:","setContentOffset: animated: ","setContentOffset: forSegmentAtIndex: ","setContentResizeIncrements:","setContentResizingMask:","setContentSize:","setContentView:","setContentViewMargins:","setContentWidth: type:","setContents:","setContentsFilterMode:","setContextHelp: forObject:","setContextHelpModeActive:","setContextMenuRepresentation:","setContinuous:","setContinuousSpellCheckingEnabled:","setControlSize:","setControlTint:","setControlType:","setControlView:","setControllerVisible:","setCookie:","setCookieAcceptPolicy:","setCookies: forURL: mainDocumentURL:","setCoords:","setCopiesOnScroll:","setCornerView:","setCount:","setCountKeyPath:","setCounterIncrement:","setCounterReset:","setCredential: forProtectionSpace:","setCriteria: andDisplayValues: forRowAtIndex:","setCriteriaKeyPath:","setCriticalValue:","setCssFloat:","setCssText:","setCue:","setCueAfter:","setCueBefore:","setCurrencyCode:","setCurrencyDecimalSeparator:","setCurrencyGroupingSeparator: ","setCurrencySymbol:","setCurrentAppleEventAndReplyEventWithSuspensionID:","setCurrentContext:","setCurrentDirectoryPath:","setCurrentMedium","setCurrentNode:","setCurrentOperation:","setCurrentPage:","setCurrentProgress:","setCurrentSelection:","setCurrentTime:","setCurrentVirtualScreen:","setCursiveFontFamily:","setCursor:","setCursorForAreaOfInterest:","setCustomButtonVisible:","setCustomTextEncodingName:","setCustomUserAgent:","setDTD:","setDTDKind:","setDashPattern:","setData:","setData: forType:","setData:forPasteboardType:","setDataCell:","setDataReceiveHandler:withContext:","setDataRef:","setDataRefType:","setDataRetained:","setDataSource:","setDate: animated: ","setDateFormat:","setDatePickerElements:","setDatePickerMode:","setDatePickerStyle:","setDateStyle:","setDateTime:","setDateValue:","setDay:","setDecimalSeparator:","setDeclare:","setDefaultAttachmentScaling:","setDefaultBehavior:","setDefaultButtonCell:","setDefaultButtonTitle:","setDefaultChecked:","setDefaultCredential: forProtectionSpace:","setDefaultDate:","setDefaultFixedFontSize:","setDefaultFlatness:","setDefaultFontSize:","setDefaultFormatterBehavior:","setDefaultLanguage:","setDefaultLineCapStyle:","setDefaultLineJoinStyle:","setDefaultLineWidth:","setDefaultMiterLimit:","setDefaultNameServerPortNumber:","setDefaultParagraphStyle:","setDefaultPlaceholder: forMarker: withBinding:","setDefaultPrinter:","setDefaultSelected:","setDefaultTabInterval:","setDefaultTextEncodingName:","setDefaultTimeZone:","setDefaultValue:","setDefaultValue: forInputKey:","setDefaultWindingRule:","setDefaults","setDefer:","setDelegate:","setDelegate: withConfiguration:","setDelegate:delegate","setDeleteRule:","setDeletesFileUponFailure:","setDepthLimit:","setDescription:","setDescriptionText:","setDescriptor: forKeyword:","setDestination:","setDestination: allowOverwrite:","setDestinationEntity:","setDestinationEntityName:","setDestinationEntityVersionHash:","setDetailsDisclosed:","setDeviceAttributes:","setDictionary:","setDir:","setDirectParameter:","setDirection:","setDirectory:","setDisableActions:","setDisableActions: ","setDisabled:","setDiskCapacity:","setDismissesAutomatically:","setDisplay:","setDisplayBox:","setDisplayDetails:","setDisplayMode:","setDisplayName:","setDisplayTrust:","setDisplayValuesKeyPath:","setDisplayedCommandsTitle:","setDisplayedProperty:","setDisplayedWhenStopped:","setDisplaysAnnotations:","setDisplaysAsBook:","setDisplaysLinkToolTips:","setDisplaysPageBreaks:","setDisplaysWhenScreenProfileChanges:","setDistributionIdentifier: forProperty: person:","setDocument:","setDocumentAttributes:","setDocumentContentKind:","setDocumentCursor:","setDocumentEdited:","setDocumentView:","setDomain:","setDouble: forKey:","setDoubleAction:","setDoubleValue:","setDownloadDelegate:","setDraggingDestinationDelegate:","setDraggingSourceOperationMask: forLocal:","setDrawsBackground:","setDrawsCellBackground:","setDrawsGrid:","setDrawsOutsideLineFragment: forGlyphAtIndex:","setDrawsOutsideLineFragment: forGlyphRange:","setDropItem: dropChildIndex:","setDropRow: dropOperation:","setDuration:","setDynamicDepthLimit:","setEchosBullets:","setEditable:","setEditableTrust:","setEditing: animated: ","setEditingDelegate:","setElevation:","setEmptyCells:","setEnabled:","setEnabled: forEntityNames:","setEnabled: forSegment:","setEnabled: forSegmentAtIndex: ","setEnabledTextCheckingTypes:","setEnctype:","setEnd:","setEnd: offset:","setEndAfter:","setEndBefore:","setEndLineStyle:","setEndPoint:","setEndSpecifier:","setEndSubelementIdentifier:","setEndSubelementIndex:","setEntities:","setEntities: forConfiguration:","setEntities:forConfiguration:","setEntity:","setEntityMappings:","setEntityMigrationPolicyClassName:","setEntityName:","setEntryType:","setEntryWidth:","setEnvironment:","setEra:","setEraSymbols:","setEraseColor:","setEraseType:","setEvaluationErrorNumber:","setEvent:","setEventCallback:","setEventForwardingMask:","setEventHandler: andSelector: forEventClass: andEventID:","setEventRefCon:","setEventSelector:","setException:","setExceptionHandlingMask:","setExceptionHangingMask:","setExcludedFromWindowsMenu:","setExcludedKeys:","setExplicitFilesystemMask:","setExponentSymbol:","setExpression:","setExpressionResultType:","setExtendedFlags","setExtensionHidden:","setExtraFlags","setExtraLineFragmentRect: usedRect: textContainer:","setFace:","setFailureAction:","setFantasyFontFamily:","setFetchBatchSize:","setFetchLimit:","setFetchOffset:","setFetchPredicate:","setFetchRequest:","setFetchRequestTemplate: forName:","setFetchRequestTemplate:forName:","setFieldEditor:","setFieldName:","setFields:","setFieldsIncludedAreCleared:","setFileAttributes:","setFileModificationDate:","setFileName:","setFileType:","setFileURL:","setFileWrapper:","setFilename:","setFill","setFill:","setFillColor:","setFilterPredicate:","setFilters","setFilters:","setFireDate:","setFirstKeyView:","setFirstLineHeadIndent:","setFirstWeekday:","setFixedFontFamily:","setFlagged:","setFlags","setFlags:","setFlatness:","setFlipped:","setFloat: forKey:","setFloatValue:","setFloatValue: floatValue:","setFloatValue: knobProportion:","setFloatingPanel:","setFloatingPointFormat: left: right:","setFocusRingType:","setFocusStack:","setFont:","setFont: range:","setFontColor:","setFontFamily:","setFontManagerFactory:","setFontMenu:","setFontPanelFactory:","setFontSize:","setFontSizeAdjust:","setFontStretch:","setFontStyle:","setFontVariant:","setFontWeight:","setForegroundColor:","setFormat:","setFormatWidth:","setFormatter:","setFormatterBehavior:","setFormattingDictionary:","setFormattingStringsFilename:","setFrame:","setFrame: display:","setFrame: display: animate:","setFrameAutosaveName:","setFrameBorder:","setFrameBorders:","setFrameCenterRotation:","setFrameFromContentFrame:","setFrameFromString:","setFrameLoadDelegate:","setFrameOrigin:","setFrameRate:","setFrameRotation:","setFrameSize:","setFrameTopLeftPoint:","setFrameUsingName:","setFrameUsingName: force:","setFullScreen","setGatewaySupportedFeatures:","setGeneratesCalendarDates:","setGeneratesDecimalNumbers:","setGlyphGenerator:","setGradientType:","setGrammarCheckingEnabled:","setGraphicsState:","setGreekingThreshold:","setGregorianStartDate: ","setGridColor:","setGridStyleMask:","setGroupDoubleAction:","setGroupName:","setGroupingAttributes:","setGroupingSeparator:","setGroupingSize:","setGroupsByEvent:","setHTTPBody:","setHTTPBodyStream:","setHTTPMethod:","setHTTPShouldHandleCookies:","setHandlesSyncAlerts:","setHardInvalidation: forGlyphRange:","setHardwareAddress","setHasHorizontalRuler:","setHasHorizontalScroller:","setHasShadow:","setHasThousandSeparators:","setHasUndoManager:","setHasVerticalRuler:","setHasVerticalScroller:","setHeadIndent:","setHeaderCell:","setHeaderLevel:","setHeaderToolTip:","setHeaderView:","setHeaders:","setHeight:","setHeightTracksTextView:","setHelpAnchor:","setHidden:","setHiddenUntilMouseMoves:","setHidesBackButton: animated: ","setHidesEmptyCells:","setHidesOnDeactivate:","setHighlightMode:","setHighlighted:","setHighlighted:animated:","setHighlightedItemIndex:","setHighlightedSelections:","setHighlightedTableColumn:","setHighlightsBy:","setHistoryAgeInDaysLimit:","setHistoryItemLimit:","setHorizontal:","setHorizontalCornerRadius:","setHorizontalEdgePadding:","setHorizontalLineScroll:","setHorizontalPageScroll:","setHorizontalPagination:","setHorizontalRulerView:","setHorizontalScroller:","setHorizontallyCentered:","setHorizontallyResizable:","setHostCacheEnabled:","setHostWindow:","setHotSpotButtonVisible:","setHour:","setHref:","setHreflang:","setHspace:","setHtmlFor:","setHttpEquiv:","setHyphenationFactor:","setIcon:","setIcon: forFile: options:","setIconImage:","setIconType:","setIdName:","setIdentifier:","setIdling:","setIgnoredWords: inSpellDocumentWithTag:","setIgnoresAlpha:","setIgnoresMouseEvents:","setIgnoresMultiClick:","setImage:","setImage: dirtyRect:","setImage: forSegment:","setImage: forSegmentAtIndex: ","setImage: forState: ","setImageAlignment:","setImageData:","setImageDimsWhenDisabled:","setImageFrameStyle:","setImageInterpolation:","setImageOrigin:","setImagePath:","setImagePosition:","setImageScaling:","setImageScaling: forSegment:","setImageWithURL:","setImageZoomFactor:","setImportsGraphics:","setInContext:","setIncludedKeys:","setIncludesPendingChanges:","setIncludesPropertyValues:","setIncludesSubentities:","setIncrement:","setIndentWidth:","setIndentationLevel:","setIndentationMarkerFollowsCell:","setIndentationPerLevel:","setIndentsWrappedLines:","setIndependentConversationQueueing:","setIndeterminate:","setIndex:","setIndexed:","setIndicatorImage: inTableColumn:","setInformativeText:","setInitialFirstResponder:","setInitialKey:","setInitialKeyView:","setInitialValue:","setInitialValues:","setInnerHTML:","setInnerText:","setInput:","setInputImage:","setInquiryLength:","setInsertionClassDescription:","setInsertionPointColor:","setIntAttribute: value: forGlyphAtIndex:","setIntValue:","setInteger: forKey:","setIntegerValue:","setIntercellSpacing:","setInterfaceState","setInterfaceStyle:","setInterfaceType","setInteriorColor:","setInterlineSpacing:","setInternationalCurrencySymbol:","setInverseRelationship:","setInvocation:","setIsAccessibilityElement:","setIsListChoice:","setIsMap:","setIsMiniaturized:","setIsOpen:","setIsPaneSplitter:","setIsVisible:","setIsZoomed:","setItemHeight:","setItemPrototype:","setItems: animated: ","setItems:animated:","setJavaEnabled:","setJavaFrameClassName:","setJavaScriptCanOpenWindowsAutomatically:","setJavaScriptEnabled:","setJavaStartupOptions:","setJobDisposition:","setJobStyleHint:","setJobTitle:","setJobsPredicateString:","setKey:","setKeyCell:","setKeyEquivalent:","setKeyEquivalentFont:","setKeyEquivalentFont: size:","setKeyEquivalentModifierMask:","setKeyboardFocusRingNeedsDisplayInRect:","setKeys: triggerChangeNotificationsForDependentKey:","setKnobProportion:","setKnobThickness:","setLabel:","setLabel: forSegment:","setLabelFont:","setLang:","setLanguage:","setLastColumn:","setLastComponentOfFileName:","setLastKeyView:","setLaunchFlags:","setLaunchPath:","setLayer:","setLayoutAlgorithm:","setLayoutManager:","setLayoutRect: forTextBlock: glyphRange:","setLeadingOffset:","setLeaf:","setLeafKeyPath:","setLeft:","setLeftBarButtonItem: animated: ","setLeftMargin:","setLength:","setLenient:","setLenient: ","setLetterSpacing:","setLevel:","setLevelIndicatorStyle:","setLevelsOfUndo:","setLineBreakMode:","setLineCapStyle:","setLineDash: count: phase:","setLineFragmentPadding:","setLineFragmentRect: forGlyphRange: usedRect:","setLineFragmentRect: forGlyphRange: usedRect: baselineOffset:","setLineHeight:","setLineHeightMultiple:","setLineJoinStyle:","setLineScroll:","setLineSpacing:","setLineWidth:","setLink:","setLinkStatus","setLinkTextAttributes:","setListStyle:","setListStyleImage:","setListStylePosition:","setListStyleType:","setListensInForegroundOnly:","setLoaded:","setLoadsImagesAutomatically:","setLocale:","setLocalizationDictionary:","setLocalizedKey:","setLocalizedKeyDictionary:","setLocalizedKeyTable:","setLocalizesFormat:","setLocation: forStartOfGlyphRange:","setLocation: withAdvancements: forStartOfGlyphRange:","setLocations: startingGlyphIndexes: count: forGlyphRange:","setLongDesc:","setLongEraSymbols: ","setLoopMode:","setLoops:","setMIMEType:","setMIMETypesShownAsHTML:","setMainDocumentURL:","setMainFrameURL:","setMainMenu:","setMainView:","setMaintainsBackForwardList:","setManagedObjectClassName:","setManagedObjectContext:","setMappingType:","setMargin:","setMarginBottom:","setMarginHeight:","setMarginLeft:","setMarginRight:","setMarginTop:","setMarginWidth:","setMark:","setMarkedText: selectedRange:","setMarkedText: selectedRange: replacementRange:","setMarkedText: selectionRange: replacementRange:","setMarkedTextAttributes:","setMarkerLocation:","setMarkerOffset:","setMarkers:","setMarks:","setMarkupType:","setMatchesOnMultipleResolution:","setMatrixClass:","setMaxAnimationFrameRate:","setMaxConcurrentOperationCount:","setMaxContentSize:","setMaxCount:","setMaxDate:","setMaxHeight:","setMaxItemSize:","setMaxLength:","setMaxNumberOfColumns:","setMaxNumberOfRows:","setMaxPacketSize","setMaxRenderingFrameRate:","setMaxSize:","setMaxTransferUnit","setMaxValue:","setMaxVisibleColumns:","setMaxWidth:","setMaximum:","setMaximumFractionDigits:","setMaximumIntegerDigits:","setMaximumLength:","setMaximumLineHeight:","setMaximumNumberOfColumns:","setMaximumRecents:","setMaximumRecordedDuration:","setMaximumRecordedFileSize:","setMaximumSignificantDigits: ","setMaximumTrackImage: forState: ","setMe:","setMeasurementUnits:","setMedia:","setMediaAddressLength","setMediaAttributes:","setMediaHeaderLength","setMediaStyle:","setMediaText:","setMemoryCapacity:","setMenu:","setMenu: forSegment:","setMenuBarVisible:","setMenuChangedMessagesEnabled:","setMenuFormRepresentation:","setMenuItem:","setMenuItemCell: forItemAtIndex:","setMenuRepresentation:","setMenuView:","setMenuVisible:animated:","setMenuZone:","setMergePolicy:","setMessage:","setMessageBody:isHTML:","setMessageText:","setMetadata:","setMetadata: forKey: ofObject:","setMetadata: forPersistentStore:","setMetadata: forPersistentStoreOfType: URL: error:","setMetadata: forPersistentStoreWithURL: error:","setMetadata:forPersistentStore:","setMetadata:forPersistentStoreOfType:URL:error:","setMetadata:forPersistentStoreWithURL:error:","setMethod:","setMinColumnWidth:","setMinContentSize:","setMinCount:","setMinDate:","setMinHeight:","setMinItemSize:","setMinSize:","setMinValue:","setMinWidth:","setMinimum:","setMinimumDaysInFirstWeek:","setMinimumFontSize:","setMinimumFractionDigits:","setMinimumIntegerDigits:","setMinimumLineHeight:","setMinimumLogicalFontSize:","setMinimumSignificantDigits: ","setMinimumTrackImage: forState: ","setMiniwindowImage:","setMiniwindowTitle:","setMinusSign:","setMinute:","setMiterLimit:","setMixedStateImage:","setMnemonicLocation:","setMode:","setModificationDate:","setMonth:","setMonthSymbols:","setMouseUpAction:","setMovable:","setMovableByWindowBackground:","setMovie:","setMovieAttributes:","setMsgid:","setMulticastList","setMulticastMode","setMultiple:","setMultiplier:","setMuted:","setName:","setName: ","setName: forObject:","setNameDoubleAction:","setNameFieldLabel:","setNamedItem:","setNamedItemNS:","setNamespaces:","setNavigationBarHidden: animated: ","setNeedsDisplay","setNeedsDisplay:","setNeedsDisplayForItemAtIndex:","setNeedsDisplayInRect:","setNeedsDisplayInRect: ","setNeedsDisplayInRect: avoidAdditionalLayout:","setNeedsLayout","setNeedsLayout:","setNeedsSizing:","setNegativeFormat:","setNegativeInfinitySymbol:","setNegativePrefix:","setNegativeSuffix:","setNestingMode:","setNextEnabled:","setNextKeyView:","setNextResponder:","setNextState","setNilSymbol:","setNilValueForKey:","setNoHref:","setNoResize:","setNoShade:","setNoWrap:","setNodeValue:","setNotANumberSymbol:","setNotShownAttribute: forGlyphAtIndex:","setNotShownAttribute: forGlyphRange:","setNotationName:","setNotificationBatchingInterval:","setNotificationTarget","setNumberOfAudioChannels:","setNumberOfColumns:","setNumberOfMajorTickMarks:","setNumberOfRows:","setNumberOfTickMarks:","setNumberOfVisibleItems:","setNumberStyle:","setOBEXSessionOpenConnectionCallback:","setObject:","setObject: forKey:","setObject: forKey: ofTrack:","setObject: forProperty: error:","setObjectBeingTested:","setObjectClass:","setObjectValue:","setObjectZone:","setObservationInfo:","setOffScreen: width: height: rowbytes:","setOffStateImage:","setOffset:","setOn: animated: ","setOnMouseEntered:","setOnMouseExited:","setOnStateImage:","setOnStateValue:","setOneShot:","setOpaque:","setOpenGLContext:","setOpenTransportConnectionAsyncSelector:","setOperationQueuePriority:","setOptional:","setOptionalSharedHistory:","setOptions:","setOrderedIndex:","setOrientation:","setOriginOffset:","setOrphans:","setOuterHTML:","setOuterText:","setOutline:","setOutlineColor:","setOutlineRoot:","setOutlineStyle:","setOutlineTableColumn:","setOutlineWidth:","setOutputDeviceUniqueID:","setOutputFormat:","setOverflow:","setOverlay:","setPDFView:","setPMSymbol:","setPadding:","setPaddingBottom:","setPaddingCharacter:","setPaddingLeft:","setPaddingPosition:","setPaddingRight:","setPaddingTop:","setPage:","setPageBreakAfter:","setPageBreakBefore:","setPageBreakInside:","setPageCacheSize:","setPageIndex:","setPageOrder:","setPageScroll:","setPaletteLabel:","setPanelFont: isMultiple:","setPanelType:","setPaperName:","setPaperSize:","setParagraphGlyphRange: separatorGlyphRange:","setParagraphSpacing:","setParagraphSpacingBefore:","setParagraphStyle:","setParagraphs:","setParamDescriptor: forKeyword:","setParameters:","setParentWindow:","setPartialStringValidationEnabled: ","setPassword:","setPath:","setPathComponentCells:","setPathSeparator:","setPathStyle:","setPatternPhase:","setPause:","setPauseAfter:","setPauseBefore:","setPerMillSymbol:","setPercentSymbol:","setPeriodicDelay: interval:","setPersistentDomain: forName:","setPersistentStoreCoordinator:","setPickerMask:","setPickerMode:","setPitch:","setPitchRange:","setPixel: atX: y:","setPixelBuffer: cubeMapFace: mipMapLevel: currentVirtualScreen:","setPixelFormat:","setPixelsHigh:","setPixelsWide:","setPlaceholderAttributedString:","setPlaceholderString:","setPlayDuring:","setPlaysEveryFrame:","setPlaysSelectionOnly:","setPlugInsEnabled:","setPlusSign:","setPoint:","setPolicies:","setPoliciesDisclosed:","setPolicyDelegate:","setPoolCountHighWaterMark:","setPoolCountHighWaterResolution:","setPopup:","setPosition:","setPosition: ofDividerAtIndex:","setPositiveFormat:","setPositiveInfinitySymbol:","setPositivePrefix:","setPositiveSuffix:","setPostsBoundsChangedNotifications:","setPostsFrameChangedNotifications:","setPowerLevel","setPreGap:","setPredicate:","setPreferences:","setPreferencesIdentifier:","setPreferredBackingLocation:","setPreferredEdge:","setPreferredFilename:","setPreferredFontNames:","setPreferredHardwareSampleRate:error:","setPreferredIOBufferDuration:error:","setPrefersAllColumnUserResizing:","setPrefersColorMatch:","setPrefix:","setPreservesAspectRatio:","setPreservesContentDuringLiveResize:","setPreservesSelection:","setPreviewState:","setPreviousEnabled:","setPrimaryIdentifier:","setPrimitiveValue: forKey:","setPrimitiveValue:forKey:","setPrintInfo:","setPrintPanel:","setPrinter:","setPrivate:","setPrivateBrowsingEnabled:","setProcessName:","setProfile:","setProgressMarks:","setProjectName:","setPromiscuousMode","setPrompt:","setPropagatesDeletesAtEndOfEvent:","setProperties","setProperties:","setProperties: inFilesystem:","setPropertiesToFetch:","setProperty:","setProperty: forKey:","setProperty: forKey: inFilesystem:","setProperty: forKey: inRequest:","setProperty: value: priority:","setProperty: withValue:","setPropertyCache:","setPropertyList: forType:","setProtocolForProxy:","setProtocolSpecificInformation:","setPrototype:","setPublicID:","setPullsDown:","setQuadrilateralPoints:","setQuarterSymbols: ","setQueueWithItemCollection:","setQueueWithQuery:","setQuotes:","setRFCOMMChannel:","setROISelector:","setRangeContainerObject:","setRate:","setRead:","setReadOnly:","setReceiversSpecifier:","setRecentSearches:","setRecentsAutosaveName:","setRefusesFirstResponder:","setRegion:animated:","setRel:","setRelationshipKeyPathsForPrefetching:","setRelationshipMappings:","setRelativePosition:","setReleasedWhenClosed:","setRemovable:","setRenamingIdentifier:","setReplyTimeout:","setRepresentation","setRepresentedFilename:","setRepresentedObject:","setRepresentedURL:","setRequestTimeout:","setRequestedBurnSpeed:","setRequiredFileType:","setReservedThicknessForAccessoryView:","setReservedThicknessForMarkers:","setResizable:","setResizeIncrements:","setResizingMask:","setResolvesAliases:","setResourceData:","setResourceLoadDelegate:","setResultType:","setResultView:","setRetainsRegisteredObjects:","setReturnValue:","setReturnsDistinctResults:","setReturnsObjectsAsFaults:","setReusesColumns:","setRev:","setRichText:","setRichness:","setRight:","setRightBarButtonItem: animated: ","setRightMargin:","setRootElement:","setRootObject:","setRotation:","setRotationAngle:","setRoundingBehavior:","setRoundingIncrement:","setRoundingMode:","setRowClass:","setRowHeight:","setRowSpan:","setRowTemplates:","setRowTypeKeyPath:","setRows:","setRuleThickness:","setRulerViewClass:","setRulerVisible:","setRulersVisible:","setRules:","setRunLoopModes:","setSansSerifFontFamily:","setScaleFactor:","setScalesWhenResized:","setScanLocation:","setScheme:","setScope:","setScript:","setScriptErrorNumber:","setScriptErrorString:","setScriptView:","setScriptingProperties:","setScrollView:","setScrollable:","setScrolling:","setScrollsDynamically:","setSearchAttributes:","setSearchButtonCell:","setSearchCriteria:","setSearchMenuTemplate:","setSearchScopes:","setSecond:","setSecondaryGroupingSize:","setSegmentCount:","setSegmentStyle:","setSelectable:","setSelected:","setSelected: animated: ","setSelected: forSegment:","setSelected:animated:","setSelectedAttributes: isMultiple:","setSelectedComposition:","setSelectedDOMRange: affinity:","setSelectedFont: isMultiple:","setSelectedIndex:","setSelectedItemIdentifier:","setSelectedMedium","setSelectedObjects:","setSelectedRange:","setSelectedRange: affinity: stillSelecting:","setSelectedRanges:","setSelectedRanges: affinity: stillSelecting:","setSelectedSegment:","setSelectedTextAttributes:","setSelection:","setSelectionByRect:","setSelectionFrom: to: anchor: highlight:","setSelectionFromEditor:","setSelectionGranularity:","setSelectionHighlightStyle:","setSelectionIndex:","setSelectionIndexPath:","setSelectionIndexPaths:","setSelectionIndexes:","setSelectionIndexes: byExtendingSelection:","setSelectionKeys:","setSelectionKeysKeylayout:","setSelector:","setSelectorText:","setSelectsInsertedObjects:","setSendMode:","setSendsActionOnArrowKeys:","setSendsActionOnEndEditing:","setSendsSearchStringImmediately:","setSendsWholeSearchString:","setSeparatesColumns:","setSerialParameters: dataBits: parity: stopBits:","setSerializedValue: forKey:","setSerifFontFamily:","setServicePrincipal:","setServicesMenu:","setServicesProvider:","setSet:","setShadow:","setShadowBlurRadius:","setShadowColor:","setShadowOffset:","setShape:","setSharedPrintInfo:","setSharedScriptSuiteRegistry:","setSharedURLCache:","setSharingType:","setShortMonthSymbols:","setShortQuarterSymbols: ","setShortStandaloneMonthSymbols: ","setShortStandaloneQuarterSymbols: ","setShortStandaloneWeekdaySymbols: ","setShortWeekdaySymbols:","setShouldAntiAlias:","setShouldAntialias:","setShouldCascadeWindows:","setShouldCloseDocument:","setShouldCloseWithWindow:","setShouldCreateUI:","setShouldDisplay:","setShouldPrint:","setShouldPrintBackgrounds:","setShouldProcessNamespaces:","setShouldReplaceClientRecords: forEntityNames:","setShouldReportNamespacePrefixes:","setShouldResolveExternalEntities:","setShouldSynchronize: withClientsOfType:","setShowPanels:","setShowsAlpha:","setShowsApplicationBadge:","setShowsBaselineSeparator:","setShowsBorderOnlyWhileMouseInside:","setShowsCancelButton:animated:","setShowsCompositionNames:","setShowsControlCharacters:","setShowsExpertParameters:","setShowsFirstResponder:","setShowsHelp:","setShowsInvisibleCharacters:","setShowsPrintPanel:","setShowsProgressPanel:","setShowsResizeIndicator:","setShowsStateBy:","setShowsStateColumn:","setShowsSuppressionButton:","setShowsToolbarButton:","setSize:","setSizeMode:","setSliderType:","setSmartInsertDeleteEnabled:","setSortDescriptorPrototype:","setSortDescriptors:","setSound:","setSource:","setSourceEntityName:","setSourceEntityVersionHash:","setSourceExpression:","setSpan:","setSpeak:","setSpeakHeader:","setSpeakNumeral:","setSpeakPunctuation:","setSpecificName: forFilesystem:","setSpecificNames:","setSpeechRate:","setSpellingState: range:","setSrc:","setStackSize:","setStalenessInterval:","setStandalone:","setStandaloneMonthSymbols: ","setStandaloneQuarterSymbols: ","setStandaloneWeekdaySymbols: ","setStandardError:","setStandardFontFamily:","setStandardInput:","setStandardOutput:","setStandby:","setStart:","setStart: offset:","setStartAfter:","setStartBefore:","setStartLineStyle:","setStartPoint:","setStartSpecifier:","setStartSubelementIdentifier:","setStartSubelementIndex:","setState:","setState: atRow: column:","setStatusBarHidden: animated: ","setStatusBarOrientation: animated: ","setStatusBarStyle: animated: ","setStepButtonsVisible:","setStoresFastSyncDetailsAtURL: forPersistentStore:","setStress:","setString:","setString: forType:","setStringValue:","setStringValue: resolvingEntities:","setStringValue: stringValue:","setStroke","setStyle:","setSubentities:","setSubject:","setSubmenu:","setSubmenu: forItem:","setSubrowsKeyPath:","setSubviews:","setSummary:","setSupermenu:","setSupervisionTimeout:","setSuspended:","setSyncAlertHandler: selector:","setSyncAlertToolPath:","setSystemID:","setTFoot:","setTHead:","setTXTRecordData:","setTabIndex:","setTabKeyTraversesCells:","setTabStops:","setTabViewType:","setTabWidth:","setTableLayout:","setTableView:","setTabsToLinks:","setTag:","setTag: forSegment:","setTailIndent:","setTakesTitleFromPreviousColumn:","setTarget:","setTargetRect:inView:","setTearOffMenuRepresentation:","setTemporaryAttributes: forCharacterRange:","setTest:","setText:","setTextAlign:","setTextAlignment:","setTextAttributesForNegativeInfinity:","setTextAttributesForNegativeValues:","setTextAttributesForNil:","setTextAttributesForNotANumber:","setTextAttributesForPositiveInfinity:","setTextAttributesForPositiveValues:","setTextAttributesForZero:","setTextBaseWritingDirection:","setTextBlocks:","setTextColor:","setTextColor: range:","setTextContainer:","setTextContainer: forGlyphRange:","setTextContainerInset:","setTextDecoration:","setTextFont:","setTextIndent:","setTextLists:","setTextShadow:","setTextSizeMultiplier:","setTextStorage:","setTextTransform:","setTextView:","setTextureImageToPixelBuffer: colorBuffer:","setThousandSeparator:","setThreadPriority:","setThumbImage: forState: ","setThumbnailSize:","setTickMarkPosition:","setTighteningFactorForTruncation:","setTimeInterval:","setTimeStyle:","setTimeZone:","setTimeout:","setTimeoutInterval:","setTitle:","setTitle: forSegmentAtIndex: ","setTitle: forState: ","setTitle: ofColumn:","setTitleAlignment:","setTitleBaseWritingDirection:","setTitleCell:","setTitleColor:","setTitleColor: forState: ","setTitleFont:","setTitlePosition:","setTitleShadowColor: forState: ","setTitleWidth:","setTitleWithMnemonic:","setTitleWithRepresentedFilename:","setTitled:","setTo:","setToRecipients:","setTokenStyle:","setTokenizingCharacterSet:","setToolTip:","setToolTip: forCell:","setToolTip: forSegment:","setToolbar:","setToolbarHidden:animated:","setToolbarItems:animated:","setTop:","setTopLevelObject:","setTopMargin:","setTrackAttributes:","setTrackDictionaries:","setTrackingMode:","setTrailingOffset:","setTransformStruct:","setTransient:","setTranslateButtonVisible:","setTransparent:","setTreatsFilePackagesAsDirectories:","setTwoDigitStartDate:","setType:","setTypesetter:","setTypesetterBehavior:","setTypingAttributes:","setTypingStyle:","setUIDelegate:","setURI:","setURL:","setURL: forPersistentStore:","setURL:forPersistentStore:","setUndoManager:","setUnicodeBidi:","setUniqueID:","setUnitNumber","setUp","setUpFieldEditorAttributes:","setUpGState","setUpPrintOperationDefaultValues","setUpdateNewDeviceNames:","setUseMap:","setUserFixedPitchFont:","setUserFont:","setUserInfo:","setUserInterfaceItemIdentifier:","setUserName:","setUserStyleSheetEnabled:","setUserStyleSheetLocation:","setUsername:","setUsesAlternatingRowBackgroundColors:","setUsesDataSource:","setUsesEPSOnResolutionMismatch:","setUsesFeedbackWindow:","setUsesFindPanel:","setUsesFontLeading:","setUsesFontPanel:","setUsesGroupingSeparator:","setUsesItemFromMenu:","setUsesLazyFetching:","setUsesRuler:","setUsesScreenFonts:","setUsesScriptAssistant:","setUsesSignificantDigits: ","setUsesTabs:","setUsesThreadedAnimation:","setUsesUserKeyEquivalents:","setVAlign:","setVLink:","setValidateSize:","setValidationPredicates: withValidationWarnings:","setValidationPredicates:withValidationWarnings:","setValue:","setValue: animated: ","setValue: forHTTPHeaderField:","setValue: forInputKey:","setValue: forKey:","setValue: forKey: ","setValue: forKeyPath:","setValue: forOutputKey:","setValue: forProperty:","setValue: forTag: client:","setValue: forUndefinedKey:","setValue: forVariableWithName:","setValue: type: forDimension:","setValue:forKey:","setValue:forPasteboardType:","setValueExpression:","setValueListAttributes:","setValueSelectionBehavior:","setValueTransformer: forName:","setValueTransformer:forName:","setValueTransformerName:","setValueType:","setValueWraps:","setValues: forParameter:","setValuesForKeysWithDictionary:","setVerboseProgressStatus:","setVerifyDisc:","setVersion:","setVersionHashModifier:","setVersionIdentifiers:","setVertical:","setVerticalAlign:","setVerticalAlignment:","setVerticalCornerRadius:","setVerticalLineScroll:","setVerticalMotionCanBeginDrag:","setVerticalPageScroll:","setVerticalPagination:","setVerticalRulerView:","setVerticalScroller:","setVerticallyCentered:","setVerticallyResizable:","setVeryShortMonthSymbols: ","setVeryShortStandaloneMonthSymbols: ","setVeryShortStandaloneWeekdaySymbols: ","setVeryShortWeekdaySymbols: ","setVideoDataSource:","setVideoOptimizationOptions:","setVideoPreviewConnection:","setView:","setViewAnimations:","setViewControllers: animated: ","setViewControllers:animated:","setViewsNeedDisplay:","setVisibility:","setVisibilityPriority:","setVisible:","setVisualContext: forConnection:","setVlanTag","setVoice:","setVoiceFamily:","setVolatileDomain: forName:","setVolume:","setVolumeButtonVisible:","setVspace:","setWakeOnMagicPacket","setWantsLayer:","setWantsNotificationForMarkedText:","setWarningValue:","setWebScriptValueAtIndex: value:","setWeek:","setWeekday:","setWeekdayOrdinal:","setWeekdaySymbols:","setWhiteSpace:","setWidows:","setWidth:","setWidth: forSegment:","setWidth: forSegmentAtIndex: ","setWidth: ofColumn:","setWidth: type: forLayer:","setWidth: type: forLayer: edge:","setWidthTracksTextView:","setWindingRule:","setWindow:","setWindowController:","setWindowFrameAutosaveName:","setWindowFrameForAttachingToRect: onScreen: preferredEdge: popUpSelectedItem:","setWindowIsOpen:","setWindowsMenu:","setWindowsNeedUpdate:","setWithArray:","setWithCapacity:","setWithObject:","setWithObjects:","setWithObjects: NS_REQUIRES_NIL_TERMINATION","setWithObjects: count:","setWithSet:","setWordFieldStringValue:","setWordSpacing:","setWords:","setWorkflow:","setWorkflowController:","setWorksWhenModal:","setWraps:","setWrapsLines:","setYear:","setZIndex:","setZeroSymbol:","setZoomButtonsVisible:","setZoomScale:animated:","setZoomValue:","set_bpf_tap_shim","setctitle","setitem","settingNotSupportedByNodeErr","settings","settingsPanelDidEnd: returnCode: contextInfo:","setupForDisplay","setupMulticastFilter","setupPanel","setupPanel: deviceContainsSuitableMedia: promptString:","setupPanel: deviceCouldBeTarget:","setupPanelDeviceSelectionChanged:","setupPanelShouldHandleMediaReservations:","shadow","shadowBlurRadius","shadowColor","shadowOffset","shadowWithLevel:","shape","shapeWithRect:","sharedAVManager","sharedAccelerometer","sharedAccessoryManager","sharedAddressBook","sharedAppleEventManager","sharedApplication","sharedCertificatePanel","sharedCertificateTrustPanel","sharedChooseIdentityPanel","sharedCoercionHandler","sharedColorPanel","sharedColorPanelExists","sharedCompositionPickerPanel","sharedCompositionRepository","sharedCredentialStorage","sharedDictionary","sharedDocumentController","sharedFontManager","sharedFontPanel","sharedFontPanelExists","sharedFrameworksPath","sharedGlyphGenerator","sharedHTTPCookieStorage","sharedHelpManager","sharedImageEditPanel","sharedInspectorManager","sharedInstance","sharedKeychainSavePanel","sharedKeychainSettingsPanel","sharedManager","sharedMenuController","sharedPrintInfo","sharedScriptExecutionContext","sharedScriptSuiteRegistry","sharedSlideshow","sharedSpellChecker","sharedSpellCheckerExists","sharedSupportPath","sharedSystemTypesetter","sharedSystemTypesetterForBehavior:","sharedTypesetter","sharedURLCache","sharedUserDefaultsController","sharedWorkspace","sharegroup","sharingType","sheet","shgeqz_","shiftIndexesStartingAtIndex: by:","shiftKey","shiftKeyBit","shortDate","shortMonthSymbols","shortQuarterSymbols ","shortStandaloneMonthSymbols ","shortStandaloneQuarterSymbols ","shortStandaloneWeekdaySymbols ","shortValue","shortWeekdaySymbols","shouldAntiAlias","shouldAntialias","shouldApplyRecord: withRecordIdentifier:","shouldArchiveValueForKey:","shouldAutorotateToInterfaceOrientation: ","shouldBeTreatedAsInkEvent:","shouldBreakLineByHyphenatingBeforeCharacterAtIndex:","shouldBreakLineByWordBeforeCharacterAtIndex:","shouldCascadeWindows","shouldChangePrintInfo:","shouldChangeTextInRange: replacementString:","shouldChangeTextInRanges: replacementStrings:","shouldCloseDocument","shouldCloseWindowController:","shouldCloseWindowController: delegate: shouldCloseSelector: contextInfo:","shouldCloseWithWindow","shouldCollapseAutoExpandedItemsForDeposited:","shouldColorMatch","shouldCopySelection","shouldCreateUI","shouldDelayWindowOrderingForEvent:","shouldDeleteSelection","shouldDisplay","shouldDrawColor","shouldDrawConnectionFrame","shouldDrawInsertionPoint","shouldEnableActionForPerson: identifier:","shouldExitPane:","shouldHide","shouldIndentWhileEditing","shouldInstallPaletteWithPath:","shouldLoad","shouldPasteInSelection","shouldPrint","shouldPrintBackgrounds","shouldProcessNamespaces","shouldPullChangesForEntityName:","shouldPushAllRecordsForEntityName:","shouldPushChangesForEntityName:","shouldReplaceAllRecordsOnClientForEntityName:","shouldReplaceClientRecordsForEntityName:","shouldReportNamespacePrefixes","shouldResolveExternalEntities","shouldRunSavePanelWithAccessoryView","shouldSynchronizeWithClientsOfType:","shouldUnselect","show","showAnnotation:","showAttachmentCell: inRect: characterIndex:","showContextHelp:","showContextHelpForObject: locationHint:","showController: adjustingSize:","showFindIndicatorForRange:","showFromTabBar: ","showFromToolbar: ","showGuessPanel:","showHelp:","showInView: ","showPackedGlyphs: length: glyphRange: atPoint: font: color: printingAdjustment:","showPanels","showPools","showUserSettingsDialog","showWindow:","showWindows","showingDeleteConfirmation","showsAlpha","showsApplicationBadge","showsBaselineSeparator","showsBookmarkButton","showsBorderOnlyWhileMouseInside","showsCancelButton","showsCompositionNames","showsControlCharacters","showsExpertParameters","showsFirstResponder","showsHelp","showsHorizontalScrollIndicator","showsInvisibleCharacters","showsPrintPanel","showsProgressPanel","showsReorderControl","showsResizeIndicator","showsScopeBar","showsSelectionIndicator","showsStateBy","showsStateColumn","showsSuppressionButton","showsToolbarButton","showsTouchWhenHighlighted","showsUserLocation","showsVerticalScrollIndicator","shsein_","shseqr_","shuffleMode","shutDownAlert","signal","signatureWithObjCTypes:","signbit","signed","sint32","sixToOne","sixToOnePacketSize","sixteenBitMode","sixthVidMode","size","sizeBit","sizeCmd","sizeForKey: inTable:","sizeForMagnification:","sizeForNumberOfPages: ","sizeForPaperName:","sizeInspectorClassName","sizeLastColumnToFit","sizeMode","sizeOfLabel:","sizeOfTypesetterGlyphInfo","sizeThatFits: ","sizeToCells","sizeToFit","sizeValue","sizeWithAttributes:","sizeWithFont: ","sizeWithFont: constrainedToSize: ","sizeWithFont: constrainedToSize: lineBreakMode: ","sizeWithFont: forWidth: lineBreakMode: ","sizeWithFont: minFontSize: actualFontSize: forWidth: lineBreakMode: ","sizeof","skipDescendents","skipToBeginning","skipToNextItem","skipToPreviousItem","snapshotImage","snapshotItem:","snapshotOfRecordsInTruth","snapshotOfRecordsInTruthWithEntityNames: usingIdentifiersForClient:","sockaddr","socket","socketType","songsQuery","sortDescriptorPrototype","sortDescriptors","sortIndicatorRectForBounds:","sortSubviewsUsingFunction: )compare context:","sortSubviewsUsingFunction: context:","sortUsingDescriptors:","sortUsingFunction: ","sortUsingFunction: )compare context:","sortUsingSelector:","sortWithSortDescriptors: recursively:","sortedArrayFromArray:collationStringSelector:","sortedArrayHint","sortedArrayUsingDescriptors:","sortedArrayUsingFunction: ","sortedArrayUsingFunction: )comparator context:","sortedArrayUsingFunction: )comparator context: hint:","sortedArrayUsingFunction: context: hint:","sortedArrayUsingSelector:","sortsAfter","sortsBefore","sortsEqual","sound","sound: didFinishPlaying:","soundCmd","soundListRsrc","soundNamed:","soundSupportNotAvailableErr","soundUnfilteredFileTypes","soundUnfilteredPasteboardTypes","soundUnfilteredTypes","source","sourceContext","sourceEntityForEntityMapping:","sourceEntityName","sourceEntityVersionHash","sourceExpression","sourceIdentifiersForRelationshipName: withTargetIdentifier:","sourceInstancesForEntityMappingNamed: destinationInstances:","sourceInstancesForEntityMappingNamed:destinationInstances:","sourceModel","sourceNotFoundErr","sourcePath","sourceType","spGammaDir","spVidNamesDir","span","speak","speakHeader","speakNumeral","speakPunctuation","specificNameForFilesystem:","specificNames","specified","speechRate","speechRecognizer: didRecognizeCommand:","speechSynthesizer: didEncounterErrorAtIndex: ofString: message:","speechSynthesizer: didEncounterSyncMessage:","speechSynthesizer: didFinishSpeaking:","speechSynthesizer: willSpeakPhoneme:","speechSynthesizer: willSpeakWord: ofString:","speed","spellCheckerDocumentTag","spellServer: checkGrammarInString: language: details:","spellServer: didForgetWord: inLanguage:","spellServer: didLearnWord: inLanguage:","spellServer: findMisspelledWordInString: language: wordCount: countOnly:","spellServer: suggestCompletionsForPartialWordRange: inString: language:","spellServer: suggestGuessesForWord: inLanguage:","spellingPanel","splitText:","splitView: canCollapseSubview:","splitView: constrainMaxCoordinate: ofSubviewAt:","splitView: constrainMinCoordinate: ofSubviewAt:","splitView: constrainSplitPosition: ofSubviewAt:","splitView: resizeSubviewsWithOldSize:","splitView: shouldCollapseSubview: forDoubleClickOnDividerAtIndex:","splitViewDidResizeSubviews:","splitViewWillResizeSubviews:","stackOverflowException","stackSize","staleEditState","stalenessInterval","stamped","standaloneMonthSymbols ","standaloneQuarterSymbols ","standaloneWeekdaySymbols ","standardError","standardFontFamily","standardInput","standardOutput","standardPreferences","standardUserDefaults","standardWindowButton:","standardWindowButton: forStyleMask:","standardizedURL","standby","start","start ","start:","startAnimating","startAnimation","startAnimation:","startAsynchronousSync:","startContainer","startDate","startExecution:","startIO","startLineStyle","startListening","startLoading","startMonitoring","startOffset","startPeriodicEventsAfterDelay: withPeriod:","startPoint","startQuery","startRendering","startRunning","startSpeaking:","startSpeakingString:","startSpeakingString: toURL:","startSpecifier","startSubelementIdentifier","startSubelementIndex","startTimeOfChapter:","startTrackingAt: inView:","startUpdatingHeading","startVoiceChatWithParticipantID:error:","startWhenAnimation: reachesProgress:","startingColumn","startingRow","startupMsg","statText","state","stateBlockSize","stateChangeNote","stateImageOffset","stateImageRectForBounds:","stateImageWidth","statistics","status","statusBar","statusBarFrame","statusBarHidden","statusBarOrientation","statusBarOrientationAnimationDuration","statusBarStyle","statusCode","statusErr","statusForTable:","statusItemWithLength:","stdQLength","stepBack:","stepBackward","stepBackward:","stepForward","stepForward:","stop","stop:","stopAnimating","stopAnimation","stopAnimation:","stopBurn:","stopConnecting","stopDate","stopExecution:","stopIcon","stopListening","stopLoading","stopLoading:","stopModal","stopModalWithCode:","stopMonitoring","stopPeriodicEvents","stopPropagation","stopQuery","stopRendering","stopRunning","stopScript:","stopSlideshow:","stopSpeaking","stopSpeaking:","stopSpeakingAtBoundary:","stopTracking: at: inView: mouseIsUp:","stopUpdatingHeading","stopVoiceChatWithParticipantID:","stopWhenAnimation: reachesProgress:","storagePolicy","storeCachedResponse: forRequest:","storedValueForKey:","stpcon_","stprfs_","stptri_","stptrs_","str2dec","strUserBreak","str_list","str_mlist","stream: handleEvent:","streamError","streamStatus","streamingNodeNotReadyErr","streamtab","stress","stretchableImageWithLeftCapWidth: topCapHeight: ","strfdinsert","strikethroughGlyphRange: strikethroughType: lineFragmentRect: lineFragmentGlyphRange: containerOrigin:","string","stringArrayForKey:","stringByAbbreviatingWithTildeInPath","stringByAddingPercentEscapesUsingEncoding:","stringByAppendingFormat:","stringByAppendingPathComponent:","stringByAppendingPathExtension:","stringByAppendingString:","stringByDeletingLastPathComponent","stringByDeletingPathExtension","stringByEvaluatingJavaScriptFromString:","stringByEvaluatingJavaScriptFromString: ","stringByExpandingTildeInPath","stringByFoldingWithOptions: locale:","stringByPaddingToLength: withString: startingAtIndex:","stringByReplacingCharactersInRange: withString:","stringByReplacingOccurrencesOfString: withString:","stringByReplacingOccurrencesOfString: withString: options: range:","stringByReplacingPercentEscapesUsingEncoding:","stringByResolvingSymlinksInPath","stringByStandardizingPath","stringByTrimmingCharactersInSet:","stringForKey:","stringForKey: inTable:","stringForObjectValue:","stringForType:","stringFromDate:","stringFromNumber:","stringListForKey: inTable:","stringOverflow","stringRepresentation","stringValue","stringWithCString:","stringWithCString: encoding:","stringWithCString: length:","stringWithCapacity:","stringWithCharacters: length:","stringWithContentsOfFile:","stringWithContentsOfFile: encoding: error:","stringWithContentsOfFile: usedEncoding: error:","stringWithContentsOfURL:","stringWithContentsOfURL: encoding: error:","stringWithContentsOfURL: usedEncoding: error:","stringWithFileSystemRepresentation: length:","stringWithFormat:","stringWithSavedFrame","stringWithString:","stringWithUTF8String:","strings","stringsByAppendingPaths:","strioctl","stroke","strokeColor","strokeLineFromPoint: toPoint:","strokeRect:","stroptions","strpeek","strpfp","strpmsg","strrecvfd","struct","style","styleDeclarationWithText:","styleMask","styleSheet","styleSheets","subAdministrativeArea","subLocality","subThoroughfare","subType","sub_iokit_acpi","sub_iokit_ahci","sub_iokit_block_storage","sub_iokit_bluetooth","sub_iokit_common","sub_iokit_firewire","sub_iokit_graphics","sub_iokit_networking","sub_iokit_pmu","sub_iokit_reserved","sub_iokit_smbus","sub_iokit_usb","sub_iokit_vendor_specific","subarrayWithRange:","subclasses","subdataWithRange:","subentities","subentitiesByName","subframeArchives","subgroups","sublayerTransform","sublayers","submenu","submenuAction:","submit","subpathsAtPath:","subpathsOfDirectoryAtPath: error:","subpredicates","subprojects","subresourceForURL:","subresources","subrowIndexesForRow:","subrowsKeyPath","subscript:","subscriptRange:","substituteFontForFont:","substituteGlyphsInRange: withGlyphs:","substringData:","substringData: length:","substringFromIndex:","substringToIndex:","substringWithRange:","subsystem_to_name_map_iokit","subtitle","subtype","subviews","suggestedFilename","suiteForAppleEventCode:","suiteName","suiteNames","summary","summaryInfo","supDay","supMonth","supWeek","supYear","superMsg","superclass","superclassDescription","superentity","superlayer","supermenu","superproject","superscript:","superscriptRange:","superview","supportedBufferPixelFormats","supportedEntityNames","supportedFrameworks","supportedPPDOptionKeys","supportedRenderedTexturePixelFormats","supportedWindowDepths","supportsCommand:","supportsCropping","supportsIdleQueue","supportsMode:","supportsMultipleObjectInspection","supportsServerModeAPIs","supportsTextEncoding","supportsUPSIntegration","supportsUnicode","suppressDither","suppressionButton","surroundContents:","suspend","suspendCurrentAppleEvent","suspendDemandMsg","suspendExecution","suspendObservation","suspendRequestMsg","suspendResumeMessage","suspendRevokeMsg","suspendWakeUpMsg","suspended","svDisabled","svTempDisable","swapWithMark:","symLinkPointingTo: inFilesystem:","symbolCharacterSet","symbolicLinkDestination","symbolicTraits","syncAlertToolPath","syncCmd","syncSIOCADDMULTI","syncSIOCDELMULTI","syncSIOCGIFDEVMTU","syncSIOCGIFMEDIA","syncSIOCSIFADDR","syncSIOCSIFFLAGS","syncSIOCSIFLLADDR","syncSIOCSIFMEDIA","syncSIOCSIFMTU","syncWithClient: inBackground: handler: error:","synchronize","synchronizeFile","synchronizeTitleAndSelectedItem","synchronizeWindowTitleWithDocumentName","synths","sysBeepDisable","sysBeepEnable","sysBeepSynchronous","sys_iokit","systemCurLang","systemDefLang","systemDefaultPortNameServer","systemFontOfSize:","systemFontOfSize: ","systemFontSize","systemFontSizeForControlSize:","systemID","systemId","systemLocale","systemMicrosecondClock","systemMillisecondClock","systemName","systemSecondClock","systemStatusBar","systemTabletID","systemTickClock","systemTimeZone","systemVersion","tabBar","tabBar: didBeginCustomizingItems: ","tabBar: didEndCustomizingItems: changed: ","tabBar: didSelectItem: ","tabBar: willBeginCustomizingItems: ","tabBar: willEndCustomizingItems: changed: ","tabBarController","tabBarController: didEndCustomizingViewControllers: changed: ","tabBarController: didSelectViewController: ","tabBarController:shouldSelectViewController:","tabBarController:willBeginCustomizingViewControllers:","tabBarController:willEndCustomizingViewControllers:changed:","tabBarItem","tabIndex","tabKeyTraversesCells","tabState","tabStopType","tabStops","tabView","tabView: didSelectTabViewItem:","tabView: shouldSelectTabViewItem:","tabView: willSelectTabViewItem:","tabViewDidChangeNumberOfTabViewItems:","tabViewItemAtIndex:","tabViewItemAtPoint:","tabViewItems","tabViewType","tabWidth","table","tableColumnWithIdentifier:","tableColumns","tableFooterView","tableHeaderView","tableLayout","tableView","tableView: acceptDrop: row: dropOperation:","tableView: accessoryButtonTappedForRowWithIndexPath: ","tableView: accessoryTypeForRowWithIndexPath: ","tableView: canEditRowAtIndexPath: ","tableView: canMoveRowAtIndexPath: ","tableView: cellForRowAtIndexPath: ","tableView: commitEditingStyle: forRowAtIndexPath: ","tableView: dataCellForTableColumn: row:","tableView: didClickTableColumn:","tableView: didDragTableColumn:","tableView: didEndEditingRowAtIndexPath: ","tableView: didSelectRowAtIndexPath: ","tableView: editingStyleForRowAtIndexPath: ","tableView: heightForFooterInSection: ","tableView: heightForHeaderInSection: ","tableView: heightForRowAtIndexPath: ","tableView: heightOfRow:","tableView: indentationLevelForRowAtIndexPath: ","tableView: isGroupRow:","tableView: mouseDownInHeaderOfTableColumn:","tableView: moveRowAtIndexPath: toIndexPath: ","tableView: namesOfPromisedFilesDroppedAtDestination: forDraggedRowsWithIndexes:","tableView: nextTypeSelectMatchFromRow: toRow: forString:","tableView: numberOfRowsInSection: ","tableView: objectValueForTableColumn: row:","tableView: sectionForSectionIndexTitle: atIndex: ","tableView: selectionIndexesForProposedSelection:","tableView: setObjectValue: forTableColumn: row:","tableView: shouldEditTableColumn: row:","tableView: shouldIndentWhileEditingRowAtIndexPath: ","tableView: shouldSelectRow:","tableView: shouldSelectTableColumn:","tableView: shouldShowCellExpansionForTableColumn: row:","tableView: shouldTrackCell: forTableColumn: row:","tableView: shouldTypeSelectForEvent: withCurrentSearchString:","tableView: sortDescriptorsDidChange:","tableView: targetIndexPathForMoveFromRowAtIndexPath: toProposedIndexPath: ","tableView: titleForFooterInSection: ","tableView: titleForHeaderInSection: ","tableView: toolTipForCell: rect: tableColumn: row: mouseLocation:","tableView: typeSelectStringForTableColumn: row:","tableView: validateDrop: proposedRow: proposedDropOperation:","tableView: viewForFooterInSection: ","tableView: viewForHeaderInSection: ","tableView: willBeginEditingRowAtIndexPath: ","tableView: willDisplayCell: forRowAtIndexPath: ","tableView: willDisplayCell: forTableColumn: row:","tableView: willSelectRowAtIndexPath: ","tableView: writeRows: toPasteboard:","tableView: writeRowsWithIndexes: toPasteboard:","tableView:didDeselectRowAtIndexPath:","tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:","tableView:willDeselectRowAtIndexPath:","tableViewColumnDidMove:","tableViewColumnDidResize:","tableViewSelectionDidChange:","tableViewSelectionIsChanging:","tabletID","tabletPoint:","tabletProximity:","tabsToLinks","tag","tagForSegment:","tagName","tailIndent","takeBackgroundColorFrom:","takeColorFrom:","takeDoubleValueFrom:","takeFloatValueFrom:","takeIntValueFrom:","takeIntegerValueFrom:","takeObjectValueFrom:","takePasswordFrom:","takeSelectedTabViewItemFromSender:","takeStoredValue: forKey:","takeStringURLFrom:","takeStringValueFrom:","takeValue: forKey:","takeValue: forKeyPath:","takeValuesFromDictionary:","takesTitleFromPreviousColumn","tangentialPressure","tapCount","target","targetForAction:","targetForAction: to: from:","targetIdentifiersForRelationshipName: withSourceIdentifier:","targetPath","targetVolumePath","taskCount","taskIdentifier","taskPredicateWithCalendars:","taskPredicateWithTasksCompletedSince: calendars:","taskPredicateWithUncompletedTasks:","taskPredicateWithUncompletedTasksDueBefore: calendars:","taskWithUID:","tasksWithPredicate:","tc24HourMax","tcCounter","tcDropFrame","tcNegTimesOK","tcdfShowTimeCode","tctNegFlag","teBitClear","teBitSet","teBitTest","teCaret","teCenter","teDraw","teFAutoScr","teFAutoScroll","teFIdleWithEventLoopTimer","teFInlineInput","teFInlineInputAutoScroll","teFOutlineHilite","teFTextBuffering","teFUseInlineInput","teFUseTextServices","teFUseWhiteBackground","teFind","teFlushDefault","teFlushLeft","teFlushRight","teForceLeft","teFromFind","teFromRecal","teHighlight","teJustCenter","teJustLeft","teJustRight","teScrapSizeErr","teWordDrag","teWordSelect","tearDown","tearOffMenuRepresentation","telAPattNotSupp","telAlreadyOpen","telAutoAnsNotOn","telBadAPattErr","telBadBearerType","telBadCAErr","telBadCodeResource","telBadDNDType","telBadDNErr","telBadDNType","telBadDisplayMode","telBadFeatureID","telBadFunction","telBadFwdType","telBadHTypeErr","telBadHandErr","telBadIndex","telBadIntExt","telBadIntercomID","telBadLevelErr","telBadPageID","telBadParkID","telBadPickupGroupID","telBadProcErr","telBadProcID","telBadRate","telBadSWErr","telBadSampleRate","telBadSelect","telBadStateErr","telBadTermErr","telBadVTypeErr","telCANotAcceptable","telCANotDeflectable","telCANotRejectable","telCAUnavail","telCBErr","telConfErr","telConfLimitErr","telConfLimitExceeded","telConfNoLimit","telConfRej","telDNDTypeNotSupp","telDNTypeNotSupp","telDetAlreadyOn","telDeviceNotFound","telDisplayModeNotSupp","telFeatActive","telFeatNotAvail","telFeatNotSub","telFeatNotSupp","telFwdTypeNotSupp","telGenericError","telHTypeNotSupp","telIndexNotSupp","telInitFailed","telIntExtNotSupp","telNoCallbackRef","telNoCommFolder","telNoErr","telNoMemErr","telNoOpenErr","telNoSuchTool","telNoTools","telNotEnoughdspBW","telPBErr","telStateNotSupp","telStillNeeded","telTermNotOpen","telTransferErr","telTransferRej","telUnknownErr","telVTypeNotSupp","telValidateFailed","templateViews","templatesWithAttributeKeyPaths: inEntityDescription:","temporaryAttribute: atCharacterIndex: effectiveRange:","temporaryAttribute: atCharacterIndex: longestEffectiveRange: inRange:","temporaryAttributesAtCharacterIndex: effectiveRange:","temporaryAttributesAtCharacterIndex: longestEffectiveRange: inRange:","terminate","terminate:","terminateMsg","terminationException","terminationStatus","test","testAddition","testBurn:","testCaseCount","testCaseDidFail:","testCaseDidStart:","testCaseDidStop:","testCaseWithInvocation:","testCaseWithSelector:","testCntl","testDuration","testInvocations","testPart:","testProductionSpeedForInterval:","testProductionSpeedForLength:","testRunClass","testRunWithTest:","testRuns","testSomething","testSuiteDidStart:","testSuiteDidStop:","testSuiteForBundlePath:","testSuiteForTestCaseClass:","testSuiteForTestCaseWithName:","testSuiteWithName:","text","textAlign","textAlignment","textAttributesForNegativeInfinity","textAttributesForNegativeValues","textAttributesForNil","textAttributesForNotANumber","textAttributesForPositiveInfinity","textAttributesForPositiveValues","textAttributesForZero","textBackgroundColor","textBlocks","textColor","textContainer","textContainerChangedGeometry:","textContainerChangedTextView:","textContainerForGlyphAtIndex: effectiveRange:","textContainerForGlyphAtIndex: effectiveRange: withoutAdditionalLayout:","textContainerInset","textContainerOrigin","textContainers","textDecoration","textDidBeginEditing:","textDidChange:","textDidEndEditing:","textEncodingName","textField: shouldChangeCharactersInRange: replacementString: ","textFieldDidBeginEditing: ","textFieldDidEndEditing: ","textFieldShouldBeginEditing: ","textFieldShouldClear: ","textFieldShouldEndEditing: ","textFieldShouldReturn: ","textFileTypes","textIndent","textLabel","textLists","textMenuProc","textParserBadParamErr","textParserBadParserObjectErr","textParserBadTextEncodingErr","textParserBadTextLanguageErr","textParserBadTokenValueErr","textParserNoMoreTextErr","textParserNoMoreTokensErr","textParserNoSuchTokenFoundErr","textParserObjectNotFoundErr","textParserParamErr","textPasteboardTypes","textRectForBounds: ","textRectForBounds: limitedToNumberOfLines: ","textShadow","textShouldBeginEditing:","textShouldEndEditing:","textSizeMultiplier","textStorage","textStorage: edited: range: changeInLength: invalidatedRange:","textStorageDidProcessEditing:","textStorageWillProcessEditing:","textTabForGlyphLocation: writingDirection: maxLocation:","textTransform","textTypes","textUnfilteredFileTypes","textUnfilteredPasteboardTypes","textUnfilteredTypes","textView","textView: clickedOnCell: inRect:","textView: clickedOnCell: inRect: atIndex:","textView: clickedOnLink:","textView: clickedOnLink: atIndex:","textView: completions: forPartialWordRange: indexOfSelectedItem:","textView: doCommandBySelector:","textView: doubleClickedOnCell: inRect:","textView: doubleClickedOnCell: inRect: atIndex:","textView: draggedCell: inRect: event:","textView: draggedCell: inRect: event: atIndex:","textView: shouldChangeTextInRange: replacementString:","textView: shouldChangeTextInRange: replacementText: ","textView: shouldChangeTextInRanges: replacementStrings:","textView: shouldChangeTypingAttributes: toAttributes:","textView: shouldSetSpellingState: range:","textView: willChangeSelectionFromCharacterRange: toCharacterRange:","textView: willChangeSelectionFromCharacterRanges: toCharacterRanges:","textView: willDisplayToolTip: forCharacterAtIndex:","textView: writablePasteboardTypesForCell: atIndex:","textView: writeCell: atIndex: toPasteboard: type: ","textViewDidBeginEditing: ","textViewDidChange: ","textViewDidChangeSelection:","textViewDidChangeSelection: ","textViewDidChangeTypingAttributes:","textViewDidEndEditing: ","textViewForBeginningOfSelection","textViewShouldBeginEditing: ","textViewShouldEndEditing: ","textWithStringValue:","textureColorSpace","textureFlipped","textureInternalFormat","textureMatrix","textureMaxMipMapLevel","textureName","texturePixelsHigh","texturePixelsWide","textureTarget","themeBadCursorIndexErr","themeBadTextColorErr","themeHasNoAccentsErr","themeInvalidBrushErr","themeMonitorDepthNotSupportedErr","themeNoAppropriateBrushErr","themeProcessNotRegisteredErr","themeProcessRegisteredErr","themeScriptFontNotFoundErr","thickness","thicknessRequiredInRuler","thirdVidMode","thirtyTwoBitMode","thoroughfare","thousandSeparator","threadBadAppContextErr","threadDictionary","threadNotFoundErr","threadPriority","threadProtocolErr","threadTooManyReqsErr","threeToOne","threeToOnePacketSize","throwException:","thumbCntl","thumbImageForState: ","thumbRectForBounds: trackRect: value: ","thumbnailSize","thumbnailWithMaximumSize:","tickMarkPosition","tickMarkValueAtIndex:","tightenKerning:","tighteningFactorForTruncation","tile","tileSize","tilt","timbreCmd","timeBaseAfterStopTime","timeBaseBeforeStartTime","timeBaseRateChanging","timeCycle12","timeCycle24","timeCycleZero","timeInterval","timeIntervalSince1970","timeIntervalSinceDate:","timeIntervalSinceNow","timeIntervalSinceReferenceDate","timeNotInMedia","timeNotInTrack","timeNotInViewErr","timeOffset","timeStamp","timeStyle","timeZone","timeZoneForSecondsFromGMT:","timeZoneWithAbbreviation:","timeZoneWithName:","timeZoneWithName: data:","timeoutInterval","timerWithTimeInterval: invocation: repeats:","timerWithTimeInterval: target: selector: userInfo: repeats:","timescale","timestamp","timestamps","tintColor","title","titleAlignment","titleBarFontOfSize:","titleBaseWritingDirection","titleCell","titleColor","titleColorForState: ","titleEdgeInsets","titleFont","titleForPerson: identifier:","titleForSegmentAtIndex: ","titleForState: ","titleFrameOfColumn:","titleHeight","titleLabel","titleOfColumn:","titleOfSelectedItem","titlePosition","titleRect","titleRectForBounds:","titleRectForContentRect: ","titleShadowColorForState: ","titleShadowOffset","titleView","titleWidth","titleWidth:","tk0BadErr","tmfoErr","tmwdoErr","toManyRelationshipKeys","toOneRelationshipKeys","toString","togChar12HourBit","togCharZCycleBit","togDelta12HourBit","toggle:","toggleAutomaticDashSubstitution:","toggleAutomaticDataDetection:","toggleAutomaticLinkDetection:","toggleAutomaticQuoteSubstitution:","toggleAutomaticSpellingCorrection:","toggleAutomaticTextReplacement:","toggleBadChar","toggleBadDelta","toggleBadField","toggleBadNum","toggleBaseWritingDirection:","toggleBit","toggleContinuousSpellChecking:","toggleErr3","toggleErr4","toggleErr5","toggleGrammarChecking:","toggleOK","toggleOutOfRange","toggleRuler:","toggleSmartInsertDelete:","toggleToolbarShown:","toggleTraditionalCharacterShape:","toggleUndefined","toggleUnknown","toglBit","tokDecPoint","tokEMinus","tokEPlus","tokEscape","tokLeadPlacer","tokLeader","tokLeftQuote","tokMaxSymbols","tokMinusSign","tokNonLeader","tokPercent","tokPlusSign","tokReserved","tokRightQuote","tokSeparator","tokThousands","tokZeroLead","token1Quote","token2Equal","token2Quote","tokenAlpha","tokenAltNum","tokenAltReal","tokenAmpersand","tokenAsterisk","tokenAtSign","tokenBackSlash","tokenBar","tokenCapPi","tokenCarat","tokenCaret","tokenCenterDot","tokenColon","tokenColonEqual","tokenComma","tokenDivide","tokenDollar","tokenEllipsis","tokenEmpty","tokenEqual","tokenErr","tokenEscape","tokenExclam","tokenExclamEqual","tokenField: completionsForSubstring: indexOfToken: indexOfSelectedItem:","tokenField: displayStringForRepresentedObject:","tokenField: editingStringForRepresentedObject:","tokenField: hasMenuForRepresentedObject:","tokenField: menuForRepresentedObject:","tokenField: readFromPasteboard:","tokenField: representedObjectForEditingString:","tokenField: shouldAddObjects: atIndex:","tokenField: styleForRepresentedObject:","tokenField: writeRepresentedObjects: toPasteboard:","tokenFieldCell: completionsForSubstring: indexOfToken: indexOfSelectedItem:","tokenFieldCell: displayStringForRepresentedObject:","tokenFieldCell: editingStringForRepresentedObject:","tokenFieldCell: hasMenuForRepresentedObject:","tokenFieldCell: menuForRepresentedObject:","tokenFieldCell: readFromPasteboard:","tokenFieldCell: representedObjectForEditingString:","tokenFieldCell: shouldAddObjects: atIndex:","tokenFieldCell: styleForRepresentedObject:","tokenFieldCell: writeRepresentedObjects: toPasteboard:","tokenFraction","tokenGreat","tokenGreatEqual1","tokenGreatEqual2","tokenHash","tokenInfinity","tokenIntegral","tokenIntl","tokenIntlCurrency","tokenLeft1Quote","tokenLeft2Quote","tokenLeftBracket","tokenLeftComment","tokenLeftCurly","tokenLeftEnclose","tokenLeftLit","tokenLeftParen","tokenLeftSingGuillemet","tokenLess","tokenLessEqual1","tokenLessEqual2","tokenLessGreat","tokenLiteral","tokenMicro","tokenMinus","tokenNewLine","tokenNil","tokenNoBreakSpace","tokenNotEqual","tokenNumeric","tokenOK","tokenOverflow","tokenPerThousand","tokenPercent","tokenPeriod","tokenPi","tokenPlus","tokenPlusMinus","tokenQuestion","tokenRealNum","tokenReserve1","tokenReserve2","tokenRight1Quote","tokenRight2Quote","tokenRightBracket","tokenRightComment","tokenRightCurly","tokenRightEnclose","tokenRightLit","tokenRightParen","tokenRightSingGuillemet","tokenRoot","tokenSemicolon","tokenSigma","tokenSlash","tokenStyle","tokenTilda","tokenTilde","tokenUnderline","tokenUnknown","tokenWhite","tokenizingCharacterSet","tooManyReqs","tooManySeps","tooManySkts","toolTip","toolTipForCell:","toolTipForObject:","toolTipForSegment:","toolTipsFontOfSize:","toolbar","toolbar: itemForItemIdentifier: willBeInsertedIntoToolbar:","toolbarAllowedItemIdentifiers:","toolbarDefaultItemIdentifiers:","toolbarDidRemoveItem:","toolbarHidden","toolbarItems","toolbarSelectableItemIdentifiers:","toolbarWillAddItem:","top","topAutoreleasePoolCount","topCapHeight","topItem","topLevelObject","topMargin","topViewController","totalAutoreleasedObjects","totalDuration","totalFailureCount","totalLoadCmd","touch","touchInside","touchesBegan: withEvent: ","touchesCancelled: withEvent: ","touchesEnded: withEvent: ","touchesForView: ","touchesForWindow: ","touchesMoved: withEvent: ","touchesShouldBegin: withEvent: inContentView: ","touchesShouldCancelInContentView: ","traceException","trace_ids","track","trackAttributes","trackDictionaries","trackForAudioFile:","trackForAudioOfLength: producer:","trackForRootFolder:","trackIDNotFound","trackKnob:","trackMarker: withMouseEvent:","trackMouse: adding:","trackMouse: inRect: ofView: atCharacterIndex: untilMouseUp:","trackMouse: inRect: ofView: untilMouseUp:","trackNotInMovie","trackRect","trackRectForBounds: ","trackScrollButtons:","trackUsageInMovie","trackUsageInPoster","trackUsageInPreview","trackWithEvent:","trackWithQuickTimeTrack: error:","trackerClassNameForEvent:","tracking","trackingArea","trackingAreas","trackingMode","trackingNumber","tracks","tracksOfMediaType:","trailingOffset","traitsOfFont:","transactionDate","transactionID","transactionIdentifier","transactionReceipt","transactionState","transactions","transform","transformBezierPath:","transformBy: interior:","transformContextForBox:","transformPoint:","transformSize:","transformStruct","transformUsingAffineTransform:","transformedValue:","transformedValueClass","translateMatrixType","translateOriginToPoint:","translateRectsNeedingDisplayInRect: by:","translateXBy: yBy:","translucent","transpose:","transposeWords:","trapException","trayIsOpen","treatsFilePackagesAsDirectories","treeNodeWithRepresentedObject:","triggerAtStart","triggerAtStop","triggerDateRelativeTo:","triggerRateChange","triggerRateEqual","triggerRateGT","triggerRateGTE","triggerRateLT","triggerRateLTE","triggerRateNotEqual","triggerTimeBwd","triggerTimeEither","triggerTimeFwd","trim:","true32b","trueHeading","truncateFileAtOffset:","truncl","tryLock","tryLockWhenCondition:","tryToPerform: with:","tuneParseErr","tuneParseOSErr","tunePlayerFullErr","tunePlayerFullOSErr","turnOffKerning:","turnOffLigatures:","tvTunerIn","twelfthRootTwo","twoBitMode","twoDigitStartDate","twoSideErr","twoToOne","txtProcDefaultDisplay","txtProcDoDisplay","txtProcDontDisplay","type","type32BitIcon","type4BitIcon","type8BitIcon","type8BitMask","type: conformsToType:","typeAETE","typeAEUT","typeASStorage","typeATSFontRef","typeATSUFontID","typeATSUSize","typeAppleScript","typeCFArrayRef","typeCFDictionaryRef","typeCFIndex","typeCFMutableArrayRef","typeCFMutableDictionaryRef","typeCFMutableStringRef","typeCFRange","typeCFStringRef","typeCFTypeRef","typeCGContextRef","typeClickActivationResult","typeCodeValue","typeCollection","typeConceptualTime","typeControlActionUPP","typeControlFrameMetrics","typeControlPartCode","typeControlRef","typeDragRef","typeEventHotKeyID","typeEventTargetRef","typeFMFontFamily","typeFMFontSize","typeFMFontStyle","typeFSVolumeRefNum","typeFontColor","typeForArgumentWithName:","typeForContentsOfURL: error:","typeForKey:","typeFromFileExtension:","typeGDHandle","typeGWorldPtr","typeGlyphSelector","typeGrafPtr","typeHICommand","typeHIObjectRef","typeHIPoint","typeHIRect","typeHIShapeRef","typeHISize","typeHIToolbarDisplayMode","typeHIToolbarDisplaySize","typeHIToolbarItemRef","typeHIToolbarRef","typeHIViewTrackingAreaRef","typeIconAndMask","typeIconFamily","typeIndicatorDragConstraint","typeMenuCommand","typeMenuDirection","typeMenuEventOptions","typeMenuItemIndex","typeMenuRef","typeMenuTrackingMode","typeModalClickResult","typeMouseButton","typeMouseTrackingRef","typeMouseWheelAxis","typeOSADialectInfo","typeOSAErrorRange","typeOSAGenericStorage","typeOSStatus","typeOfFile: error:","typeOfProperty:","typePasteboardRef","typeQDRgnHandle","typeRelativeTime","typeSRRecognizer","typeSRSpeechResult","typeScrapRef","typeScszResource","typeSecIdentityRef","typeSmall32BitIcon","typeSmall4BitIcon","typeSmall8BitIcon","typeSmall8BitMask","typeSmallIconAndMask","typeSound","typeStatementRange","typeTabletPointRec","typeTabletPointerRec","typeTabletProximityRec","typeThemeMenuItemType","typeThemeMenuState","typeThemeMenuType","typeUserRecordFields","typeVoidPtr","typeWindowDefPartCode","typeWindowModality","typeWindowPartCode","typeWindowRef","typeWindowRegionCode","typeWindowTransitionAction","typeWindowTransitionEffect","typedef","types","typesFilterableTo:","typesetter","typesetterBehavior","typesetterLaidOneGlyph:","typingAttributes","typingStyle","uiViewForAudioUnit: withSize:","uint16","uint32","uint32_t","uint64","uint64_t","uint8_t","unableToSetNilForKey:","unarchiveObjectWithData:","unarchiveObjectWithFile:","unarchiver: cannotDecodeObjectOfClassName: originalClasses:","unarchiver: didDecodeObject:","unarchiver: willReplaceObject: withObject:","unarchiverDidFinish:","unarchiverWillFinish:","unbind:","unbindTextureRepresentationFromCGLContext:_ctx textureUnit:","undefined","underline","underline:","underlineGlyphRange: underlineType: lineFragmentRect: lineFragmentGlyphRange: containerOrigin:","underlinePosition","underlineThickness","undo","undoActionName","undoManager","undoManagerForTextView:","undoManagerForWebView:","undoMenuItemTitle","undoMenuTitleForUndoActionName:","undoNestedGroup","unexpectedExceptionCount","unhide","unhide:","unhideAllApplications:","unhideWithoutActivation","unicodeBidi","unicodeBufErr","unicodeCharErr","unicodeChecksumErr","unicodeContextualErr","unicodeDirectionErr","unicodeElementErr","unicodeFallbacksErr","unicodeNoTableErr","unicodeNotFoundErr","unicodePartConvertErr","unicodeTableFormatErr","unicodeTextEncodingDataErr","unicodeVariantErr","unimpErr","unionHashTable:","unionSet:","unionWith:","unionWithRect:","uniqueID","uniqueId","uniqueIdentifier","uniqueSpellDocumentTag","unitEmptyErr","unitTblFullErr","unitTypeNoSelection","unitTypeSeconds","unkeepInRam","unknownException","unknownFormatErr","unknownInsertModeErr","unknownPersonViewController:shouldPerformDefaultActionForPerson:property:identifier:","unknownPersonViewDelegate","unlearnWord:","unload","unloadComposition","unlock","unlockBufferRepresentation","unlockFocus","unlockTextureRepresentation","unlockWithCondition:","unlockWithPassword:","unmappedMemoryException","unmarkText","unmountAndEjectDeviceAtPath:","unreachableURL","unregister","unregisterClass:","unregisterClient:","unregisterDraggedTypes","unregisterForLocalNotifications","unregisterForRemoteNotifications","unregisterImageRepClass:","unregisterSchemaWithName:","unregisterViewResourceDraggingDelegate:","unresolvablePageFaultException","unresolvedComponentDLLErr","unscheduleFromRunLoop: forMode: ","unscript:","unscriptRange:","unsigned","unsignedCharValue","unsignedIntValue","unsignedIntegerValue","unsignedLongLongValue","unsignedLongValue","unsignedShortValue","unsupportedAuxiliaryImportData","unsupportedForPlatformErr","unsupportedOSErr","unsupportedProcessorErr","updPixMemErr","update","updateAttachmentsFromPath:","updateBounds","updateCacheNode: fromManagedObject:","updateCacheNode:fromManagedObject:","updateCandidates","updateCell:","updateCellInside:","updateChangeCount:","updateComposition","updateCurGlyphOffset","updateCurrentPageDisplay","updateDragTypeRegistration","updateEvt","updateFontPanel","updateFromPMPageFormat","updateFromPMPrintSettings","updateFromPath:","updateFromPrintInfo","updateHelpMenuWithArray:","updateInsertionPointStateAndRestartTimer:","updateInterval","updateMask","updateMeters","updateMovieFile","updateMsg","updateNewDeviceNames","updateParameters","updateRuler","updateScroller","updateSpellingPanelWithGrammarString: detail:","updateSpellingPanelWithMisspelledWord:","updateStatus:","updateTrackingAreas","updateView","updateWindows","updateWindowsItem:","updatedObjects","updating","usableParts","use","useATalk","useAllLigatures:","useAsync","useColorMatching","useCredential: forAuthenticationChallenge:","useExtClk","useFont:","useFree","useMIDI","useMap","useOptimizedDrawing:","useRunningCopyOfApplication","useStandardKerning:","useStandardLigatures:","useStoredAccessor","useWFont","usedRectForTextContainer:","user","userAgentForURL:","userBreak","userCanceledErr","userCollectionAttributes","userData","userDataItemNotFound","userDefaultsChanged","userFixedPitchFontOfSize:","userFontOfSize:","userIdentityWithPosixUID: authority:","userInfo","userInteractionEnabled","userInterfaceItemIdentifier","userItem","userKeyEquivalent","userKeyEquivalentModifierMask","userKind","userLocation","userLocationVisible","userName","userRejectErr","userSelection","userSpaceScaleFactor","userStyleSheetEnabled","userStyleSheetLocation","username","usesAlternatingRowBackgroundColors","usesDataSource","usesEPSOnResolutionMismatch","usesFeedbackWindow","usesFindPanel","usesFontLeading","usesFontPanel","usesGroupingSeparator","usesItemFromMenu","usesLazyFetching","usesRuler","usesScreenFonts","usesScriptAssistant","usesSignificantDigits ","usesTabs","usesThreadedAnimation","usesUserKeyEquivalents","validAttributesForMarkedText","validDateFields","validInstancesExist","validModesForFontPanel:","validRequestorForSendType: returnType:","validate","validateAndReturnError:","validateEditing","validateForDelete:","validateForInsert:","validateForUpdate:","validateMenuItem:","validateToolbarItem:","validateUserInterfaceItem:","validateValue: forKey: error:","validateValue: forKeyPath: error:","validateValue:forKey:error:","validateVisibleColumns","validateVisibleItems","validationPredicates","validationWarnings","value","value: withObjCType:","valueAtIndex:","valueAtIndex: inPropertyWithKey:","valueClassForBinding:","valueExpression","valueForAttribute:","valueForDimension:","valueForHTTPHeaderField:","valueForInputKey:","valueForKey:","valueForKey: ","valueForKey: expandEnvironmentVariables:","valueForKeyPath:","valueForOutputKey:","valueForOutputKey: ofType:","valueForPasteboardType:","valueForProperty:","valueForTag: client:","valueForUndefinedKey:","valueForVariableWithName:","valueFunction","valueListAttributes","valueLists","valueOfAttribute: forResultAtIndex:","valuePointerFunctions","valueSelectionBehavior","valueTransformerForName:","valueTransformerName","valueTransformerNames","valueType","valueTypeForDimension:","valueWithBytes: objCType:","valueWithCATransform3D:","valueWithCATransform3D: ","valueWithCGAffineTransform: ","valueWithCGPoint: ","valueWithCGRect: ","valueWithCGSize: ","valueWithLKTransform:","valueWithName: inPropertyWithKey:","valueWithNonretainedObject:","valueWithPoint:","valueWithPointer:","valueWithQTTime:","valueWithQTTimeRange:","valueWithRange:","valueWithRect:","valueWithSMPTETime:","valueWithSize:","valueWithUIEdgeInsets: ","valueWithUniqueID: inPropertyWithKey:","valueWraps","values","valuesForAttributes:","valuesForKeys:","valuesForPasteboardType:inItemSet:","verboseProgressStatus","version","versionCmd","versionForClassName:","versionHash","versionHashModifier","versionIdentifiers","verticalAccuracy","verticalAlign","verticalAlignment","verticalCornerRadius","verticalLineScroll","verticalMotionCanBeginDrag","verticalPageScroll","verticalPagination","verticalRulerView","verticalScroller","vervariantDenmark","vervariantNorway","vervariantPortugal","veryShortMonthSymbols ","veryShortStandaloneMonthSymbols ","veryShortStandaloneWeekdaySymbols ","veryShortWeekdaySymbols ","videoDataSource","videoDigitizerComponentType","videoFlagDontLeanAhead","videoOptimizationOptions","videoOutputInUseErr","videoPreviewConnection","view","view: stringForToolTip: point: userData:","view: willDisplayImage:","viewAnimations","viewBoundsChanged:","viewControllers","viewDidAppear: ","viewDidDisappear: ","viewDidEndLiveResize","viewDidHide","viewDidLoad","viewDidMoveToHostWindow","viewDidMoveToSuperview","viewDidMoveToWindow","viewDidUnhide","viewDidUnload","viewFlipsideBackgroundColor","viewForAnnotation:","viewForRow: forComponent: ","viewForType:","viewForUIConfiguration: excludedKeys:","viewForZoomingInScrollView: ","viewFrameChanged:","viewNibName","viewResourcePasteboardTypes","viewSizeChanged:","viewWillAppear: ","viewWillDisappear: ","viewWillDraw","viewWillMoveToHostWindow:","viewWillMoveToSuperview:","viewWillMoveToWindow:","viewWillStartLiveResize","viewWithFrame: filter:","viewWithTag:","viewWithTag: ","viewsNeedDisplay","virtualFileWithName: data:","virtualFileWithName: dataProducer:","virtualFolderWithName:","visibility","visibilityPriority","visible","visibleCells","visibleFrame","visibleItems","visiblePages","visibleRect","visibleViewController","visualContextForConnection:","waitCmd","waitForDataInBackgroundAndNotify","waitForDataInBackgroundAndNotifyForModes:","waitUntilAllOperationsAreFinished","waitUntilDate:","waitUntilExit","wantsButtons","wantsDefaultClipping","wantsFullScreenLayout","wantsLayer","wantsNotificationForMarkedText","wantsPeriodicDraggingUpdates","wantsSelection","wantsToDelayTextChangeNotifications","wantsToHandleMouseEvents","wantsToInterpretAllKeystrokes","wantsToTrackMouse","wantsToTrackMouseForEvent: inRect: ofView: atCharacterIndex:","warningValue","waveInitChannel0","waveInitChannel1","waveInitChannel2","waveInitChannel3","waveInitChannelMask","waveTableCmd","waveTableSynth","webArchive","webFrame","webPlugInCallJava:","webPlugInContainerLoadRequest: inFrame:","webPlugInContainerSelectionColor","webPlugInContainerShowStatus:","webPlugInDestroy","webPlugInGetApplet","webPlugInInitialize","webPlugInSetIsSelected:","webPlugInStart","webPlugInStop","webScriptNameForKey:","webScriptNameForSelector:","webScriptValueAtIndex:","webView","webView: contextMenuItemsForElement: defaultMenuItems:","webView: createWebViewModalDialogWithRequest:","webView: createWebViewWithRequest:","webView: decidePolicyForMIMEType:","webView: decidePolicyForNavigationAction:","webView: decidePolicyForNewWindowAction:","webView: didCancelClientRedirectForFrame:","webView: didChangeLocationWithinPageForFrame:","webView: didCommitLoadForFrame:","webView: didFailLoadWithError: ","webView: didFailLoadWithError: forFrame:","webView: didFailProvisionalLoadWithError: forFrame:","webView: didFinishLoadForFrame:","webView: didReceiveIcon: forFrame:","webView: didReceiveServerRedirectForProvisionalLoadForFrame:","webView: didReceiveTitle: forFrame:","webView: didStartProvisionalLoadForFrame:","webView: doCommandBySelector:","webView: dragDestinationActionMaskForDraggingInfo:","webView: dragSourceActionMaskForPoint:","webView: drawFooterInRect:","webView: drawHeaderInRect:","webView: identifierForInitialRequest: fromDataSource:","webView: makeFirstResponder:","webView: mouseDidMoveOverElement: modifierFlags:","webView: plugInFailedWithError: dataSource:","webView: printFrameView:","webView: resource: didCancelAuthenticationChallenge: fromDataSource:","webView: resource: didFailLoadingWithError: fromDataSource:","webView: resource: didFinishLoadingFromDataSource:","webView: resource: didReceiveAuthenticationChallenge: fromDataSource:","webView: resource: didReceiveContentLength: fromDataSource:","webView: resource: didReceiveResponse: fromDataSource:","webView: resource: willSendRequest: redirectResponse: fromDataSource:","webView: runBeforeUnloadConfirmPanelWithMessage: initiatedByFrame:","webView: runJavaScriptAlertPanelWithMessage:","webView: runJavaScriptAlertPanelWithMessage: initiatedByFrame:","webView: runJavaScriptConfirmPanelWithMessage:","webView: runJavaScriptConfirmPanelWithMessage: initiatedByFrame:","webView: runJavaScriptTextInputPanelWithPrompt: defaultText:","webView: runJavaScriptTextInputPanelWithPrompt: defaultText: initiatedByFrame:","webView: runOpenPanelForFileButtonWithResultListener:","webView: setContentRect:","webView: setFrame:","webView: setResizable:","webView: setStatusBarVisible:","webView: setStatusText:","webView: setToolbarsVisible:","webView: shouldApplyStyle: toElementsInDOMRange:","webView: shouldBeginEditingInDOMRange:","webView: shouldChangeSelectedDOMRange: toDOMRange: affinity: stillSelecting:","webView: shouldChangeTypingStyle: toStyle:","webView: shouldDeleteDOMRange:","webView: shouldEndEditingInDOMRange:","webView: shouldInsertNode: replacingDOMRange: givenAction:","webView: shouldInsertText: replacingDOMRange: givenAction:","webView: shouldPerformAction: fromSender:","webView: shouldStartLoadWithRequest: navigationType: ","webView: unableToImplementPolicyWithError: frame:","webView: validateUserInterfaceItem: defaultValidation:","webView: willCloseFrame:","webView: willPerformClientRedirectToURL: delay: fireDate: forFrame:","webView: willPerformDragDestinationAction: forDraggingInfo:","webView: willPerformDragSourceAction: fromPoint: withPasteboard:","webView: windowScriptObjectAvailable:","webViewAreToolbarsVisible:","webViewClose:","webViewContentRect:","webViewDidBeginEditing:","webViewDidChange:","webViewDidChangeSelection:","webViewDidChangeTypingStyle:","webViewDidEndEditing:","webViewDidFinishLoad: ","webViewDidStartLoad: ","webViewFirstResponder:","webViewFocus:","webViewFooterHeight:","webViewFrame:","webViewHeaderHeight:","webViewIsResizable:","webViewIsStatusBarVisible:","webViewRunModal:","webViewShow:","webViewStatusText:","webViewUnfocus:","week","weekOfYearField","weekOfYearMask","weekday","weekdayOrdinal","weekdaySymbols","weightOfFont:","wfFileNotFound","whatToShow","whiteColor","whiteComponent","whiteSpace","whitespaceAndNewlineCharacterSet","whitespaceCharacterSet","widows","width","widthAdjustLimit","widthForLayer: edge:","widthForSegment:","widthForSegmentAtIndex: ","widthOfColumn:","widthOfString:","widthTracksTextView","widthValueTypeForLayer: edge:","willAccessValueForKey:","willActivateWithUser:","willAnimateFirstHalfOfRotationToInterfaceOrientation: duration: ","willAnimateRotationToInterfaceOrientation:duration:","willAnimateSecondHalfOfRotationFromInterfaceOrientation: duration: ","willChange: valuesAtIndexes: forKey:","willChangePPDOptionKeyValue: ppdChoice:","willChangeValueForKey:","willChangeValueForKey: ","willChangeValueForKey: withSetMutation: usingObjects:","willChangeValueForKey:withSetMutation:usingObjects:","willEditChild: inWindowController:","willEnterPane:","willExitPane:","willFinishRunning","willLoadMainNib","willMoveToSuperview: ","willMoveToWindow: ","willPresentActionSheet: ","willPresentAlertView: ","willPresentError:","willRemoveCacheNodes:","willRemoveFromPersistentStoreCoordinator:","willRemoveSubview:","willRemoveSubview: ","willRotateToInterfaceOrientation: duration: ","willSave","willSelect","willSetLineFragmentRect: forGlyphRange: usedRect:","willSetLineFragmentRect: forGlyphRange: usedRect: baselineOffset:","willShow","willTerminate","willTransitionToState:","willTurnIntoFault","willUnload","willUnselect","windingRule","window","window: shouldDragDocumentWithEvent: from: withPasteboard:","window: shouldPopUpDocumentPathMenu:","window: willPositionSheet: usingRect:","windowAppModalStateAlreadyExistsErr","windowAttributeImmutableErr","windowAttributesConflictErr","windowBackgroundColor","windowController","windowControllerDidLoadNib:","windowControllerWillLoadNib:","windowControllers","windowDidBecomeKey:","windowDidBecomeMain:","windowDidChangeScreen:","windowDidChangeScreenProfile:","windowDidDeminiaturize:","windowDidEndSheet:","windowDidExpose:","windowDidLoad","windowDidMiniaturize:","windowDidMove:","windowDidResignKey:","windowDidResignMain:","windowDidResize:","windowDidUpdate:","windowForSheet","windowFrameAutosaveName","windowFrameColor","windowFrameTextColor","windowGroupInvalidErr","windowHandle","windowIsOpen","windowLevel","windowManagerInternalErr","windowNibName","windowNibPath","windowNoAppModalStateErr","windowNumber","windowRef","windowScriptObject","windowShouldClose:","windowShouldZoom: toFrame:","windowTitleForDocumentDisplayName:","windowWillBeginSheet:","windowWillClose:","windowWillLoad","windowWillMiniaturize:","windowWillMove:","windowWillResize: toSize:","windowWillReturnFieldEditor: toObject:","windowWillReturnUndoManager:","windowWillUseStandardFrame: defaultFrame:","windowWithWindowHandle:","windowWithWindowNumber:","windowWrongStateErr","windows","windowsMenu","withAddress:","withDevice:","withDeviceRef:","withDeviceSelectorControllerRef:","withElementValue:","withExternalBuffer","withID: attributeElement:","withID: attributeElementValue:","withIncomingRFCOMMChannel:","withInternalBuffer","withL2CAPChannelRef:","withNoBuffer","withOBEXHeadersData: headersDataSize:","withOBEXSession:","withObjectID:","withPairingControllerRef:","withRFCOMMChannelRef:","withSDPDataElementRef:","withSDPServiceRecord:","withSDPServiceRecordRef:","withSDPUUIDRef:","withServiceBrowserControllerRef:","withTask","withType: sizeDescriptor: size: value:","wordSpacing","words","workflow","workflowController","workflowController: didError:","workflowController: didRunAction:","workflowController: willRunAction:","workflowControllerDidPause:","workflowControllerDidRun:","workflowControllerDidStep:","workflowControllerDidStop:","workflowControllerWillPause:","workflowControllerWillRun:","workflowControllerWillStep:","workflowControllerWillStop:","worksWhenModal","wraps","wrapsLines","writablePasteboardTypes","writableTypes","writableTypesForSaveOperation:","write:","write: length:","write: length: sleep:","write: maxLength:","writeAsync: length: refcon:","writeBytes","writeData:","writeEPSInsideRect: toPasteboard:","writeElement: withPasteboardTypes: toPasteboard:","writeFileContents:","writeFileWrapper:","writeLayout:","writeNetworkData","writePDFInsideRect: toPasteboard:","writePrintInfo","writeProperty: forKey:","writeRTFDToFile: atomically:","writeReference","writeSafelyToURL: ofType: forSaveOperation: error:","writeSelectionToPasteboard: type:","writeSelectionToPasteboard: types:","writeSelectionWithPasteboardTypes: toPasteboard:","writeSimple: length: sleep: bytesSent:","writeSync: length:","writeToDictionary:","writeToDocumentPath:","writeToFile:","writeToFile: atomically:","writeToFile: atomically: encoding: error:","writeToFile: atomically: updateFilenames:","writeToFile: ofType:","writeToFile: ofType: originalFile: saveOperation:","writeToFile: options: error:","writeToFile: withAttributes:","writeToFile: withAttributes: error:","writeToFile: withOptions:","writeToPasteboard:","writeToURL:","writeToURL: atomically:","writeToURL: atomically: encoding: error:","writeToURL: error:","writeToURL: ofType:","writeToURL: ofType: error:","writeToURL: ofType: forSaveOperation: originalContentsURL: error:","writeToURL: ofType: usingStorageOptions: error:","writeToURL: options: error:","writeToURL: withOptions:","writeWithBackupToFile: ofType: saveOperation:","writeln:","writesCD","writesDVD","writingPastEnd","wrongApplicationPlatform","x","y","yank:","year","yearField","yearMask","yearOfCommonEra","years: months: days: hours: minutes: seconds: sinceDate:","yellowColor","yellowComponent","yuvComponentIn","yuvComponentSyncIn","zoomEnabled","zoomImageToActualSize:","zoomImageToFit:","zoomImageToRect:","zoomIn:","zoomNoAcceleration","zoomNoGrow","zoomOut:","zoomScale","zoomToRect:animated:","zoomValue","zooming"],"type":"method","icon":"method"}]}