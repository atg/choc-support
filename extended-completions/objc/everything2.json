{"items":["actionProperty","titleForPerson:identifier:","performActionForPerson:identifier:","shouldEnableActionForPerson:identifier:","sharedAddressBook","recordsMatchingSearchElement:","save","hasUnsavedChanges","me","setMe:","recordForUniqueId:","addRecord:","removeRecord:","people","groups","members","addMember:","removeMember:","subgroups","addSubgroup:","removeSubgroup:","parentGroups","setDistributionIdentifier:forProperty:person:","distributionIdentifierForProperty:person:","addPropertiesAndTypes:","removeProperties:","properties","typeOfProperty:","searchElementForProperty:label:key:value:comparison:","setImageData:","imageData","beginLoadingImageDataForClient:","cancelLoadingImageDataForTag:","count","valueAtIndex:","labelAtIndex:","identifierAtIndex:","indexForIdentifier:","primaryIdentifier","propertyType","valueForIdentifier:","labelForIdentifier:","addValue:withLabel:","insertValue:withLabel:atIndex:","removeValueAndLabelAtIndex:","replaceValueAtIndex:withValue:","replaceLabelAtIndex:withLabel:","setPrimaryIdentifier:","addProperty:","removeProperty:","properties","setColumnTitle:forProperty:","columnTitleForProperty:","selectedIdentifiersForPerson:","selectGroup:byExtendingSelection:","selectRecord:byExtendingSelection:","selectIdentifier:forPerson:byExtendingSelection:","deselectGroup:","deselectRecord:","deselectIdentifier:forPerson:","deselectAll:","clearSearchField:","selectedValues","editInAddressBook:","selectInAddressBook:","parentGroups","addPropertiesAndTypes:","removeProperties:","properties","typeOfProperty:","searchElementForProperty:label:key:value:comparison:","initWithVCardRepresentation:","vCardRepresentation","init","valueForProperty:","setValue:forProperty:","removeValueForProperty:","uniqueId","searchElementForConjunction:children:","matchesRecord:","accessibilityAttributeNames","accessibilityAttributeValue:","accessibilityIsAttributeSettable:","accessibilitySetValue:forAttribute:","accessibilityParameterizedAttributeNames","accessibilityAttributeValue:forParameter:","accessibilityActionNames","accessibilityActionDescription:","accessibilityPerformAction:","accessibilityIsIgnored","accessibilityHitTest:","accessibilityFocusedUIElement","accessibilityIndexOfChild:","accessibilityArrayAttributeCount:","accessibilityArrayAttributeValues:index:maxCount:","accessibilitySetOverrideValue:forAttribute:","target","setTarget:","action","setAction:","tag","setTag:","transformBezierPath:","set","concat","alertWithError:","setMessageText:","setInformativeText:","messageText","informativeText","setIcon:","icon","addButtonWithTitle:","buttons","setShowsHelp:","showsHelp","setHelpAnchor:","helpAnchor","setAlertStyle:","alertStyle","setDelegate:","delegate","runModal","alertDidEnd:returnCode:contextInfo:","beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:","window","initWithDuration:animationCurve:","startAnimation","stopAnimation","isAnimating","currentProgress","setCurrentProgress:","setDuration:","duration","animationBlockingMode","setAnimationBlockingMode:","setFrameRate:","frameRate","setAnimationCurve:","animationCurve","currentValue","setDelegate:","delegate","progressMarks","setProgressMarks:","addProgressMark:","removeProgressMark:","startWhenAnimation:reachesProgress:","stopWhenAnimation:reachesProgress:","clearStartAnimation","clearStopAnimation","runLoopModesForAnimating","initWithViewAnimations:","viewAnimations","setViewAnimations:","beginGrouping","endGrouping","currentContext","setDuration:","duration","richTextSource","sharedApplication","setDelegate:","delegate","context","hide:","unhide:","unhideWithoutActivation","windowWithWindowNumber:","mainWindow","keyWindow","isActive","isHidden","isRunning","deactivate","activateIgnoringOtherApps:","hideOtherApplications:","unhideAllApplications:","finishLaunching","run","runModalForWindow:","stop:","stopModal","stopModalWithCode:","abortModal","modalWindow","beginModalSessionForWindow:","runModalSession:","endModalSession:","terminate:","requestUserAttention:","cancelUserAttentionRequest:","beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:","endSheet:","endSheet:returnCode:","nextEventMatchingMask:untilDate:inMode:dequeue:","discardEventsMatchingMask:beforeEvent:","postEvent:atStart:","currentEvent","sendEvent:","preventWindowOrdering","makeWindowsPerform:inOrder:","windows","setWindowsNeedUpdate:","updateWindows","setMainMenu:","mainMenu","setApplicationIconImage:","applicationIconImage","sendAction:to:from:","targetForAction:","targetForAction:to:from:","tryToPerform:with:","validRequestorForSendType:returnType:","reportException:","detachDrawingThread:toTarget:withObject:","replyToApplicationShouldTerminate:","replyToOpenOrPrint:","orderFrontCharacterPalette:","setWindowsMenu:","windowsMenu","arrangeInFront:","removeWindowsItem:","addWindowsItem:title:filename:","changeWindowsItem:title:filename:","updateWindowsItem:","miniaturizeAll:","setServicesMenu:","servicesMenu","registerServicesMenuSendTypes:returnTypes:","writeSelectionToPasteboard:types:","readSelectionFromPasteboard:","setServicesProvider:","servicesProvider","orderFrontStandardAboutPanel:","orderFrontStandardAboutPanelWithOptions:","orderedDocuments","orderedWindows","application:delegateHandlesKey:","rearrangeObjects","setSortDescriptors:","sortDescriptors","setFilterPredicate:","filterPredicate","setClearsFilterPredicateOnInsertion:","clearsFilterPredicateOnInsertion","arrangeObjects:","arrangedObjects","setAvoidsEmptySelection:","avoidsEmptySelection","setPreservesSelection:","preservesSelection","setSelectsInsertedObjects:","selectsInsertedObjects","setAlwaysUsesMultipleValuesMarker:","alwaysUsesMultipleValuesMarker","setSelectionIndexes:","selectionIndexes","setSelectionIndex:","selectionIndex","addSelectionIndexes:","removeSelectionIndexes:","setSelectedObjects:","selectedObjects","addSelectedObjects:","removeSelectedObjects:","add:","remove:","insert:","canInsert","selectNext:","selectPrevious:","canSelectNext","canSelectPrevious","addObject:","addObjects:","insertObject:atArrangedObjectIndex:","insertObjects:atArrangedObjectIndexes:","removeObjectAtArrangedObjectIndex:","removeObjectsAtArrangedObjectIndexes:","removeObject:","removeObjects:","sharedTypesetter","usesFontLeading","setUsesFontLeading:","typesetterBehavior","setTypesetterBehavior:","hyphenationFactor","setHyphenationFactor:","lineFragmentPadding","setLineFragmentPadding:","substituteFontForFont:","textTabForGlyphLocation:writingDirection:maxLocation:","bidiProcessingEnabled","setBidiProcessingEnabled:","setAttributedString:","attributedString","setParagraphGlyphRange:separatorGlyphRange:","paragraphGlyphRange","paragraphSeparatorGlyphRange","layoutParagraphAtPoint:","lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:","paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:","paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:","layoutManager","currentTextContainer","setHardInvalidation:forGlyphRange:","getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:","willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:","shouldBreakLineByWordBeforeCharacterAtIndex:","shouldBreakLineByHyphenatingBeforeCharacterAtIndex:","hyphenationFactorForGlyphAtIndex:","hyphenCharacterForGlyphAtIndex:","boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:","characterRangeForGlyphRange:actualGlyphRange:","glyphRangeForCharacterRange:actualCharacterRange:","getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:","setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:","substituteGlyphsInRange:withGlyphs:","insertGlyph:atGlyphIndex:characterIndex:","deleteGlyphsInRange:","setNotShownAttribute:forGlyphRange:","setDrawsOutsideLineFragment:forGlyphRange:","setLocation:withAdvancements:forStartOfGlyphRange:","setAttachmentSize:forGlyphRange:","fontAttributesInRange:","rulerAttributesInRange:","containsAttachments","lineBreakBeforeIndex:withinRange:","lineBreakByHyphenatingBeforeIndex:withinRange:","doubleClickAtIndex:","nextWordFromIndex:forward:","rangeOfTextBlock:atIndex:","rangeOfTextTable:atIndex:","rangeOfTextList:atIndex:","itemNumberInTextList:atIndex:","initWithURL:options:documentAttributes:error:","initWithData:options:documentAttributes:error:","initWithPath:documentAttributes:","initWithURL:documentAttributes:","initWithRTF:documentAttributes:","initWithRTFD:documentAttributes:","initWithHTML:documentAttributes:","initWithHTML:baseURL:documentAttributes:","initWithDocFormat:documentAttributes:","initWithHTML:options:documentAttributes:","initWithRTFDFileWrapper:documentAttributes:","dataFromRange:documentAttributes:error:","fileWrapperFromRange:documentAttributes:error:","RTFFromRange:documentAttributes:","RTFDFromRange:documentAttributes:","RTFDFileWrapperFromRange:documentAttributes:","docFormatFromRange:documentAttributes:","readFromURL:options:documentAttributes:error:","readFromData:options:documentAttributes:error:","readFromURL:options:documentAttributes:","readFromData:options:documentAttributes:","superscriptRange:","subscriptRange:","unscriptRange:","applyFontTraits:range:","setAlignment:range:","setBaseWritingDirection:range:","fixAttributesInRange:","fixFontAttributeInRange:","fixParagraphStyleAttributeInRange:","fixAttachmentAttributeInRange:","bezierPath","bezierPathWithRect:","bezierPathWithOvalInRect:","fillRect:","strokeRect:","clipRect:","strokeLineFromPoint:toPoint:","drawPackedGlyphs:atPoint:","setDefaultMiterLimit:","defaultMiterLimit","setDefaultFlatness:","defaultFlatness","setDefaultWindingRule:","defaultWindingRule","setDefaultLineCapStyle:","defaultLineCapStyle","setDefaultLineJoinStyle:","defaultLineJoinStyle","setDefaultLineWidth:","defaultLineWidth","moveToPoint:","lineToPoint:","curveToPoint:controlPoint1:controlPoint2:","closePath","removeAllPoints","relativeMoveToPoint:","relativeLineToPoint:","relativeCurveToPoint:controlPoint1:controlPoint2:","lineWidth","setLineWidth:","lineCapStyle","setLineCapStyle:","lineJoinStyle","setLineJoinStyle:","windingRule","setWindingRule:","miterLimit","setMiterLimit:","flatness","setFlatness:","getLineDash:count:phase:","setLineDash:count:phase:","stroke","fill","addClip","setClip","bezierPathByFlatteningPath","bezierPathByReversingPath","transformUsingAffineTransform:","isEmpty","currentPoint","controlPointBounds","bounds","elementCount","elementAtIndex:associatedPoints:","elementAtIndex:","setAssociatedPoints:atIndex:","appendBezierPath:","appendBezierPathWithRect:","appendBezierPathWithPoints:count:","appendBezierPathWithOvalInRect:","appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:","appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:","appendBezierPathWithArcFromPoint:toPoint:radius:","appendBezierPathWithGlyph:inFont:","appendBezierPathWithGlyphs:count:inFont:","appendBezierPathWithPackedGlyphs:","containsPoint:","initWithFocusedViewRect:","initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:","initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:","imageRepsWithData:","imageRepWithData:","initWithData:","bitmapData","getBitmapDataPlanes:","isPlanar","samplesPerPixel","bitsPerPixel","bytesPerRow","bytesPerPlane","numberOfPlanes","bitmapFormat","getCompression:factor:","setCompression:factor:","TIFFRepresentation","TIFFRepresentationUsingCompression:factor:","TIFFRepresentationOfImageRepsInArray:","TIFFRepresentationOfImageRepsInArray:usingCompression:factor:","getTIFFCompressionTypes:count:","localizedNameForTIFFCompressionType:","canBeCompressedUsing:","colorizeByMappingGray:toColor:blackMapping:whiteMapping:","initForIncrementalLoad","incrementalLoadFromData:complete:","setColor:atX:y:","colorAtX:y:","getPixel:atX:y:","setPixel:atX:y:","representationOfImageRepsInArray:usingType:properties:","representationUsingType:properties:","setProperty:withValue:","valueForProperty:","borderType","titlePosition","setBorderType:","setBoxType:","boxType","setTitlePosition:","title","setTitle:","titleFont","setTitleFont:","borderRect","titleRect","titleCell","sizeToFit","contentViewMargins","setContentViewMargins:","setFrameFromContentFrame:","contentView","setContentView:","setTitleWithMnemonic:","cellClass","loadColumnZero","isLoaded","setDoubleAction:","doubleAction","setMatrixClass:","matrixClass","setCellClass:","setCellPrototype:","cellPrototype","setDelegate:","delegate","setReusesColumns:","reusesColumns","setHasHorizontalScroller:","hasHorizontalScroller","setSeparatesColumns:","separatesColumns","setTitled:","isTitled","setMinColumnWidth:","minColumnWidth","setMaxVisibleColumns:","maxVisibleColumns","setAllowsMultipleSelection:","allowsMultipleSelection","setAllowsBranchSelection:","allowsBranchSelection","setAllowsEmptySelection:","allowsEmptySelection","setTakesTitleFromPreviousColumn:","takesTitleFromPreviousColumn","setSendsActionOnArrowKeys:","sendsActionOnArrowKeys","setTitle:ofColumn:","titleOfColumn:","setPathSeparator:","pathSeparator","setPath:","path","pathToColumn:","selectedColumn","selectedCell","selectedCellInColumn:","selectedCells","selectRow:inColumn:","selectedRowInColumn:","reloadColumn:","validateVisibleColumns","scrollColumnsRightBy:","scrollColumnsLeftBy:","scrollColumnToVisible:","lastColumn","setLastColumn:","addColumn","numberOfVisibleColumns","firstVisibleColumn","lastVisibleColumn","columnOfMatrix:","matrixInColumn:","loadedCellAtRow:column:","selectAll:","tile","doClick:","doDoubleClick:","sendAction","titleFrameOfColumn:","drawTitleOfColumn:inRect:","titleHeight","frameOfColumn:","frameOfInsideOfColumn:","columnWidthForColumnContentWidth:","columnContentWidthForColumnWidth:","setColumnResizingType:","columnResizingType","setPrefersAllColumnUserResizing:","prefersAllColumnUserResizing","setWidth:ofColumn:","widthOfColumn:","setColumnsAutosaveName:","columnsAutosaveName","removeSavedColumnsWithAutosaveName:","branchImage","highlightedBranchImage","highlightColorInView:","isLeaf","setLeaf:","isLoaded","setLoaded:","reset","set","setImage:","image","setAlternateImage:","alternateImage","title","setTitle:","alternateTitle","setAlternateTitle:","image","setImage:","alternateImage","setAlternateImage:","imagePosition","setImagePosition:","setButtonType:","state","setState:","isBordered","setBordered:","isTransparent","setTransparent:","setPeriodicDelay:interval:","getPeriodicDelay:interval:","keyEquivalent","setKeyEquivalent:","keyEquivalentModifierMask","setKeyEquivalentModifierMask:","highlight:","performKeyEquivalent:","setTitleWithMnemonic:","attributedTitle","setAttributedTitle:","attributedAlternateTitle","setAttributedAlternateTitle:","setBezelStyle:","bezelStyle","setAllowsMixedState:","allowsMixedState","setNextState","setShowsBorderOnlyWhileMouseInside:","showsBorderOnlyWhileMouseInside","setSound:","sound","title","setTitle:","alternateTitle","setAlternateTitle:","alternateImage","setAlternateImage:","imagePosition","setImagePosition:","highlightsBy","setHighlightsBy:","showsStateBy","setShowsStateBy:","setButtonType:","isOpaque","setFont:","isTransparent","setTransparent:","setPeriodicDelay:interval:","getPeriodicDelay:interval:","keyEquivalent","setKeyEquivalent:","keyEquivalentModifierMask","setKeyEquivalentModifierMask:","keyEquivalentFont","setKeyEquivalentFont:","setKeyEquivalentFont:size:","performClick:","drawImage:withFrame:inView:","drawTitle:withFrame:inView:","drawBezelWithFrame:inView:","setTitleWithMnemonic:","setAlternateTitleWithMnemonic:","setAlternateMnemonicLocation:","alternateMnemonicLocation","alternateMnemonic","gradientType","setGradientType:","setImageDimsWhenDisabled:","imageDimsWhenDisabled","setShowsBorderOnlyWhileMouseInside:","showsBorderOnlyWhileMouseInside","mouseEntered:","mouseExited:","backgroundColor","setBackgroundColor:","attributedTitle","setAttributedTitle:","attributedAlternateTitle","setAttributedAlternateTitle:","setBezelStyle:","bezelStyle","setSound:","sound","prefersTrackingUntilMouseUp","initTextCell:","initImageCell:","controlView","setControlView:","type","setType:","state","setState:","target","setTarget:","action","setAction:","tag","setTag:","title","setTitle:","isOpaque","isEnabled","setEnabled:","sendActionOn:","isContinuous","setContinuous:","isEditable","setEditable:","isSelectable","setSelectable:","isBordered","setBordered:","isBezeled","setBezeled:","isScrollable","setScrollable:","isHighlighted","setHighlighted:","alignment","setAlignment:","wraps","setWraps:","font","setFont:","keyEquivalent","setFormatter:","formatter","objectValue","setObjectValue:","hasValidObjectValue","stringValue","setStringValue:","compare:","intValue","setIntValue:","floatValue","setFloatValue:","doubleValue","setDoubleValue:","takeIntValueFrom:","takeFloatValueFrom:","takeDoubleValueFrom:","takeStringValueFrom:","takeObjectValueFrom:","image","setImage:","setControlTint:","controlTint","setControlSize:","controlSize","representedObject","setRepresentedObject:","cellAttribute:","setCellAttribute:to:","imageRectForBounds:","titleRectForBounds:","drawingRectForBounds:","cellSize","cellSizeForBounds:","highlightColorWithFrame:inView:","calcDrawInfo:","setUpFieldEditorAttributes:","drawInteriorWithFrame:inView:","drawWithFrame:inView:","highlight:withFrame:inView:","mouseDownFlags","getPeriodicDelay:interval:","startTrackingAt:inView:","continueTracking:at:inView:","stopTracking:at:inView:mouseIsUp:","trackMouse:inRect:ofView:untilMouseUp:","editWithFrame:inView:editor:delegate:event:","selectWithFrame:inView:editor:delegate:start:length:","endEditing:","resetCursorRect:inView:","setMenu:","menu","menuForEvent:inRect:ofView:","defaultMenu","setSendsActionOnEndEditing:","sendsActionOnEndEditing","baseWritingDirection","setBaseWritingDirection:","setLineBreakMode:","lineBreakMode","setAllowsUndo:","allowsUndo","setRefusesFirstResponder:","refusesFirstResponder","acceptsFirstResponder","setShowsFirstResponder:","showsFirstResponder","setMnemonicLocation:","mnemonicLocation","mnemonic","setTitleWithMnemonic:","performClick:","setFocusRingType:","focusRingType","defaultFocusRingType","wantsNotificationForMarkedText","attributedStringValue","setAttributedStringValue:","allowsEditingTextAttributes","setAllowsEditingTextAttributes:","importsGraphics","setImportsGraphics:","setAllowsMixedState:","allowsMixedState","nextState","setNextState","imageRepWithCIImage:","initWithCIImage:","CIImage","initWithBitmapImageRep:","drawInRect:fromRect:operation:fraction:","drawAtPoint:fromRect:operation:fraction:","setBackgroundColor:","backgroundColor","setDrawsBackground:","drawsBackground","setDocumentView:","documentView","documentRect","setDocumentCursor:","documentCursor","documentVisibleRect","viewFrameChanged:","viewBoundsChanged:","setCopiesOnScroll:","copiesOnScroll","autoscroll:","constrainScrollPoint:","scrollToPoint:","reflectScrolledClipView:","scrollClipView:toPoint:","setDelegate:","delegate","isFirstResponder","setContent:","content","setSelectable:","isSelectable","setAllowsMultipleSelection:","allowsMultipleSelection","setSelectionIndexes:","selectionIndexes","newItemForRepresentedObject:","setItemPrototype:","itemPrototype","setMaxNumberOfRows:","maxNumberOfRows","setMaxNumberOfColumns:","maxNumberOfColumns","setMinItemSize:","minItemSize","setMaxItemSize:","maxItemSize","setBackgroundColors:","backgroundColors","colorWithCalibratedWhite:alpha:","colorWithCalibratedHue:saturation:brightness:alpha:","colorWithCalibratedRed:green:blue:alpha:","colorWithDeviceWhite:alpha:","colorWithDeviceHue:saturation:brightness:alpha:","colorWithDeviceRed:green:blue:alpha:","colorWithDeviceCyan:magenta:yellow:black:alpha:","colorWithCatalogName:colorName:","colorWithColorSpace:components:count:","blackColor","darkGrayColor","lightGrayColor","whiteColor","grayColor","redColor","greenColor","blueColor","cyanColor","yellowColor","magentaColor","orangeColor","purpleColor","brownColor","clearColor","controlShadowColor","controlDarkShadowColor","controlColor","controlHighlightColor","controlLightHighlightColor","controlTextColor","controlBackgroundColor","selectedControlColor","secondarySelectedControlColor","selectedControlTextColor","disabledControlTextColor","textColor","textBackgroundColor","selectedTextColor","selectedTextBackgroundColor","gridColor","keyboardFocusIndicatorColor","windowBackgroundColor","scrollBarColor","knobColor","selectedKnobColor","windowFrameColor","windowFrameTextColor","selectedMenuItemColor","selectedMenuItemTextColor","highlightColor","shadowColor","headerColor","headerTextColor","alternateSelectedControlColor","alternateSelectedControlTextColor","controlAlternatingRowBackgroundColors","highlightWithLevel:","shadowWithLevel:","colorForControlTint:","currentControlTint","set","setFill","setStroke","colorSpaceName","colorUsingColorSpaceName:","colorUsingColorSpaceName:device:","colorUsingColorSpace:","blendedColorWithFraction:ofColor:","colorWithAlphaComponent:","catalogNameComponent","colorNameComponent","localizedCatalogNameComponent","localizedColorNameComponent","redComponent","greenComponent","blueComponent","getRed:green:blue:alpha:","hueComponent","saturationComponent","brightnessComponent","getHue:saturation:brightness:alpha:","whiteComponent","getWhite:alpha:","cyanComponent","magentaComponent","yellowComponent","blackComponent","getCyan:magenta:yellow:black:alpha:","colorSpace","numberOfComponents","getComponents:","alphaComponent","colorFromPasteboard:","writeToPasteboard:","colorWithPatternImage:","patternImage","drawSwatchInRect:","setIgnoresAlpha:","ignoresAlpha","colorWithCIColor:","initWithColor:","decodeNXColor","availableColorLists","colorListNamed:","initWithName:","initWithName:fromFile:","name","setColor:forKey:","insertColor:key:atIndex:","removeColorWithKey:","colorWithKey:","allKeys","isEditable","writeToFile:","removeFile","sharedColorPanel","sharedColorPanelExists","dragColor:withEvent:fromView:","setPickerMask:","setPickerMode:","setAccessoryView:","accessoryView","setContinuous:","isContinuous","setShowsAlpha:","showsAlpha","setMode:","mode","setColor:","color","alpha","setAction:","setTarget:","attachColorList:","detachColorList:","orderFrontColorPanel:","changeColor:","initWithPickerMask:colorPanel:","colorPanel","provideNewButtonImage","insertNewButtonImage:in:","viewSizeChanged:","attachColorList:","detachColorList:","setMode:","buttonToolTip","minContentSize","initWithICCProfileData:","ICCProfileData","numberOfColorComponents","colorSpaceModel","localizedName","genericRGBColorSpace","genericGrayColorSpace","genericCMYKColorSpace","deviceRGBColorSpace","deviceGrayColorSpace","deviceCMYKColorSpace","deactivate","activate:","isActive","drawWellInside:","isBordered","setBordered:","takeColorFrom:","setColor:","color","hasVerticalScroller","setHasVerticalScroller:","intercellSpacing","setIntercellSpacing:","itemHeight","setItemHeight:","numberOfVisibleItems","setNumberOfVisibleItems:","setButtonBordered:","isButtonBordered","reloadData","noteNumberOfItemsChanged","setUsesDataSource:","usesDataSource","scrollItemAtIndexToTop:","scrollItemAtIndexToVisible:","selectItemAtIndex:","deselectItemAtIndex:","indexOfSelectedItem","numberOfItems","completes","setCompletes:","delegate","setDelegate:","dataSource","setDataSource:","addItemWithObjectValue:","addItemsWithObjectValues:","insertItemWithObjectValue:atIndex:","removeItemWithObjectValue:","removeItemAtIndex:","removeAllItems","selectItemWithObjectValue:","itemObjectValueAtIndex:","objectValueOfSelectedItem","indexOfItemWithObjectValue:","objectValues","hasVerticalScroller","setHasVerticalScroller:","intercellSpacing","setIntercellSpacing:","itemHeight","setItemHeight:","numberOfVisibleItems","setNumberOfVisibleItems:","setButtonBordered:","isButtonBordered","reloadData","noteNumberOfItemsChanged","setUsesDataSource:","usesDataSource","scrollItemAtIndexToTop:","scrollItemAtIndexToVisible:","selectItemAtIndex:","deselectItemAtIndex:","indexOfSelectedItem","numberOfItems","completes","setCompletes:","completedString:","dataSource","setDataSource:","addItemWithObjectValue:","addItemsWithObjectValues:","insertItemWithObjectValue:atIndex:","removeItemWithObjectValue:","removeItemAtIndex:","removeAllItems","selectItemWithObjectValue:","itemObjectValueAtIndex:","objectValueOfSelectedItem","indexOfItemWithObjectValue:","objectValues","setCellClass:","cellClass","initWithFrame:","sizeToFit","calcSize","cell","setCell:","selectedCell","target","setTarget:","action","setAction:","tag","setTag:","selectedTag","setIgnoresMultiClick:","ignoresMultiClick","sendActionOn:","isContinuous","setContinuous:","isEnabled","setEnabled:","alignment","setAlignment:","font","setFont:","setFormatter:","formatter","setObjectValue:","setStringValue:","setIntValue:","setFloatValue:","setDoubleValue:","objectValue","stringValue","intValue","floatValue","doubleValue","setNeedsDisplay","updateCell:","updateCellInside:","drawCellInside:","drawCell:","selectCell:","sendAction:to:","takeIntValueFrom:","takeFloatValueFrom:","takeDoubleValueFrom:","takeStringValueFrom:","takeObjectValueFrom:","currentEditor","abortEditing","validateEditing","mouseDown:","baseWritingDirection","setBaseWritingDirection:","performClick:","setRefusesFirstResponder:","refusesFirstResponder","controlTextDidBeginEditing:","controlTextDidEndEditing:","controlTextDidChange:","attributedStringValue","setAttributedStringValue:","objectDidBeginEditing:","objectDidEndEditing:","discardEditing","commitEditing","commitEditingWithDelegate:didCommitSelector:contextInfo:","isEditing","currentCursor","arrowCursor","IBeamCursor","pointingHandCursor","closedHandCursor","openHandCursor","resizeLeftCursor","resizeRightCursor","resizeLeftRightCursor","resizeUpCursor","resizeDownCursor","resizeUpDownCursor","crosshairCursor","disappearingItemCursor","initWithImage:hotSpot:","initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:","hide","unhide","setHiddenUntilMouseMoves:","pop","image","hotSpot","push","pop","set","setOnMouseExited:","setOnMouseEntered:","isSetOnMouseExited","isSetOnMouseEntered","mouseEntered:","mouseExited:","initWithDrawSelector:delegate:","drawSelector","delegate","datePickerStyle","setDatePickerStyle:","isBezeled","setBezeled:","isBordered","setBordered:","drawsBackground","setDrawsBackground:","backgroundColor","setBackgroundColor:","textColor","setTextColor:","datePickerMode","setDatePickerMode:","datePickerElements","setDatePickerElements:","calendar","setCalendar:","locale","setLocale:","timeZone","setTimeZone:","dateValue","setDateValue:","timeInterval","setTimeInterval:","minDate","setMinDate:","maxDate","setMaxDate:","delegate","setDelegate:","datePickerStyle","setDatePickerStyle:","drawsBackground","setDrawsBackground:","backgroundColor","setBackgroundColor:","textColor","setTextColor:","datePickerMode","setDatePickerMode:","datePickerElements","setDatePickerElements:","calendar","setCalendar:","locale","setLocale:","timeZone","setTimeZone:","dateValue","setDateValue:","timeInterval","setTimeInterval:","minDate","setMinDate:","maxDate","setMaxDate:","delegate","setDelegate:","setLocalizedKey:","localizedKey","setKey:","key","setValue:","value","isExplicitlyIncluded","newObject","setInitialKey:","initialKey","setInitialValue:","initialValue","setIncludedKeys:","includedKeys","setExcludedKeys:","excludedKeys","setLocalizedKeyDictionary:","localizedKeyDictionary","setLocalizedKeyTable:","localizedKeyTable","size","setContentView:","contentView","display","setShowsApplicationBadge:","showsApplicationBadge","setBadgeLabel:","badgeLabel","owner","init","initWithType:error:","initWithContentsOfURL:ofType:error:","initForURL:withContentsOfURL:ofType:error:","setFileType:","fileType","setFileURL:","fileURL","setFileModificationDate:","fileModificationDate","revertDocumentToSaved:","revertToContentsOfURL:ofType:error:","readFromURL:ofType:error:","readFromFileWrapper:ofType:error:","readFromData:ofType:error:","writeToURL:ofType:error:","fileWrapperOfType:error:","dataOfType:error:","writeSafelyToURL:ofType:forSaveOperation:error:","writeToURL:ofType:forSaveOperation:originalContentsURL:error:","fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:","keepBackupFile","saveDocument:","saveDocumentAs:","saveDocumentTo:","document:didSave:contextInfo:","saveDocumentWithDelegate:didSaveSelector:contextInfo:","document:didSave:contextInfo:","runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:","shouldRunSavePanelWithAccessoryView","prepareSavePanel:","fileNameExtensionWasHiddenInLastRunSavePanel","fileTypeFromLastRunSavePanel","document:didSave:contextInfo:","saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:","hasUnautosavedChanges","document:didAutosave:contextInfo:","autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:","autosavingFileType","setAutosavedContentsFileURL:","autosavedContentsFileURL","document:shouldClose:contextInfo:","canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:","close","document:didDuplicate:contextInfo:","runPageLayout:","document:didRunPageLayoutAndUserAccepted:contextInfo:","runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:","preparePageLayout:","shouldChangePrintInfo:","setPrintInfo:","printInfo","printDocument:","document:didPrint:contextInfo:","printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:","printOperationWithSettings:error:","document:didRunPrintOperation:contextInfo:","runModalPrintOperation:delegate:didRunSelector:contextInfo:","isDocumentEdited","updateChangeCount:","setUndoManager:","undoManager","setHasUndoManager:","hasUndoManager","presentError:modalForWindow:delegate:didPresentSelector:contextInfo:","presentError:","willPresentError:","makeWindowControllers","windowNibName","windowControllerWillLoadNib:","windowControllerDidLoadNib:","setWindow:","addWindowController:","removeWindowController:","showWindows","windowControllers","document:shouldClose:contextInfo:","shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:","displayName","windowForSheet","readableTypes","writableTypes","isNativeType:","writableTypesForSaveOperation:","validateUserInterfaceItem:","saveToURL:ofType:forSaveOperation:error:","sharedDocumentController","init","documents","currentDocument","currentDirectory","documentForURL:","documentForWindow:","addDocument:","removeDocument:","newDocument:","openUntitledDocumentAndDisplay:error:","makeUntitledDocumentOfType:error:","openDocument:","URLsFromRunningOpenPanel","runModalOpenPanel:forTypes:","makeDocumentWithContentsOfURL:ofType:error:","makeDocumentForURL:withContentsOfURL:ofType:error:","setAutosavingDelay:","autosavingDelay","saveAllDocuments:","hasEditedDocuments","documentController:didReviewAll:contextInfo:","reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:","documentController:didCloseAll:contextInfo:","closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:","presentError:modalForWindow:delegate:didPresentSelector:contextInfo:","presentError:","willPresentError:","maximumRecentDocumentCount","clearRecentDocuments:","noteNewRecentDocument:","noteNewRecentDocumentURL:","recentDocumentURLs","defaultType","typeForContentsOfURL:error:","documentClassNames","documentClassForType:","displayNameForType:","validateUserInterfaceItem:","openDocumentWithContentsOfURL:display:error:","reopenDocumentForURL:withContentsOfURL:error:","lastComponentOfFileName","setLastComponentOfFileName:","handleSaveScriptCommand:","handleCloseScriptCommand:","handlePrintScriptCommand:","objectSpecifier","draggingSourceOperationMaskForLocal:","namesOfPromisedFilesDroppedAtDestination:","draggedImage:beganAt:","draggedImage:endedAt:operation:","draggedImage:movedTo:","ignoreModifierKeysWhileDragging","draggingImageComponentWithKey:","initWithKey:","initWithPasteboardWriter:","setDraggingFrame:contents:","initWithContentSize:preferredEdge:","setParentWindow:","parentWindow","setContentView:","contentView","setPreferredEdge:","preferredEdge","setDelegate:","delegate","open","openOnEdge:","close","open:","close:","toggle:","state","edge","setContentSize:","contentSize","setMinContentSize:","minContentSize","setMaxContentSize:","maxContentSize","setLeadingOffset:","leadingOffset","setTrailingOffset:","trailingOffset","drawers","imageRepWithData:","initWithData:","prepareGState","EPSRepresentation","boundingBox","type","modifierFlags","timestamp","window","windowNumber","context","clickCount","buttonNumber","eventNumber","pressure","locationInWindow","deltaX","deltaY","deltaZ","characters","charactersIgnoringModifiers","isARepeat","keyCode","trackingNumber","userData","subtype","data1","data2","deviceID","rotation","absoluteX","absoluteY","absoluteZ","buttonMask","tilt","tangentialPressure","vendorDefined","vendorID","tabletID","pointingDeviceID","systemTabletID","vendorPointingDeviceType","pointingDeviceSerialNumber","uniqueID","capabilityMask","pointingDeviceType","isEnteringProximity","startPeriodicEventsAfterDelay:withPeriod:","stopPeriodicEvents","mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:","keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:","enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:","otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:","mouseLocation","setIcon:","icon","fontWithName:size:","fontWithName:matrix:","fontWithDescriptor:size:","fontWithDescriptor:textTransform:","userFontOfSize:","userFixedPitchFontOfSize:","setUserFont:","setUserFixedPitchFont:","systemFontOfSize:","boldSystemFontOfSize:","labelFontOfSize:","titleBarFontOfSize:","menuFontOfSize:","menuBarFontOfSize:","messageFontOfSize:","paletteFontOfSize:","toolTipsFontOfSize:","controlContentFontOfSize:","systemFontSize","smallSystemFontSize","labelFontSize","systemFontSizeForControlSize:","fontName","pointSize","matrix","familyName","displayName","fontDescriptor","textTransform","numberOfGlyphs","mostCompatibleStringEncoding","glyphWithName:","coveredCharacterSet","boundingRectForFont","maximumAdvancement","ascender","descender","leading","underlinePosition","underlineThickness","italicAngle","capHeight","xHeight","isFixedPitch","boundingRectForGlyph:","advancementForGlyph:","getBoundingRects:forGlyphs:count:","getAdvancements:forGlyphs:count:","getAdvancements:forPackedGlyphs:length:","set","setInContext:","printerFont","screenFont","screenFontWithRenderingMode:","renderingMode","fontCollectionWithDescriptors:","fontCollectionWithAllAvailableDescriptors","fontCollectionWithLocale:","showFontCollection:withName:visibility:error:","hideFontCollectionWithName:visibility:error:","renameFontCollectionWithName:visibility:toName:error:","allFontCollectionNames","fontCollectionWithName:","fontCollectionWithName:visibility:","queryDescriptors","exclusionDescriptors","matchingDescriptors","matchingDescriptorsWithOptions:","matchingDescriptorsForFamily:","matchingDescriptorsForFamily:options:","setQueryDescriptors:","setExclusionDescriptors:","addQueryForDescriptors:","removeQueryForDescriptors:","postscriptName","pointSize","matrix","symbolicTraits","objectForKey:","fontAttributes","fontDescriptorWithFontAttributes:","fontDescriptorWithName:size:","fontDescriptorWithName:matrix:","initWithFontAttributes:","matchingFontDescriptorsWithMandatoryKeys:","fontDescriptorByAddingAttributes:","fontDescriptorWithSymbolicTraits:","fontDescriptorWithSize:","fontDescriptorWithMatrix:","fontDescriptorWithFace:","fontDescriptorWithFamily:","setFontPanelFactory:","setFontManagerFactory:","sharedFontManager","isMultiple","selectedFont","setSelectedFont:isMultiple:","setFontMenu:","fontMenu:","fontPanel:","fontWithFamily:traits:weight:size:","traitsOfFont:","weightOfFont:","availableFonts","availableFontFamilies","availableMembersOfFontFamily:","convertFont:","convertFont:toSize:","convertFont:toFace:","convertFont:toFamily:","convertFont:toHaveTrait:","convertFont:toNotHaveTrait:","convertWeight:ofFont:","isEnabled","setEnabled:","action","setAction:","sendAction","setDelegate:","delegate","localizedNameForFamily:face:","setSelectedAttributes:isMultiple:","convertAttributes:","availableFontNamesMatchingFontDescriptor:","collectionNames","fontDescriptorsInCollection:","addCollection:options:","removeCollection:","addFontDescriptors:toCollection:","removeFontDescriptor:fromCollection:","fontNamed:hasTraits:","availableFontNamesWithTraits:","addFontTrait:","removeFontTrait:","modifyFontViaPanel:","modifyFont:","orderFrontFontPanel:","orderFrontStylesPanel:","fontManager:willIncludeFont:","changeFont:","validModesForFontPanel:","sharedFontPanel","sharedFontPanelExists","accessoryView","setAccessoryView:","setPanelFont:isMultiple:","panelConvertFont:","worksWhenModal","isEnabled","setEnabled:","reloadDefaultFontFamilies","indexOfSelectedItem","setEntryWidth:","setInterlineSpacing:","setBordered:","setBezeled:","setTitleAlignment:","setTextAlignment:","setTitleFont:","setTextFont:","cellAtIndex:","drawCellAtIndex:","addEntry:","insertEntry:atIndex:","removeEntryAtIndex:","indexOfCellWithTag:","selectTextAtIndex:","setFrameSize:","setTitleBaseWritingDirection:","setTextBaseWritingDirection:","initTextCell:","titleWidth:","titleWidth","setTitleWidth:","title","setTitle:","titleFont","setTitleFont:","titleAlignment","setTitleAlignment:","isOpaque","setPlaceholderString:","placeholderString","setPlaceholderAttributedString:","placeholderAttributedString","titleBaseWritingDirection","setTitleBaseWritingDirection:","setTitleWithMnemonic:","attributedTitle","setAttributedTitle:","generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:","sharedGlyphGenerator","glyphInfoWithGlyphName:forFont:baseString:","glyphInfoWithGlyph:forFont:baseString:","glyphInfoWithCharacterIdentifier:collection:baseString:","glyphName","characterIdentifier","characterCollection","initWithStartingColor:endingColor:","initWithColors:","initWithColors:atLocations:colorSpace:","drawFromPoint:toPoint:options:","drawInRect:angle:","drawInBezierPath:angle:","drawFromCenter:radius:toCenter:radius:options:","drawInRect:relativeCenterPosition:","drawInBezierPath:relativeCenterPosition:","colorSpace","numberOfColorStops","getColor:location:atIndex:","interpolatedColorAtLocation:","graphicsContextWithAttributes:","graphicsContextWithWindow:","graphicsContextWithBitmapImageRep:","graphicsContextWithGraphicsPort:flipped:","currentContext","setCurrentContext:","currentContextDrawingToScreen","saveGraphicsState","restoreGraphicsState","setGraphicsState:","attributes","isDrawingToScreen","saveGraphicsState","restoreGraphicsState","flushGraphics","graphicsPort","isFlipped","setShouldAntialias:","shouldAntialias","setImageInterpolation:","imageInterpolation","setPatternPhase:","patternPhase","setCompositingOperation:","compositingOperation","CIContext","focusStack","setFocusStack:","sharedHelpManager","setContextHelpModeActive:","isContextHelpModeActive","setContextHelp:forObject:","removeContextHelpForObject:","contextHelpForObject:","showContextHelpForObject:locationHint:","openHelpAnchor:inBook:","findString:inBook:","contextHelpForKey:","activateContextHelpMode:","showHelp:","imageNamed:","initWithSize:","initWithData:","initWithContentsOfFile:","initWithContentsOfURL:","initByReferencingFile:","initByReferencingURL:","initWithPasteboard:","setSize:","size","setName:","name","setBackgroundColor:","backgroundColor","setUsesEPSOnResolutionMismatch:","usesEPSOnResolutionMismatch","setPrefersColorMatch:","prefersColorMatch","setMatchesOnMultipleResolution:","matchesOnMultipleResolution","drawAtPoint:fromRect:operation:fraction:","drawInRect:fromRect:operation:fraction:","drawRepresentation:inRect:","recache","TIFFRepresentation","TIFFRepresentationUsingCompression:factor:","representations","addRepresentations:","addRepresentation:","removeRepresentation:","isValid","lockFocus","unlockFocus","setDelegate:","delegate","imageUnfilteredFileTypes","imageUnfilteredPasteboardTypes","imageFileTypes","imagePasteboardTypes","canInitWithPasteboard:","cancelIncrementalLoad","setCacheMode:","cacheMode","pathForImageResource:","setFlipped:","isFlipped","dissolveToPoint:fraction:","dissolveToPoint:fromRect:fraction:","compositeToPoint:operation:","compositeToPoint:fromRect:operation:","compositeToPoint:operation:fraction:","compositeToPoint:fromRect:operation:fraction:","lockFocusOnRepresentation:","setScalesWhenResized:","scalesWhenResized","setDataRetained:","isDataRetained","setCachedSeparately:","isCachedSeparately","setCacheDepthMatchesImageDepth:","cacheDepthMatchesImageDepth","imageAlignment","setImageAlignment:","imageScaling","setImageScaling:","imageFrameStyle","setImageFrameStyle:","draw","drawAtPoint:","drawInRect:","setSize:","size","setAlpha:","hasAlpha","setOpaque:","isOpaque","setColorSpaceName:","colorSpaceName","setBitsPerSample:","bitsPerSample","setPixelsWide:","pixelsWide","setPixelsHigh:","pixelsHigh","registerImageRepClass:","unregisterImageRepClass:","registeredImageRepClasses","imageRepClassForFileType:","imageRepClassForPasteboardType:","imageRepClassForData:","canInitWithData:","imageUnfilteredFileTypes","imageUnfilteredPasteboardTypes","imageFileTypes","imagePasteboardTypes","canInitWithPasteboard:","imageRepsWithContentsOfFile:","imageRepWithContentsOfFile:","imageRepsWithContentsOfURL:","imageRepWithContentsOfURL:","imageRepsWithPasteboard:","imageRepWithPasteboard:","image","setImage:","imageAlignment","setImageAlignment:","imageScaling","setImageScaling:","imageFrameStyle","setImageFrameStyle:","setEditable:","isEditable","setAnimates:","animates","allowsCutCopyPaste","setAllowsCutCopyPaste:","currentInputManager","cycleToNextInputLanguage:","cycleToNextInputServerInLanguage:","markedTextAbandoned:","markedTextSelectionChanged:client:","wantsToHandleMouseEvents","handleMouseEvent:","interfaceStyle","setInterfaceStyle:","exposeBinding:","exposedBindings","valueClassForBinding:","bind:toObject:withKeyPath:options:","unbind:","infoForBinding:","setDefaultPlaceholder:forMarker:withBinding:","defaultPlaceholderForMarker:withBinding:","objectDidBeginEditing:","objectDidEndEditing:","discardEditing","commitEditing","editor:didCommit:contextInfo:","commitEditingWithDelegate:didCommitSelector:contextInfo:","constraintsWithVisualFormat:options:metrics:views:","constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:","anchorAttributeForOrientation:","setAnchorAttribute:forOrientation:","init","textStorage","setTextStorage:","attributedString","replaceTextStorage:","glyphGenerator","setGlyphGenerator:","typesetter","setTypesetter:","delegate","setDelegate:","textContainers","addTextContainer:","insertTextContainer:atIndex:","removeTextContainerAtIndex:","textContainerChangedGeometry:","textContainerChangedTextView:","setBackgroundLayoutEnabled:","backgroundLayoutEnabled","setUsesScreenFonts:","usesScreenFonts","setShowsInvisibleCharacters:","showsInvisibleCharacters","setShowsControlCharacters:","showsControlCharacters","setHyphenationFactor:","hyphenationFactor","setDefaultAttachmentScaling:","defaultAttachmentScaling","setTypesetterBehavior:","typesetterBehavior","layoutOptions","invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:","invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:","invalidateDisplayForCharacterRange:","invalidateDisplayForGlyphRange:","textStorage:edited:range:changeInLength:invalidatedRange:","insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:","insertGlyph:atGlyphIndex:characterIndex:","replaceGlyphAtIndex:withGlyph:","deleteGlyphsInRange:","setCharacterIndex:forGlyphAtIndex:","setIntAttribute:value:forGlyphAtIndex:","numberOfGlyphs","glyphAtIndex:isValidIndex:","glyphAtIndex:","isValidGlyphIndex:","characterIndexForGlyphAtIndex:","intAttribute:forGlyphAtIndex:","getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:","getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:","getGlyphs:range:","setTextContainer:forGlyphRange:","setLineFragmentRect:forGlyphRange:usedRect:","setExtraLineFragmentRect:usedRect:textContainer:","setLocation:forStartOfGlyphRange:","setNotShownAttribute:forGlyphAtIndex:","setDrawsOutsideLineFragment:forGlyphAtIndex:","setAttachmentSize:forGlyphRange:","getFirstUnlaidCharacterIndex:glyphIndex:","firstUnlaidCharacterIndex","firstUnlaidGlyphIndex","textContainerForGlyphAtIndex:effectiveRange:","usedRectForTextContainer:","lineFragmentRectForGlyphAtIndex:effectiveRange:","lineFragmentUsedRectForGlyphAtIndex:effectiveRange:","lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:","lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:","textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:","extraLineFragmentRect","extraLineFragmentUsedRect","extraLineFragmentTextContainer","locationForGlyphAtIndex:","notShownAttributeForGlyphAtIndex:","drawsOutsideLineFragmentForGlyphAtIndex:","attachmentSizeForGlyphAtIndex:","setLayoutRect:forTextBlock:glyphRange:","setBoundsRect:forTextBlock:glyphRange:","layoutRectForTextBlock:glyphRange:","boundsRectForTextBlock:glyphRange:","layoutRectForTextBlock:atIndex:effectiveRange:","boundsRectForTextBlock:atIndex:effectiveRange:","glyphRangeForCharacterRange:actualCharacterRange:","characterRangeForGlyphRange:actualGlyphRange:","glyphRangeForTextContainer:","rangeOfNominallySpacedGlyphsContainingIndex:","rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:","rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:","boundingRectForGlyphRange:inTextContainer:","glyphRangeForBoundingRect:inTextContainer:","glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:","glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:","glyphIndexForPoint:inTextContainer:","fractionOfDistanceThroughGlyphForPoint:inTextContainer:","temporaryAttributesAtCharacterIndex:effectiveRange:","setTemporaryAttributes:forCharacterRange:","addTemporaryAttributes:forCharacterRange:","removeTemporaryAttribute:forCharacterRange:","substituteFontForFont:","defaultLineHeightForFont:","defaultBaselineOffsetForFont:","usesFontLeading","setUsesFontLeading:","rulerMarkersForTextView:paragraphStyle:ruler:","rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:","layoutManagerOwnsFirstResponderInWindow:","firstTextView","textViewForBeginningOfSelection","drawBackgroundForGlyphRange:atPoint:","drawGlyphsForGlyphRange:atPoint:","showAttachmentCell:inRect:characterIndex:","drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:","underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:","drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:","strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:","minValue","setMinValue:","maxValue","setMaxValue:","warningValue","setWarningValue:","criticalValue","setCriticalValue:","tickMarkPosition","setTickMarkPosition:","numberOfTickMarks","setNumberOfTickMarks:","numberOfMajorTickMarks","setNumberOfMajorTickMarks:","tickMarkValueAtIndex:","rectOfTickMarkAtIndex:","initWithLevelIndicatorStyle:","levelIndicatorStyle","setLevelIndicatorStyle:","minValue","setMinValue:","maxValue","setMaxValue:","warningValue","setWarningValue:","criticalValue","setCriticalValue:","setTickMarkPosition:","tickMarkPosition","setNumberOfTickMarks:","numberOfTickMarks","setNumberOfMajorTickMarks:","numberOfMajorTickMarks","rectOfTickMarkAtIndex:","tickMarkValueAtIndex:","setImage:","initWithFrame:","initWithFrame:mode:prototype:numberOfRows:numberOfColumns:","initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:","setCellClass:","cellClass","prototype","setPrototype:","makeCellAtRow:column:","mode","setMode:","setAllowsEmptySelection:","allowsEmptySelection","sendAction:to:forAllCells:","cells","sortUsingSelector:","selectedCell","selectedCells","selectedRow","selectedColumn","setSelectionByRect:","isSelectionByRect","setSelectionFrom:to:anchor:highlight:","deselectSelectedCell","deselectAllCells","selectCellAtRow:column:","selectAll:","selectCellWithTag:","cellSize","setCellSize:","intercellSpacing","setIntercellSpacing:","setScrollable:","setBackgroundColor:","backgroundColor","setCellBackgroundColor:","cellBackgroundColor","setDrawsCellBackground:","drawsCellBackground","setDrawsBackground:","drawsBackground","setState:atRow:column:","getNumberOfRows:columns:","numberOfRows","numberOfColumns","cellAtRow:column:","cellFrameAtRow:column:","getRow:column:ofCell:","getRow:column:forPoint:","renewRows:columns:","putCell:atRow:column:","addRow","addRowWithCells:","insertRow:","insertRow:withCells:","removeRow:","addColumn","addColumnWithCells:","insertColumn:","insertColumn:withCells:","removeColumn:","cellWithTag:","doubleAction","setDoubleAction:","setAutosizesCells:","autosizesCells","sizeToCells","setValidateSize:","drawCellAtRow:column:","highlightCell:atRow:column:","setAutoscroll:","isAutoscroll","scrollCellToVisibleAtRow:column:","mouseDownFlags","mouseDown:","performKeyEquivalent:","sendAction","sendDoubleAction","delegate","setDelegate:","textShouldBeginEditing:","textShouldEndEditing:","textDidBeginEditing:","textDidEndEditing:","textDidChange:","selectText:","selectTextAtRow:column:","acceptsFirstMouse:","resetCursorRects","setToolTip:forCell:","toolTipForCell:","setTabKeyTraversesCells:","tabKeyTraversesCells","setKeyCell:","keyCell","initWithTitle:","setTitle:","title","popUpContextMenu:withEvent:forView:","popUpContextMenu:withEvent:forView:withFont:","setMenuBarVisible:","menuBarVisible","supermenu","setSupermenu:","insertItem:atIndex:","addItem:","insertItemWithTitle:action:keyEquivalent:atIndex:","addItemWithTitle:action:keyEquivalent:","removeItemAtIndex:","removeItem:","setSubmenu:forItem:","itemArray","numberOfItems","itemAtIndex:","indexOfItem:","indexOfItemWithTitle:","indexOfItemWithTag:","indexOfItemWithRepresentedObject:","indexOfItemWithSubmenu:","indexOfItemWithTarget:andAction:","itemWithTitle:","itemWithTag:","setAutoenablesItems:","autoenablesItems","update","performKeyEquivalent:","itemChanged:","performActionForItemAtIndex:","setDelegate:","delegate","menuBarHeight","menuZone","setMenuChangedMessagesEnabled:","menuChangedMessagesEnabled","helpRequested:","isTornOff","submenuAction:","validateMenuItem:","setUsesUserKeyEquivalents:","usesUserKeyEquivalents","separatorItem","initWithTitle:action:keyEquivalent:","setMenu:","menu","hasSubmenu","setSubmenu:","submenu","setTitle:","title","setAttributedTitle:","attributedTitle","isSeparatorItem","setKeyEquivalent:","keyEquivalent","setKeyEquivalentModifierMask:","keyEquivalentModifierMask","userKeyEquivalent","setTitleWithMnemonic:","setImage:","image","setState:","state","setOnStateImage:","onStateImage","setOffStateImage:","offStateImage","setMixedStateImage:","mixedStateImage","setEnabled:","isEnabled","setAlternate:","isAlternate","setIndentationLevel:","indentationLevel","setTarget:","target","setAction:","action","setTag:","tag","setRepresentedObject:","representedObject","setToolTip:","toolTip","setMenuItem:","menuItem","setMenuView:","menuView","setNeedsSizing:","needsSizing","calcSize","setNeedsDisplay:","needsDisplay","stateImageWidth","imageWidth","titleWidth","keyEquivalentWidth","stateImageRectForBounds:","titleRectForBounds:","keyEquivalentRectForBounds:","drawSeparatorItemWithFrame:inView:","drawStateImageWithFrame:inView:","drawImageWithFrame:inView:","drawTitleWithFrame:inView:","drawKeyEquivalentWithFrame:inView:","drawBorderAndBackgroundWithFrame:inView:","tag","menuBarHeight","initWithFrame:","initAsTearOff","setMenu:","menu","itemChanged:","itemAdded:","itemRemoved:","update","setHorizontal:","isHorizontal","setFont:","font","innerRect","rectOfItemAtIndex:","indexOfItemAtPoint:","setNeedsDisplayForItemAtIndex:","setHighlightedItemIndex:","highlightedItemIndex","stateImageOffset","stateImageWidth","imageAndTitleOffset","imageAndTitleWidth","keyEquivalentOffset","keyEquivalentWidth","setMenuItemCell:forItemAtIndex:","menuItemCellForItemAtIndex:","attachedMenuView","setNeedsSizing:","needsSizing","sizeToFit","attachedMenu","isAttached","isTornOff","locationForSubmenu:","setWindowFrameForAttachingToRect:onScreen:preferredEdge:popUpSelectedItem:","detachSubmenu","attachSubmenuForItemAtIndex:","performActionWithHighlightingForItemAtIndex:","trackWithEvent:","horizontalEdgePadding","setHorizontalEdgePadding:","initWithMovie:","QTMovie","initWithContentsOfURL:","initWithNibNamed:bundle:","instantiateNibWithExternalNameTable:","instantiateNibWithOwner:topLevelObjects:","source","setSource:","destination","setDestination:","label","setLabel:","replaceObject:withObject:","establishConnection","establishConnection","loadNibFile:externalNameTable:withZone:","loadNibNamed:owner:","loadNibFile:externalNameTable:withZone:","awakeFromNib","establishConnection","initWithContent:","setContent:","content","selection","selectedObjects","setAutomaticallyPreparesContent:","automaticallyPreparesContent","prepareContent","setObjectClass:","objectClass","newObject","addObject:","removeObject:","setEditable:","isEditable","add:","canAdd","remove:","canRemove","validateUserInterfaceItem:","managedObjectContext","setManagedObjectContext:","entityName","setEntityName:","fetchPredicate","setFetchPredicate:","fetchWithRequest:merge:error:","fetch:","initWithAttributes:","initWithData:","attributes","setAttributes:","getValues:forAttribute:forVirtualScreen:","numberOfVirtualScreens","CGLPixelFormatObj","initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:","pixelsWide","pixelsHigh","textureTarget","textureInternalFormat","textureMaxMipMapLevel","initWithFormat:shareContext:","setView:","view","setFullScreen","setOffScreen:width:height:rowbytes:","clearDrawable","update","flushBuffer","makeCurrentContext","clearCurrentContext","currentContext","copyAttributesFromContext:withMask:","setValues:forParameter:","getValues:forParameter:","setCurrentVirtualScreen:","currentVirtualScreen","createTexture:fromView:internalFormat:","CGLContextObj","setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:","pixelBuffer","pixelBufferCubeMapFace","pixelBufferMipMapLevel","setTextureImageToPixelBuffer:colorBuffer:","openGLContextForPixelFormat:","canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:","drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:","defaultPixelFormat","initWithFrame:pixelFormat:","setOpenGLContext:","openGLContext","clearGLContext","update","reshape","setPixelFormat:","pixelFormat","prepareOpenGL","openPanel","URLs","resolvesAliases","setResolvesAliases:","canChooseDirectories","setCanChooseDirectories:","allowsMultipleSelection","setAllowsMultipleSelection:","canChooseFiles","setCanChooseFiles:","setDelegate:","delegate","setDataSource:","dataSource","setOutlineTableColumn:","outlineTableColumn","isExpandable:","expandItem:expandChildren:","expandItem:","collapseItem:collapseChildren:","collapseItem:","reloadItem:reloadChildren:","reloadItem:","parentForItem:","itemAtRow:","rowForItem:","levelForItem:","levelForRow:","isItemExpanded:","setIndentationPerLevel:","indentationPerLevel","setIndentationMarkerFollowsCell:","indentationMarkerFollowsCell","setAutoresizesOutlineColumn:","autoresizesOutlineColumn","setDropItem:dropChildIndex:","shouldCollapseAutoExpandedItemsForDeposited:","autosaveExpandedItems","setAutosaveExpandedItems:","pageLayout","pageLayoutDidEnd:returnCode:contextInfo:","beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:","runModalWithPrintInfo:","runModal","printInfo","runPageLayout:","isFloatingPanel","setFloatingPanel:","becomesKeyOnlyIfNeeded","setBecomesKeyOnlyIfNeeded:","worksWhenModal","setWorksWhenModal:","initWithTextAlignment:location:options:","alignment","options","initWithType:location:","location","tabStopType","defaultParagraphStyle","defaultWritingDirectionForLanguage:","lineSpacing","paragraphSpacing","alignment","headIndent","tailIndent","firstLineHeadIndent","tabStops","minimumLineHeight","maximumLineHeight","lineBreakMode","baseWritingDirection","lineHeightMultiple","paragraphSpacingBefore","defaultTabInterval","textBlocks","textLists","hyphenationFactor","tighteningFactorForTruncation","headerLevel","setLineSpacing:","setParagraphSpacing:","setAlignment:","setFirstLineHeadIndent:","setHeadIndent:","setTailIndent:","setLineBreakMode:","setMinimumLineHeight:","setMaximumLineHeight:","addTabStop:","removeTabStop:","setTabStops:","setParagraphStyle:","setBaseWritingDirection:","setLineHeightMultiple:","setParagraphSpacingBefore:","setDefaultTabInterval:","setTextBlocks:","setTextLists:","setHyphenationFactor:","setTighteningFactorForTruncation:","setHeaderLevel:","generalPasteboard","pasteboardWithName:","pasteboardWithUniqueName","name","changeCount","releaseGlobally","declareTypes:owner:","addTypes:owner:","types","availableTypeFromArray:","setData:forType:","setPropertyList:forType:","setString:forType:","dataForType:","propertyListForType:","stringForType:","typesFilterableTo:","pasteboardByFilteringFile:","pasteboardByFilteringData:ofType:","pasteboardByFilteringTypesInPasteboard:","pasteboard:provideDataForType:","pasteboardChangedOwner:","URLFromPasteboard:","writeToPasteboard:","writeFileContents:","readFileContentsType:toFile:","writeFileWrapper:","readFileWrapper","types","availableTypeFromArray:","setDataProvider:forTypes:","setData:forType:","setString:forType:","setPropertyList:forType:","dataForType:","stringForType:","propertyListForType:","pathStyle","setPathStyle:","URL","setURL:","setObjectValue:","allowedTypes","setAllowedTypes:","delegate","setDelegate:","pathComponentCellClass","pathComponentCells","setPathComponentCells:","rectOfPathComponentCell:withFrame:inView:","pathComponentCellAtPoint:withFrame:inView:","clickedPathComponentCell","mouseEntered:withFrame:inView:","mouseExited:withFrame:inView:","doubleAction","setDoubleAction:","setBackgroundColor:","backgroundColor","setPlaceholderString:","placeholderString","setPlaceholderAttributedString:","placeholderAttributedString","setControlSize:","image","setImage:","URL","setURL:","URL","setURL:","doubleAction","setDoubleAction:","pathStyle","setPathStyle:","clickedPathComponentCell","pathComponentCells","setPathComponentCells:","setBackgroundColor:","backgroundColor","delegate","setDelegate:","setDraggingSourceOperationMask:forLocal:","setMenu:","menu","imageRepWithData:","initWithData:","PDFRepresentation","bounds","setCurrentPage:","currentPage","pageCount","managedObjectContext","setManagedObjectContext:","managedObjectModel","persistentStoreTypeForFileType:","writeToURL:ofType:forSaveOperation:originalContentsURL:error:","readFromURL:ofType:error:","revertToContentsOfURL:ofType:error:","imageRepWithData:","initWithData:","PICTRepresentation","boundingBox","showRelativeToRect:ofView:preferredEdge:","performClose:","close","initWithFrame:pullsDown:","setMenu:","menu","setPullsDown:","pullsDown","setAutoenablesItems:","autoenablesItems","setPreferredEdge:","preferredEdge","addItemWithTitle:","addItemsWithTitles:","insertItemWithTitle:atIndex:","removeItemWithTitle:","removeItemAtIndex:","removeAllItems","itemArray","numberOfItems","indexOfItem:","indexOfItemWithTitle:","indexOfItemWithTag:","indexOfItemWithRepresentedObject:","indexOfItemWithTarget:andAction:","itemAtIndex:","itemWithTitle:","lastItem","selectItem:","selectItemAtIndex:","selectItemWithTitle:","selectItemWithTag:","setTitle:","selectedItem","indexOfSelectedItem","synchronizeTitleAndSelectedItem","itemTitleAtIndex:","itemTitles","titleOfSelectedItem","initTextCell:pullsDown:","setMenu:","menu","setPullsDown:","pullsDown","setAutoenablesItems:","autoenablesItems","setPreferredEdge:","preferredEdge","setUsesItemFromMenu:","usesItemFromMenu","setAltersStateOfSelectedItem:","altersStateOfSelectedItem","addItemWithTitle:","addItemsWithTitles:","insertItemWithTitle:atIndex:","removeItemWithTitle:","removeItemAtIndex:","removeAllItems","itemArray","numberOfItems","indexOfItem:","indexOfItemWithTitle:","indexOfItemWithTag:","indexOfItemWithRepresentedObject:","indexOfItemWithTarget:andAction:","itemAtIndex:","itemWithTitle:","lastItem","selectItem:","selectItemAtIndex:","selectItemWithTitle:","selectItemWithTag:","setTitle:","selectedItem","indexOfSelectedItem","synchronizeTitleAndSelectedItem","itemTitleAtIndex:","itemTitles","titleOfSelectedItem","attachPopUpWithFrame:inView:","dismissPopUp","performClickWithFrame:inView:","arrowPosition","setArrowPosition:","objectValue","setObjectValue:","setRowTemplates:","rowTemplates","matchForPredicate:","templateViews","setPredicate:","predicateWithSubpredicates:","displayableSubpredicatesOfPredicate:","initWithLeftExpressions:rightExpressions:modifier:operators:options:","initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:","initWithCompoundTypes:","leftExpressions","rightExpressions","rightExpressionAttributeType","modifier","operators","options","compoundTypes","templatesWithAttributeKeyPaths:inEntityDescription:","printerNames","printerTypes","printerWithName:","printerWithType:","name","type","languageLevel","pageSizeForPaper:","statusForTable:","isKey:inTable:","booleanForKey:inTable:","floatForKey:inTable:","intForKey:inTable:","rectForKey:inTable:","sizeForKey:inTable:","stringForKey:inTable:","stringListForKey:inTable:","deviceDescription","setSharedPrintInfo:","sharedPrintInfo","initWithDictionary:","dictionary","setPaperName:","setPaperSize:","setOrientation:","paperName","paperSize","orientation","setLeftMargin:","setRightMargin:","setTopMargin:","setBottomMargin:","leftMargin","rightMargin","topMargin","bottomMargin","setHorizontallyCentered:","setVerticallyCentered:","isHorizontallyCentered","isVerticallyCentered","setHorizontalPagination:","setVerticalPagination:","horizontalPagination","verticalPagination","setJobDisposition:","jobDisposition","setPrinter:","printer","setUpPrintOperationDefaultValues","imageablePageBounds","localizedPaperName","defaultPrinter","printOperationWithView:printInfo:","PDFOperationWithView:insideRect:toData:printInfo:","PDFOperationWithView:insideRect:toPath:printInfo:","EPSOperationWithView:insideRect:toData:printInfo:","EPSOperationWithView:insideRect:toPath:printInfo:","printOperationWithView:","PDFOperationWithView:insideRect:toData:","EPSOperationWithView:insideRect:toData:","currentOperation","setCurrentOperation:","isCopyingOperation","setShowsPrintPanel:","showsPrintPanel","setShowsProgressPanel:","showsProgressPanel","setPrintPanel:","printPanel","setCanSpawnSeparateThread:","canSpawnSeparateThread","setPageOrder:","pageOrder","printOperationDidRun:success:contextInfo:","runOperationModalForWindow:delegate:didRunSelector:contextInfo:","runOperation","view","printInfo","setPrintInfo:","context","currentPage","createContext","destroyContext","deliverResult","cleanUpOperation","printPanel","setJobStyleHint:","jobStyleHint","printPanelDidEnd:returnCode:contextInfo:","beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:","runModal","isIndeterminate","setIndeterminate:","isBezeled","setBezeled:","controlTint","setControlTint:","controlSize","setControlSize:","doubleValue","setDoubleValue:","incrementBy:","minValue","maxValue","setMinValue:","setMaxValue:","usesThreadedAnimation","setUsesThreadedAnimation:","startAnimation:","stopAnimation:","setStyle:","style","sizeToFit","isDisplayedWhenStopped","setDisplayedWhenStopped:","nextResponder","setNextResponder:","tryToPerform:with:","performKeyEquivalent:","validRequestorForSendType:returnType:","mouseDown:","rightMouseDown:","otherMouseDown:","mouseUp:","rightMouseUp:","otherMouseUp:","mouseMoved:","mouseDragged:","scrollWheel:","rightMouseDragged:","otherMouseDragged:","mouseEntered:","mouseExited:","keyDown:","keyUp:","flagsChanged:","tabletPoint:","tabletProximity:","noResponderFor:","acceptsFirstResponder","becomeFirstResponder","resignFirstResponder","interpretKeyEvents:","flushBufferedKeyEvents","setMenu:","menu","showContextHelp:","helpRequested:","shouldBeTreatedAsInkEvent:","performMnemonic:","insertText:","doCommandBySelector:","moveForward:","moveRight:","moveBackward:","moveLeft:","moveUp:","moveDown:","moveWordForward:","moveWordBackward:","moveToBeginningOfLine:","moveToEndOfLine:","moveToBeginningOfParagraph:","moveToEndOfParagraph:","moveToEndOfDocument:","moveToBeginningOfDocument:","pageDown:","pageUp:","centerSelectionInVisibleArea:","moveBackwardAndModifySelection:","moveForwardAndModifySelection:","moveWordForwardAndModifySelection:","moveWordBackwardAndModifySelection:","moveUpAndModifySelection:","moveDownAndModifySelection:","moveToBeginningOfLineAndModifySelection:","moveToEndOfLineAndModifySelection:","moveToBeginningOfParagraphAndModifySelection:","moveToEndOfParagraphAndModifySelection:","moveToEndOfDocumentAndModifySelection:","moveToBeginningOfDocumentAndModifySelection:","pageDownAndModifySelection:","pageUpAndModifySelection:","moveParagraphForwardAndModifySelection:","moveParagraphBackwardAndModifySelection:","moveWordRight:","moveWordLeft:","moveRightAndModifySelection:","moveLeftAndModifySelection:","moveWordRightAndModifySelection:","moveWordLeftAndModifySelection:","scrollPageUp:","scrollPageDown:","scrollLineUp:","scrollLineDown:","scrollToBeginningOfDocument:","scrollToEndOfDocument:","transpose:","transposeWords:","selectAll:","selectParagraph:","selectLine:","selectWord:","indent:","insertTab:","insertBacktab:","insertNewline:","insertParagraphSeparator:","insertNewlineIgnoringFieldEditor:","insertTabIgnoringFieldEditor:","insertLineBreak:","insertContainerBreak:","changeCaseOfLetter:","uppercaseWord:","lowercaseWord:","capitalizeWord:","deleteForward:","deleteBackward:","deleteBackwardByDecomposingPreviousCharacter:","deleteWordForward:","deleteWordBackward:","deleteToBeginningOfLine:","deleteToEndOfLine:","deleteToBeginningOfParagraph:","deleteToEndOfParagraph:","yank:","complete:","setMark:","deleteToMark:","selectToMark:","swapWithMark:","cancelOperation:","undoManager","didPresentErrorWithRecovery:contextInfo:","presentError:modalForWindow:delegate:didPresentSelector:contextInfo:","presentError:","willPresentError:","setDelegate:","delegate","setFormattingStringsFilename:","formattingStringsFilename","setFormattingDictionary:","formattingDictionary","reloadCriteria","setNestingMode:","nestingMode","setRowHeight:","rowHeight","setEditable:","isEditable","setCanRemoveAllRows:","canRemoveAllRows","predicate","reloadPredicate","predicateForRow:","numberOfRows","subrowIndexesForRow:","criteriaForRow:","displayValuesForRow:","rowForDisplayValue:","rowTypeForRow:","parentRowForRow:","addRow:","insertRowAtIndex:withType:asSubrowOfRow:animate:","setCriteria:andDisplayValues:forRowAtIndex:","removeRowAtIndex:","removeRowsAtIndexes:includeSubrows:","selectedRowIndexes","selectRowIndexes:byExtendingSelection:","setRowClass:","rowClass","setRowTypeKeyPath:","rowTypeKeyPath","setSubrowsKeyPath:","subrowsKeyPath","setCriteriaKeyPath:","criteriaKeyPath","setDisplayValuesKeyPath:","displayValuesKeyPath","initWithRulerView:markerLocation:image:imageOrigin:","ruler","setMarkerLocation:","markerLocation","setImage:","image","setImageOrigin:","imageOrigin","setMovable:","setRemovable:","isMovable","isRemovable","isDragging","setRepresentedObject:","representedObject","imageRectInRuler","thicknessRequiredInRuler","drawRect:","trackMouse:adding:","registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:","initWithScrollView:orientation:","setScrollView:","scrollView","setOrientation:","orientation","baselineLocation","requiredThickness","setRuleThickness:","ruleThickness","setReservedThicknessForMarkers:","reservedThicknessForMarkers","setReservedThicknessForAccessoryView:","reservedThicknessForAccessoryView","setMeasurementUnits:","measurementUnits","setOriginOffset:","originOffset","setClientView:","clientView","setMarkers:","addMarker:","removeMarker:","markers","trackMarker:withMouseEvent:","setAccessoryView:","accessoryView","moveRulerlineFromLocation:toLocation:","invalidateHashMarks","drawHashMarksAndLabelsInRect:","drawMarkersInRect:","isFlipped","rulerView:shouldMoveMarker:","rulerView:willMoveMarker:toLocation:","rulerView:didMoveMarker:","rulerView:shouldRemoveMarker:","rulerView:didRemoveMarker:","rulerView:shouldAddMarker:","rulerView:willAddMarker:atLocation:","rulerView:didAddMarker:","rulerView:handleMouseDown:","rulerView:willSetClientView:","hide","unhide","activateWithOptions:","terminate","forceTerminate","runningApplicationsWithBundleIdentifier:","currentApplication","terminateAutomaticallyTerminableApplications","savePanel","URL","allowedFileTypes","setAllowedFileTypes:","allowsOtherFileTypes","setAllowsOtherFileTypes:","accessoryView","setAccessoryView:","delegate","setDelegate:","isExpanded","canCreateDirectories","setCanCreateDirectories:","canSelectHiddenExtension","setCanSelectHiddenExtension:","isExtensionHidden","setExtensionHidden:","treatsFilePackagesAsDirectories","setTreatsFilePackagesAsDirectories:","prompt","setPrompt:","title","setTitle:","nameFieldLabel","setNameFieldLabel:","message","setMessage:","validateVisibleColumns","showsHiddenFiles","setShowsHiddenFiles:","ok:","cancel:","runModal","panel:isValidFilename:","panel:directoryDidChange:","panel:compareFilename:with:caseSensitive:","panel:shouldShowFilename:","screens","mainScreen","deepestScreen","depth","frame","visibleFrame","deviceDescription","supportedWindowDepths","userSpaceScaleFactor","scrollerWidthForControlSize:","scrollerWidth","rectForPart:","checkSpaceForParts","usableParts","setArrowsPosition:","arrowsPosition","setControlTint:","controlTint","setControlSize:","controlSize","drawArrow:highlight:","drawKnob","drawKnobSlotInRect:highlight:","highlight:","testPart:","trackKnob:","trackScrollButtons:","hitPart","knobProportion","frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:","contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:","documentVisibleRect","contentSize","setDocumentView:","documentView","setContentView:","contentView","setDocumentCursor:","documentCursor","setBorderType:","borderType","setBackgroundColor:","backgroundColor","setDrawsBackground:","drawsBackground","setHasVerticalScroller:","hasVerticalScroller","setHasHorizontalScroller:","hasHorizontalScroller","setVerticalScroller:","verticalScroller","setHorizontalScroller:","horizontalScroller","autohidesScrollers","setAutohidesScrollers:","setHorizontalLineScroll:","setVerticalLineScroll:","setLineScroll:","horizontalLineScroll","verticalLineScroll","lineScroll","setHorizontalPageScroll:","setVerticalPageScroll:","setPageScroll:","horizontalPageScroll","verticalPageScroll","pageScroll","setScrollsDynamically:","scrollsDynamically","tile","reflectScrolledClipView:","scrollWheel:","setRulerViewClass:","rulerViewClass","setRulersVisible:","rulersVisible","setHasHorizontalRuler:","hasHorizontalRuler","setHasVerticalRuler:","hasVerticalRuler","setHorizontalRulerView:","horizontalRulerView","setVerticalRulerView:","verticalRulerView","setRecentSearches:","recentSearches","setRecentsAutosaveName:","recentsAutosaveName","searchButtonCell","setSearchButtonCell:","cancelButtonCell","setCancelButtonCell:","resetSearchButtonCell","resetCancelButtonCell","searchTextRectForBounds:","searchButtonRectForBounds:","cancelButtonRectForBounds:","setSearchMenuTemplate:","searchMenuTemplate","setSendsWholeSearchString:","sendsWholeSearchString","setMaximumRecents:","maximumRecents","setRecentSearches:","recentSearches","setRecentsAutosaveName:","recentsAutosaveName","sendsSearchStringImmediately","setSendsSearchStringImmediately:","setEchosBullets:","echosBullets","setSegmentCount:","segmentCount","setSelectedSegment:","selectedSegment","selectSegmentWithTag:","makeNextSegmentKey","makePreviousSegmentKey","setTrackingMode:","trackingMode","setWidth:forSegment:","widthForSegment:","setImage:forSegment:","imageForSegment:","setLabel:forSegment:","labelForSegment:","setSelected:forSegment:","isSelectedForSegment:","setEnabled:forSegment:","isEnabledForSegment:","setMenu:forSegment:","menuForSegment:","setToolTip:forSegment:","toolTipForSegment:","setTag:forSegment:","tagForSegment:","drawSegment:inFrame:withView:","setSegmentCount:","segmentCount","setSelectedSegment:","selectedSegment","selectSegmentWithTag:","setWidth:forSegment:","widthForSegment:","setImage:forSegment:","imageForSegment:","setLabel:forSegment:","labelForSegment:","setMenu:forSegment:","menuForSegment:","setSelected:forSegment:","isSelectedForSegment:","setEnabled:forSegment:","isEnabledForSegment:","init","shadowOffset","setShadowOffset:","shadowBlurRadius","setShadowBlurRadius:","shadowColor","setShadowColor:","set","sharedInstance","currentLayoutManager","currentContainer","currentParagraphStyle","currentTextStorage","baseOfTypesetterGlyphInfo","sizeOfTypesetterGlyphInfo","capacityOfTypesetterGlyphInfo","firstGlyphIndexOfCurrentLineFragment","layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:","layoutGlyphsInHorizontalLineFragment:baseline:","clearGlyphCache","fillAttributesCache","clearAttributesCache","growGlyphCaches:fillGlyphInfo:","updateCurGlyphOffset","insertGlyph:atGlyphIndex:characterIndex:","layoutControlGlyphForLineFragment:","layoutTab","breakLineAtIndex:","glyphIndexToBreakLineByHyphenatingWordAtIndex:","glyphIndexToBreakLineByWordWrappingAtIndex:","layoutTab","layoutControlGlyphForLineFragment:","fullJustifyLineAtGlyphIndex:","typesetterLaidOneGlyph:","willSetLineFragmentRect:forGlyphRange:usedRect:","minValue","setMinValue:","maxValue","setMaxValue:","setAltIncrementValue:","altIncrementValue","setTitleCell:","titleCell","setTitleColor:","titleColor","setTitleFont:","titleFont","title","setTitle:","setKnobThickness:","knobThickness","setImage:","image","isVertical","acceptsFirstMouse:","setNumberOfTickMarks:","numberOfTickMarks","setTickMarkPosition:","tickMarkPosition","setAllowsTickMarkValuesOnly:","allowsTickMarkValuesOnly","tickMarkValueAtIndex:","rectOfTickMarkAtIndex:","indexOfTickMarkAtPoint:","closestTickMarkValueToValue:","prefersTrackingUntilMouseUp","minValue","setMinValue:","maxValue","setMaxValue:","setAltIncrementValue:","altIncrementValue","isVertical","setTitleColor:","titleColor","setTitleFont:","titleFont","title","setTitle:","setTitleCell:","titleCell","setKnobThickness:","knobThickness","knobRectFlipped:","drawKnob:","drawKnob","drawBarInside:flipped:","trackRect","setSliderType:","sliderType","setNumberOfTickMarks:","numberOfTickMarks","setTickMarkPosition:","tickMarkPosition","setAllowsTickMarkValuesOnly:","allowsTickMarkValuesOnly","tickMarkValueAtIndex:","rectOfTickMarkAtIndex:","indexOfTickMarkAtPoint:","closestTickMarkValueToValue:","soundNamed:","initWithContentsOfURL:byReference:","initWithContentsOfFile:byReference:","initWithData:","setName:","name","canInitWithPasteboard:","initWithPasteboard:","writeToPasteboard:","play","pause","resume","stop","isPlaying","delegate","setDelegate:","pathForSoundResource:","init","startListening","stopListening","delegate","setDelegate:","commands","setCommands:","displayedCommandsTitle","setDisplayedCommandsTitle:","listensInForegroundOnly","setListensInForegroundOnly:","blocksOtherRecognizers","setBlocksOtherRecognizers:","initWithVoice:","startSpeakingString:","startSpeakingString:toURL:","isSpeaking","stopSpeaking","delegate","setDelegate:","voice","setVoice:","usesFeedbackWindow","setUsesFeedbackWindow:","isAnyApplicationSpeaking","defaultVoice","availableVoices","attributesForVoice:","sharedSpellChecker","sharedSpellCheckerExists","uniqueSpellDocumentTag","checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:","checkSpellingOfString:startingAt:","countWordsInString:language:","updateSpellingPanelWithMisspelledWord:","spellingPanel","accessoryView","setAccessoryView:","ignoreWord:inSpellDocumentWithTag:","ignoredWordsInSpellDocumentWithTag:","setIgnoredWords:inSpellDocumentWithTag:","completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:","closeSpellDocumentWithTag:","setWordFieldStringValue:","learnWord:","language","setLanguage:","guessesForWord:","setVertical:","isVertical","setDelegate:","delegate","drawDividerInRect:","dividerThickness","adjustSubviews","isSubviewCollapsed:","systemStatusBar","statusItemWithLength:","removeStatusItem:","isVertical","thickness","statusBar","length","setLength:","action","setAction:","doubleAction","setDoubleAction:","target","setTarget:","title","setTitle:","attributedTitle","setAttributedTitle:","image","setImage:","alternateImage","setAlternateImage:","menu","setMenu:","isEnabled","setEnabled:","toolTip","setToolTip:","setHighlightMode:","highlightMode","sendActionOn:","popUpStatusItemMenu:","drawStatusBarBackgroundInRect:withHighlight:","view","setView:","minValue","setMinValue:","maxValue","setMaxValue:","increment","setIncrement:","valueWraps","setValueWraps:","autorepeat","setAutorepeat:","minValue","setMinValue:","maxValue","setMaxValue:","increment","setIncrement:","valueWraps","setValueWraps:","autorepeat","setAutorepeat:","sizeWithAttributes:","drawAtPoint:withAttributes:","drawInRect:withAttributes:","size","drawAtPoint:","drawInRect:","drawWithRect:options:attributes:","boundingRectWithSize:options:attributes:","drawWithRect:options:","boundingRectWithSize:options:","initWithIdentifier:","setIdentifier:","identifier","setTableView:","tableView","setWidth:","width","setMinWidth:","minWidth","setMaxWidth:","maxWidth","setHeaderCell:","headerCell","setDataCell:","dataCell","dataCellForRow:","setEditable:","isEditable","sizeToFit","setSortDescriptorPrototype:","sortDescriptorPrototype","setResizingMask:","resizingMask","drawSortIndicatorWithFrame:inView:ascending:priority:","sortIndicatorRectForBounds:","setTableView:","tableView","draggedColumn","draggedDistance","resizedColumn","headerRectOfColumn:","columnAtPoint:","drawBackgroundInRect:","drawSelectionInRect:","drawSeparatorInRect:","drawDraggingDestinationFeedbackInRect:","viewAtColumn:","setDataSource:","dataSource","setDelegate:","delegate","setHeaderView:","headerView","setCornerView:","cornerView","setAllowsColumnReordering:","allowsColumnReordering","setAllowsColumnResizing:","allowsColumnResizing","setColumnAutoresizingStyle:","columnAutoresizingStyle","setGridStyleMask:","gridStyleMask","setIntercellSpacing:","intercellSpacing","setUsesAlternatingRowBackgroundColors:","usesAlternatingRowBackgroundColors","setBackgroundColor:","backgroundColor","setGridColor:","gridColor","setRowHeight:","rowHeight","noteHeightOfRowsWithIndexesChanged:","tableColumns","numberOfColumns","numberOfRows","addTableColumn:","removeTableColumn:","moveColumn:toColumn:","columnWithIdentifier:","tableColumnWithIdentifier:","tile","sizeToFit","sizeLastColumnToFit","scrollRowToVisible:","scrollColumnToVisible:","reloadData","noteNumberOfRowsChanged","editedColumn","editedRow","clickedColumn","clickedRow","setDoubleAction:","doubleAction","setSortDescriptors:","sortDescriptors","setIndicatorImage:inTableColumn:","indicatorImageInTableColumn:","setHighlightedTableColumn:","highlightedTableColumn","setVerticalMotionCanBeginDrag:","verticalMotionCanBeginDrag","canDragRowsWithIndexes:atPoint:","dragImageForRowsWithIndexes:tableColumns:event:offset:","setDraggingSourceOperationMask:forLocal:","setDropRow:dropOperation:","setAllowsMultipleSelection:","allowsMultipleSelection","setAllowsEmptySelection:","allowsEmptySelection","setAllowsColumnSelection:","allowsColumnSelection","selectAll:","deselectAll:","selectColumnIndexes:byExtendingSelection:","selectRowIndexes:byExtendingSelection:","selectedColumnIndexes","selectedRowIndexes","deselectColumn:","deselectRow:","selectedColumn","selectedRow","isColumnSelected:","isRowSelected:","numberOfSelectedColumns","numberOfSelectedRows","rectOfColumn:","rectOfRow:","rowsInRect:","columnAtPoint:","rowAtPoint:","frameOfCellAtColumn:row:","textShouldBeginEditing:","textShouldEndEditing:","textDidBeginEditing:","textDidEndEditing:","textDidChange:","setAutosaveName:","autosaveName","setAutosaveTableColumns:","autosaveTableColumns","editWithFrame:inView:editor:delegate:event:","selectWithFrame:inView:editor:delegate:start:length:","editColumn:row:withEvent:select:","drawRow:clipRect:","highlightSelectionInClipRect:","drawGridInClipRect:","drawBackgroundInClipRect:","selectTabViewItem:","selectTabViewItemAtIndex:","selectTabViewItemWithIdentifier:","takeSelectedTabViewItemFromSender:","selectFirstTabViewItem:","selectLastTabViewItem:","selectNextTabViewItem:","selectPreviousTabViewItem:","selectedTabViewItem","font","tabViewType","tabViewItems","allowsTruncatedLabels","minimumSize","drawsBackground","controlTint","controlSize","setFont:","setTabViewType:","setAllowsTruncatedLabels:","setDrawsBackground:","setControlTint:","setControlSize:","addTabViewItem:","insertTabViewItem:atIndex:","removeTabViewItem:","setDelegate:","delegate","tabViewItemAtPoint:","contentRect","numberOfTabViewItems","indexOfTabViewItem:","tabViewItemAtIndex:","indexOfTabViewItemWithIdentifier:","initWithIdentifier:","identifier","view","initialFirstResponder","label","color","tabState","tabView","setIdentifier:","setLabel:","setColor:","setView:","setInitialFirstResponder:","drawLabel:inRect:","sizeOfLabel:","string","setString:","replaceCharactersInRange:withString:","replaceCharactersInRange:withRTF:","replaceCharactersInRange:withRTFD:","RTFFromRange:","RTFDFromRange:","writeRTFDToFile:atomically:","readRTFDFromFile:","delegate","setDelegate:","isEditable","setEditable:","isSelectable","setSelectable:","isRichText","setRichText:","importsGraphics","setImportsGraphics:","isFieldEditor","setFieldEditor:","usesFontPanel","setUsesFontPanel:","drawsBackground","setDrawsBackground:","backgroundColor","setBackgroundColor:","isRulerVisible","selectedRange","setSelectedRange:","scrollRangeToVisible:","setFont:","font","setTextColor:","textColor","alignment","setAlignment:","baseWritingDirection","setBaseWritingDirection:","setTextColor:range:","setFont:range:","maxSize","setMaxSize:","minSize","setMinSize:","isHorizontallyResizable","setHorizontallyResizable:","isVerticallyResizable","setVerticallyResizable:","sizeToFit","copy:","copyFont:","copyRuler:","cut:","delete:","paste:","pasteFont:","pasteRuler:","selectAll:","changeFont:","alignLeft:","alignRight:","alignCenter:","subscript:","superscript:","underline:","unscript:","showGuessPanel:","checkSpelling:","toggleRuler:","initWithFileWrapper:","setFileWrapper:","fileWrapper","attachmentCell","setAttachmentCell:","attributedStringWithAttachment:","updateAttachmentsFromPath:","initWithContainerSize:","layoutManager","setLayoutManager:","replaceLayoutManager:","textView","setTextView:","setWidthTracksTextView:","widthTracksTextView","setHeightTracksTextView:","heightTracksTextView","setContainerSize:","containerSize","setLineFragmentPadding:","lineFragmentPadding","lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:","isSimpleRectangularTextContainer","containsPoint:","setBackgroundColor:","backgroundColor","setDrawsBackground:","drawsBackground","setTextColor:","textColor","isBordered","setBordered:","isBezeled","setBezeled:","isEditable","setEditable:","isSelectable","setSelectable:","selectText:","delegate","setDelegate:","textShouldBeginEditing:","textShouldEndEditing:","textDidBeginEditing:","textDidEndEditing:","textDidChange:","acceptsFirstResponder","setBezelStyle:","bezelStyle","setTitleWithMnemonic:","allowsEditingTextAttributes","setAllowsEditingTextAttributes:","importsGraphics","setImportsGraphics:","setBackgroundColor:","backgroundColor","setDrawsBackground:","drawsBackground","setTextColor:","textColor","setUpFieldEditorAttributes:","setBezelStyle:","bezelStyle","setPlaceholderString:","placeholderString","setPlaceholderAttributedString:","placeholderAttributedString","init","performAction:","validateAction:","cancelFindIndicator","drawIncrementalMatchHighlightInRect:","noteClientStringWillChange","currentInputContext","initWithClient:","activate","deactivate","handleEvent:","discardMarkedText","invalidateCharacterCoordinates","localizedNameForInputSource:","initWithMarkerFormat:options:","markerFormat","listOptions","markerForItemNumber:","addLayoutManager:","removeLayoutManager:","layoutManagers","edited:range:changeInLength:","processEditing","invalidateAttributesInRange:","ensureAttributesAreFixedInRange:","fixesAttributesLazily","editedMask","editedRange","changeInLength","setDelegate:","delegate","attributeRuns","setAttributeRuns:","paragraphs","setParagraphs:","words","setWords:","characters","setCharacters:","font","setFont:","foregroundColor","setForegroundColor:","init","setValue:type:forDimension:","valueForDimension:","valueTypeForDimension:","setContentWidth:type:","contentWidth","contentWidthValueType","setWidth:type:forLayer:edge:","setWidth:type:forLayer:","widthForLayer:edge:","widthValueTypeForLayer:edge:","setVerticalAlignment:","verticalAlignment","setBackgroundColor:","backgroundColor","setBorderColor:forEdge:","setBorderColor:","borderColorForEdge:","rectForLayoutAtPoint:inRect:textContainer:characterRange:","boundsRectForContentRect:inRect:textContainer:characterRange:","drawBackgroundWithFrame:inView:characterRange:layoutManager:","initWithTable:startingRow:rowSpan:startingColumn:columnSpan:","table","startingRow","rowSpan","startingColumn","columnSpan","numberOfColumns","setNumberOfColumns:","layoutAlgorithm","setLayoutAlgorithm:","collapsesBorders","setCollapsesBorders:","hidesEmptyCells","setHidesEmptyCells:","rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:","boundsRectForBlock:contentRect:inRect:textContainer:characterRange:","drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:","initWithFrame:textContainer:","initWithFrame:","textContainer","setTextContainer:","replaceTextContainer:","setTextContainerInset:","textContainerInset","textContainerOrigin","invalidateTextContainerOrigin","layoutManager","textStorage","insertText:","setConstrainedFrameSize:","setAlignment:range:","setBaseWritingDirection:range:","turnOffKerning:","tightenKerning:","loosenKerning:","useStandardKerning:","turnOffLigatures:","useStandardLigatures:","useAllLigatures:","raiseBaseline:","lowerBaseline:","toggleTraditionalCharacterShape:","outline:","performFindPanelAction:","alignJustified:","changeColor:","changeAttributes:","changeDocumentBackgroundColor:","orderFrontSpacingPanel:","orderFrontLinkPanel:","orderFrontListPanel:","orderFrontTablePanel:","rulerView:didMoveMarker:","rulerView:didRemoveMarker:","rulerView:didAddMarker:","rulerView:shouldMoveMarker:","rulerView:shouldAddMarker:","rulerView:willMoveMarker:toLocation:","rulerView:shouldRemoveMarker:","rulerView:willAddMarker:atLocation:","rulerView:handleMouseDown:","setNeedsDisplayInRect:avoidAdditionalLayout:","shouldDrawInsertionPoint","drawInsertionPointInRect:color:turnedOn:","drawViewBackgroundInRect:","updateRuler","updateFontPanel","updateDragTypeRegistration","selectionRangeForProposedRange:granularity:","clickedOnLink:atIndex:","startSpeaking:","stopSpeaking:","complete:","rangeForUserCompletion","completionsForPartialWordRange:indexOfSelectedItem:","insertCompletion:forPartialWordRange:movement:isFinal:","writablePasteboardTypes","writeSelectionToPasteboard:type:","writeSelectionToPasteboard:types:","readablePasteboardTypes","preferredPasteboardTypeFromArray:restrictedToTypesFromArray:","readSelectionFromPasteboard:type:","readSelectionFromPasteboard:","registerForServices","validRequestorForSendType:returnType:","pasteAsPlainText:","pasteAsRichText:","dragSelectionWithEvent:offset:slideBack:","dragImageForSelectionWithEvent:origin:","acceptableDragTypes","dragOperationForDraggingInfo:type:","cleanUpAfterDragOperation","selectedRanges","setSelectedRanges:affinity:stillSelecting:","setSelectedRanges:","setSelectedRange:affinity:stillSelecting:","selectionAffinity","selectionGranularity","setSelectionGranularity:","setSelectedTextAttributes:","selectedTextAttributes","setInsertionPointColor:","insertionPointColor","updateInsertionPointStateAndRestartTimer:","setMarkedTextAttributes:","markedTextAttributes","setLinkTextAttributes:","linkTextAttributes","acceptsGlyphInfo","setAcceptsGlyphInfo:","setRulerVisible:","usesRuler","setUsesRuler:","setContinuousSpellCheckingEnabled:","isContinuousSpellCheckingEnabled","toggleContinuousSpellChecking:","spellCheckerDocumentTag","typingAttributes","setTypingAttributes:","shouldChangeTextInRanges:replacementStrings:","rangesForUserTextChange","rangesForUserCharacterAttributeChange","rangesForUserParagraphAttributeChange","shouldChangeTextInRange:replacementString:","didChangeText","rangeForUserTextChange","rangeForUserCharacterAttributeChange","rangeForUserParagraphAttributeChange","setAllowsDocumentBackgroundColorChange:","allowsDocumentBackgroundColorChange","setDefaultParagraphStyle:","defaultParagraphStyle","setAllowsUndo:","allowsUndo","breakUndoCoalescing","delegate","setDelegate:","isEditable","setEditable:","isSelectable","setSelectable:","isRichText","setRichText:","importsGraphics","setImportsGraphics:","drawsBackground","setDrawsBackground:","backgroundColor","setBackgroundColor:","isFieldEditor","setFieldEditor:","usesFontPanel","setUsesFontPanel:","isRulerVisible","setSelectedRange:","smartInsertDeleteEnabled","setSmartInsertDeleteEnabled:","smartDeleteRangeForProposedRange:","toggleSmartInsertDelete:","smartInsertForString:replacingRange:beforeString:afterString:","smartInsertBeforeStringForString:replacingRange:","smartInsertAfterStringForString:replacingRange:","setUsesFindPanel:","usesFindPanel","toggleBaseWritingDirection:","setDelegate:","delegate","setTokenStyle:","tokenStyle","setCompletionDelay:","completionDelay","defaultCompletionDelay","setTokenizingCharacterSet:","tokenizingCharacterSet","defaultTokenizingCharacterSet","setTokenStyle:","tokenStyle","setCompletionDelay:","completionDelay","defaultCompletionDelay","setTokenizingCharacterSet:","tokenizingCharacterSet","defaultTokenizingCharacterSet","setDelegate:","delegate","initWithIdentifier:","insertItemWithItemIdentifier:atIndex:","removeItemAtIndex:","setDelegate:","delegate","setVisible:","isVisible","runCustomizationPalette:","customizationPaletteIsRunning","setDisplayMode:","displayMode","setSelectedItemIdentifier:","selectedItemIdentifier","setSizeMode:","sizeMode","setShowsBaselineSeparator:","showsBaselineSeparator","setAllowsUserCustomization:","allowsUserCustomization","identifier","items","visibleItems","setAutosavesConfiguration:","autosavesConfiguration","setConfigurationFromDictionary:","configurationDictionary","validateVisibleItems","initWithItemIdentifier:","itemIdentifier","toolbar","setLabel:","label","setPaletteLabel:","paletteLabel","setToolTip:","toolTip","setMenuFormRepresentation:","menuFormRepresentation","setTag:","tag","setTarget:","target","setAction:","action","setEnabled:","isEnabled","setImage:","image","setView:","view","setMinSize:","minSize","setMaxSize:","maxSize","setVisibilityPriority:","visibilityPriority","validate","setAutovalidates:","autovalidates","allowsDuplicatesInToolbar","validateToolbarItem:","setSubitems:","subitems","initWithRect:options:owner:userInfo:","rect","options","owner","userInfo","rearrangeObjects","arrangedObjects","setChildrenKeyPath:","childrenKeyPath","setCountKeyPath:","countKeyPath","setLeafKeyPath:","leafKeyPath","setSortDescriptors:","sortDescriptors","content","setContent:","add:","remove:","addChild:","insert:","insertChild:","canInsert","canInsertChild","canAddChild","insertObject:atArrangedObjectIndexPath:","insertObjects:atArrangedObjectIndexPaths:","removeObjectAtArrangedObjectIndexPath:","removeObjectsAtArrangedObjectIndexPaths:","setAvoidsEmptySelection:","avoidsEmptySelection","setPreservesSelection:","preservesSelection","setSelectsInsertedObjects:","selectsInsertedObjects","setAlwaysUsesMultipleValuesMarker:","alwaysUsesMultipleValuesMarker","selectedObjects","setSelectionIndexPaths:","selectionIndexPaths","setSelectionIndexPath:","selectionIndexPath","addSelectionIndexPaths:","removeSelectionIndexPaths:","treeNodeWithRepresentedObject:","initWithRepresentedObject:","representedObject","indexPath","isLeaf","childNodes","mutableChildNodes","descendantNodeAtIndexPath:","parentNode","sortWithSortDescriptors:recursively:","usesFontLeading","setUsesFontLeading:","typesetterBehavior","setTypesetterBehavior:","hyphenationFactor","setHyphenationFactor:","lineFragmentPadding","setLineFragmentPadding:","substituteFontForFont:","textTabForGlyphLocation:writingDirection:maxLocation:","bidiProcessingEnabled","setBidiProcessingEnabled:","setAttributedString:","attributedString","setParagraphGlyphRange:separatorGlyphRange:","paragraphGlyphRange","paragraphSeparatorGlyphRange","paragraphCharacterRange","paragraphSeparatorCharacterRange","layoutParagraphAtPoint:","beginParagraph","endParagraph","beginLineWithGlyphAtIndex:","endLineWithGlyphRange:","lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:","paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:","paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:","getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:","attributesForExtraLineFragment","actionForControlCharacterAtIndex:","layoutManager","textContainers","currentTextContainer","currentParagraphStyle","setHardInvalidation:forGlyphRange:","layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:","printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:","baselineOffsetInLayoutManager:glyphIndex:","sharedSystemTypesetter","sharedSystemTypesetterForBehavior:","defaultTypesetterBehavior","willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:","shouldBreakLineByWordBeforeCharacterAtIndex:","shouldBreakLineByHyphenatingBeforeCharacterAtIndex:","hyphenationFactorForGlyphAtIndex:","hyphenCharacterForGlyphAtIndex:","boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:","characterRangeForGlyphRange:actualGlyphRange:","glyphRangeForCharacterRange:actualCharacterRange:","getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:","getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:","setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:","substituteGlyphsInRange:withGlyphs:","insertGlyph:atGlyphIndex:characterIndex:","deleteGlyphsInRange:","setNotShownAttribute:forGlyphRange:","setDrawsOutsideLineFragment:forGlyphRange:","setLocation:withAdvancements:forStartOfGlyphRange:","setAttachmentSize:forGlyphRange:","sharedUserDefaultsController","initWithDefaults:initialValues:","defaults","setInitialValues:","initialValues","setAppliesImmediately:","appliesImmediately","hasUnappliedChanges","values","revert:","save:","revertToInitialValues:","initWithFrame:","window","superview","subviews","isDescendantOf:","ancestorSharedWithView:","opaqueAncestor","setHidden:","isHidden","isHiddenOrHasHiddenAncestor","getRectsBeingDrawn:count:","needsToDrawRect:","wantsDefaultClipping","addSubview:","addSubview:positioned:relativeTo:","viewWillMoveToWindow:","viewDidMoveToWindow","viewWillMoveToSuperview:","viewDidMoveToSuperview","didAddSubview:","willRemoveSubview:","removeFromSuperview","replaceSubview:with:","removeFromSuperviewWithoutNeedingDisplay","setPostsFrameChangedNotifications:","postsFrameChangedNotifications","resizeSubviewsWithOldSize:","resizeWithOldSuperviewSize:","setAutoresizesSubviews:","autoresizesSubviews","setAutoresizingMask:","autoresizingMask","setFrameOrigin:","setFrameSize:","setFrame:","frame","setFrameRotation:","frameRotation","setBoundsOrigin:","setBoundsSize:","setBoundsRotation:","boundsRotation","translateOriginToPoint:","scaleUnitSquareToSize:","rotateByAngle:","setBounds:","bounds","isFlipped","isRotatedFromBase","isRotatedOrScaledFromBase","isOpaque","convertPoint:fromView:","convertPoint:toView:","convertSize:fromView:","convertSize:toView:","convertRect:fromView:","convertRect:toView:","centerScanRect:","canDraw","setNeedsDisplay:","setNeedsDisplayInRect:","needsDisplay","lockFocus","unlockFocus","lockFocusIfCanDraw","lockFocusIfCanDrawInContext:","focusView","visibleRect","display","displayIfNeeded","displayIfNeededIgnoringOpacity","displayRect:","displayIfNeededInRect:","displayRectIgnoringOpacity:","displayIfNeededInRectIgnoringOpacity:","drawRect:","displayRectIgnoringOpacity:inContext:","bitmapImageRepForCachingDisplayInRect:","cacheDisplayInRect:toBitmapImageRep:","gState","allocateGState","releaseGState","setUpGState","renewGState","scrollPoint:","scrollRectToVisible:","autoscroll:","adjustScroll:","scrollRect:by:","hitTest:","mouse:inRect:","viewWithTag:","tag","performKeyEquivalent:","acceptsFirstMouse:","shouldDelayWindowOrderingForEvent:","needsPanelToBecomeKey","mouseDownCanMoveWindow","addCursorRect:cursor:","removeCursorRect:cursor:","discardCursorRects","resetCursorRects","addTrackingRect:owner:userData:assumeInside:","removeTrackingRect:","shouldDrawColor","setPostsBoundsChangedNotifications:","postsBoundsChangedNotifications","enclosingScrollView","menuForEvent:","defaultMenu","setToolTip:","toolTip","addToolTipRect:owner:userData:","removeToolTip:","removeAllToolTips","viewWillStartLiveResize","viewDidEndLiveResize","inLiveResize","preservesContentDuringLiveResize","rectPreservedDuringLiveResize","getRectsExposedDuringLiveResize:count:","view:stringForToolTip:point:userData:","performMnemonic:","setNextKeyView:","nextKeyView","previousKeyView","nextValidKeyView","previousValidKeyView","canBecomeKeyView","setKeyboardFocusRingNeedsDisplayInRect:","setFocusRingType:","focusRingType","defaultFocusRingType","writeEPSInsideRect:toPasteboard:","dataWithEPSInsideRect:","writePDFInsideRect:toPasteboard:","dataWithPDFInsideRect:","print:","knowsPageRange:","heightAdjustLimit","widthAdjustLimit","adjustPageWidthNew:left:right:limit:","adjustPageHeightNew:top:bottom:limit:","rectForPage:","locationOfPrintRect:","drawPageBorderWithSize:","pageHeader","pageFooter","drawSheetBorderWithSize:","printJobTitle","beginDocument","endDocument","beginPageInRect:atPlacement:","endPage","dragImage:at:offset:event:pasteboard:source:slideBack:","registeredDraggedTypes","registerForDraggedTypes:","unregisterDraggedTypes","dragFile:fromRect:slideBack:event:","dragPromisedFilesOfTypes:fromRect:source:slideBack:event:","initWithNibName:bundle:","setRepresentedObject:","representedObject","setTitle:","title","view","loadView","nibName","nibBundle","setView:","commitEditingWithDelegate:didCommitSelector:contextInfo:","commitEditing","discardEditing","frameRectForContentRect:styleMask:","contentRectForFrameRect:styleMask:","minFrameWidthWithTitle:styleMask:","defaultDepthLimit","frameRectForContentRect:","contentRectForFrameRect:","initWithContentRect:styleMask:backing:defer:","initWithContentRect:styleMask:backing:defer:screen:","title","setTitle:","representedFilename","setRepresentedFilename:","setTitleWithRepresentedFilename:","setExcludedFromWindowsMenu:","isExcludedFromWindowsMenu","setContentView:","contentView","setDelegate:","delegate","windowNumber","styleMask","fieldEditor:forObject:","endEditingFor:","constrainFrameRect:toScreen:","setFrame:display:","setContentSize:","setFrameOrigin:","setFrameTopLeftPoint:","cascadeTopLeftFromPoint:","frame","animationResizeTime:","setFrame:display:animate:","setShowsResizeIndicator:","showsResizeIndicator","setResizeIncrements:","resizeIncrements","setAspectRatio:","aspectRatio","setContentResizeIncrements:","contentResizeIncrements","setContentAspectRatio:","contentAspectRatio","useOptimizedDrawing:","disableFlushWindow","enableFlushWindow","isFlushWindowDisabled","flushWindow","flushWindowIfNeeded","setViewsNeedDisplay:","viewsNeedDisplay","displayIfNeeded","display","setAutodisplay:","isAutodisplay","preservesContentDuringLiveResize","setPreservesContentDuringLiveResize:","update","makeFirstResponder:","firstResponder","resizeFlags","keyDown:","close","setReleasedWhenClosed:","isReleasedWhenClosed","miniaturize:","deminiaturize:","isZoomed","zoom:","isMiniaturized","tryToPerform:with:","validRequestorForSendType:returnType:","setBackgroundColor:","backgroundColor","setMovableByWindowBackground:","isMovableByWindowBackground","setHidesOnDeactivate:","hidesOnDeactivate","setCanHide:","canHide","center","makeKeyAndOrderFront:","orderFront:","orderBack:","orderOut:","orderWindow:relativeTo:","orderFrontRegardless","setMiniwindowImage:","setMiniwindowTitle:","miniwindowImage","miniwindowTitle","setDocumentEdited:","isDocumentEdited","isVisible","isKeyWindow","isMainWindow","canBecomeKeyWindow","canBecomeMainWindow","makeKeyWindow","makeMainWindow","becomeKeyWindow","resignKeyWindow","becomeMainWindow","resignMainWindow","worksWhenModal","convertBaseToScreen:","convertScreenToBase:","performClose:","performMiniaturize:","performZoom:","gState","setOneShot:","isOneShot","dataWithEPSInsideRect:","dataWithPDFInsideRect:","print:","disableCursorRects","enableCursorRects","discardCursorRects","areCursorRectsEnabled","invalidateCursorRectsForView:","resetCursorRects","setAllowsToolTipsWhenApplicationIsInactive:","allowsToolTipsWhenApplicationIsInactive","setBackingType:","backingType","setLevel:","level","setDepthLimit:","depthLimit","setDynamicDepthLimit:","hasDynamicDepthLimit","screen","deepestScreen","canStoreColor","setHasShadow:","hasShadow","invalidateShadow","setAlphaValue:","alphaValue","setOpaque:","isOpaque","displaysWhenScreenProfileChanges","setDisplaysWhenScreenProfileChanges:","disableScreenUpdatesUntilFlush","stringWithSavedFrame","setFrameFromString:","saveFrameUsingName:","setFrameUsingName:force:","setFrameUsingName:","setFrameAutosaveName:","frameAutosaveName","removeFrameUsingName:","cacheImageInRect:","restoreCachedImage","discardCachedImage","minSize","maxSize","setMinSize:","setMaxSize:","contentMinSize","contentMaxSize","setContentMinSize:","setContentMaxSize:","nextEventMatchingMask:","nextEventMatchingMask:untilDate:inMode:dequeue:","discardEventsMatchingMask:beforeEvent:","postEvent:atStart:","currentEvent","setAcceptsMouseMovedEvents:","acceptsMouseMovedEvents","setIgnoresMouseEvents:","ignoresMouseEvents","deviceDescription","sendEvent:","mouseLocationOutsideOfEventStream","menuChanged:","windowController","setWindowController:","isSheet","attachedSheet","standardWindowButton:forStyleMask:","standardWindowButton:","addChildWindow:ordered:","removeChildWindow:","childWindows","parentWindow","setParentWindow:","graphicsContext","userSpaceScaleFactor","setInitialFirstResponder:","initialFirstResponder","selectNextKeyView:","selectPreviousKeyView:","selectKeyViewFollowingView:","selectKeyViewPrecedingView:","keyViewSelectionDirection","setDefaultButtonCell:","defaultButtonCell","disableKeyEquivalentForDefaultButtonCell","enableKeyEquivalentForDefaultButtonCell","setAutorecalculatesKeyViewLoop:","autorecalculatesKeyViewLoop","recalculateKeyViewLoop","setToolbar:","toolbar","toggleToolbarShown:","runToolbarCustomizationPalette:","setShowsToolbarButton:","showsToolbarButton","dragImage:at:offset:event:pasteboard:source:slideBack:","registerForDraggedTypes:","unregisterDraggedTypes","initWithWindow:","initWithWindowNibName:","initWithWindowNibName:owner:","initWithWindowNibPath:owner:","windowNibName","windowNibPath","owner","setWindowFrameAutosaveName:","windowFrameAutosaveName","setShouldCascadeWindows:","shouldCascadeWindows","document","setDocument:","setDocumentEdited:","setShouldCloseDocument:","shouldCloseDocument","setWindow:","window","synchronizeWindowTitleWithDocumentName","windowTitleForDocumentDisplayName:","close","showWindow:","isWindowLoaded","windowWillLoad","windowDidLoad","loadWindow","disableSnapshotRestoration","enableSnapshotRestoration","hasCloseBox","hasTitleBar","isFloatingPanel","isMiniaturizable","isModalPanel","isResizable","isZoomable","orderedIndex","setIsMiniaturized:","setIsVisible:","setIsZoomed:","setOrderedIndex:","handleCloseScriptCommand:","handlePrintScriptCommand:","handleSaveScriptCommand:","sharedWorkspace","notificationCenter","openFile:","openFile:withApplication:","openFile:withApplication:andDeactivate:","openFile:fromImage:at:inView:","openURL:","launchApplication:","launchApplication:showIcon:autolaunch:","fullPathForApplication:","selectFile:inFileViewerRootedAtPath:","noteFileSystemChanged:","getInfoForFile:application:type:","isFilePackageAtPath:","iconForFile:","iconForFiles:","iconForFileType:","setIcon:forFile:options:","getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:","performFileOperation:source:destination:files:tag:","unmountAndEjectDeviceAtPath:","extendPowerOffBy:","hideOtherApplications","absolutePathForAppBundleWithIdentifier:","launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:","openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:","activeApplication","mountedLocalVolumePaths","mountedRemovableMedia","pluginDidLoad:","initWithDefinition:fromArchive:","stop","reset","writeToDictionary:","opened","activated","updateParameters","parametersUpdated","isStopped","script","setScript:","initWithDefinition:fromArchive:","awakeFromBundle","hasView","view","bundle","parameters","setParameters:","remapLineEndings","inputFieldSeparator","outputFieldSeparator","runWorkflowAtURL:withInput:error:","initWithContentsOfURL:error:","writeToURL:error:","setValue:forVariableWithName:","valueForVariableWithName:","addAction:","removeAction:","insertAction:atIndex:","moveActionAtIndex:toIndex:","workflow","setWorkflow:","workflowView","setWorkflowView:","delegate","setDelegate:","canRun","isRunning","run:","stop:","isPaused","pause:","step:","reset:","workflowControllerWillRun:","workflowControllerWillStop:","workflowControllerDidRun:","workflowControllerDidStop:","workflowController:willRunAction:","workflowController:didRunAction:","workflowController:didError:","isEditable","setEditable:","assetWithURL:","cancelLoading","trackWithTrackID:","tracksWithMediaType:","tracksWithMediaCharacteristic:","metadataForFormat:","URLAssetWithURL:options:","initWithURL:options:","compatibleTrackForCompositionTrack:","allExportPresets","exportPresetsCompatibleWithAsset:","initWithAsset:presetName:","exportAsynchronouslyWithCompletionHandler:","cancelExport","assetImageGeneratorWithAsset:","initWithAsset:","copyCGImageAtTime:actualTime:error:","generateCGImagesAsynchronouslyForTimes:completionHandler:","cancelAllCGImageGeneration","assetReaderWithAsset:error:","initWithAsset:error:","canAddOutput:","addOutput:","startReading","cancelReading","copyNextSampleBuffer","assetReaderTrackOutputWithTrack:outputSettings:","initWithTrack:outputSettings:","assetReaderAudioMixOutputWithAudioTracks:audioSettings:","initWithAudioTracks:audioSettings:","assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:","initWithVideoTracks:videoSettings:","hasMediaCharacteristic:","segmentForTrackTime:","samplePresentationTimeForTrackTime:","metadataForFormat:","assetWriterWithURL:fileType:error:","initWithURL:fileType:error:","canApplyOutputSettings:forMediaType:","canAddInput:","addInput:","startWriting","startSessionAtSourceTime:","endSessionAtSourceTime:","cancelWriting","finishWriting","assetWriterInputWithMediaType:outputSettings:","initWithMediaType:outputSettings:","appendSampleBuffer:","markAsFinished","assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:","initWithAssetWriterInput:sourcePixelBufferAttributes:","appendPixelBuffer:withPresentationTime:","audioMix","getVolumeRampForTime:startVolume:endVolume:timeRange:","audioMixInputParametersWithTrack:","audioMixInputParameters","setVolumeRampFromStartVolume:toEndVolume:timeRange:","setVolume:atTime:","initWithContentsOfURL:error:","initWithData:error:","prepareToPlay","play","pause","stop","updateMeters","peakPowerForChannel:","averagePowerForChannel:","initWithURL:settings:error:","prepareToRecord","record","recordForDuration:","pause","stop","deleteRecording","updateMeters","peakPowerForChannel:","averagePowerForChannel:","devices","devicesWithMediaType:","defaultDeviceWithMediaType:","deviceWithUniqueID:","hasMediaType:","lockForConfiguration:","unlockForConfiguration","supportsAVCaptureSessionPreset:","isFlashModeSupported:","isTorchModeSupported:","isFocusModeSupported:","isExposureModeSupported:","isWhiteBalanceModeSupported:","deviceInputWithDevice:error:","initWithDevice:error:","initWithDisplayID:","startRecordingToOutputFileURL:recordingDelegate:","stopRecording","availableOutputFileTypes","startRecordingToOutputFileURL:outputFileType:recordingDelegate:","jpegStillImageNSDataRepresentation:","canSetSessionPreset:","canAddInput:","addInput:","removeInput:","canAddOutput:","addOutput:","removeOutput:","beginConfiguration","commitConfiguration","startRunning","stopRunning","layerWithSession:","initWithSession:","composition","insertTimeRange:ofAsset:atTime:error:","insertEmptyTimeRange:","removeTimeRange:","scaleTimeRange:toDuration:","addMutableTrackWithMediaType:preferredTrackID:","removeTrack:","mutableTrackCompatibleWithTrack:","insertTimeRange:ofTrack:atTime:error:","insertEmptyTimeRange:","removeTimeRange:","scaleTimeRange:toDuration:","validateTrackSegments:error:","compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:","compositionTrackSegmentWithTimeRange:","initWithURL:trackID:sourceTimeRange:targetTimeRange:","initWithTimeRange:","metadataItemsFromArray:withLocale:","metadataItemsFromArray:withKey:keySpace:","metadataItem","playerWithURL:","playerWithPlayerItem:","initWithURL:","initWithPlayerItem:","currentTime","seekToTime:","seekToTime:toleranceBefore:toleranceAfter:","seekToTime:completionHandler:","seekToTime:toleranceBefore:toleranceAfter:completionHandler:","play","pause","replaceCurrentItemWithPlayerItem:","removeTimeObserver:","queuePlayerWithItems:","initWithItems:","items","advanceToNextItem","canInsertItem:afterItem:","insertItem:afterItem:","removeItem:","removeAllItems","playerItemWithURL:","playerItemWithAsset:","initWithURL:","initWithAsset:","currentTime","seekToTime:","seekToTime:completionHandler:","seekToTime:toleranceBefore:toleranceAfter:","seekToTime:toleranceBefore:toleranceAfter:completionHandler:","cancelPendingSeeks","stepByCount:","currentDate","seekToDate:","extendedLogData","extendedLogDataStringEncoding","extendedLogData","extendedLogDataStringEncoding","playerLayerWithPlayer:","synchronizedLayerWithPlayerItem:","initWithItems:timeRange:","videoComposition","videoCompositionInstruction","getTransformRampForTime:startTransform:endTransform:timeRange:","getOpacityRampForTime:startOpacity:endOpacity:timeRange:","videoCompositionLayerInstructionWithAssetTrack:","videoCompositionLayerInstruction","setTransformRampFromStartTransform:toEndTransform:timeRange:","setTransform:atTime:","setOpacityRampFromStartOpacity:toEndOpacity:timeRange:","setOpacity:atTime:","videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:","videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:","unusedTrackID","alarm","triggerDateRelativeTo:","calendar","hasAlarm","nextAlarmDate","addAlarm:","addAlarms:","removeAlarm:","removeAlarms:","defaultCalendarStore","calendars","calendarWithUID:","saveCalendar:error:","removeCalendar:error:","eventsWithPredicate:","eventWithUID:occurrence:","tasksWithPredicate:","taskWithUID:","saveEvent:span:error:","removeEvent:span:error:","saveTask:error:","removeTask:error:","eventPredicateWithStartDate:endDate:calendars:","eventPredicateWithStartDate:endDate:UID:calendars:","taskPredicateWithCalendars:","taskPredicateWithUncompletedTasks:","taskPredicateWithUncompletedTasksDueBefore:calendars:","taskPredicateWithTasksCompletedSince:calendars:","event","recurrenceEndWithEndDate:","recurrenceEndWithOccurrenceCount:","initDailyRecurrenceWithInterval:end:","initWeeklyRecurrenceWithInterval:end:","initWeeklyRecurrenceWithInterval:forDaysOfTheWeek:end:","initMonthlyRecurrenceWithInterval:end:","initMonthlyRecurrenceWithInterval:forDaysOfTheMonth:end:","initMonthlyRecurrenceWithInterval:forDayOfTheWeek:forWeekOfTheMonth:end:","initYearlyRecurrenceWithInterval:end:","initYearlyRecurrenceWithInterval:forMonthsOfTheYear:end:","initYearlyRecurrenceWithInterval:forDayOfTheWeek:forWeekOfTheMonth:forMonthsOfTheYear:end:","task","identityWithName:authority:","identityWithUUIDString:authority:","identityWithPersistentReference:","identityWithCSIdentity:","authority","UUIDString","fullName","posixName","aliases","emailAddress","image","persistentReference","isHidden","isMemberOfGroup:","CSIdentity","certificate","isEnabled","authenticateWithPassword:","members","localIdentityAuthority","managedIdentityAuthority","defaultIdentityAuthority","identityAuthorityWithCSIdentityAuthority:","CSIdentityAuthority","localizedName","setTitle:","title","setAllowsMultipleSelection:","allowsMultipleSelection","runModal","identityPickerDidEnd:returnCode:contextInfo:","runModalForWindow:modalDelegate:didEndSelector:contextInfo:","identities","initWithAudioUnit:","initWithAudioUnit:displayFlags:","audioUnit","showsExpertParameters","setShowsExpertParameters:","AUPannerViewWithAudioUnit:","audioUnit","initWithPersistentStoreCoordinator:configurationName:URL:options:","load:","save:","newCacheNodeForManagedObject:","updateCacheNode:fromManagedObject:","cacheNodes","addCacheNodes:","willRemoveCacheNodes:","cacheNodeForObjectID:","objectIDForEntity:referenceObject:","newReferenceObjectForManagedObject:","referenceObjectForObjectID:","initWithObjectID:","objectID","propertyCache","setPropertyCache:","valueForKey:","setValue:forKey:","attributeType","setAttributeType:","attributeValueClassName","defaultValue","setDefaultValue:","entityForName:inManagedObjectContext:","insertNewObjectForEntityForName:inManagedObjectContext:","managedObjectModel","managedObjectClassName","setManagedObjectClassName:","name","setName:","isAbstract","setAbstract:","subentitiesByName","subentities","setSubentities:","superentity","propertiesByName","properties","setProperties:","userInfo","setUserInfo:","attributesByName","relationshipsByName","relationshipsWithDestinationEntity:","name","setName:","mappingType","setMappingType:","sourceEntityName","setSourceEntityName:","sourceEntityVersionHash","setSourceEntityVersionHash:","destinationEntityName","setDestinationEntityName:","destinationEntityVersionHash","setDestinationEntityVersionHash:","attributeMappings","setAttributeMappings:","relationshipMappings","setRelationshipMappings:","sourceExpression","setSourceExpression:","userInfo","setUserInfo:","entityMigrationPolicyClassName","setEntityMigrationPolicyClassName:","beginEntityMapping:manager:error:","createDestinationInstancesForSourceInstance:entityMapping:manager:error:","endInstanceCreationForEntityMapping:manager:error:","createRelationshipsForDestinationInstance:entityMapping:manager:error:","endRelationshipCreationForEntityMapping:manager:error:","performCustomValidationForEntityMapping:manager:error:","endEntityMapping:manager:error:","expression","setExpression:","expressionResultType","setExpressionResultType:","fetchRequest","setFetchRequest:","init","entity","setEntity:","predicate","setPredicate:","sortDescriptors","setSortDescriptors:","fetchLimit","setFetchLimit:","affectedStores","setAffectedStores:","expressionForFetch:context:countOnly:","requestExpression","contextExpression","isCountOnlyRequest","loadMetadata:","executeRequest:withContext:error:","newValuesForObjectWithID:withContext:error:","newValueForRelationship:forObjectWithID:withContext:error:","identifierForNewStoreAtURL:","obtainPermanentIDsForObjects:error:","managedObjectContextDidRegisterObjectsWithIDs:","managedObjectContextDidUnregisterObjectsWithIDs:","newObjectIDForEntity:referenceObject:","referenceObjectForObjectID:","objectID","valueForPropertyDescription:","initWithEntity:insertIntoManagedObjectContext:","managedObjectContext","entity","objectID","isInserted","isUpdated","isDeleted","isFault","willAccessValueForKey:","didAccessValueForKey:","willChangeValueForKey:","didChangeValueForKey:","willChangeValueForKey:withSetMutation:usingObjects:","didChangeValueForKey:withSetMutation:usingObjects:","setObservationInfo:","observationInfo","awakeFromFetch","awakeFromInsert","willSave","didSave","didTurnIntoFault","valueForKey:","setValue:forKey:","primitiveValueForKey:","setPrimitiveValue:forKey:","committedValuesForKeys:","changedValues","validateValue:forKey:error:","validateForDelete:","validateForInsert:","validateForUpdate:","setPersistentStoreCoordinator:","persistentStoreCoordinator","setUndoManager:","undoManager","hasChanges","objectRegisteredForID:","objectWithID:","executeFetchRequest:error:","insertObject:","deleteObject:","refreshObject:mergeChanges:","detectConflictsForObject:","observeValueForKeyPath:ofObject:change:context:","processPendingChanges","assignObject:toPersistentStore:","insertedObjects","updatedObjects","deletedObjects","registeredObjects","undo","redo","reset","rollback","save:","lock","unlock","tryLock","propagatesDeletesAtEndOfEvent","setPropagatesDeletesAtEndOfEvent:","retainsRegisteredObjects","setRetainsRegisteredObjects:","stalenessInterval","setStalenessInterval:","setMergePolicy:","mergePolicy","entity","persistentStore","isTemporaryID","URIRepresentation","mergedModelFromBundles:","modelByMergingModels:","init","initWithContentsOfURL:","entitiesByName","entities","setEntities:","configurations","entitiesForConfiguration:","setEntities:forConfiguration:","setFetchRequestTemplate:forName:","fetchRequestTemplateForName:","fetchRequestFromTemplateWithName:substitutionVariables:","localizationDictionary","setLocalizationDictionary:","mappingModelFromBundles:forSourceModel:destinationModel:","initWithContentsOfURL:","entityMappings","setEntityMappings:","entityMappingsByName","initWithSource:newVersion:oldVersion:cachedSnapshot:persistedSnapshot:","initWithMergeType:","resolveConflicts:error:","initWithSourceModel:destinationModel:","migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:","reset","mappingModel","sourceModel","destinationModel","sourceContext","destinationContext","sourceEntityForEntityMapping:","destinationEntityForEntityMapping:","associateSourceInstance:withDestinationInstance:forEntityMapping:","destinationInstancesForEntityMappingNamed:sourceInstances:","sourceInstancesForEntityMappingNamed:destinationInstances:","currentEntityMapping","migrationProgress","userInfo","setUserInfo:","cancelMigrationWithError:","metadataForPersistentStoreWithURL:error:","setMetadata:forPersistentStoreWithURL:error:","initWithPersistentStoreCoordinator:configurationName:URL:options:","loadMetadata:","persistentStoreCoordinator","configurationName","options","URL","setURL:","identifier","setIdentifier:","type","isReadOnly","setReadOnly:","metadata","setMetadata:","didAddToPersistentStoreCoordinator:","willRemoveFromPersistentStoreCoordinator:","setMetadata:forPersistentStore:","metadataForPersistentStore:","initWithManagedObjectModel:","managedObjectModel","persistentStores","persistentStoreForURL:","URLForPersistentStore:","addPersistentStoreWithType:configuration:URL:options:error:","removePersistentStore:error:","migratePersistentStore:toURL:options:withType:error:","managedObjectIDForURIRepresentation:","lock","unlock","tryLock","affectedStores","setAffectedStores:","requestType","entity","name","setName:","isOptional","setOptional:","isTransient","setTransient:","validationPredicates","validationWarnings","setValidationPredicates:withValidationWarnings:","userInfo","setUserInfo:","name","setName:","valueExpression","setValueExpression:","userInfo","setUserInfo:","destinationEntity","setDestinationEntity:","inverseRelationship","setInverseRelationship:","maxCount","setMaxCount:","minCount","setMinCount:","deleteRule","setDeleteRule:","isToMany","initWithInsertedObjects:updatedObjects:deletedObjects:lockedObjects:","insertedObjects","updatedObjects","deletedObjects","lockedObjects","description","initWithLatitude:longitude:","initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:","description","startUpdatingLocation","stopUpdatingLocation","supportsSecurity:","supportsPHYMode:","burnForDevice:","initWithDevice:","writeLayout:","status","abort","properties","setProperties:","device","requestedBurnSpeed","setRequestedBurnSpeed:","appendable","setAppendable:","verifyDisc","setVerifyDisc:","completionAction","setCompletionAction:","layoutForImageFile:","arrayOfCDTextBlocksFromPacks:","cdTextBlockWithLanguage:encoding:","initWithLanguage:encoding:","properties","setProperties:","trackDictionaries","setTrackDictionaries:","objectForKey:ofTrack:","setObject:forKey:ofTrack:","flatten","language","encoding","devices","deviceForBSDName:","deviceForIORegistryEntryPath:","isValid","info","status","openTray","closeTray","ejectMedia","acquireExclusiveAccess","releaseExclusiveAccess","acquireMediaReservation","releaseMediaReservation","isEqualToDevice:","writesCD","writesDVD","displayName","ioRegistryEntryPath","mediaIsPresent","mediaIsTransitioning","mediaIsBusy","mediaType","mediaIsBlank","mediaIsAppendable","mediaIsOverwritable","mediaIsErasable","mediaIsReserved","mediaSpaceOverwritable","mediaSpaceUsed","mediaSpaceFree","trayIsOpen","bsdName","eraseForDevice:","initWithDevice:","start","status","properties","setProperties:","device","eraseType","setEraseType:","fileWithPath:","initWithPath:","virtualFileWithName:data:","virtualFileWithName:dataProducer:","initWithName:data:","initWithName:dataProducer:","hardLinkPointingTo:inFilesystem:","symLinkPointingTo:inFilesystem:","finderAliasPointingTo:inFilesystem:","initWithLinkType:pointingTo:inFilesystem:","folderWithPath:","initWithPath:","virtualFolderWithName:","initWithName:","makeVirtual","addChild:","removeChild:","count","children","isVirtual","sourcePath","parent","baseName","setBaseName:","specificNameForFilesystem:","specificNames","setSpecificName:forFilesystem:","setSpecificNames:","mangledNameForFilesystem:","mangledNames","propertyForKey:inFilesystem:mergeWithOtherFilesystems:","propertiesForFilesystem:mergeWithOtherFilesystems:","setProperty:forKey:inFilesystem:","setProperties:inFilesystem:","explicitFilesystemMask","setExplicitFilesystemMask:","effectiveFilesystemMask","msf","msfWithFrames:","msfWithString:","initWithFrames:","initWithString:","minutes","seconds","frames","sectors","msfByAdding:","msfBySubtracting:","description","descriptionWithFormat:","isEqualToMSF:","initWithFormat:","format","setFormat:","currentRunLoopCenter","addObserver:selector:name:object:","removeObserver:name:object:","initWithProducer:","properties","setProperties:","testProductionSpeedForInterval:","length","preGap","setPreGap:","trackForAudioOfLength:producer:","trackForAudioFile:","trackForRootFolder:","progressPanel","beginProgressSheetForBurn:layout:modalForWindow:","beginProgressPanelForBurn:layout:","setDescription:","description","setVerboseProgressStatus:","verboseProgressStatus","stopBurn:","burnProgressPanelWillBegin:","burnProgressPanelDidFinish:","burnProgressPanel:burnDidFinish:","setupPanel","setDefaultButtonTitle:","setCanSelectTestBurn:","setCanSelectAppendableMedia:","burnObject","expand:","burnSpeed:","appendable:","completionAction:","testBurn:","verifyBurn:","progressPanel","beginProgressSheetForErase:modalForWindow:","beginProgressPanelForErase:","setDescription:","description","eraseProgressPanelWillBegin:","eraseProgressPanelDidFinish:","eraseProgressPanel:eraseDidFinish:","setupPanel","eraseObject","eraseType:","initWithNibName:","runSetupPanel","beginSetupSheetForWindow:modalDelegate:didEndSelector:contextInfo:","ok:","cancel:","eject:","open:","close:","deviceSelectionChanged:","mediaStateChanged:","setupForDisplay","setupPanel:deviceCouldBeTarget:","setupPanel:determineBestDeviceOfA:orB:","setupPanelDeviceSelectionChanged:","setupPanelShouldHandleMediaReservations:","setupPanel:deviceContainsSuitableMedia:promptString:","defaultExceptionHandler","setExceptionHandlingMask:","exceptionHandlingMask","setExceptionHangingMask:","exceptionHangingMask","setDelegate:","delegate","exceptionHandler:shouldLogException:mask:","exceptionHandler:shouldHandleException:mask:","transform","initWithTransform:","translateXBy:yBy:","rotateByDegrees:","rotateByRadians:","scaleBy:","scaleXBy:yBy:","invert","appendTransform:","prependTransform:","transformPoint:","transformSize:","transformStruct","setTransformStruct:","nullDescriptor","descriptorWithDescriptorType:bytes:length:","descriptorWithDescriptorType:data:","descriptorWithBoolean:","descriptorWithEnumCode:","descriptorWithInt32:","descriptorWithTypeCode:","descriptorWithString:","appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:","listDescriptor","recordDescriptor","initWithAEDescNoCopy:","initWithDescriptorType:bytes:length:","initWithDescriptorType:data:","initWithEventClass:eventID:targetDescriptor:returnID:transactionID:","initListDescriptor","initRecordDescriptor","aeDesc","descriptorType","data","booleanValue","enumCodeValue","int32Value","typeCodeValue","stringValue","eventClass","eventID","returnID","transactionID","setParamDescriptor:forKeyword:","paramDescriptorForKeyword:","removeParamDescriptorWithKeyword:","setAttributeDescriptor:forKeyword:","attributeDescriptorForKeyword:","numberOfItems","insertDescriptor:atIndex:","descriptorAtIndex:","removeDescriptorAtIndex:","setDescriptor:forKeyword:","descriptorForKeyword:","removeDescriptorWithKeyword:","keywordForDescriptorAtIndex:","coerceToDescriptorType:","sharedAppleEventManager","setEventHandler:andSelector:forEventClass:andEventID:","removeEventHandlerForEventClass:andEventID:","dispatchRawAppleEvent:withRawReply:handlerRefCon:","currentAppleEvent","currentReplyAppleEvent","suspendCurrentAppleEvent","appleEventForSuspensionID:","replyAppleEventForSuspensionID:","setCurrentAppleEventAndReplyEventWithSuspensionID:","resumeWithSuspensionID:","initWithContentsOfURL:error:","initWithSource:","source","isCompiled","compileAndReturnError:","executeAndReturnError:","executeAppleEvent:error:","initForWritingWithMutableData:","archiverData","encodeRootObject:","encodeConditionalObject:","archivedDataWithRootObject:","archiveRootObject:toFile:","encodeClassName:intoClassName:","classNameEncodedForTrueClassName:","replaceObject:withObject:","initForReadingWithData:","isAtEnd","systemVersion","unarchiveObjectWithData:","unarchiveObjectWithFile:","decodeClassName:asClassName:","decodeClassName:asClassName:","classNameDecodedForArchiveClassName:","classNameDecodedForArchiveClassName:","replaceObject:withObject:","classForArchiver","replacementObjectForArchiver:","count","objectAtIndex:","arrayByAddingObject:","arrayByAddingObjectsFromArray:","componentsJoinedByString:","containsObject:","description","descriptionWithLocale:","descriptionWithLocale:indent:","firstObjectCommonWithArray:","indexOfObject:","indexOfObject:inRange:","indexOfObjectIdenticalTo:","indexOfObjectIdenticalTo:inRange:","isEqualToArray:","lastObject","objectEnumerator","reverseObjectEnumerator","sortedArrayHint","sortedArrayUsingSelector:","subarrayWithRange:","writeToFile:atomically:","writeToURL:atomically:","makeObjectsPerformSelector:","makeObjectsPerformSelector:withObject:","objectsAtIndexes:","array","arrayWithObject:","arrayWithObjects:count:","arrayWithArray:","initWithObjects:count:","initWithArray:","initWithArray:copyItems:","arrayWithContentsOfFile:","arrayWithContentsOfURL:","initWithContentsOfFile:","initWithContentsOfURL:","addObject:","insertObject:atIndex:","removeLastObject","removeObjectAtIndex:","replaceObjectAtIndex:withObject:","addObjectsFromArray:","exchangeObjectAtIndex:withObjectAtIndex:","removeAllObjects","removeObject:inRange:","removeObject:","removeObjectIdenticalTo:inRange:","removeObjectIdenticalTo:","removeObjectsInArray:","removeObjectsInRange:","replaceObjectsInRange:withObjectsFromArray:range:","replaceObjectsInRange:withObjectsFromArray:","setArray:","sortUsingSelector:","insertObjects:atIndexes:","removeObjectsAtIndexes:","replaceObjectsAtIndexes:withObjects:","arrayWithCapacity:","initWithCapacity:","string","attributesAtIndex:effectiveRange:","length","attribute:atIndex:effectiveRange:","attributedSubstringFromRange:","attributesAtIndex:longestEffectiveRange:inRange:","attribute:atIndex:longestEffectiveRange:inRange:","isEqualToAttributedString:","initWithString:","initWithString:attributes:","initWithAttributedString:","replaceCharactersInRange:withString:","setAttributes:range:","mutableString","addAttribute:value:range:","addAttributes:range:","removeAttribute:range:","replaceCharactersInRange:withAttributedString:","insertAttributedString:atIndex:","appendAttributedString:","deleteCharactersInRange:","setAttributedString:","beginEditing","endEditing","addObject:","addObject:","drain","mainBundle","bundleWithPath:","initWithPath:","bundleForClass:","bundleWithIdentifier:","allBundles","allFrameworks","load","isLoaded","unload","bundlePath","resourcePath","executablePath","pathForAuxiliaryExecutable:","privateFrameworksPath","sharedFrameworksPath","sharedSupportPath","builtInPlugInsPath","pathForResource:ofType:inDirectory:","pathsForResourcesOfType:inDirectory:","pathForResource:ofType:","pathForResource:ofType:inDirectory:","pathForResource:ofType:inDirectory:forLocalization:","pathsForResourcesOfType:inDirectory:","pathsForResourcesOfType:inDirectory:forLocalization:","localizedStringForKey:value:table:","bundleIdentifier","infoDictionary","localizedInfoDictionary","objectForInfoDictionaryKey:","classNamed:","principalClass","localizations","preferredLocalizations","developmentLocalization","preferredLocalizationsFromArray:","preferredLocalizationsFromArray:forPreferences:","setName:","name","setDelegate:","delegate","objectForKey:","setObject:forKey:","setObject:forKey:cost:","removeObjectForKey:","removeAllObjects","setTotalCostLimit:","totalCostLimit","setCountLimit:","countLimit","evictsObjectsWithDiscardedContent","setEvictsObjectsWithDiscardedContent:","currentCalendar","initWithCalendarIdentifier:","calendarIdentifier","setLocale:","locale","setTimeZone:","timeZone","setFirstWeekday:","firstWeekday","setMinimumDaysInFirstWeek:","minimumDaysInFirstWeek","minimumRangeOfUnit:","maximumRangeOfUnit:","rangeOfUnit:inUnit:forDate:","ordinalityOfUnit:inUnit:forDate:","dateFromComponents:","components:fromDate:","dateByAddingComponents:toDate:options:","components:fromDate:toDate:options:","era","year","month","day","hour","minute","second","week","weekday","weekdayOrdinal","setEra:","setYear:","setMonth:","setDay:","setHour:","setMinute:","setSecond:","setWeek:","setWeekday:","setWeekdayOrdinal:","calendarDate","dateWithString:calendarFormat:locale:","dateWithString:calendarFormat:","dateWithYear:month:day:hour:minute:second:timeZone:","dateByAddingYears:months:days:hours:minutes:seconds:","dayOfCommonEra","dayOfMonth","dayOfWeek","dayOfYear","hourOfDay","minuteOfHour","monthOfYear","secondOfMinute","yearOfCommonEra","calendarFormat","descriptionWithCalendarFormat:locale:","descriptionWithCalendarFormat:","descriptionWithLocale:","timeZone","initWithString:calendarFormat:locale:","initWithString:calendarFormat:","initWithString:","initWithYear:month:day:hour:minute:second:timeZone:","setCalendarFormat:","setTimeZone:","years:months:days:hours:minutes:seconds:sinceDate:","dateWithNaturalLanguageString:locale:","dateWithNaturalLanguageString:","dateWithString:","dateWithCalendarFormat:timeZone:","descriptionWithCalendarFormat:timeZone:locale:","initWithString:","controlCharacterSet","whitespaceCharacterSet","whitespaceAndNewlineCharacterSet","decimalDigitCharacterSet","letterCharacterSet","lowercaseLetterCharacterSet","uppercaseLetterCharacterSet","nonBaseCharacterSet","alphanumericCharacterSet","decomposableCharacterSet","illegalCharacterSet","punctuationCharacterSet","capitalizedLetterCharacterSet","symbolCharacterSet","characterSetWithRange:","characterSetWithCharactersInString:","characterSetWithBitmapRepresentation:","characterSetWithContentsOfFile:","characterIsMember:","bitmapRepresentation","invertedSet","longCharacterIsMember:","isSupersetOfSet:","addCharactersInRange:","removeCharactersInRange:","addCharactersInString:","removeCharactersInString:","formUnionWithCharacterSet:","formIntersectionWithCharacterSet:","invert","registerClassDescription:forClass:","invalidateClassDescriptionCache","classDescriptionForClass:","attributeKeys","toOneRelationshipKeys","toManyRelationshipKeys","inverseForRelationshipKey:","classDescription","attributeKeys","toOneRelationshipKeys","toManyRelationshipKeys","inverseForRelationshipKey:","encodeValueOfObjCType:at:","encodeDataObject:","decodeValueOfObjCType:at:","decodeDataObject","versionForClassName:","encodeObject:","encodeRootObject:","encodeBycopyObject:","encodeByrefObject:","encodeConditionalObject:","encodeArrayOfObjCType:count:at:","encodeBytes:length:","decodeObject","decodeArrayOfObjCType:count:at:","decodeBytesWithReturnedLength:","encodePropertyList:","decodePropertyList","systemVersion","allowsKeyedCoding","encodeObject:forKey:","encodeConditionalObject:forKey:","encodeBool:forKey:","encodeInt:forKey:","encodeFloat:forKey:","encodeDouble:forKey:","containsValueForKey:","decodeObjectForKey:","decodeBoolForKey:","decodeIntForKey:","decodeFloatForKey:","decodeDoubleForKey:","predicateWithLeftExpression:rightExpression:modifier:type:options:","predicateWithLeftExpression:rightExpression:customSelector:","initWithLeftExpression:rightExpression:modifier:type:options:","initWithLeftExpression:rightExpression:customSelector:","predicateOperatorType","comparisonPredicateModifier","leftExpression","rightExpression","customSelector","options","initWithType:subpredicates:","compoundPredicateType","subpredicates","andPredicateWithSubpredicates:","orPredicateWithSubpredicates:","notPredicateWithSubpredicate:","statistics","allConnections","connectionWithRegisteredName:host:","connectionWithRegisteredName:host:usingNameServer:","rootProxyForConnectionWithRegisteredName:host:","rootProxyForConnectionWithRegisteredName:host:usingNameServer:","setRequestTimeout:","requestTimeout","setReplyTimeout:","replyTimeout","setRootObject:","rootObject","rootProxy","setDelegate:","delegate","setIndependentConversationQueueing:","independentConversationQueueing","isValid","invalidate","addRequestMode:","removeRequestMode:","requestModes","registerName:","registerName:withNameServer:","connectionWithReceivePort:sendPort:","currentConversation","initWithReceivePort:sendPort:","sendPort","receivePort","enableMultipleThreads","multipleThreadsEnabled","addRunLoop:","removeRunLoop:","runInNewThread","remoteObjects","localObjects","invocation","connection","conversation","replyWithException:","length","bytes","description","getBytes:length:","getBytes:range:","isEqualToData:","subdataWithRange:","writeToFile:atomically:","writeToURL:atomically:","writeToFile:options:error:","writeToURL:options:error:","data","dataWithBytes:length:","dataWithBytesNoCopy:length:","dataWithBytesNoCopy:length:freeWhenDone:","dataWithContentsOfFile:options:error:","dataWithContentsOfURL:options:error:","dataWithContentsOfFile:","dataWithContentsOfURL:","initWithBytes:length:","initWithBytesNoCopy:length:","initWithBytesNoCopy:length:freeWhenDone:","initWithContentsOfFile:options:error:","initWithContentsOfURL:options:error:","initWithContentsOfFile:","initWithContentsOfURL:","initWithData:","dataWithData:","getBytes:","dataWithContentsOfMappedFile:","initWithContentsOfMappedFile:","mutableBytes","setLength:","appendBytes:length:","appendData:","increaseLengthBy:","replaceBytesInRange:withBytes:","resetBytesInRange:","setData:","replaceBytesInRange:withBytes:length:","dataWithCapacity:","dataWithLength:","initWithCapacity:","initWithLength:","timeIntervalSinceReferenceDate","timeIntervalSinceDate:","timeIntervalSinceNow","timeIntervalSince1970","earlierDate:","laterDate:","compare:","isEqualToDate:","description","descriptionWithLocale:","timeIntervalSinceReferenceDate","date","dateWithTimeIntervalSinceNow:","dateWithTimeIntervalSinceReferenceDate:","dateWithTimeIntervalSince1970:","dateWithTimeInterval:sinceDate:","distantFuture","distantPast","init","initWithTimeIntervalSinceNow:","initWithTimeIntervalSinceReferenceDate:","initWithTimeIntervalSince1970:","initWithTimeInterval:sinceDate:","getObjectValue:forString:range:error:","stringFromDate:","dateFromString:","dateFormat","dateStyle","setDateStyle:","timeStyle","setTimeStyle:","locale","setLocale:","generatesCalendarDates","setGeneratesCalendarDates:","formatterBehavior","setFormatterBehavior:","defaultFormatterBehavior","setDefaultFormatterBehavior:","setDateFormat:","timeZone","setTimeZone:","calendar","setCalendar:","isLenient","setLenient:","twoDigitStartDate","setTwoDigitStartDate:","defaultDate","setDefaultDate:","eraSymbols","setEraSymbols:","monthSymbols","setMonthSymbols:","shortMonthSymbols","setShortMonthSymbols:","weekdaySymbols","setWeekdaySymbols:","shortWeekdaySymbols","setShortWeekdaySymbols:","AMSymbol","setAMSymbol:","PMSymbol","setPMSymbol:","initWithDateFormat:allowNaturalLanguage:","allowsNaturalLanguage","showPools","initWithMantissa:exponent:isNegative:","initWithDecimal:","initWithString:","initWithString:locale:","descriptionWithLocale:","decimalValue","decimalNumberWithMantissa:exponent:isNegative:","decimalNumberWithDecimal:","decimalNumberWithString:","decimalNumberWithString:locale:","zero","one","minimumDecimalNumber","maximumDecimalNumber","notANumber","decimalNumberByAdding:","decimalNumberByAdding:withBehavior:","decimalNumberBySubtracting:","decimalNumberBySubtracting:withBehavior:","decimalNumberByMultiplyingBy:","decimalNumberByMultiplyingBy:withBehavior:","decimalNumberByDividingBy:","decimalNumberByDividingBy:withBehavior:","decimalNumberByRaisingToPower:","decimalNumberByRaisingToPower:withBehavior:","decimalNumberByMultiplyingByPowerOf10:","decimalNumberByMultiplyingByPowerOf10:withBehavior:","decimalNumberByRoundingAccordingToBehavior:","compare:","setDefaultBehavior:","defaultBehavior","objCType","doubleValue","defaultDecimalNumberHandler","initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:","decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:","decimalValue","scanDecimal:","count","objectForKey:","keyEnumerator","allKeys","allKeysForObject:","allValues","description","descriptionInStringsFileFormat","descriptionWithLocale:","descriptionWithLocale:indent:","isEqualToDictionary:","objectEnumerator","objectsForKeys:notFoundMarker:","writeToFile:atomically:","writeToURL:atomically:","keysSortedByValueUsingSelector:","dictionary","dictionaryWithObject:forKey:","dictionaryWithObjects:forKeys:count:","dictionaryWithDictionary:","dictionaryWithObjects:forKeys:","initWithObjects:forKeys:count:","initWithDictionary:","initWithDictionary:copyItems:","initWithObjects:forKeys:","dictionaryWithContentsOfFile:","dictionaryWithContentsOfURL:","initWithContentsOfFile:","initWithContentsOfURL:","removeObjectForKey:","setObject:forKey:","addEntriesFromDictionary:","removeAllObjects","removeObjectsForKeys:","setDictionary:","dictionaryWithCapacity:","initWithCapacity:","proxyWithTarget:connection:","initWithTarget:connection:","proxyWithLocal:connection:","initWithLocal:connection:","setProtocolForProxy:","connectionForProxy","lockWithPath:","initWithPath:","tryLock","unlock","breakLock","lockDate","notificationCenterForType:","defaultCenter","addObserver:selector:name:object:suspensionBehavior:","postNotificationName:object:userInfo:deliverImmediately:","postNotificationName:object:userInfo:options:","setSuspended:","suspended","addObserver:selector:name:object:","postNotificationName:object:","postNotificationName:object:userInfo:","removeObserver:name:object:","nextObject","allObjects","initWithDomain:code:userInfo:","errorWithDomain:code:userInfo:","domain","code","userInfo","localizedDescription","localizedFailureReason","localizedRecoverySuggestion","localizedRecoveryOptions","recoveryAttempter","helpAnchor","didPresentErrorWithRecovery:contextInfo:","attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:","attemptRecoveryFromError:optionIndex:","exceptionWithName:reason:userInfo:","initWithName:reason:userInfo:","name","reason","userInfo","raise","currentHandler","expressionForConstantValue:","expressionForEvaluatedObject","expressionForVariable:","expressionForKeyPath:","expressionForFunction:arguments:","initWithExpressionType:","expressionType","constantValue","keyPath","function","variable","operand","arguments","expressionValueWithObject:context:","addFilePresenter:","removeFilePresenter:","filePresenters","initWithFilePresenter:","coordinateReadingItemAtURL:options:error:byAccessor:","coordinateWritingItemAtURL:options:error:byAccessor:","prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:","itemAtURL:didMoveToURL:","cancel","availableData","readDataToEndOfFile","readDataOfLength:","writeData:","offsetInFile","seekToEndOfFile","seekToFileOffset:","truncateFileAtOffset:","synchronizeFile","closeFile","fileHandleWithStandardInput","fileHandleWithStandardOutput","fileHandleWithStandardError","fileHandleWithNullDevice","fileHandleForReadingAtPath:","fileHandleForWritingAtPath:","fileHandleForUpdatingAtPath:","readInBackgroundAndNotifyForModes:","readInBackgroundAndNotify","readToEndOfFileInBackgroundAndNotifyForModes:","readToEndOfFileInBackgroundAndNotify","acceptConnectionInBackgroundAndNotifyForModes:","acceptConnectionInBackgroundAndNotify","waitForDataInBackgroundAndNotifyForModes:","waitForDataInBackgroundAndNotify","initWithFileDescriptor:closeOnDealloc:","initWithFileDescriptor:","fileDescriptor","fileHandleForReading","fileHandleForWriting","init","pipe","defaultManager","currentDirectoryPath","changeCurrentDirectoryPath:","fileExistsAtPath:","fileExistsAtPath:isDirectory:","isReadableFileAtPath:","isWritableFileAtPath:","isExecutableFileAtPath:","isDeletableFileAtPath:","contentsEqualAtPath:andPath:","displayNameAtPath:","componentsToDisplayForPath:","enumeratorAtPath:","subpathsAtPath:","contentsAtPath:","createFileAtPath:contents:attributes:","stringWithFileSystemRepresentation:length:","fileAttributes","directoryAttributes","skipDescendents","fileSize","fileModificationDate","fileType","filePosixPermissions","fileOwnerAccountName","fileGroupOwnerAccountName","fileSystemNumber","fileSystemFileNumber","fileExtensionHidden","fileHFSCreatorCode","fileHFSTypeCode","fileIsImmutable","fileIsAppendOnly","fileCreationDate","fileOwnerAccountID","fileGroupOwnerAccountID","currentVersionOfItemAtURL:","otherVersionsOfItemAtURL:","unresolvedConflictVersionsOfItemAtURL:","versionOfItemAtURL:forPersistentIdentifier:","replaceItemAtURL:options:error:","removeAndReturnError:","removeOtherVersionsOfItemAtURL:error:","initDirectoryWithFileWrappers:","initRegularFileWithContents:","initWithSerializedRepresentation:","isDirectory","isRegularFile","isSymbolicLink","setPreferredFilename:","preferredFilename","setFilename:","filename","setFileAttributes:","fileAttributes","serializedRepresentation","addFileWrapper:","addRegularFileWithContents:preferredFilename:","removeFileWrapper:","fileWrappers","keyForFileWrapper:","regularFileContents","initWithPath:","initSymbolicLinkWithDestination:","needsToBeUpdatedFromPath:","updateFromPath:","writeToFile:atomically:updateFilenames:","addFileWithPath:","addSymbolicLinkWithDestination:preferredFilename:","symbolicLinkDestination","stringForObjectValue:","attributedStringForObjectValue:withDefaultAttributes:","editingStringForObjectValue:","getObjectValue:forString:errorDescription:","isPartialStringValid:newEditingString:errorDescription:","isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:","defaultCollector","disable","enable","isEnabled","collectIfNeeded","collectExhaustively","disableCollectorForPointer:","enableCollectorForPointer:","zone","valueWithPoint:","valueWithSize:","valueWithRect:","pointValue","sizeValue","rectValue","encodePoint:","decodePoint","encodeSize:","decodeSize","encodeRect:","decodeRect","encodePoint:forKey:","encodeSize:forKey:","encodeRect:forKey:","decodePointForKey:","decodeSizeForKey:","decodeRectForKey:","initWithOptions:capacity:","initWithPointerFunctions:capacity:","hashTableWithOptions:","hashTableWithWeakObjects","pointerFunctions","count","member:","objectEnumerator","addObject:","removeObject:","removeAllObjects","allObjects","anyObject","containsObject:","intersectsHashTable:","isEqualToHashTable:","isSubsetOfHashTable:","intersectHashTable:","unionHashTable:","minusHashTable:","setRepresentation","currentHost","hostWithName:","hostWithAddress:","isEqualToHost:","name","names","address","addresses","initWithProperties:","cookieWithProperties:","requestHeaderFieldsWithCookies:","cookiesWithResponseHeaderFields:forURL:","properties","version","name","value","expiresDate","isSessionOnly","domain","path","isSecure","isHTTPOnly","comment","commentURL","portList","sharedHTTPCookieStorage","cookies","setCookie:","deleteCookie:","cookiesForURL:","setCookies:forURL:mainDocumentURL:","cookieAcceptPolicy","setCookieAcceptPolicy:","indexPathWithIndex:","indexPathWithIndexes:length:","initWithIndex:","initWithIndexes:length:","indexPathByAddingIndex:","indexPathByRemovingLastIndex","indexAtPosition:","length","getIndexes:","compare:","indexSet","indexSetWithIndex:","indexSetWithIndexesInRange:","init","initWithIndex:","initWithIndexesInRange:","initWithIndexSet:","isEqualToIndexSet:","count","firstIndex","lastIndex","indexGreaterThanIndex:","indexLessThanIndex:","indexGreaterThanOrEqualToIndex:","indexLessThanOrEqualToIndex:","getIndexes:maxCount:inIndexRange:","containsIndex:","containsIndexesInRange:","containsIndexes:","intersectsIndexesInRange:","addIndexes:","removeIndexes:","removeAllIndexes","addIndex:","removeIndex:","addIndexesInRange:","removeIndexesInRange:","shiftIndexesStartingAtIndex:by:","invocationWithMethodSignature:","methodSignature","retainArguments","argumentsRetained","target","setTarget:","selector","setSelector:","getReturnValue:","setReturnValue:","getArgument:atIndex:","setArgument:atIndex:","invoke","invokeWithTarget:","isValidJSONObject:","dataWithJSONObject:options:error:","JSONObjectWithData:options:error:","writeJSONObject:toStream:options:error:","JSONObjectWithStream:options:error:","archivedDataWithRootObject:","archiveRootObject:toFile:","initForWritingWithMutableData:","setDelegate:","delegate","setOutputFormat:","outputFormat","finishEncoding","setClassName:forClass:","setClassName:forClass:","classNameForClass:","classNameForClass:","encodeObject:forKey:","encodeConditionalObject:forKey:","encodeBool:forKey:","encodeInt:forKey:","encodeFloat:forKey:","encodeDouble:forKey:","unarchiveObjectWithData:","unarchiveObjectWithFile:","initForReadingWithData:","setDelegate:","delegate","finishDecoding","setClass:forClassName:","setClass:forClassName:","classForClassName:","classForClassName:","containsValueForKey:","decodeObjectForKey:","decodeBoolForKey:","decodeIntForKey:","decodeFloatForKey:","decodeDoubleForKey:","classForKeyedArchiver","replacementObjectForKeyedArchiver:","classFallbacksForKeyedArchiver","classForKeyedUnarchiver","accessInstanceVariablesDirectly","valueForKey:","setValue:forKey:","validateValue:forKey:error:","mutableArrayValueForKey:","mutableSetValueForKey:","valueForKeyPath:","setValue:forKeyPath:","validateValue:forKeyPath:error:","mutableArrayValueForKeyPath:","mutableSetValueForKeyPath:","valueForUndefinedKey:","setValue:forUndefinedKey:","setNilValueForKey:","dictionaryWithValuesForKeys:","setValuesForKeysWithDictionary:","valueForKey:","setValue:forKey:","valueForKey:","setValue:forKey:","valueForKey:","setValue:forKey:","observeValueForKeyPath:ofObject:change:context:","addObserver:forKeyPath:options:context:","removeObserver:forKeyPath:","addObserver:toObjectsAtIndexes:forKeyPath:options:context:","removeObserver:fromObjectsAtIndexes:forKeyPath:","addObserver:forKeyPath:options:context:","removeObserver:forKeyPath:","addObserver:forKeyPath:options:context:","removeObserver:forKeyPath:","addObserver:forKeyPath:options:context:","removeObserver:forKeyPath:","willChangeValueForKey:","didChangeValueForKey:","willChange:valuesAtIndexes:forKey:","didChange:valuesAtIndexes:forKey:","willChangeValueForKey:withSetMutation:usingObjects:","didChangeValueForKey:withSetMutation:usingObjects:","automaticallyNotifiesObserversForKey:","setObservationInfo:","observationInfo","objectForKey:","displayNameForKey:value:","localeIdentifier","systemLocale","currentLocale","initWithLocaleIdentifier:","availableLocaleIdentifiers","ISOLanguageCodes","ISOCountryCodes","ISOCurrencyCodes","componentsFromLocaleIdentifier:","localeIdentifierFromComponents:","canonicalLocaleIdentifierFromString:","canonicalLanguageIdentifierFromString:","tryLock","lockBeforeDate:","initWithCondition:","condition","lockWhenCondition:","tryLock","tryLockWhenCondition:","unlockWithCondition:","lockBeforeDate:","lockWhenCondition:beforeDate:","tryLock","lockBeforeDate:","wait","waitUntilDate:","signal","broadcast","setName:","name","initWithKeyOptions:valueOptions:capacity:","initWithKeyPointerFunctions:valuePointerFunctions:capacity:","mapTableWithKeyOptions:valueOptions:","mapTableWithStrongToStrongObjects","mapTableWithWeakToStrongObjects","mapTableWithStrongToWeakObjects","mapTableWithWeakToWeakObjects","keyPointerFunctions","valuePointerFunctions","objectForKey:","removeObjectForKey:","setObject:forKey:","count","keyEnumerator","objectEnumerator","removeAllObjects","dictionaryRepresentation","init","delegate","setDelegate:","predicate","setPredicate:","sortDescriptors","setSortDescriptors:","valueListAttributes","setValueListAttributes:","groupingAttributes","setGroupingAttributes:","notificationBatchingInterval","setNotificationBatchingInterval:","searchScopes","setSearchScopes:","startQuery","stopQuery","isStarted","isGathering","isStopped","disableUpdates","enableUpdates","resultCount","resultAtIndex:","results","indexOfResult:","valueLists","groupedResults","valueOfAttribute:forResultAtIndex:","valueForAttribute:","valuesForAttributes:","attributes","attribute","value","count","attribute","value","subgroups","resultCount","resultAtIndex:","results","signatureWithObjCTypes:","numberOfArguments","getArgumentTypeAtIndex:","frameLength","isOneway","methodReturnType","methodReturnLength","initWithDomain:type:name:port:","initWithDomain:type:name:","delegate","setDelegate:","scheduleInRunLoop:forMode:","removeFromRunLoop:forMode:","domain","type","name","addresses","publish","stop","dictionaryFromTXTRecordData:","dataFromTXTRecordDictionary:","hostName","resolveWithTimeout:","getInputStream:outputStream:","setTXTRecordData:","TXTRecordData","startMonitoring","stopMonitoring","init","delegate","setDelegate:","scheduleInRunLoop:forMode:","removeFromRunLoop:forMode:","searchForBrowsableDomains","searchForRegistrationDomains","searchForServicesOfType:inDomain:","stop","name","object","userInfo","notificationWithName:object:","notificationWithName:object:userInfo:","defaultCenter","addObserver:selector:name:object:","postNotification:","postNotificationName:object:","postNotificationName:object:userInfo:","removeObserver:","removeObserver:name:object:","defaultQueue","initWithNotificationCenter:","enqueueNotification:postingStyle:","enqueueNotification:postingStyle:coalesceMask:forModes:","dequeueNotificationsMatching:coalesceMask:","null","getObjectValue:forString:range:error:","stringFromNumber:","numberFromString:","numberStyle","setNumberStyle:","locale","setLocale:","generatesDecimalNumbers","setGeneratesDecimalNumbers:","formatterBehavior","setFormatterBehavior:","defaultFormatterBehavior","setDefaultFormatterBehavior:","negativeFormat","setNegativeFormat:","textAttributesForNegativeValues","setTextAttributesForNegativeValues:","positiveFormat","setPositiveFormat:","textAttributesForPositiveValues","setTextAttributesForPositiveValues:","allowsFloats","setAllowsFloats:","decimalSeparator","setDecimalSeparator:","alwaysShowsDecimalSeparator","setAlwaysShowsDecimalSeparator:","currencyDecimalSeparator","setCurrencyDecimalSeparator:","usesGroupingSeparator","setUsesGroupingSeparator:","groupingSeparator","setGroupingSeparator:","zeroSymbol","setZeroSymbol:","textAttributesForZero","setTextAttributesForZero:","nilSymbol","setNilSymbol:","textAttributesForNil","setTextAttributesForNil:","notANumberSymbol","setNotANumberSymbol:","textAttributesForNotANumber","setTextAttributesForNotANumber:","positiveInfinitySymbol","setPositiveInfinitySymbol:","textAttributesForPositiveInfinity","setTextAttributesForPositiveInfinity:","negativeInfinitySymbol","setNegativeInfinitySymbol:","textAttributesForNegativeInfinity","setTextAttributesForNegativeInfinity:","positivePrefix","setPositivePrefix:","positiveSuffix","setPositiveSuffix:","negativePrefix","setNegativePrefix:","negativeSuffix","setNegativeSuffix:","currencyCode","setCurrencyCode:","currencySymbol","setCurrencySymbol:","internationalCurrencySymbol","setInternationalCurrencySymbol:","percentSymbol","setPercentSymbol:","perMillSymbol","setPerMillSymbol:","minusSign","setMinusSign:","plusSign","setPlusSign:","exponentSymbol","setExponentSymbol:","groupingSize","setGroupingSize:","secondaryGroupingSize","setSecondaryGroupingSize:","multiplier","setMultiplier:","formatWidth","setFormatWidth:","paddingCharacter","setPaddingCharacter:","paddingPosition","setPaddingPosition:","roundingMode","setRoundingMode:","roundingIncrement","setRoundingIncrement:","minimumIntegerDigits","setMinimumIntegerDigits:","maximumIntegerDigits","setMaximumIntegerDigits:","minimumFractionDigits","setMinimumFractionDigits:","maximumFractionDigits","setMaximumFractionDigits:","minimum","setMinimum:","maximum","setMaximum:","hasThousandSeparators","setHasThousandSeparators:","thousandSeparator","setThousandSeparator:","localizesFormat","setLocalizesFormat:","format","setFormat:","attributedStringForZero","setAttributedStringForZero:","attributedStringForNil","setAttributedStringForNil:","attributedStringForNotANumber","setAttributedStringForNotANumber:","roundingBehavior","setRoundingBehavior:","version","setVersion:","classForCoder","replacementObjectForCoder:","awakeAfterUsingCoder:","scriptingProperties","setScriptingProperties:","init","start","main","isCancelled","cancel","isExecuting","isFinished","isConcurrent","isReady","addDependency:","removeDependency:","dependencies","queuePriority","setQueuePriority:","blockOperationWithBlock:","addExecutionBlock:","executionBlocks","initWithTarget:selector:object:","initWithInvocation:","invocation","result","addOperation:","operations","maxConcurrentOperationCount","setMaxConcurrentOperationCount:","setSuspended:","isSuspended","cancelAllOperations","waitUntilAllOperationsAreFinished","count","objectAtIndex:","indexOfObject:","objectsAtIndexes:","firstObject","lastObject","isEqualToOrderedSet:","containsObject:","intersectsOrderedSet:","intersectsSet:","isSubsetOfOrderedSet:","isSubsetOfSet:","objectEnumerator","reverseObjectEnumerator","reversedOrderedSet","array","set","indexOfObject:inSortedRange:options:usingComparator:","sortedArrayUsingComparator:","sortedArrayWithOptions:usingComparator:","description","descriptionWithLocale:","descriptionWithLocale:indent:","orderedSet","orderedSetWithObject:","orderedSetWithObjects:count:","orderedSetWithOrderedSet:","orderedSetWithOrderedSet:range:copyItems:","orderedSetWithArray:","orderedSetWithArray:range:copyItems:","orderedSetWithSet:","orderedSetWithSet:copyItems:","initWithObject:","initWithObjects:count:","initWithOrderedSet:","initWithOrderedSet:copyItems:","initWithOrderedSet:range:copyItems:","initWithArray:","initWithArray:copyItems:","initWithArray:range:copyItems:","initWithSet:","initWithSet:copyItems:","insertObject:atIndex:","removeObjectAtIndex:","replaceObjectAtIndex:withObject:","addObject:","addObjects:count:","addObjectsFromArray:","exchangeObjectAtIndex:withObjectAtIndex:","moveObjectsAtIndexes:toIndex:","insertObjects:atIndexes:","setObject:atIndex:","replaceObjectsInRange:withObjects:count:","replaceObjectsAtIndexes:withObjects:","removeObjectsInRange:","removeObjectsAtIndexes:","removeAllObjects","removeObject:","removeObjectsInArray:","intersectOrderedSet:","minusOrderedSet:","unionOrderedSet:","intersectSet:","minusSet:","unionSet:","sortUsingComparator:","sortWithOptions:usingComparator:","sortRange:options:usingComparator:","orderedSetWithCapacity:","initWithCapacity:","languagesForScript:","dominantLanguageForScript:","orthographyWithDominantScript:languageMap:","initWithDominantScript:languageMap:","pathWithComponents:","pathComponents","isAbsolutePath","lastPathComponent","stringByDeletingLastPathComponent","stringByAppendingPathComponent:","pathExtension","stringByDeletingPathExtension","stringByAppendingPathExtension:","stringByAbbreviatingWithTildeInPath","stringByExpandingTildeInPath","stringByStandardizingPath","stringByResolvingSymlinksInPath","stringsByAppendingPaths:","completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:","getFileSystemRepresentation:maxLength:","pathsMatchingExtensions:","initWithOptions:","initWithPointerFunctions:","pointerArrayWithOptions:","pointerArrayWithPointerFunctions:","pointerFunctions","pointerAtIndex:","addPointer:","removePointerAtIndex:","insertPointer:atIndex:","replacePointerAtIndex:withPointer:","compact","count","setCount:","pointerArrayWithStrongObjects","pointerArrayWithWeakObjects","allObjects","initWithOptions:","pointerFunctionsWithOptions:","port","invalidate","isValid","setDelegate:","delegate","scheduleInRunLoop:forMode:","removeFromRunLoop:forMode:","reservedSpaceLength","sendBeforeDate:components:from:reserved:","sendBeforeDate:msgid:components:from:reserved:","addConnection:toRunLoop:forMode:","removeConnection:fromRunLoop:forMode:","setDelegate:","delegate","scheduleInRunLoop:forMode:","removeFromRunLoop:forMode:","init","initWithTCPPort:","initWithProtocolFamily:socketType:protocol:address:","initWithProtocolFamily:socketType:protocol:socket:","initRemoteWithTCPPort:host:","initRemoteWithProtocolFamily:socketType:protocol:address:","protocolFamily","socketType","protocol","address","socket","isBycopy","isByref","encodePortObject:","decodePortObject","classForPortCoder","replacementObjectForPortCoder:","initWithSendPort:receivePort:components:","components","receivePort","sendPort","sendBeforeDate:","systemDefaultPortNameServer","portForName:","portForName:host:","registerPort:name:","removePortForName:","sharedInstance","portForName:","portForName:host:","registerPort:name:","sharedInstance","portForName:","portForName:host:","sharedInstance","portForName:","portForName:host:","registerPort:name:","removePortForName:","predicateWithFormat:argumentArray:","predicateWithValue:","predicateFormat","predicateWithSubstitutionVariables:","evaluateWithObject:","filteredArrayUsingPredicate:","filterUsingPredicate:","processInfo","environment","arguments","hostName","processName","processIdentifier","setProcessName:","globallyUniqueString","operatingSystem","operatingSystemName","operatingSystemVersionString","propertyList:isValidForFormat:","protocol","target","protocolCheckerWithTarget:protocol:","initWithTarget:protocol:","valueWithRange:","rangeValue","regularExpressionWithPattern:options:error:","initWithPattern:options:error:","escapedPatternForString:","matchesInString:options:range:","numberOfMatchesInString:options:range:","firstMatchInString:options:range:","rangeOfFirstMatchInString:options:range:","stringByReplacingMatchesInString:options:range:withTemplate:","replaceMatchesInString:options:range:withTemplate:","replacementStringForResult:inString:offset:template:","escapedTemplateForString:","dataDetectorWithTypes:error:","initWithTypes:error:","currentRunLoop","currentMode","getCFRunLoop","addTimer:forMode:","addPort:forMode:","removePort:forMode:","limitDateForMode:","acceptInputForMode:beforeDate:","run","runUntilDate:","runMode:beforeDate:","performSelector:withObject:afterDelay:inModes:","performSelector:withObject:afterDelay:","cancelPreviousPerformRequestsWithTarget:selector:object:","cancelPreviousPerformRequestsWithTarget:","performSelector:target:argument:order:modes:","cancelPerformSelector:target:argument:","cancelPerformSelectorsWithTarget:","string","scanLocation","setScanLocation:","setCharactersToBeSkipped:","setCaseSensitive:","setLocale:","charactersToBeSkipped","caseSensitive","locale","scanInt:","scanHexInt:","scanLongLong:","scanFloat:","scanDouble:","scanString:intoString:","scanCharactersFromSet:intoString:","scanUpToString:intoString:","scanUpToCharactersFromSet:intoString:","isAtEnd","initWithString:","scannerWithString:","localizedScannerWithString:","classDescriptionForClass:","initWithSuiteName:className:dictionary:","suiteName","className","implementationClassName","superclassDescription","appleEventCode","matchesAppleEventCode:","supportsCommand:","selectorForCommand:","typeForKey:","classDescriptionForKey:","appleEventCodeForKey:","keyWithAppleEventCode:","defaultSubcontainerAttributeKey","isLocationRequiredToCreateForKey:","classCode","className","sharedCoercionHandler","coerceValue:toClass:","registerCoercer:selector:toConvertFromClass:toClass:","initWithCommandDescription:","commandDescription","setDirectParameter:","directParameter","setReceiversSpecifier:","receiversSpecifier","evaluatedReceivers","setArguments:","arguments","evaluatedArguments","isWellFormed","performDefaultImplementation","executeCommand","setScriptErrorNumber:","setScriptErrorString:","scriptErrorNumber","scriptErrorString","currentCommand","appleEvent","suspendExecution","resumeExecutionWithResult:","initWithSuiteName:commandName:dictionary:","suiteName","commandName","appleEventClassCode","appleEventCode","commandClassName","returnType","appleEventCodeForReturnType","argumentNames","typeForArgumentWithName:","appleEventCodeForArgumentWithName:","isOptionalArgumentWithName:","createCommandInstance","createCommandInstanceWithZone:","sharedScriptExecutionContext","topLevelObject","setTopLevelObject:","objectBeingTested","setObjectBeingTested:","rangeContainerObject","setRangeContainerObject:","valueAtIndex:inPropertyWithKey:","valueWithName:inPropertyWithKey:","valueWithUniqueID:inPropertyWithKey:","insertValue:atIndex:inPropertyWithKey:","removeValueAtIndex:fromPropertyWithKey:","replaceValueAtIndex:inPropertyWithKey:withValue:","insertValue:inPropertyWithKey:","coerceValue:forKey:","initWithContainerSpecifier:key:","initWithContainerClassDescription:containerSpecifier:key:","childSpecifier","setChildSpecifier:","containerSpecifier","setContainerSpecifier:","containerIsObjectBeingTested","setContainerIsObjectBeingTested:","containerIsRangeContainerObject","setContainerIsRangeContainerObject:","key","setKey:","containerClassDescription","setContainerClassDescription:","keyClassDescription","indicesOfObjectsByEvaluatingWithContainer:count:","objectsByEvaluatingWithContainers:","objectsByEvaluatingSpecifier","evaluationErrorNumber","setEvaluationErrorNumber:","evaluationErrorSpecifier","objectSpecifier","indicesOfObjectsByEvaluatingObjectSpecifier:","initWithContainerClassDescription:containerSpecifier:key:index:","index","setIndex:","initWithContainerClassDescription:containerSpecifier:key:name:","name","setName:","initWithPosition:objectSpecifier:","setInsertionClassDescription:","evaluate","insertionContainer","insertionKey","insertionIndex","insertionReplaces","initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:","startSpecifier","setStartSpecifier:","endSpecifier","setEndSpecifier:","initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:","relativePosition","setRelativePosition:","baseSpecifier","setBaseSpecifier:","initWithContainerClassDescription:containerSpecifier:key:uniqueID:","uniqueID","setUniqueID:","initWithContainerClassDescription:containerSpecifier:key:test:","test","setTest:","startSubelementIdentifier","setStartSubelementIdentifier:","startSubelementIndex","setStartSubelementIndex:","endSubelementIdentifier","setEndSubelementIdentifier:","endSubelementIndex","setEndSubelementIndex:","setReceiversSpecifier:","keySpecifier","saveOptions","createClassDescription","resolvedKeyDictionary","setReceiversSpecifier:","keySpecifier","setReceiversSpecifier:","keySpecifier","saveOptions","setReceiversSpecifier:","keySpecifier","sharedScriptSuiteRegistry","setSharedScriptSuiteRegistry:","loadSuitesFromBundle:","loadSuiteWithDictionary:fromBundle:","registerClassDescription:","registerCommandDescription:","suiteNames","appleEventCodeForSuite:","bundleForSuite:","classDescriptionsInSuite:","commandDescriptionsInSuite:","suiteForAppleEventCode:","classDescriptionWithAppleEventCode:","commandDescriptionWithAppleEventClass:andAppleEventCode:","aeteResource:","isTrue","initAndTestWithTests:","initOrTestWithTests:","initNotTestWithTest:","initWithObjectSpecifier:comparisonOperator:testObject:","isEqualTo:","isLessThanOrEqualTo:","isLessThan:","isGreaterThanOrEqualTo:","isGreaterThan:","isNotEqualTo:","doesContain:","isLike:","isCaseInsensitiveLike:","scriptingIsEqualTo:","scriptingIsLessThanOrEqualTo:","scriptingIsLessThan:","scriptingIsGreaterThanOrEqualTo:","scriptingIsGreaterThan:","scriptingBeginsWith:","scriptingEndsWith:","scriptingContains:","count","member:","objectEnumerator","allObjects","anyObject","containsObject:","description","descriptionWithLocale:","intersectsSet:","isEqualToSet:","isSubsetOfSet:","makeObjectsPerformSelector:","makeObjectsPerformSelector:withObject:","set","setWithObject:","setWithObjects:count:","setWithSet:","setWithArray:","initWithObjects:count:","initWithSet:","initWithSet:copyItems:","initWithArray:","addObject:","removeObject:","addObjectsFromArray:","intersectSet:","minusSet:","removeAllObjects","unionSet:","setSet:","setWithCapacity:","initWithCapacity:","initWithCapacity:","initWithArray:","initWithSet:","countForObject:","objectEnumerator","addObject:","removeObject:","initWithKey:ascending:","initWithKey:ascending:selector:","key","ascending","selector","compareObject:toObject:","reversedSortDescriptor","sortedArrayUsingDescriptors:","sortUsingDescriptors:","setDelegate:","delegate","registerLanguage:byVendor:","isWordInUserDictionaries:caseSensitive:","run","open","close","delegate","setDelegate:","propertyForKey:","setProperty:forKey:","scheduleInRunLoop:forMode:","removeFromRunLoop:forMode:","streamStatus","streamError","hasBytesAvailable","hasSpaceAvailable","getStreamsToHost:port:inputStream:outputStream:","initWithData:","initWithFileAtPath:","inputStreamWithData:","inputStreamWithFileAtPath:","initToMemory","initToFileAtPath:append:","outputStreamToMemory","outputStreamToFileAtPath:append:","length","characterAtIndex:","getCharacters:range:","substringFromIndex:","substringToIndex:","substringWithRange:","compare:","compare:options:","compare:options:range:","compare:options:range:locale:","caseInsensitiveCompare:","localizedCompare:","localizedCaseInsensitiveCompare:","isEqualToString:","hasPrefix:","hasSuffix:","rangeOfString:","rangeOfString:options:","rangeOfString:options:range:","rangeOfCharacterFromSet:","rangeOfCharacterFromSet:options:","rangeOfCharacterFromSet:options:range:","rangeOfComposedCharacterSequenceAtIndex:","stringByAppendingString:","doubleValue","floatValue","intValue","componentsSeparatedByString:","commonPrefixWithString:options:","uppercaseString","lowercaseString","capitalizedString","stringByTrimmingCharactersInSet:","stringByPaddingToLength:withString:startingAtIndex:","getLineStart:end:contentsEnd:forRange:","lineRangeForRange:","getParagraphStart:end:contentsEnd:forRange:","paragraphRangeForRange:","description","hash","fastestEncoding","smallestEncoding","dataUsingEncoding:allowLossyConversion:","dataUsingEncoding:","canBeConvertedToEncoding:","getCString:maxLength:encoding:","getBytes:maxLength:usedLength:encoding:options:range:remainingRange:","maximumLengthOfBytesUsingEncoding:","lengthOfBytesUsingEncoding:","decomposedStringWithCanonicalMapping","precomposedStringWithCanonicalMapping","decomposedStringWithCompatibilityMapping","precomposedStringWithCompatibilityMapping","defaultCStringEncoding","availableStringEncodings","localizedNameOfStringEncoding:","init","initWithCharactersNoCopy:length:freeWhenDone:","initWithCharacters:length:","initWithUTF8String:","initWithString:","initWithData:encoding:","initWithBytes:length:encoding:","initWithBytesNoCopy:length:encoding:freeWhenDone:","string","stringWithString:","stringWithCharacters:length:","stringWithUTF8String:","initWithCString:encoding:","stringWithCString:encoding:","initWithContentsOfURL:encoding:error:","initWithContentsOfFile:encoding:error:","stringWithContentsOfURL:encoding:error:","stringWithContentsOfFile:encoding:error:","initWithContentsOfURL:usedEncoding:error:","initWithContentsOfFile:usedEncoding:error:","stringWithContentsOfURL:usedEncoding:error:","stringWithContentsOfFile:usedEncoding:error:","writeToURL:atomically:encoding:error:","writeToFile:atomically:encoding:error:","replaceCharactersInRange:withString:","insertString:atIndex:","deleteCharactersInRange:","appendString:","setString:","initWithCapacity:","stringWithCapacity:","replaceOccurrencesOfString:withString:options:range:","propertyList","propertyListFromStringsFileFormat","getCharacters:","init","setLaunchPath:","setArguments:","setEnvironment:","setCurrentDirectoryPath:","setStandardInput:","setStandardOutput:","setStandardError:","launchPath","arguments","environment","currentDirectoryPath","standardInput","standardOutput","standardError","launch","interrupt","terminate","suspend","resume","processIdentifier","isRunning","terminationStatus","launchedTaskWithLaunchPath:arguments:","waitUntilExit","orthographyCheckingResultWithRange:orthography:","spellCheckingResultWithRange:","grammarCheckingResultWithRange:details:","dateCheckingResultWithRange:date:","dateCheckingResultWithRange:date:timeZone:duration:","addressCheckingResultWithRange:components:","linkCheckingResultWithRange:URL:","quoteCheckingResultWithRange:replacementString:","dashCheckingResultWithRange:replacementString:","replacementCheckingResultWithRange:replacementString:","correctionCheckingResultWithRange:replacementString:","currentThread","detachNewThreadSelector:toTarget:withObject:","isMultiThreaded","threadDictionary","sleepUntilDate:","sleepForTimeInterval:","exit","threadPriority","setThreadPriority:","performSelectorOnMainThread:withObject:waitUntilDone:modes:","performSelectorOnMainThread:withObject:waitUntilDone:","timerWithTimeInterval:invocation:repeats:","scheduledTimerWithTimeInterval:invocation:repeats:","timerWithTimeInterval:target:selector:userInfo:repeats:","scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:","initWithFireDate:interval:target:selector:userInfo:repeats:","fire","fireDate","setFireDate:","timeInterval","invalidate","isValid","userInfo","name","data","secondsFromGMTForDate:","abbreviationForDate:","isDaylightSavingTimeForDate:","systemTimeZone","resetSystemTimeZone","defaultTimeZone","setDefaultTimeZone:","localTimeZone","knownTimeZoneNames","abbreviationDictionary","secondsFromGMT","abbreviation","isDaylightSavingTime","description","isEqualToTimeZone:","timeZoneWithName:","timeZoneWithName:data:","initWithName:","initWithName:data:","timeZoneForSecondsFromGMT:","timeZoneWithAbbreviation:","defaultStore","objectForKey:","setObject:forKey:","removeObjectForKey:","stringForKey:","arrayForKey:","dictionaryForKey:","dataForKey:","longLongForKey:","doubleForKey:","boolForKey:","setString:forKey:","setData:forKey:","setArray:forKey:","setDictionary:forKey:","setLongLong:forKey:","setDouble:forKey:","setBool:forKey:","dictionaryRepresentation","synchronize","beginUndoGrouping","endUndoGrouping","groupingLevel","disableUndoRegistration","enableUndoRegistration","isUndoRegistrationEnabled","groupsByEvent","setGroupsByEvent:","setLevelsOfUndo:","levelsOfUndo","setRunLoopModes:","runLoopModes","undo","redo","undoNestedGroup","canUndo","canRedo","isUndoing","isRedoing","removeAllActions","removeAllActionsWithTarget:","registerUndoWithTarget:selector:object:","prepareWithInvocationTarget:","undoActionName","redoActionName","setActionName:","undoMenuItemTitle","redoMenuItemTitle","undoMenuTitleForUndoActionName:","redoMenuTitleForUndoActionName:","initWithScheme:host:path:","initFileURLWithPath:","fileURLWithPath:","initWithString:","initWithString:relativeToURL:","URLWithString:","URLWithString:relativeToURL:","absoluteString","relativeString","baseURL","absoluteURL","scheme","resourceSpecifier","host","port","user","password","path","fragment","parameterString","query","relativePath","isFileURL","standardizedURL","stringByAddingPercentEscapesUsingEncoding:","stringByReplacingPercentEscapesUsingEncoding:","initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:","initWithAuthenticationChallenge:sender:","protectionSpace","proposedCredential","previousFailureCount","failureResponse","error","sender","initWithResponse:data:","initWithResponse:data:userInfo:storagePolicy:","response","data","userInfo","storagePolicy","sharedURLCache","setSharedURLCache:","initWithMemoryCapacity:diskCapacity:diskPath:","cachedResponseForRequest:","storeCachedResponse:forRequest:","removeCachedResponseForRequest:","removeAllCachedResponses","memoryCapacity","diskCapacity","setMemoryCapacity:","setDiskCapacity:","currentMemoryUsage","currentDiskUsage","canHandleRequest:","connectionWithRequest:delegate:","initWithRequest:delegate:","cancel","sendSynchronousRequest:returningResponse:error:","persistence","initWithUser:password:persistence:","credentialWithUser:password:persistence:","user","password","hasPassword","identity","sharedCredentialStorage","credentialsForProtectionSpace:","allCredentials","setCredential:forProtectionSpace:","removeCredential:forProtectionSpace:","defaultCredentialForProtectionSpace:","setDefaultCredential:forProtectionSpace:","canResumeDownloadDecodedWithEncodingMIMEType:","initWithRequest:delegate:","initWithResumeData:delegate:path:","cancel","setDestination:allowOverwrite:","request","resumeData","setDeletesFileUponFailure:","deletesFileUponFailure","initWithHost:port:protocol:realm:authenticationMethod:","initWithProxyHost:port:type:realm:authenticationMethod:","realm","receivesCredentialSecurely","isProxy","host","port","proxyType","protocol","authenticationMethod","initWithRequest:cachedResponse:client:","client","request","cachedResponse","canInitWithRequest:","canonicalRequestForRequest:","requestIsCacheEquivalent:toRequest:","startLoading","stopLoading","propertyForKey:inRequest:","setProperty:forKey:inRequest:","removePropertyForKey:inRequest:","registerClass:","unregisterClass:","requestWithURL:","requestWithURL:cachePolicy:timeoutInterval:","initWithURL:","initWithURL:cachePolicy:timeoutInterval:","URL","cachePolicy","timeoutInterval","mainDocumentURL","setURL:","setCachePolicy:","setTimeoutInterval:","setMainDocumentURL:","HTTPMethod","allHTTPHeaderFields","valueForHTTPHeaderField:","HTTPBody","HTTPBodyStream","HTTPShouldHandleCookies","setHTTPMethod:","setAllHTTPHeaderFields:","setValue:forHTTPHeaderField:","addValue:forHTTPHeaderField:","setHTTPBody:","setHTTPBodyStream:","setHTTPShouldHandleCookies:","initWithURL:MIMEType:expectedContentLength:textEncodingName:","URL","MIMEType","expectedContentLength","textEncodingName","suggestedFilename","statusCode","allHeaderFields","localizedStringForStatusCode:","standardUserDefaults","resetStandardUserDefaults","init","initWithUser:","objectForKey:","setObject:forKey:","removeObjectForKey:","stringForKey:","arrayForKey:","dictionaryForKey:","dataForKey:","stringArrayForKey:","integerForKey:","floatForKey:","doubleForKey:","boolForKey:","setInteger:forKey:","setFloat:forKey:","setDouble:forKey:","setBool:forKey:","registerDefaults:","addSuiteNamed:","removeSuiteNamed:","dictionaryRepresentation","volatileDomainNames","volatileDomainForName:","setVolatileDomain:forName:","removeVolatileDomainForName:","persistentDomainNames","persistentDomainForName:","setPersistentDomain:forName:","removePersistentDomainForName:","synchronize","objectIsForcedForKey:","objectIsForcedForKey:inDomain:","getValue:","objCType","initWithBytes:objCType:","valueWithBytes:objCType:","value:withObjCType:","valueWithNonretainedObject:","nonretainedObjectValue","valueWithPointer:","pointerValue","isEqualToValue:","charValue","unsignedCharValue","shortValue","unsignedShortValue","intValue","unsignedIntValue","longValue","unsignedLongValue","longLongValue","unsignedLongLongValue","floatValue","doubleValue","boolValue","stringValue","compare:","isEqualToNumber:","descriptionWithLocale:","initWithChar:","initWithUnsignedChar:","initWithShort:","initWithUnsignedShort:","initWithInt:","initWithUnsignedInt:","initWithLong:","initWithUnsignedLong:","initWithLongLong:","initWithUnsignedLongLong:","initWithFloat:","initWithDouble:","initWithBool:","numberWithChar:","numberWithUnsignedChar:","numberWithShort:","numberWithUnsignedShort:","numberWithInt:","numberWithUnsignedInt:","numberWithLong:","numberWithUnsignedLong:","numberWithLongLong:","numberWithUnsignedLongLong:","numberWithFloat:","numberWithDouble:","numberWithBool:","setValueTransformer:forName:","valueTransformerForName:","valueTransformerNames","transformedValueClass","allowsReverseTransformation","transformedValue:","reverseTransformedValue:","initWithXMLString:options:error:","initWithContentsOfURL:options:error:","initWithData:options:error:","initWithRootElement:","replacementClassForClass:","setCharacterEncoding:","characterEncoding","setVersion:","version","setStandalone:","isStandalone","setDocumentContentKind:","documentContentKind","setMIMEType:","MIMEType","setDTD:","DTD","setRootElement:","rootElement","insertChild:atIndex:","insertChildren:atIndex:","removeChildAtIndex:","setChildren:","addChild:","replaceChildAtIndex:withNode:","XMLData","XMLDataWithOptions:","objectByApplyingXSLT:arguments:error:","objectByApplyingXSLTString:arguments:error:","objectByApplyingXSLTAtURL:arguments:error:","validateAndReturnError:","initWithContentsOfURL:options:error:","initWithData:options:error:","setPublicID:","publicID","setSystemID:","systemID","insertChild:atIndex:","insertChildren:atIndex:","removeChildAtIndex:","setChildren:","addChild:","replaceChildAtIndex:withNode:","entityDeclarationForName:","notationDeclarationForName:","elementDeclarationForName:","attributeDeclarationForName:elementName:","predefinedEntityDeclarationForName:","initWithXMLString:","setDTDKind:","DTDKind","isExternal","setPublicID:","publicID","setSystemID:","systemID","setNotationName:","notationName","initWithName:","initWithName:URI:","initWithName:stringValue:","initWithXMLString:error:","elementsForName:","elementsForLocalName:URI:","addAttribute:","removeAttributeForName:","setAttributes:","setAttributesWithDictionary:","attributes","attributeForName:","attributeForLocalName:URI:","addNamespace:","removeNamespaceForPrefix:","setNamespaces:","namespaces","namespaceForPrefix:","resolveNamespaceForName:","resolvePrefixForNamespaceURI:","insertChild:atIndex:","insertChildren:atIndex:","removeChildAtIndex:","setChildren:","addChild:","replaceChildAtIndex:withNode:","normalizeAdjacentTextNodesPreservingCDATA:","setAttributesAsDictionary:","initWithKind:","initWithKind:options:","document","documentWithRootElement:","elementWithName:","elementWithName:URI:","elementWithName:stringValue:","elementWithName:children:attributes:","attributeWithName:stringValue:","attributeWithName:URI:stringValue:","namespaceWithName:stringValue:","processingInstructionWithName:stringValue:","commentWithStringValue:","textWithStringValue:","DTDNodeWithXMLString:","kind","setName:","name","setObjectValue:","objectValue","setStringValue:","setStringValue:resolvingEntities:","stringValue","index","level","rootDocument","parent","childCount","children","childAtIndex:","previousSibling","nextSibling","previousNode","nextNode","detach","XPath","localName","prefix","setURI:","URI","localNameForName:","prefixForName:","predefinedNamespaceForPrefix:","description","XMLString","XMLStringWithOptions:","canonicalXMLStringPreservingComments:","nodesForXPath:error:","objectsForXQuery:constants:error:","objectsForXQuery:error:","initWithContentsOfURL:","initWithData:","delegate","setDelegate:","setShouldProcessNamespaces:","setShouldReportNamespacePrefixes:","setShouldResolveExternalEntities:","shouldProcessNamespaces","shouldReportNamespacePrefixes","shouldResolveExternalEntities","parse","abortParsing","parserError","publicID","systemID","lineNumber","columnNumber","filesOfType:","requestSyncClock","requestEnableTethering","requestDisableTethering","requestTakePicture","requestDeleteFiles:","cancelDelete","requestDownloadFile:options:downloadDelegate:didDownloadSelector:contextInfo:","cancelDownload","requestUploadFile:options:uploadDelegate:didUploadSelector:contextInfo:","requestSendPTPCommand:outData:sendCommandDelegate:didSendCommandSelector:contextInfo:","requestOpenSession","requestCloseSession","requestYield","requestSendMessage:outData:maxReturnedDataSize:sendMessageDelegate:didSendMessageSelector:contextInfo:","requestEjectOrDisconnect","preferredDevice","init","start","stop","requestSelectFunctionalUnit:","requestOverviewScan","requestScan","cancelScan","fileTransferWithPath:type:totalBytes:","initWithPath:type:totalBytes:","resetInputStream","resetOutputStream","outgoingFileTransferForPath:","setContainerName:","addIncomingFileTransfer:","incomingFileTransfers","incomingFileTransferForPath:","servicePlugInMessageWithContent:","initWithContent:","initWithServer:panelType:","initWithServer:panelType:styleType:","panelType","setPanelType:","show:","hide","isVisible","updateCandidates","showAnnotation:","showSublist:subListDelegate:","selectedCandidateString","setCandidateFrameTopLeft:","candidateFrame","setSelectionKeys:","selectionKeys","setSelectionKeysKeylayout:","selectionKeysKeylayout","setAttributes:","attributes","setDismissesAutomatically:","dismissesAutomatically","selectCandidate:","inputText:key:modifiers:client:","inputText:client:","handleEvent:client:","didCommandBySelector:client:","composedString:","originalString:","commitComposition:","candidates:","initWithServer:delegate:client:","updateComposition","cancelComposition","compositionAttributesAtRange:","selectionRange","replacementRange","markForStyle:atRange:","doCommandBySelector:commandDictionary:","hidePalettes","menu","delegate","setDelegate:","server","annotationSelected:forCandidate:","candidateSelectionChanged:","candidateSelected:","initWithName:bundleIdentifier:","initWithName:controllerClass:delegateClass:","bundle","initWithSection:","title","section","contentView","initialKeyView","firstKeyView","lastKeyView","nextPane","willEnterPane:","didEnterPane:","shouldExitPane:","willExitPane:","didExitPane:","setNextEnabled:","nextEnabled","setPreviousEnabled:","previousEnabled","gotoNextPane","gotoPreviousPane","bundle","title","firstPane","shouldLoad","willLoadMainNib","didLoadMainNib","sharedDictionary","installerState","activePane","gotoPane:","licenseAgreed","licenseAgreedLanguage","targetVolumePath","targetPath","choiceDictionaries","choiceDictionaryForIdentifier:","installStarted","installSucceeded","target","setTarget:","action","setAction:","tag","setTag:","isEnabled","setEnabled:","integerValue","setIntegerValue:","intValue","setIntValue:","floatValue","setFloatValue:","doubleValue","setDoubleValue:","state","setState:","playPauseButton","forwardButton","backwardButton","muteButton","minValue","setMinValue:","maxValue","setMaxValue:","timeSlider","controls","addControl:","removeControl:","removeAllControls","sharedAVManager","state","URLToShare","setVideoDataSource:","videoDataSource","setVideoOptimizationOptions:","videoOptimizationOptions","setNumberOfAudioChannels:","numberOfAudioChannels","audioDeviceUID","audioDeviceChannels","controlBar","start","stop","getPixelBufferPixelFormat:","renderIntoPixelBuffer:forTime:","getOpenGLBufferContext:pixelFormat:","renderIntoOpenGLBuffer:onScreen:forTime:","imageNameForStatus:","allServices","serviceWithName:","notificationCenter","myStatus","myIdleTime","localizedName","localizedShortName","name","status","infoForScreenName:","infoForAllScreenNames","infoForPreferredScreenNames","peopleWithScreenName:","screenNamesForPerson:","setJavaStartupOptions:","initWithFrame:javaFrameClassName:","setJavaFrameClassName:","javaFrameClassName","javaFrame","setDelegate:","delegate","javaFrameView:didCreateJavaFrame:withJNIEnv:","defaultConfiguration","configurationForVendor:","vendorNames","init","initWithVendor:","vendorName","valueForKey:","valueForKey:expandEnvironmentVariables:","defaultVirtualMachine","defaultClassPath","initWithClassPath:","attachCurrentThread","detachCurrentThread","findClass:","defineClass:withName:","nodeWithSession:type:error:","nodeWithSession:name:error:","initWithSession:type:error:","initWithSession:name:error:","subnodeNamesAndReturnError:","unreachableSubnodeNamesAndReturnError:","nodeDetailsForKeys:error:","supportedRecordTypesAndReturnError:","supportedAttributesForRecordType:error:","setCredentialsWithRecordType:recordName:password:error:","setCredentialsWithRecordType:authenticationType:authenticationItems:continueItems:context:error:","createRecordWithRecordType:name:attributes:error:","recordWithRecordType:name:attributes:error:","customCall:sendData:error:","queryWithNode:forRecordTypes:attribute:matchType:queryValues:returnAttributes:maximumResults:error:","initWithNode:forRecordTypes:attribute:matchType:queryValues:returnAttributes:maximumResults:error:","resultsAllowingPartial:error:","scheduleInRunLoop:forMode:","removeFromRunLoop:forMode:","synchronize","setNodeCredentials:password:error:","setNodeCredentialsWithRecordType:authenticationType:authenticationItems:continueItems:context:error:","passwordPolicyAndReturnError:","verifyPassword:error:","verifyExtendedWithAuthenticationType:authenticationItems:continueItems:context:error:","changePassword:toPassword:error:","synchronizeAndReturnError:","recordDetailsForAttributes:error:","valuesForAttribute:error:","setValue:forAttribute:error:","removeValuesForAttribute:error:","addValue:toAttribute:error:","removeValue:fromAttribute:error:","deleteRecordAndReturnError:","addMemberRecord:error:","removeMemberRecord:error:","isMemberRecord:error:","defaultSession","sessionWithOptions:error:","initWithOptions:error:","nodeNamesAndReturnError:","availableLanguages","languageForName:","defaultLanguage","setDefaultLanguage:","initWithComponent:","componentInstance","name","info","version","type","subType","manufacturer","features","languageInstanceWithLanguage:","initWithLanguage:","language","componentInstance","initWithSource:","initWithContentsOfURL:error:","source","url","language","setLanguage:","isCompiled","compileAndReturnError:","executeAndReturnError:","executeAppleEvent:error:","executeAndReturnDisplayValue:error:","executeHandlerWithName:arguments:error:","richTextSource","richTextFromDescriptor:","writeToURL:ofType:error:","writeToURL:ofType:usingStorageOptions:error:","compiledDataForType:usingStorageOptions:error:","scriptView","setScriptView:","resultView","setResultView:","script","setScript:","language","setLanguage:","scriptState","isCompiling","compileScript:","recordScript:","runScript:","stopScript:","source","setSource:","usesScriptAssistant","setUsesScriptAssistant:","usesTabs","setUsesTabs:","tabWidth","setTabWidth:","wrapsLines","setWrapsLines:","indentsWrappedLines","setIndentsWrappedLines:","indentWidth","setIndentWidth:","initWithBundle:","bundle","loadMainView","mainViewDidLoad","mainNibName","assignMainView","willSelect","didSelect","shouldUnselect","replyToShouldUnselect:","willUnselect","didUnselect","setMainView:","mainView","initialKeyView","setInitialKeyView:","firstKeyView","setFirstKeyView:","lastKeyView","setLastKeyView:","autoSaveTextFields","isSelected","updateHelpMenuWithArray:","applicationClient","clientForBundleIdentifier:","allClientBundleIdentifiers","sendChangesSinceDate:","addFeed:","addFeedWithURL:","removeFeed:","feedWithURL:","feedWithIdentifier:","entryWithIdentifier:","feedDidBeginRefresh:","feedDidEndRefresh:","feed:didAddEntries:","feed:didRemoveEntriesWithIdentifiers:","feed:didUpdateEntries:","feed:didChangeFlagsInEntries:","enclosure:downloadStateDidChange:","download:","cancelDownload","deleteDownload","extensionXMLElementsUsingNamespace:","initWithURL:","initWithData:URL:","refresh:","setPassword:","entryEnumeratorSortedBy:","XMLRepresentation","XMLRepresentationWithEntries:","extensionXMLElementsUsingNamespace:","defaultFeedSettings","defaultClientSettings","linksInXML:baseURL:","outputDeviceUniqueID","setOutputDeviceUniqueID:","volume","setVolume:","owner","mediaType","formatDescription","isEnabled","setEnabled:","connectionAttributes","setConnectionAttributes:","attributeIsReadOnly:","attributeForKey:","setAttribute:forKey:","delegate","setDelegate:","outputAudioSampleBuffer:fromConnection:","captureOutput:didOutputAudioSampleBuffer:fromConnection:","pixelBufferAttributes","setPixelBufferAttributes:","minimumVideoFrameInterval","setMinimumVideoFrameInterval:","automaticallyDropsLateVideoFrames","setAutomaticallyDropsLateVideoFrames:","delegate","setDelegate:","outputVideoFrame:withSampleBuffer:fromConnection:","captureOutput:didOutputVideoFrame:withSampleBuffer:fromConnection:","captureOutput:didDropVideoFrameWithSampleBuffer:fromConnection:","inputDevices","inputDevicesWithMediaType:","defaultInputDeviceWithMediaType:","deviceWithUniqueID:","uniqueID","modelUniqueID","localizedDisplayName","formatDescriptions","hasMediaType:","deviceAttributes","setDeviceAttributes:","attributeIsReadOnly:","attributeForKey:","setAttribute:forKey:","isConnected","isInUseByAnotherApplication","isOpen","open:","close","deviceInputWithDevice:","initWithDevice:","device","outputFileURL","recordToOutputFileURL:","recordToOutputFileURL:bufferDestination:","isRecordingPaused","pauseRecording","resumeRecording","compressionOptionsForConnection:","setCompressionOptions:forConnection:","maximumVideoSize","setMaximumVideoSize:","minimumVideoFrameInterval","setMinimumVideoFrameInterval:","recordedDuration","recordedFileSize","maximumRecordedDuration","setMaximumRecordedDuration:","maximumRecordedFileSize","setMaximumRecordedFileSize:","delegate","setDelegate:","captureOutput:didOutputSampleBuffer:fromConnection:","captureOutput:willStartRecordingToOutputFileAtURL:forConnections:","captureOutput:didStartRecordingToOutputFileAtURL:forConnections:","captureOutput:shouldChangeOutputFileAtURL:forConnections:dueToError:","captureOutput:mustChangeOutputFileAtURL:forConnections:dueToError:","captureOutput:willFinishRecordingToOutputFileAtURL:forConnections:dueToError:","captureOutput:didFinishRecordingToOutputFileAtURL:forConnections:dueToError:","captureOutput:didPauseRecordingToOutputFileAtURL:forConnections:","captureOutput:didResumeRecordingToOutputFileAtURL:forConnections:","connections","layerWithSession:","initWithSession:","setSession:","session","connections","inputs","addInput:error:","removeInput:","outputs","addOutput:error:","removeOutput:","isRunning","startRunning","stopRunning","pixelBufferAttributes","setPixelBufferAttributes:","visualContextForConnection:","setVisualContext:forConnection:","delegate","setDelegate:","outputVideoFrame:withSampleBuffer:fromConnection:","captureOutput:didOutputVideoFrame:withSampleBuffer:fromConnection:","captureSession","setCaptureSession:","availableVideoPreviewConnections","videoPreviewConnection","setVideoPreviewConnection:","fillColor","setFillColor:","preservesAspectRatio","setPreservesAspectRatio:","previewBounds","delegate","setDelegate:","view:willDisplayImage:","compressionOptionsIdentifiersForMediaType:","compressionOptionsWithIdentifier:","mediaType","localizedDisplayName","localizedCompressionOptionsSummary","isEqualToCompressionOptions:","dataReferenceWithDataRef:type:","dataReferenceWithDataRefData:type:","dataReferenceWithReferenceToFile:","dataReferenceWithReferenceToURL:","dataReferenceWithReferenceToData:","dataReferenceWithReferenceToData:name:MIMEType:","initWithDataRef:type:","initWithDataRefData:type:","initWithReferenceToFile:","initWithReferenceToURL:","initWithReferenceToData:","initWithReferenceToData:name:MIMEType:","dataRef","dataRefData","dataRefType","referenceFile","referenceURL","referenceData","name","MIMEType","setDataRef:","setDataRefType:","allExportOptionsIdentifiers","exportOptionsIdentifiersCompatibleWithMovie:","localizedNameForExportOptionsIdentifier:","exportOptionsWithIdentifier:","localizedExportOptionsSummary","recommendedFileTypesForExportedFile","initWithMovie:exportOptions:outputURL:error:","run","cancel","waitUntilFinished:","localizedExportSessionOutputSummary","mediaType","formatType","localizedFormatSummary","quickTimeSampleDescription","formatDescriptionAttributes","attributeForKey:","isEqualToFormatDescription:","mediaWithQuickTimeMedia:error:","initWithQuickTimeMedia:error:","track","mediaAttributes","setMediaAttributes:","attributeForKey:","setAttribute:forKey:","hasCharacteristic:","quickTimeMedia","metadataItemsFromArray:withLocale:","metadataItemsFromArray:withKey:keySpace:","movie:linkToURL:","movieShouldLoadData:","movieShouldTask:","externalMovie:","movie:shouldContinueOperation:withPhase:atPercent:withAttributes:","duration","canInitWithPasteboard:","canInitWithFile:","canInitWithURL:","canInitWithDataReference:","movieFileTypes:","movieUnfilteredFileTypes","movieUnfilteredPasteboardTypes","movieTypesWithOptions:","movie","movieWithFile:error:","movieWithURL:error:","movieWithDataReference:error:","movieWithPasteboard:error:","movieWithData:error:","movieWithQuickTimeMovie:disposeWhenDone:error:","movieWithAttributes:error:","movieNamed:error:","initWithFile:error:","initWithURL:error:","initWithDataReference:error:","initWithPasteboard:error:","initWithData:error:","initWithMovie:timeRange:error:","initWithQuickTimeMovie:disposeWhenDone:error:","initWithAttributes:error:","movieWithTimeRange:error:","initToWritableFile:error:","initToWritableData:error:","initToWritableDataReference:error:","invalidate","movieAttributes","setMovieAttributes:","attributeForKey:","setAttribute:forKey:","tracks","tracksOfMediaType:","posterImage","currentFrameImage","frameImageAtTime:","frameImageAtTime:withAttributes:error:","movieFormatRepresentation","writeToFile:withAttributes:","writeToFile:withAttributes:error:","canUpdateMovieFile","updateMovieFile","autoplay","play","stop","currentTime","setCurrentTime:","gotoBeginning","gotoEnd","gotoNextSelectionPoint","gotoPreviousSelectionPoint","gotoPosterTime","stepForward","stepBackward","rate","setRate:","volume","setVolume:","muted","setMuted:","setSelection:","selectionStart","selectionEnd","selectionDuration","replaceSelectionWithSelectionFromMovie:","appendSelectionFromMovie:","insertSegmentOfMovie:timeRange:atTime:","insertSegmentOfMovie:fromRange:scaledToRange:","insertEmptySegmentAt:","deleteSegment:","scaleSegment:newDuration:","addImage:forDuration:withAttributes:","insertSegmentOfTrack:timeRange:atTime:","insertSegmentOfTrack:fromRange:scaledToRange:","removeTrack:","trackByInsertingSegmentOfTrack:timeRange:atTime:","trackByInsertingSegmentOfTrack:fromRange:scaledToRange:","delegate","setDelegate:","quickTimeMovie","quickTimeMovieController","generateApertureModeDimensions","removeApertureModeDimensions","setVisualContext:","visualContext","enterQTKitOnThread","enterQTKitOnThreadDisablingThreadSafetyProtection","exitQTKitOnThread","attachToCurrentThread","detachFromCurrentThread","setIdling:","isIdling","hasChapters","chapterCount","chapters","addChapters:withAttributes:error:","removeChapters","startTimeOfChapter:","chapterIndexForTime:","commonMetadata","availableMetadataFormats","metadataForFormat:","layerWithMovie:","initWithMovie:","setMovie:","movie","movie","setMovie:","preservesAspectRatio","setPreservesAspectRatio:","fillColor","setFillColor:","isControllerVisible","setControllerVisible:","setShowsResizeIndicator:","isBackButtonVisible","setBackButtonVisible:","isCustomButtonVisible","setCustomButtonVisible:","isHotSpotButtonVisible","setHotSpotButtonVisible:","areStepButtonsVisible","setStepButtonsVisible:","isTranslateButtonVisible","setTranslateButtonVisible:","isVolumeButtonVisible","setVolumeButtonVisible:","areZoomButtonsVisible","setZoomButtonsVisible:","movieBounds","movieControllerBounds","controllerBarHeight","play:","pause:","gotoBeginning:","gotoEnd:","gotoNextSelectionPoint:","gotoPreviousSelectionPoint:","gotoPosterFrame:","stepForward:","stepBackward:","isEditable","setEditable:","cut:","copy:","paste:","selectAll:","selectNone:","delete:","add:","addScaled:","replace:","trim:","delegate","setDelegate:","view:willDisplayImage:","menuForEventDelegate:","bytesForAllSamples","lengthForAllSamples","formatDescription","duration","decodeTime","presentationTime","numberOfSamples","sampleBufferAttributes","attributeForKey:","sampleUseCount","incrementSampleUseCount","decrementSampleUseCount","audioBufferListWithOptions:","getAudioStreamPacketDescriptions:inRange:","valueWithQTTime:","QTTimeValue","encodeQTTime:forKey:","decodeQTTimeForKey:","valueWithSMPTETime:","SMPTETimeValue","encodeSMPTETime:forKey:","decodeSMPTETimeForKey:","valueWithQTTimeRange:","QTTimeRangeValue","encodeQTTimeRange:forKey:","decodeQTTimeRangeForKey:","trackWithQuickTimeTrack:error:","initWithQuickTimeTrack:error:","movie","media","isEnabled","setEnabled:","volume","setVolume:","trackAttributes","setTrackAttributes:","attributeForKey:","setAttribute:forKey:","quickTimeTrack","insertSegmentOfTrack:timeRange:atTime:","insertSegmentOfTrack:fromRange:scaledToRange:","insertEmptySegmentAt:","deleteSegment:","scaleSegment:newDuration:","addImage:forDuration:withAttributes:","apertureModeDimensionsForMode:","setApertureModeDimensions:forMode:","generateApertureModeDimensions","removeApertureModeDimensions","commonMetadata","availableMetadataFormats","metadataForFormat:","animation","defaultValueForKey:","shouldArchiveValueForKey:","animationDidStart:","animationDidStop:finished:","animationWithKeyPath:","addConstraint:","layoutManager","constraintWithAttribute:relativeTo:attribute:scale:offset:","constraintWithAttribute:relativeTo:attribute:offset:","constraintWithAttribute:relativeTo:attribute:","initWithAttribute:relativeTo:attribute:scale:offset:","emitterCell","defaultValueForKey:","shouldArchiveValueForKey:","layer","init","initWithLayer:","presentationLayer","modelLayer","defaultValueForKey:","needsDisplayForKey:","shouldArchiveValueForKey:","affineTransform","setAffineTransform:","contentsAreFlipped","removeFromSuperlayer","addSublayer:","insertSublayer:atIndex:","insertSublayer:below:","insertSublayer:above:","replaceSublayer:with:","convertPoint:fromLayer:","convertPoint:toLayer:","convertRect:fromLayer:","convertRect:toLayer:","convertTime:fromLayer:","convertTime:toLayer:","hitTest:","containsPoint:","display","setNeedsDisplay","setNeedsDisplayInRect:","needsDisplay","displayIfNeeded","drawInContext:","renderInContext:","preferredFrameSize","setNeedsLayout","needsLayout","layoutIfNeeded","layoutSublayers","resizeSublayersWithOldSize:","resizeWithOldSuperlayerSize:","defaultActionForKey:","actionForKey:","addAnimation:forKey:","removeAllAnimations","removeAnimationForKey:","animationKeys","animationForKey:","preferredSizeOfLayer:","invalidateLayoutOfLayer:","layoutSublayersOfLayer:","displayLayer:","drawLayer:inContext:","layoutSublayersOfLayer:","actionForLayer:forKey:","functionWithName:","functionWithControlPoints:","initWithControlPoints:","canDrawInCGLContext:pixelFormat:forLayerTime:displayTime:","drawInCGLContext:pixelFormat:forLayerTime:displayTime:","releaseCGLPixelFormat:","copyCGLContextForPixelFormat:","releaseCGLContext:","invalidate","sharedServer","rendererWithCGLContext:options:","beginFrameAtTime:timeStamp:","updateBounds","addUpdateRect:","render","nextFrameTime","endFrame","scrollToPoint:","scrollToRect:","scrollPoint:","scrollRectToVisible:","fadeDuration","begin","commit","flush","lock","unlock","animationDuration","setAnimationDuration:","animationTimingFunction","setAnimationTimingFunction:","disableActions","setDisableActions:","completionBlock","setCompletionBlock:","valueForKey:","setValue:forKey:","valueWithCATransform3D:","CATransform3DValue","functionWithName:","RBObjectWithRubyScriptCString:","RBObjectWithRubyScriptString:","initWithRubyObject:","initWithRubyScriptCString:","initWithRubyScriptString:","isKindOfClass:","isRBObject","isRBObject","defaultsForModuleWithName:","backingStoreType","performGammaFade","initWithFrame:","initWithFrame:isPreview:","animationTimeInterval","setAnimationTimeInterval:","startAnimation","stopAnimation","isAnimating","drawRect:","animateOneFrame","hasConfigureSheet","configureSheet","isPreview","initWithBundleIdentifier:","initWithURL:","applicationWithBundleIdentifier:","applicationWithURL:","classForScriptingClass:","isRunning","activate","delegate","setDelegate:","launchFlags","setLaunchFlags:","sendMode","setSendMode:","timeout","setTimeout:","objectWithName:","objectWithID:","objectAtLocation:","arrayByApplyingSelector:","arrayByApplyingSelector:withObject:","get","init","initWithProperties:","initWithData:","get","lastError","initWithElementCode:properties:data:","propertyWithCode:","propertyWithClass:code:","elementArrayWithCode:","setTo:","authorization","authorizationRef","authorizationWithFlags:rights:environment:","initWithFlags:rights:environment:","init","invalidateCredentials","obtainWithRight:flags:error:","obtainWithRights:flags:environment:authorizedRights:error:","initWithCallbacks:andEngineRef:","engineRef","callbacks","buttonPressed:","lastError","didActivate","willActivateWithUser:","didDeactivate","firstKeyView","firstResponder","lastKeyView","setEnabled:","viewForType:","displayView","setButton:enabled:","updateView","setString:","setAuthorizationRights:","authorizationRights","authorization","updateStatus:","setAutoupdate:","setAutoupdate:interval:","authorizationState","setEnabled:","isEnabled","setFlags:","setDelegate:","delegate","authorize:","deauthorize:","authorizationViewDidAuthorize:","authorizationViewDidDeauthorize:","authorizationViewShouldDeauthorize:","authorizationViewCreatedAuthorization:","authorizationViewReleasedAuthorization:","authorizationViewDidHide:","sharedCertificatePanel","runModalForTrust:showGroup:","runModalForCertificates:showGroup:","beginSheetForWindow:modalDelegate:didEndSelector:contextInfo:trust:showGroup:","beginSheetForWindow:modalDelegate:didEndSelector:contextInfo:certificates:showGroup:","setPolicies:","policies","setDefaultButtonTitle:","setAlternateButtonTitle:","setShowsHelp:","showsHelp","setHelpAnchor:","helpAnchor","certificateView","certificatePanelShowHelp:","sharedCertificateTrustPanel","runModalForTrust:message:","beginSheetForWindow:modalDelegate:didEndSelector:contextInfo:trust:message:","setInformativeText:","informativeText","setCertificate:","certificate","setPolicies:","policies","setEditableTrust:","isEditable","setDisplayTrust:","isTrustDisplayed","saveTrustSettings","setDisplayDetails:","detailsDisplayed","setDetailsDisclosed:","detailsDisclosed","setPoliciesDisclosed:","policiesDisclosed","sharedChooseIdentityPanel","runModalForIdentities:message:","beginSheetForWindow:modalDelegate:didEndSelector:contextInfo:identities:message:","identity","setPolicies:","policies","setDefaultButtonTitle:","setAlternateButtonTitle:","setShowsHelp:","showsHelp","setHelpAnchor:","helpAnchor","setInformativeText:","informativeText","setDomain:","domain","chooseIdentityPanelShowHelp:","sharedKeychainSavePanel","runModalForDirectory:file:","setPassword:","keychain","error","createPanelDidEnd:returnCode:contextInfo:","beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:","sharedKeychainSettingsPanel","runModalForSettings:keychain:","settingsPanelDidEnd:returnCode:contextInfo:","beginSheetForWindow:modalDelegate:didEndSelector:contextInfo:settings:keychain:","centerForService:","serviceHost","addObserver:selector:name:object:","postNotification:","postNotificationName:object:","postNotificationName:object:userInfo:","removeObserver:","removeObserver:name:object:","paymentWithProduct:","defaultQueue","canMakePayments","addPayment:","restoreCompletedTransactions","finishTransaction:","addTransactionObserver:","removeTransactionObserver:","initWithProductIdentifiers:","cancel","start","client:beginSession:","sessionDriverDidFinishSession:","sessionDriverDidCancelSession:","appendData:","azimuth","setAzimuth:","background","setBackground:","backgroundAttachment","setBackgroundAttachment:","backgroundColor","setBackgroundColor:","backgroundImage","setBackgroundImage:","backgroundPosition","setBackgroundPosition:","backgroundRepeat","setBackgroundRepeat:","border","setBorder:","borderCollapse","setBorderCollapse:","borderColor","setBorderColor:","borderSpacing","setBorderSpacing:","borderStyle","setBorderStyle:","borderTop","setBorderTop:","borderRight","setBorderRight:","borderBottom","setBorderBottom:","borderLeft","setBorderLeft:","borderTopColor","setBorderTopColor:","borderRightColor","setBorderRightColor:","borderBottomColor","setBorderBottomColor:","borderLeftColor","setBorderLeftColor:","borderTopStyle","setBorderTopStyle:","borderRightStyle","setBorderRightStyle:","borderBottomStyle","setBorderBottomStyle:","borderLeftStyle","setBorderLeftStyle:","borderTopWidth","setBorderTopWidth:","borderRightWidth","setBorderRightWidth:","borderBottomWidth","setBorderBottomWidth:","borderLeftWidth","setBorderLeftWidth:","borderWidth","setBorderWidth:","bottom","setBottom:","captionSide","setCaptionSide:","clear","setClear:","clip","setClip:","color","setColor:","content","setContent:","counterIncrement","setCounterIncrement:","counterReset","setCounterReset:","cue","setCue:","cueAfter","setCueAfter:","cueBefore","setCueBefore:","cursor","setCursor:","direction","setDirection:","display","setDisplay:","elevation","setElevation:","emptyCells","setEmptyCells:","cssFloat","setCssFloat:","font","setFont:","fontFamily","setFontFamily:","fontSize","setFontSize:","fontSizeAdjust","setFontSizeAdjust:","fontStretch","setFontStretch:","fontStyle","setFontStyle:","fontVariant","setFontVariant:","fontWeight","setFontWeight:","height","setHeight:","left","setLeft:","letterSpacing","setLetterSpacing:","lineHeight","setLineHeight:","listStyle","setListStyle:","listStyleImage","setListStyleImage:","listStylePosition","setListStylePosition:","listStyleType","setListStyleType:","margin","setMargin:","marginTop","setMarginTop:","marginRight","setMarginRight:","marginBottom","setMarginBottom:","marginLeft","setMarginLeft:","markerOffset","setMarkerOffset:","marks","setMarks:","maxHeight","setMaxHeight:","maxWidth","setMaxWidth:","minHeight","setMinHeight:","minWidth","setMinWidth:","orphans","setOrphans:","outline","setOutline:","outlineColor","setOutlineColor:","outlineStyle","setOutlineStyle:","outlineWidth","setOutlineWidth:","overflow","setOverflow:","padding","setPadding:","paddingTop","setPaddingTop:","paddingRight","setPaddingRight:","paddingBottom","setPaddingBottom:","paddingLeft","setPaddingLeft:","page","setPage:","pageBreakAfter","setPageBreakAfter:","pageBreakBefore","setPageBreakBefore:","pageBreakInside","setPageBreakInside:","pause","setPause:","pauseAfter","setPauseAfter:","pauseBefore","setPauseBefore:","pitch","setPitch:","pitchRange","setPitchRange:","playDuring","setPlayDuring:","position","setPosition:","quotes","setQuotes:","richness","setRichness:","right","setRight:","size","setSize:","speak","setSpeak:","speakHeader","setSpeakHeader:","speakNumeral","setSpeakNumeral:","speakPunctuation","setSpeakPunctuation:","speechRate","setSpeechRate:","stress","setStress:","tableLayout","setTableLayout:","textAlign","setTextAlign:","textDecoration","setTextDecoration:","textIndent","setTextIndent:","textShadow","setTextShadow:","textTransform","setTextTransform:","top","setTop:","unicodeBidi","setUnicodeBidi:","verticalAlign","setVerticalAlign:","visibility","setVisibility:","voiceFamily","setVoiceFamily:","volume","setVolume:","whiteSpace","setWhiteSpace:","widows","setWidows:","width","setWidth:","wordSpacing","setWordSpacing:","zIndex","setZIndex:","deleteRule:","getFloatValue:","getStringValue","getCounterValue","getRectValue","getRGBColorValue","item:","getPropertyValue:","getPropertyCSSValue:","removeProperty:","getPropertyPriority:","item:","deleteRule:","item:","createElement:","createDocumentFragment","createTextNode:","createComment:","createCDATASection:","createAttribute:","createEntityReference:","getElementsByTagName:","getElementById:","createEvent:","createRange","getElementsByName:","getAttribute:","removeAttribute:","getAttributeNode:","setAttributeNode:","removeAttributeNode:","getElementsByTagName:","setAttributeNodeNS:","hasAttribute:","stopPropagation","preventDefault","item:","item:","namedItem:","open","close","write:","writeln:","submit","reset","select","click","start","stop","item:","namedItem:","remove:","createTHead","deleteTHead","createTFoot","deleteTFoot","createCaption","deleteCaption","insertRow:","deleteRow:","insertCell:","deleteCell:","insertRow:","deleteRow:","select","getModifierState:","item:","deleteMedium:","appendMedium:","getNamedItem:","setNamedItem:","removeNamedItem:","item:","setNamedItemNS:","removeChild:","appendChild:","hasChildNodes","cloneNode:","normalize","hasAttributes","nextNode","previousNode","detach","item:","initOverflowEvent:horizontalOverflow:verticalOverflow:","initProgressEvent:canBubbleArg:cancelableArg:lengthComputableArg:loadedArg:totalArg:","setStartBefore:","setStartAfter:","setEndBefore:","setEndAfter:","collapse:","selectNode:","selectNodeContents:","deleteContents","extractContents","cloneContents","insertNode:","surroundContents:","cloneRange","toString","detach","item:","splitText:","parentNode","firstChild","lastChild","previousSibling","nextSibling","previousNode","nextNode","iterateNext","snapshotItem:","initWithMainResource:subresources:subframeArchives:","initWithData:","mainResource","subresources","subframeArchives","data","addItem:","goBack","goForward","goToItem:","backItem","currentItem","forwardItem","backListWithLimit:","forwardListWithLimit:","capacity","setCapacity:","backListCount","forwardListCount","containsItem:","itemAtIndex:","setPageCacheSize:","pageCacheSize","initWithRequest:","data","representation","webFrame","initialRequest","request","response","textEncodingName","isLoading","pageTitle","unreachableURL","webArchive","mainResource","subresources","subresourceForURL:","addSubresource:","webArchive","webFrame","URLWithAttributeString:","webArchive","markupString","contentFrame","contentFrame","contentFrame","downloadWindowForAuthenticationSheet:","webView:shouldBeginEditingInDOMRange:","webView:shouldEndEditingInDOMRange:","webView:shouldInsertNode:replacingDOMRange:givenAction:","webView:shouldInsertText:replacingDOMRange:givenAction:","webView:shouldDeleteDOMRange:","webView:shouldChangeSelectedDOMRange:toDOMRange:affinity:stillSelecting:","webView:shouldApplyStyle:toElementsInDOMRange:","webView:shouldChangeTypingStyle:toStyle:","webView:doCommandBySelector:","webViewDidBeginEditing:","webViewDidChange:","webViewDidEndEditing:","webViewDidChangeTypingStyle:","webViewDidChangeSelection:","undoManagerForWebView:","initWithName:webFrameView:webView:","name","webView","frameView","DOMDocument","frameElement","loadRequest:","loadData:MIMEType:textEncodingName:baseURL:","loadHTMLString:baseURL:","loadAlternateHTMLString:baseURL:forUnreachableURL:","loadArchive:","dataSource","provisionalDataSource","stopLoading","reload","reloadFromOrigin","findFrameNamed:","parentFrame","childFrames","windowObject","globalContext","webView:didStartProvisionalLoadForFrame:","webView:didReceiveServerRedirectForProvisionalLoadForFrame:","webView:didFailProvisionalLoadWithError:forFrame:","webView:didCommitLoadForFrame:","webView:didReceiveTitle:forFrame:","webView:didReceiveIcon:forFrame:","webView:didFinishLoadForFrame:","webView:didFailLoadWithError:forFrame:","webView:didChangeLocationWithinPageForFrame:","webView:willPerformClientRedirectToURL:delay:fireDate:forFrame:","webView:didCancelClientRedirectForFrame:","webView:willCloseFrame:","webView:didClearWindowObject:forFrame:","webFrame","documentView","setAllowsScrolling:","allowsScrolling","canPrintHeadersAndFooters","printOperationWithPrintInfo:","documentViewShouldHandlePrint","printDocumentView","optionalSharedHistory","setOptionalSharedHistory:","loadFromURL:error:","saveToURL:error:","addItems:","removeItems:","removeAllItems","orderedLastVisitedDays","orderedItemsLastVisitedOnDay:","itemForURL:","setHistoryItemLimit:","historyItemLimit","setHistoryAgeInDaysLimit:","historyAgeInDaysLimit","initWithURLString:title:lastVisitedTimeInterval:","originalURLString","URLString","title","lastVisitedTimeInterval","setAlternateTitle:","alternateTitle","icon","webPlugInGetApplet","webPlugInCallJava:isStatic:returnType:method:arguments:callingURL:exceptionDescription:","webPlugInInitialize","webPlugInStart","webPlugInStop","webPlugInDestroy","webPlugInSetIsSelected:","objectForWebScript","webPlugInContainerLoadRequest:inFrame:","webPlugInContainerShowStatus:","webPlugInContainerSelectionColor","webFrame","webView:decidePolicyForNavigationAction:request:frame:decisionListener:","webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:","webView:decidePolicyForMIMEType:request:frame:decisionListener:","webView:unableToImplementPolicyWithError:frame:","standardPreferences","initWithIdentifier:","identifier","standardFontFamily","setStandardFontFamily:","fixedFontFamily","setFixedFontFamily:","serifFontFamily","setSerifFontFamily:","sansSerifFontFamily","setSansSerifFontFamily:","cursiveFontFamily","setCursiveFontFamily:","fantasyFontFamily","setFantasyFontFamily:","defaultFontSize","setDefaultFontSize:","defaultFixedFontSize","setDefaultFixedFontSize:","minimumFontSize","setMinimumFontSize:","minimumLogicalFontSize","setMinimumLogicalFontSize:","defaultTextEncodingName","setDefaultTextEncodingName:","userStyleSheetEnabled","setUserStyleSheetEnabled:","userStyleSheetLocation","setUserStyleSheetLocation:","isJavaEnabled","setJavaEnabled:","isJavaScriptEnabled","setJavaScriptEnabled:","javaScriptCanOpenWindowsAutomatically","setJavaScriptCanOpenWindowsAutomatically:","arePlugInsEnabled","setPlugInsEnabled:","allowsAnimatedImages","setAllowsAnimatedImages:","allowsAnimatedImageLooping","setAllowsAnimatedImageLooping:","setLoadsImagesAutomatically:","loadsImagesAutomatically","setAutosaves:","autosaves","setShouldPrintBackgrounds:","shouldPrintBackgrounds","setPrivateBrowsingEnabled:","privateBrowsingEnabled","setTabsToLinks:","tabsToLinks","setUsesPageCache:","usesPageCache","setCacheModel:","cacheModel","initWithData:URL:MIMEType:textEncodingName:frameName:","data","URL","MIMEType","textEncodingName","frameName","webView:identifierForInitialRequest:fromDataSource:","webView:resource:willSendRequest:redirectResponse:fromDataSource:","webView:resource:didReceiveAuthenticationChallenge:fromDataSource:","webView:resource:didCancelAuthenticationChallenge:fromDataSource:","webView:resource:didReceiveResponse:fromDataSource:","webView:resource:didReceiveContentLength:fromDataSource:","webView:resource:didFinishLoadingFromDataSource:","webView:resource:didFailLoadingWithError:fromDataSource:","webView:plugInFailedWithError:dataSource:","webScriptNameForSelector:","isSelectorExcludedFromWebScript:","webScriptNameForKey:","isKeyExcludedFromWebScript:","invokeUndefinedMethodFromWebScript:withArguments:","invokeDefaultMethodWithArguments:","finalizeForWebScript","throwException:","callWebScriptMethod:withArguments:","evaluateWebScript:","removeWebScriptKey:","stringRepresentation","webScriptValueAtIndex:","setWebScriptValueAtIndex:value:","setException:","undefined","webView:createWebViewWithRequest:","webViewShow:","webView:createWebViewModalDialogWithRequest:","webViewRunModal:","webViewClose:","webViewFocus:","webViewUnfocus:","webViewFirstResponder:","webView:makeFirstResponder:","webView:setStatusText:","webViewStatusText:","webViewAreToolbarsVisible:","webView:setToolbarsVisible:","webViewIsStatusBarVisible:","webView:setStatusBarVisible:","webViewIsResizable:","webView:setResizable:","webView:setFrame:","webViewFrame:","webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:","webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:","webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:","webView:runBeforeUnloadConfirmPanelWithMessage:initiatedByFrame:","webView:runOpenPanelForFileButtonWithResultListener:","webView:mouseDidMoveOverElement:modifierFlags:","webView:contextMenuItemsForElement:defaultMenuItems:","webView:validateUserInterfaceItem:defaultValidation:","webView:shouldPerformAction:fromSender:","webView:dragDestinationActionMaskForDraggingInfo:","webView:willPerformDragDestinationAction:forDraggingInfo:","webView:dragSourceActionMaskForPoint:","webView:willPerformDragSourceAction:fromPoint:withPasteboard:","webView:printFrameView:","webViewHeaderHeight:","webViewFooterHeight:","webView:drawHeaderInRect:","webView:drawFooterInRect:","canShowMIMEType:","canShowMIMETypeAsHTML:","MIMETypesShownAsHTML","setMIMETypesShownAsHTML:","URLFromPasteboard:","URLTitleFromPasteboard:","registerURLSchemeAsLocal:","initWithFrame:frameName:groupName:","close","setShouldCloseWithWindow:","shouldCloseWithWindow","setUIDelegate:","UIDelegate","setResourceLoadDelegate:","resourceLoadDelegate","setDownloadDelegate:","downloadDelegate","setFrameLoadDelegate:","frameLoadDelegate","setPolicyDelegate:","policyDelegate","mainFrame","selectedFrame","backForwardList","setMaintainsBackForwardList:","goBack","goForward","goToBackForwardItem:","setTextSizeMultiplier:","textSizeMultiplier","setApplicationNameForUserAgent:","applicationNameForUserAgent","setCustomUserAgent:","customUserAgent","userAgentForURL:","supportsTextEncoding","setCustomTextEncodingName:","customTextEncodingName","setMediaStyle:","mediaStyle","stringByEvaluatingJavaScriptFromString:","windowScriptObject","setPreferences:","preferences","setPreferencesIdentifier:","preferencesIdentifier","setHostWindow:","hostWindow","searchFor:direction:caseSensitive:wrap:","registerViewClass:representationClass:forMIMEType:","setGroupName:","groupName","estimatedProgress","isLoading","elementAtPoint:","pasteboardTypesForSelection","writeSelectionWithPasteboardTypes:toPasteboard:","pasteboardTypesForElement:","writeElement:withPasteboardTypes:toPasteboard:","moveDragCaretToPoint:","removeDragCaret","setDrawsBackground:","drawsBackground","setShouldUpdateWhileOffscreen:","shouldUpdateWhileOffscreen","setMainFrameURL:","mainFrameURL","mainFrameDocument","mainFrameTitle","mainFrameIcon","takeStringURLFrom:","stopLoading:","reload:","reloadFromOrigin:","canGoBack","goBack:","canGoForward","goForward:","canMakeTextLarger","makeTextLarger:","canMakeTextSmaller","makeTextSmaller:","canMakeTextStandardSize","makeTextStandardSize:","toggleContinuousSpellChecking:","toggleSmartInsertDelete:","computedStyleForElement:pseudoElement:","editableDOMRangeForPoint:","setSelectedDOMRange:affinity:","selectedDOMRange","selectionAffinity","maintainsInactiveSelection","setEditable:","isEditable","setTypingStyle:","typingStyle","setSmartInsertDeleteEnabled:","smartInsertDeleteEnabled","setContinuousSpellCheckingEnabled:","isContinuousSpellCheckingEnabled","spellCheckerDocumentTag","undoManager","setEditingDelegate:","editingDelegate","styleDeclarationWithText:","replaceSelectionWithNode:","replaceSelectionWithText:","replaceSelectionWithMarkupString:","replaceSelectionWithArchive:","deleteSelection","applyStyle:","copy:","cut:","paste:","copyFont:","pasteFont:","delete:","pasteAsPlainText:","pasteAsRichText:","changeFont:","changeAttributes:","changeDocumentBackgroundColor:","changeColor:","alignCenter:","alignJustified:","alignLeft:","alignRight:","checkSpelling:","showGuessPanel:","performFindPanelAction:","startSpeaking:","stopSpeaking:","moveToBeginningOfSentence:","moveToBeginningOfSentenceAndModifySelection:","moveToEndOfSentence:","moveToEndOfSentenceAndModifySelection:","selectSentence:","capitalizeWord:","centerSelectionInVisibleArea:","changeCaseOfLetter:","complete:","deleteBackward:","deleteBackwardByDecomposingPreviousCharacter:","deleteForward:","deleteToBeginningOfLine:","deleteToBeginningOfParagraph:","deleteToEndOfLine:","deleteToEndOfParagraph:","deleteWordBackward:","deleteWordForward:","indent:","insertBacktab:","insertNewline:","insertParagraphSeparator:","insertTab:","lowercaseWord:","moveBackward:","moveBackwardAndModifySelection:","moveDown:","moveDownAndModifySelection:","moveForward:","moveForwardAndModifySelection:","moveLeft:","moveLeftAndModifySelection:","moveRight:","moveRightAndModifySelection:","moveToBeginningOfDocument:","moveToBeginningOfDocumentAndModifySelection:","moveToBeginningOfLine:","moveToBeginningOfLineAndModifySelection:","moveToBeginningOfParagraph:","moveToBeginningOfParagraphAndModifySelection:","moveToEndOfDocument:","moveToEndOfDocumentAndModifySelection:","moveToEndOfLine:","moveToEndOfLineAndModifySelection:","moveToEndOfParagraph:","moveToEndOfParagraphAndModifySelection:","moveUp:","moveUpAndModifySelection:","moveWordBackward:","moveWordBackwardAndModifySelection:","moveWordForward:","moveWordForwardAndModifySelection:","moveWordLeft:","moveWordLeftAndModifySelection:","moveWordRight:","moveWordRightAndModifySelection:","pageDown:","pageUp:","scrollLineDown:","scrollLineUp:","scrollPageDown:","scrollPageUp:","selectAll:","selectLine:","selectParagraph:","selectWord:","uppercaseWord:"],"prototypes":["- (NSString *)actionProperty","- (NSString *)titleForPerson:(ABPerson *)person identifier:(NSString *)identifier","- (void)performActionForPerson:(ABPerson *)person identifier:(NSString *)identifier","- (BOOL)shouldEnableActionForPerson:(ABPerson *)person identifier:(NSString *)identifier","+ (ABAddressBook *)sharedAddressBook","- (NSArray *)recordsMatchingSearchElement:(ABSearchElement *)search","- (BOOL)save","- (BOOL)hasUnsavedChanges","- (ABPerson *)me","- (void)setMe:(ABPerson *)moi","- (ABRecord *)recordForUniqueId:(NSString *)uniqueId","- (BOOL)addRecord:(ABRecord *)record","- (BOOL)removeRecord:(ABRecord *)record","- (NSArray *)people","- (NSArray *)groups","- (NSArray *)members","- (BOOL)addMember:(ABPerson *)person","- (BOOL)removeMember:(ABPerson *)person","- (NSArray *)subgroups","- (BOOL)addSubgroup:(ABGroup *)group","- (BOOL)removeSubgroup:(ABGroup *)group","- (NSArray *)parentGroups","- (BOOL)setDistributionIdentifier:(NSString *)identifier forProperty:(NSString *)property person:(ABPerson *)person","- (NSString *)distributionIdentifierForProperty:(NSString *)property person:(ABPerson *)person","+ (NSInteger)addPropertiesAndTypes:(NSDictionary *)properties","+ (NSInteger)removeProperties:(NSArray *)properties","+ (NSArray *)properties","+ (ABPropertyType)typeOfProperty:(NSString*)property","+ (ABSearchElement *)searchElementForProperty:(NSString*)property label:(NSString*)label key:(NSString*)key value:(id)value comparison:(ABSearchComparison)comparison","- (BOOL)setImageData:(NSData *)data","- (NSData *)imageData","- (NSInteger)beginLoadingImageDataForClient:(id<ABImageClient>)client","+ (void)cancelLoadingImageDataForTag:(NSInteger)tag","- (NSUInteger)count","- (id)valueAtIndex:(NSUInteger)index","- (NSString *)labelAtIndex:(NSUInteger)index","- (NSString *)identifierAtIndex:(NSUInteger)index","- (NSUInteger)indexForIdentifier:(NSString *)identifier","- (NSString *)primaryIdentifier","- (ABPropertyType)propertyType","- (id)valueForIdentifier:(NSString*)identifier","- (id)labelForIdentifier:(NSString*)identifier","- (NSString *)addValue:(id)value withLabel:(NSString *)label","- (NSString *)insertValue:(id)value withLabel:(NSString *)label atIndex:(NSUInteger)index","- (BOOL)removeValueAndLabelAtIndex:(NSUInteger)index","- (BOOL)replaceValueAtIndex:(NSUInteger)index withValue:(id)value","- (BOOL)replaceLabelAtIndex:(NSUInteger)index withLabel:(NSString*)label","- (BOOL)setPrimaryIdentifier:(NSString *)identifier","- (void)addProperty:(NSString *)property","- (void)removeProperty:(NSString *)property","- (NSArray *)properties","- (void)setColumnTitle:(NSString *)title forProperty:(NSString *)property","- (NSString *)columnTitleForProperty:(NSString *)property","- (NSArray *)selectedIdentifiersForPerson:(ABPerson*)person","- (void)selectGroup:(ABGroup *)group byExtendingSelection:(BOOL)extend","- (void)selectRecord:(ABRecord *)record byExtendingSelection:(BOOL)extend","- (void)selectIdentifier:(NSString *)identifier forPerson:(ABPerson *)person byExtendingSelection:(BOOL)extend","- (void)deselectGroup:(ABGroup *)group","- (void)deselectRecord:(ABRecord *)record","- (void)deselectIdentifier:(NSString *)identifier forPerson:(ABPerson *)person","- (void)deselectAll:(id)sender","- (void)clearSearchField:(id)sender","- (NSArray *)selectedValues","- (void)editInAddressBook:(id)sender","- (void)selectInAddressBook:(id)sender","- (NSArray *)parentGroups","+ (NSInteger)addPropertiesAndTypes:(NSDictionary *)properties","+ (NSInteger)removeProperties:(NSArray *)properties","+ (NSArray *)properties","+ (ABPropertyType)typeOfProperty:(NSString*)property","+ (ABSearchElement *)searchElementForProperty:(NSString*)property label:(NSString*)label key:(NSString*)key value:(id)value comparison:(ABSearchComparison)comparison","- (id)initWithVCardRepresentation:(NSData *)vCardData","- (NSData *)vCardRepresentation","- (id)init","- (id)valueForProperty:(NSString *)property","- (BOOL)setValue:(id)value forProperty:(NSString *)property","- (BOOL)removeValueForProperty:(NSString *)property","- (NSString *)uniqueId","+ (ABSearchElement *)searchElementForConjunction:(ABSearchConjunction)conjuction children:(NSArray *)children","- (BOOL)matchesRecord:(ABRecord *)record","- (NSArray *)accessibilityAttributeNames","- (id)accessibilityAttributeValue:(NSString *)attribute","- (BOOL)accessibilityIsAttributeSettable:(NSString *)attribute","- (void)accessibilitySetValue:(id)value forAttribute:(NSString *)attribute","- (NSArray *)accessibilityParameterizedAttributeNames","- (id)accessibilityAttributeValue:(NSString *)attribute forParameter:(id)parameter","- (NSArray *)accessibilityActionNames","- (NSString *)accessibilityActionDescription:(NSString *)action","- (void)accessibilityPerformAction:(NSString *)action","- (BOOL)accessibilityIsIgnored","- (id)accessibilityHitTest:(NSPoint)point","- (id)accessibilityFocusedUIElement","- (NSUInteger)accessibilityIndexOfChild:(id)child","- (NSUInteger)accessibilityArrayAttributeCount:(NSString *)attribute","- (NSArray *)accessibilityArrayAttributeValues:(NSString *)attribute index:(NSUInteger)index maxCount:(NSUInteger)maxCount","- (BOOL)accessibilitySetOverrideValue:(id)value forAttribute:(NSString *)attribute","- (id)target","- (void)setTarget:(id)anObject","- (SEL)action","- (void)setAction:(SEL)aSelector","- (NSInteger)tag","- (void)setTag:(NSInteger)anInt","- (NSBezierPath *)transformBezierPath:(NSBezierPath *)aPath","- (void)set","- (void)concat","+ (NSAlert *)alertWithError:(NSError *)error","- (void)setMessageText:(NSString *)messageText","- (void)setInformativeText:(NSString *)informativeText","- (NSString *)messageText","- (NSString *)informativeText","- (void)setIcon:(NSImage *)icon","- (NSImage *)icon","- (NSButton *)addButtonWithTitle:(NSString *)title","- (NSArray *)buttons","- (void)setShowsHelp:(BOOL)showsHelp","- (BOOL)showsHelp","- (void)setHelpAnchor:(NSString *)anchor","- (NSString *)helpAnchor","- (void)setAlertStyle:(NSAlertStyle)style","- (NSAlertStyle)alertStyle","- (void)setDelegate:(id <NSAlertDelegate>)delegate","- (id <NSAlertDelegate>)delegate","- (NSInteger)runModal","- (void)alertDidEnd:(NSAlert *)alert returnCode:(NSInteger)returnCode contextInfo:(void *)contextInfo","- (void)beginSheetModalForWindow:(NSWindow *)window modalDelegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo","- (id)window","- (id)initWithDuration:(NSTimeInterval)duration animationCurve:(NSAnimationCurve)animationCurve","- (void)startAnimation","- (void)stopAnimation","- (BOOL)isAnimating","- (NSAnimationProgress)currentProgress","- (void)setCurrentProgress:(NSAnimationProgress)progress","- (void)setDuration:(NSTimeInterval)duration","- (NSTimeInterval)duration","- (NSAnimationBlockingMode)animationBlockingMode","- (void)setAnimationBlockingMode:(NSAnimationBlockingMode)animationBlockingMode","- (void)setFrameRate:(float)framesPerSecond","- (float)frameRate","- (void)setAnimationCurve:(NSAnimationCurve)curve","- (NSAnimationCurve)animationCurve","- (float)currentValue","- (void)setDelegate:(id <NSAnimationDelegate>)delegate","- (id <NSAnimationDelegate>)delegate","- (NSArray*)progressMarks","- (void)setProgressMarks:(NSArray*)progressMarks","- (void)addProgressMark:(NSAnimationProgress)progressMark","- (void)removeProgressMark:(NSAnimationProgress)progressMark","- (void)startWhenAnimation:(NSAnimation*)animation reachesProgress:(NSAnimationProgress)startProgress","- (void)stopWhenAnimation:(NSAnimation*)animation reachesProgress:(NSAnimationProgress)stopProgress","- (void)clearStartAnimation","- (void)clearStopAnimation","- (NSArray*)runLoopModesForAnimating","- (id)initWithViewAnimations:(NSArray*)viewAnimations","- (NSArray*)viewAnimations","- (void)setViewAnimations:(NSArray*)viewAnimations","+ (void)beginGrouping","+ (void)endGrouping","+ (NSAnimationContext *)currentContext","- (void)setDuration:(NSTimeInterval)duration","- (NSTimeInterval)duration","- (NSAttributedString *)richTextSource","+ (NSApplication *)sharedApplication","- (void)setDelegate:(id <NSApplicationDelegate>)anObject","- (id <NSApplicationDelegate>)delegate","- (NSGraphicsContext*)context","- (void)hide:(id)sender","- (void)unhide:(id)sender","- (void)unhideWithoutActivation","- (NSWindow *)windowWithWindowNumber:(NSInteger)windowNum","- (NSWindow *)mainWindow","- (NSWindow *)keyWindow","- (BOOL)isActive","- (BOOL)isHidden","- (BOOL)isRunning","- (void)deactivate","- (void)activateIgnoringOtherApps:(BOOL)flag","- (void)hideOtherApplications:(id)sender","- (void)unhideAllApplications:(id)sender","- (void)finishLaunching","- (void)run","- (NSInteger)runModalForWindow:(NSWindow *)theWindow","- (void)stop:(id)sender","- (void)stopModal","- (void)stopModalWithCode:(NSInteger)returnCode","- (void)abortModal","- (NSWindow *)modalWindow","- (NSModalSession)beginModalSessionForWindow:(NSWindow *)theWindow","- (NSInteger)runModalSession:(NSModalSession)session","- (void)endModalSession:(NSModalSession)session","- (void)terminate:(id)sender","- (NSInteger)requestUserAttention:(NSRequestUserAttentionType)requestType","- (void)cancelUserAttentionRequest:(NSInteger)request","- (void)beginSheet:(NSWindow *)sheet modalForWindow:(NSWindow *)docWindow modalDelegate:(id)modalDelegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo","- (void)endSheet:(NSWindow *)sheet","- (void)endSheet:(NSWindow *)sheet returnCode:(NSInteger)returnCode","- (NSEvent *)nextEventMatchingMask:(NSUInteger)mask untilDate:(NSDate *)expiration inMode:(NSString *)mode dequeue:(BOOL)deqFlag","- (void)discardEventsMatchingMask:(NSUInteger)mask beforeEvent:(NSEvent *)lastEvent","- (void)postEvent:(NSEvent *)event atStart:(BOOL)flag","- (NSEvent *)currentEvent","- (void)sendEvent:(NSEvent *)theEvent","- (void)preventWindowOrdering","- (NSWindow *)makeWindowsPerform:(SEL)aSelector inOrder:(BOOL)flag","- (NSArray *)windows","- (void)setWindowsNeedUpdate:(BOOL)needUpdate","- (void)updateWindows","- (void)setMainMenu:(NSMenu *)aMenu","- (NSMenu *)mainMenu","- (void)setApplicationIconImage:(NSImage *)image","- (NSImage *)applicationIconImage","- (BOOL)sendAction:(SEL)theAction to:(id)theTarget from:(id)sender","- (id)targetForAction:(SEL)theAction","- (id)targetForAction:(SEL)theAction to:(id)theTarget from:(id)sender","- (BOOL)tryToPerform:(SEL)anAction with:(id)anObject","- (id)validRequestorForSendType:(NSString *)sendType returnType:(NSString *)returnType","- (void)reportException:(NSException *)theException","+ (void)detachDrawingThread:(SEL)selector toTarget:(id)target withObject:(id)argument","- (void)replyToApplicationShouldTerminate:(BOOL)shouldTerminate","- (void)replyToOpenOrPrint:(NSApplicationDelegateReply)reply","- (void)orderFrontCharacterPalette:(id)sender","- (void)setWindowsMenu:(NSMenu *)aMenu","- (NSMenu *)windowsMenu","- (void)arrangeInFront:(id)sender","- (void)removeWindowsItem:(NSWindow *)win","- (void)addWindowsItem:(NSWindow *)win title:(NSString *)aString filename:(BOOL)isFilename","- (void)changeWindowsItem:(NSWindow *)win title:(NSString *)aString filename:(BOOL)isFilename","- (void)updateWindowsItem:(NSWindow *)win","- (void)miniaturizeAll:(id)sender","- (void)setServicesMenu:(NSMenu *)aMenu","- (NSMenu *)servicesMenu","- (void)registerServicesMenuSendTypes:(NSArray *)sendTypes returnTypes:(NSArray *)returnTypes","- (BOOL)writeSelectionToPasteboard:(NSPasteboard *)pboard types:(NSArray *)types","- (BOOL)readSelectionFromPasteboard:(NSPasteboard *)pboard","- (void)setServicesProvider:(id)provider","- (id)servicesProvider","- (void)orderFrontStandardAboutPanel:(id)sender","- (void)orderFrontStandardAboutPanelWithOptions:(NSDictionary *)optionsDictionary","- (NSArray *)orderedDocuments","- (NSArray *)orderedWindows","- (BOOL)application:(NSApplication *)sender delegateHandlesKey:(NSString *)key","- (void)rearrangeObjects","- (void)setSortDescriptors:(NSArray *)sortDescriptors","- (NSArray *)sortDescriptors","- (void)setFilterPredicate:(NSPredicate *)filterPredicate","- (NSPredicate *)filterPredicate","- (void)setClearsFilterPredicateOnInsertion:(BOOL)flag","- (BOOL)clearsFilterPredicateOnInsertion","- (NSArray *)arrangeObjects:(NSArray *)objects","- (id)arrangedObjects","- (void)setAvoidsEmptySelection:(BOOL)flag","- (BOOL)avoidsEmptySelection","- (void)setPreservesSelection:(BOOL)flag","- (BOOL)preservesSelection","- (void)setSelectsInsertedObjects:(BOOL)flag","- (BOOL)selectsInsertedObjects","- (void)setAlwaysUsesMultipleValuesMarker:(BOOL)flag","- (BOOL)alwaysUsesMultipleValuesMarker","- (BOOL)setSelectionIndexes:(NSIndexSet *)indexes","- (NSIndexSet *)selectionIndexes","- (BOOL)setSelectionIndex:(NSUInteger)index","- (NSUInteger)selectionIndex","- (BOOL)addSelectionIndexes:(NSIndexSet *)indexes","- (BOOL)removeSelectionIndexes:(NSIndexSet *)indexes","- (BOOL)setSelectedObjects:(NSArray *)objects","- (NSArray *)selectedObjects","- (BOOL)addSelectedObjects:(NSArray *)objects","- (BOOL)removeSelectedObjects:(NSArray *)objects","- (void)add:(id)sender","- (void)remove:(id)sender","- (void)insert:(id)sender","- (BOOL)canInsert","- (void)selectNext:(id)sender","- (void)selectPrevious:(id)sender","- (BOOL)canSelectNext","- (BOOL)canSelectPrevious","- (void)addObject:(id)object","- (void)addObjects:(NSArray *)objects","- (void)insertObject:(id)object atArrangedObjectIndex:(NSUInteger)index","- (void)insertObjects:(NSArray *)objects atArrangedObjectIndexes:(NSIndexSet *)indexes","- (void)removeObjectAtArrangedObjectIndex:(NSUInteger)index","- (void)removeObjectsAtArrangedObjectIndexes:(NSIndexSet *)indexes","- (void)removeObject:(id)object","- (void)removeObjects:(NSArray *)objects","+ (id)sharedTypesetter","- (BOOL)usesFontLeading","- (void)setUsesFontLeading:(BOOL)flag","- (NSTypesetterBehavior)typesetterBehavior","- (void)setTypesetterBehavior:(NSTypesetterBehavior)behavior","- (float)hyphenationFactor","- (void)setHyphenationFactor:(float)factor","- (CGFloat)lineFragmentPadding","- (void)setLineFragmentPadding:(CGFloat)padding","- (NSFont *)substituteFontForFont:(NSFont *)originalFont","- (NSTextTab *)textTabForGlyphLocation:(CGFloat)glyphLocation writingDirection:(NSWritingDirection)direction maxLocation:(CGFloat)maxLocation","- (BOOL)bidiProcessingEnabled","- (void)setBidiProcessingEnabled:(BOOL)flag","- (void)setAttributedString:(NSAttributedString *)attrString","- (NSAttributedString *)attributedString","- (void)setParagraphGlyphRange:(NSRange)paragraphRange separatorGlyphRange:(NSRange)paragraphSeparatorRange","- (NSRange)paragraphGlyphRange","- (NSRange)paragraphSeparatorGlyphRange","- (NSUInteger)layoutParagraphAtPoint:(NSPoint *)lineFragmentOrigin","- (CGFloat)lineSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(NSRect)rect","- (CGFloat)paragraphSpacingBeforeGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(NSRect)rect","- (CGFloat)paragraphSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(NSRect)rect","- (NSLayoutManager *)layoutManager","- (NSTextContainer *)currentTextContainer","- (void)setHardInvalidation:(BOOL)flag forGlyphRange:(NSRange)glyphRange","- (void)getLineFragmentRect:(NSRect *)lineFragmentRect usedRect:(NSRect *)lineFragmentUsedRect forParagraphSeparatorGlyphRange:(NSRange)paragraphSeparatorGlyphRange atProposedOrigin:(NSPoint)lineOrigin","- (void)willSetLineFragmentRect:(NSRect *)lineRect forGlyphRange:(NSRange)glyphRange usedRect:(NSRect *)usedRect baselineOffset:(CGFloat *)baselineOffset","- (BOOL)shouldBreakLineByWordBeforeCharacterAtIndex:(NSUInteger)charIndex","- (BOOL)shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(NSUInteger)charIndex","- (float)hyphenationFactorForGlyphAtIndex:(NSUInteger)glyphIndex","- (UTF32Char)hyphenCharacterForGlyphAtIndex:(NSUInteger)glyphIndex","- (NSRect)boundingBoxForControlGlyphAtIndex:(NSUInteger)glyphIndex forTextContainer:(NSTextContainer *)textContainer proposedLineFragment:(NSRect)proposedRect glyphPosition:(NSPoint)glyphPosition characterIndex:(NSUInteger)charIndex","- (NSRange)characterRangeForGlyphRange:(NSRange)glyphRange actualGlyphRange:(NSRangePointer)actualGlyphRange","- (NSRange)glyphRangeForCharacterRange:(NSRange)charRange actualCharacterRange:(NSRangePointer)actualCharRange","- (NSUInteger)getGlyphsInRange:(NSRange)glyphsRange glyphs:(NSGlyph *)glyphBuffer characterIndexes:(NSUInteger *)charIndexBuffer glyphInscriptions:(NSGlyphInscription *)inscribeBuffer elasticBits:(BOOL *)elasticBuffer","- (void)setLineFragmentRect:(NSRect)fragmentRect forGlyphRange:(NSRange)glyphRange usedRect:(NSRect)usedRect baselineOffset:(CGFloat)baselineOffset","- (void)substituteGlyphsInRange:(NSRange)glyphRange withGlyphs:(NSGlyph *)glyphs","- (void)insertGlyph:(NSGlyph)glyph atGlyphIndex:(NSUInteger)glyphIndex characterIndex:(NSUInteger)characterIndex","- (void)deleteGlyphsInRange:(NSRange)glyphRange","- (void)setNotShownAttribute:(BOOL)flag forGlyphRange:(NSRange)glyphRange","- (void)setDrawsOutsideLineFragment:(BOOL)flag forGlyphRange:(NSRange)glyphRange","- (void)setLocation:(NSPoint)location withAdvancements:(const CGFloat *)advancements forStartOfGlyphRange:(NSRange)glyphRange","- (void)setAttachmentSize:(NSSize)attachmentSize forGlyphRange:(NSRange)glyphRange","- (NSDictionary *)fontAttributesInRange:(NSRange)range","- (NSDictionary *)rulerAttributesInRange:(NSRange)range","- (BOOL)containsAttachments","- (NSUInteger)lineBreakBeforeIndex:(NSUInteger)location withinRange:(NSRange)aRange","- (NSUInteger)lineBreakByHyphenatingBeforeIndex:(NSUInteger)location withinRange:(NSRange)aRange","- (NSRange)doubleClickAtIndex:(NSUInteger)location","- (NSUInteger)nextWordFromIndex:(NSUInteger)location forward:(BOOL)isForward","- (NSRange)rangeOfTextBlock:(NSTextBlock *)block atIndex:(NSUInteger)location","- (NSRange)rangeOfTextTable:(NSTextTable *)table atIndex:(NSUInteger)location","- (NSRange)rangeOfTextList:(NSTextList *)list atIndex:(NSUInteger)location","- (NSInteger)itemNumberInTextList:(NSTextList *)list atIndex:(NSUInteger)location","- (id)initWithURL:(NSURL *)url options:(NSDictionary *)options documentAttributes:(NSDictionary **)dict error:(NSError **)error","- (id)initWithData:(NSData *)data options:(NSDictionary *)options documentAttributes:(NSDictionary **)dict error:(NSError **)error","- (id)initWithPath:(NSString *)path documentAttributes:(NSDictionary **)dict","- (id)initWithURL:(NSURL *)url documentAttributes:(NSDictionary **)dict","- (id)initWithRTF:(NSData *)data documentAttributes:(NSDictionary **)dict","- (id)initWithRTFD:(NSData *)data documentAttributes:(NSDictionary **)dict","- (id)initWithHTML:(NSData *)data documentAttributes:(NSDictionary **)dict","- (id)initWithHTML:(NSData *)data baseURL:(NSURL *)base documentAttributes:(NSDictionary **)dict","- (id)initWithDocFormat:(NSData *)data documentAttributes:(NSDictionary **)dict","- (id)initWithHTML:(NSData *)data options:(NSDictionary *)options documentAttributes:(NSDictionary **)dict","- (id)initWithRTFDFileWrapper:(NSFileWrapper *)wrapper documentAttributes:(NSDictionary **)dict","- (NSData *)dataFromRange:(NSRange)range documentAttributes:(NSDictionary *)dict error:(NSError **)error","- (NSFileWrapper *)fileWrapperFromRange:(NSRange)range documentAttributes:(NSDictionary *)dict error:(NSError **)error","- (NSData *)RTFFromRange:(NSRange)range documentAttributes:(NSDictionary *)dict","- (NSData *)RTFDFromRange:(NSRange)range documentAttributes:(NSDictionary *)dict","- (NSFileWrapper *)RTFDFileWrapperFromRange:(NSRange)range documentAttributes:(NSDictionary *)dict","- (NSData *)docFormatFromRange:(NSRange)range documentAttributes:(NSDictionary *)dict","- (BOOL)readFromURL:(NSURL *)url options:(NSDictionary *)opts documentAttributes:(NSDictionary **)dict error:(NSError **)error","- (BOOL)readFromData:(NSData *)data options:(NSDictionary *)opts documentAttributes:(NSDictionary **)dict error:(NSError **)error","- (BOOL)readFromURL:(NSURL *)url options:(NSDictionary *)options documentAttributes:(NSDictionary **)dict","- (BOOL)readFromData:(NSData *)data options:(NSDictionary *)options documentAttributes:(NSDictionary **)dict","- (void)superscriptRange:(NSRange)range","- (void)subscriptRange:(NSRange)range","- (void)unscriptRange:(NSRange)range","- (void)applyFontTraits:(NSFontTraitMask)traitMask range:(NSRange)range","- (void)setAlignment:(NSTextAlignment)alignment range:(NSRange)range","- (void)setBaseWritingDirection:(NSWritingDirection)writingDirection range:(NSRange)range","- (void)fixAttributesInRange:(NSRange)range","- (void)fixFontAttributeInRange:(NSRange)range","- (void)fixParagraphStyleAttributeInRange:(NSRange)range","- (void)fixAttachmentAttributeInRange:(NSRange)range","+ (NSBezierPath *)bezierPath","+ (NSBezierPath *)bezierPathWithRect:(NSRect)rect","+ (NSBezierPath *)bezierPathWithOvalInRect:(NSRect)rect","+ (void)fillRect:(NSRect)rect","+ (void)strokeRect:(NSRect)rect","+ (void)clipRect:(NSRect)rect","+ (void)strokeLineFromPoint:(NSPoint)point1 toPoint:(NSPoint)point2","+ (void)drawPackedGlyphs:(const char *)packedGlyphs atPoint:(NSPoint)point","+ (void)setDefaultMiterLimit:(CGFloat)limit","+ (CGFloat)defaultMiterLimit","+ (void)setDefaultFlatness:(CGFloat)flatness","+ (CGFloat)defaultFlatness","+ (void)setDefaultWindingRule:(NSWindingRule)windingRule","+ (NSWindingRule)defaultWindingRule","+ (void)setDefaultLineCapStyle:(NSLineCapStyle)lineCapStyle","+ (NSLineCapStyle)defaultLineCapStyle","+ (void)setDefaultLineJoinStyle:(NSLineJoinStyle)lineJoinStyle","+ (NSLineJoinStyle)defaultLineJoinStyle","+ (void)setDefaultLineWidth:(CGFloat)lineWidth","+ (CGFloat)defaultLineWidth","- (void)moveToPoint:(NSPoint)point","- (void)lineToPoint:(NSPoint)point","- (void)curveToPoint:(NSPoint)endPoint controlPoint1:(NSPoint)controlPoint1 controlPoint2:(NSPoint)controlPoint2","- (void)closePath","- (void)removeAllPoints","- (void)relativeMoveToPoint:(NSPoint)point","- (void)relativeLineToPoint:(NSPoint)point","- (void)relativeCurveToPoint:(NSPoint)endPoint controlPoint1:(NSPoint)controlPoint1 controlPoint2:(NSPoint)controlPoint2","- (CGFloat)lineWidth","- (void)setLineWidth:(CGFloat)lineWidth","- (NSLineCapStyle)lineCapStyle","- (void)setLineCapStyle:(NSLineCapStyle)lineCapStyle","- (NSLineJoinStyle)lineJoinStyle","- (void)setLineJoinStyle:(NSLineJoinStyle)lineJoinStyle","- (NSWindingRule)windingRule","- (void)setWindingRule:(NSWindingRule)windingRule","- (CGFloat)miterLimit","- (void)setMiterLimit:(CGFloat)miterLimit","- (CGFloat)flatness","- (void)setFlatness:(CGFloat)flatness","- (void)getLineDash:(CGFloat *)pattern count:(NSInteger *)count phase:(CGFloat *)phase","- (void)setLineDash:(const CGFloat *)pattern count:(NSInteger)count phase:(CGFloat)phase","- (void)stroke","- (void)fill","- (void)addClip","- (void)setClip","- (NSBezierPath *)bezierPathByFlatteningPath","- (NSBezierPath *)bezierPathByReversingPath","- (void)transformUsingAffineTransform:(NSAffineTransform *)transform","- (BOOL)isEmpty","- (NSPoint)currentPoint","- (NSRect)controlPointBounds","- (NSRect)bounds","- (NSInteger)elementCount","- (NSBezierPathElement)elementAtIndex:(NSInteger)index associatedPoints:(NSPointArray)points","- (NSBezierPathElement)elementAtIndex:(NSInteger)index","- (void)setAssociatedPoints:(NSPointArray)points atIndex:(NSInteger)index","- (void)appendBezierPath:(NSBezierPath *)path","- (void)appendBezierPathWithRect:(NSRect)rect","- (void)appendBezierPathWithPoints:(NSPointArray)points count:(NSInteger)count","- (void)appendBezierPathWithOvalInRect:(NSRect)rect","- (void)appendBezierPathWithArcWithCenter:(NSPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise","- (void)appendBezierPathWithArcWithCenter:(NSPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle","- (void)appendBezierPathWithArcFromPoint:(NSPoint)point1 toPoint:(NSPoint)point2 radius:(CGFloat)radius","- (void)appendBezierPathWithGlyph:(NSGlyph)glyph inFont:(NSFont *)font","- (void)appendBezierPathWithGlyphs:(NSGlyph *)glyphs count:(NSInteger)count inFont:(NSFont *)font","- (void)appendBezierPathWithPackedGlyphs:(const char *)packedGlyphs","- (BOOL)containsPoint:(NSPoint)point","- (id)initWithFocusedViewRect:(NSRect)rect","- (id)initWithBitmapDataPlanes:(unsigned char **)planes pixelsWide:(NSInteger)width pixelsHigh:(NSInteger)height bitsPerSample:(NSInteger)bps samplesPerPixel:(NSInteger)spp hasAlpha:(BOOL)alpha isPlanar:(BOOL)isPlanar colorSpaceName:(NSString *)colorSpaceName bytesPerRow:(NSInteger)rBytes bitsPerPixel:(NSInteger)pBits","- (id)initWithBitmapDataPlanes:(unsigned char **)planes pixelsWide:(NSInteger)width pixelsHigh:(NSInteger)height bitsPerSample:(NSInteger)bps samplesPerPixel:(NSInteger)spp hasAlpha:(BOOL)alpha isPlanar:(BOOL)isPlanar colorSpaceName:(NSString *)colorSpaceName bitmapFormat:(NSBitmapFormat)bitmapFormat bytesPerRow:(NSInteger)rBytes bitsPerPixel:(NSInteger)pBits","+ (NSArray *)imageRepsWithData:(NSData *)data","+ (id)imageRepWithData:(NSData *)data","- (id)initWithData:(NSData *)data","- (unsigned char *)bitmapData","- (void)getBitmapDataPlanes:(unsigned char **)data","- (BOOL)isPlanar","- (NSInteger)samplesPerPixel","- (NSInteger)bitsPerPixel","- (NSInteger)bytesPerRow","- (NSInteger)bytesPerPlane","- (NSInteger)numberOfPlanes","- (NSBitmapFormat)bitmapFormat","- (void)getCompression:(NSTIFFCompression *)compression factor:(float *)factor","- (void)setCompression:(NSTIFFCompression)compression factor:(float)factor","- (NSData *)TIFFRepresentation","- (NSData *)TIFFRepresentationUsingCompression:(NSTIFFCompression)comp factor:(float)factor","+ (NSData *)TIFFRepresentationOfImageRepsInArray:(NSArray *)array","+ (NSData *)TIFFRepresentationOfImageRepsInArray:(NSArray *)array usingCompression:(NSTIFFCompression)comp factor:(float)factor","+ (void)getTIFFCompressionTypes:(const NSTIFFCompression **)list count:(NSInteger *)numTypes","+ (NSString *)localizedNameForTIFFCompressionType:(NSTIFFCompression)compression","- (BOOL)canBeCompressedUsing:(NSTIFFCompression)compression","- (void)colorizeByMappingGray:(CGFloat)midPoint toColor:(NSColor *)midPointColor blackMapping:(NSColor *)shadowColor whiteMapping:(NSColor *)lightColor","- (id)initForIncrementalLoad","- (NSInteger)incrementalLoadFromData:(NSData*)data complete:(BOOL)complete","- (void)setColor:(NSColor*)color atX:(NSInteger)x y:(NSInteger)y","- (NSColor*)colorAtX:(NSInteger)x y:(NSInteger)y","- (void)getPixel:(NSUInteger[])p atX:(NSInteger)x y:(NSInteger)y","- (void)setPixel:(NSUInteger[])p atX:(NSInteger)x y:(NSInteger)y","+ (NSData *)representationOfImageRepsInArray:(NSArray *)imageReps usingType:(NSBitmapImageFileType)storageType properties:(NSDictionary *)properties","- (NSData *)representationUsingType:(NSBitmapImageFileType)storageType properties:(NSDictionary *)properties","- (void)setProperty:(NSString *)property withValue:(id)value","- (id)valueForProperty:(NSString *)property","- (NSBorderType)borderType","- (NSTitlePosition)titlePosition","- (void)setBorderType:(NSBorderType)aType","- (void)setBoxType:(NSBoxType)boxType","- (NSBoxType)boxType","- (void)setTitlePosition:(NSTitlePosition)aPosition","- (NSString *)title","- (void)setTitle:(NSString *)aString","- (NSFont *)titleFont","- (void)setTitleFont:(NSFont *)fontObj","- (NSRect)borderRect","- (NSRect)titleRect","- (id)titleCell","- (void)sizeToFit","- (NSSize)contentViewMargins","- (void)setContentViewMargins:(NSSize)offsetSize","- (void)setFrameFromContentFrame:(NSRect)contentFrame","- (id)contentView","- (void)setContentView:(NSView *)aView","- (void)setTitleWithMnemonic:(NSString *)stringWithAmpersand","+ (Class)cellClass","- (void)loadColumnZero","- (BOOL)isLoaded","- (void)setDoubleAction:(SEL)aSelector","- (SEL)doubleAction","- (void)setMatrixClass:(Class)factoryId","- (Class)matrixClass","- (void)setCellClass:(Class)factoryId","- (void)setCellPrototype:(NSCell *)aCell","- (id)cellPrototype","- (void)setDelegate:(id <NSBrowserDelegate>)anObject","- (id <NSBrowserDelegate>)delegate","- (void)setReusesColumns:(BOOL)flag","- (BOOL)reusesColumns","- (void)setHasHorizontalScroller:(BOOL)flag","- (BOOL)hasHorizontalScroller","- (void)setSeparatesColumns:(BOOL)flag","- (BOOL)separatesColumns","- (void)setTitled:(BOOL)flag","- (BOOL)isTitled","- (void)setMinColumnWidth:(CGFloat)columnWidth","- (CGFloat)minColumnWidth","- (void)setMaxVisibleColumns:(NSInteger)columnCount","- (NSInteger)maxVisibleColumns","- (void)setAllowsMultipleSelection:(BOOL)flag","- (BOOL)allowsMultipleSelection","- (void)setAllowsBranchSelection:(BOOL)flag","- (BOOL)allowsBranchSelection","- (void)setAllowsEmptySelection:(BOOL)flag","- (BOOL)allowsEmptySelection","- (void)setTakesTitleFromPreviousColumn:(BOOL)flag","- (BOOL)takesTitleFromPreviousColumn","- (void)setSendsActionOnArrowKeys:(BOOL)flag","- (BOOL)sendsActionOnArrowKeys","- (void)setTitle:(NSString *)aString ofColumn:(NSInteger)column","- (NSString *)titleOfColumn:(NSInteger)column","- (void)setPathSeparator:(NSString *)newString","- (NSString *)pathSeparator","- (BOOL)setPath:(NSString *)path","- (NSString *)path","- (NSString *)pathToColumn:(NSInteger)column","- (NSInteger)selectedColumn","- (id)selectedCell","- (id)selectedCellInColumn:(NSInteger)column","- (NSArray *)selectedCells","- (void)selectRow:(NSInteger)row inColumn:(NSInteger)column","- (NSInteger)selectedRowInColumn:(NSInteger)column","- (void)reloadColumn:(NSInteger)column","- (void)validateVisibleColumns","- (void)scrollColumnsRightBy:(NSInteger)shiftAmount","- (void)scrollColumnsLeftBy:(NSInteger)shiftAmount","- (void)scrollColumnToVisible:(NSInteger)column","- (NSInteger)lastColumn","- (void)setLastColumn:(NSInteger)column","- (void)addColumn","- (NSInteger)numberOfVisibleColumns","- (NSInteger)firstVisibleColumn","- (NSInteger)lastVisibleColumn","- (NSInteger)columnOfMatrix:(NSMatrix *)matrix","- (NSMatrix *)matrixInColumn:(NSInteger)column","- (id)loadedCellAtRow:(NSInteger)row column:(NSInteger)col","- (void)selectAll:(id)sender","- (void)tile","- (void)doClick:(id)sender","- (void)doDoubleClick:(id)sender","- (BOOL)sendAction","- (NSRect)titleFrameOfColumn:(NSInteger)column","- (void)drawTitleOfColumn:(NSInteger)column inRect:(NSRect)aRect","- (CGFloat)titleHeight","- (NSRect)frameOfColumn:(NSInteger)column","- (NSRect)frameOfInsideOfColumn:(NSInteger)column","- (CGFloat)columnWidthForColumnContentWidth:(CGFloat)columnContentWidth","- (CGFloat)columnContentWidthForColumnWidth:(CGFloat)columnWidth","- (void)setColumnResizingType:(NSBrowserColumnResizingType)columnResizingType","- (NSBrowserColumnResizingType)columnResizingType","- (void)setPrefersAllColumnUserResizing:(BOOL)prefersAllColumnResizing","- (BOOL)prefersAllColumnUserResizing","- (void)setWidth:(CGFloat)columnWidth ofColumn:(NSInteger)columnIndex","- (CGFloat)widthOfColumn:(NSInteger)column","- (void)setColumnsAutosaveName:(NSString *)name","- (NSString *)columnsAutosaveName","+ (void)removeSavedColumnsWithAutosaveName:(NSString *)name","+ (NSImage *)branchImage","+ (NSImage *)highlightedBranchImage","- (NSColor *)highlightColorInView:(NSView *)controlView","- (BOOL)isLeaf","- (void)setLeaf:(BOOL)flag","- (BOOL)isLoaded","- (void)setLoaded:(BOOL)flag","- (void)reset","- (void)set","- (void)setImage:(NSImage *)image","- (NSImage *)image","- (void)setAlternateImage:(NSImage *)newAltImage","- (NSImage *)alternateImage","- (NSString *)title","- (void)setTitle:(NSString *)aString","- (NSString *)alternateTitle","- (void)setAlternateTitle:(NSString *)aString","- (NSImage *)image","- (void)setImage:(NSImage *)image","- (NSImage *)alternateImage","- (void)setAlternateImage:(NSImage *)image","- (NSCellImagePosition)imagePosition","- (void)setImagePosition:(NSCellImagePosition)aPosition","- (void)setButtonType:(NSButtonType)aType","- (NSInteger)state","- (void)setState:(NSInteger)value","- (BOOL)isBordered","- (void)setBordered:(BOOL)flag","- (BOOL)isTransparent","- (void)setTransparent:(BOOL)flag","- (void)setPeriodicDelay:(float)delay interval:(float)interval","- (void)getPeriodicDelay:(float *)delay interval:(float *)interval","- (NSString *)keyEquivalent","- (void)setKeyEquivalent:(NSString *)charCode","- (NSUInteger)keyEquivalentModifierMask","- (void)setKeyEquivalentModifierMask:(NSUInteger)mask","- (void)highlight:(BOOL)flag","- (BOOL)performKeyEquivalent:(NSEvent *)key","- (void)setTitleWithMnemonic:(NSString *)stringWithAmpersand","- (NSAttributedString *)attributedTitle","- (void)setAttributedTitle:(NSAttributedString *)aString","- (NSAttributedString *)attributedAlternateTitle","- (void)setAttributedAlternateTitle:(NSAttributedString *)obj","- (void) setBezelStyle:(NSBezelStyle)bezelStyle","- (NSBezelStyle)bezelStyle","- (void)setAllowsMixedState:(BOOL)flag","- (BOOL)allowsMixedState","- (void)setNextState","- (void) setShowsBorderOnlyWhileMouseInside:(BOOL)show","- (BOOL) showsBorderOnlyWhileMouseInside","- (void)setSound:(NSSound *)aSound","- (NSSound *)sound","- (NSString *)title","- (void)setTitle:(NSString *)aString","- (NSString *)alternateTitle","- (void)setAlternateTitle:(NSString *)aString","- (NSImage *)alternateImage","- (void)setAlternateImage:(NSImage *)image","- (NSCellImagePosition)imagePosition","- (void)setImagePosition:(NSCellImagePosition)aPosition","- (NSInteger)highlightsBy","- (void)setHighlightsBy:(NSInteger)aType","- (NSInteger)showsStateBy","- (void)setShowsStateBy:(NSInteger)aType","- (void)setButtonType:(NSButtonType)aType","- (BOOL)isOpaque","- (void)setFont:(NSFont *)fontObj","- (BOOL)isTransparent","- (void)setTransparent:(BOOL)flag","- (void)setPeriodicDelay:(float)delay interval:(float)interval","- (void)getPeriodicDelay:(float *)delay interval:(float *)interval","- (NSString *)keyEquivalent","- (void)setKeyEquivalent:(NSString *)aKeyEquivalent","- (NSUInteger)keyEquivalentModifierMask","- (void)setKeyEquivalentModifierMask:(NSUInteger)mask","- (NSFont *)keyEquivalentFont","- (void)setKeyEquivalentFont:(NSFont *)fontObj","- (void)setKeyEquivalentFont:(NSString *)fontName size:(CGFloat)fontSize","- (void)performClick:(id)sender","- (void)drawImage:(NSImage*)image withFrame:(NSRect)frame inView:(NSView*)controlView","- (NSRect)drawTitle:(NSAttributedString*)title withFrame:(NSRect)frame inView:(NSView*)controlView","- (void)drawBezelWithFrame:(NSRect)frame inView:(NSView*)controlView","- (void)setTitleWithMnemonic:(NSString *)stringWithAmpersand","- (void)setAlternateTitleWithMnemonic:(NSString *)stringWithAmpersand","- (void)setAlternateMnemonicLocation:(NSUInteger)location","- (NSUInteger)alternateMnemonicLocation","- (NSString *)alternateMnemonic","- (NSGradientType)gradientType","- (void)setGradientType:(NSGradientType)type","- (void)setImageDimsWhenDisabled:(BOOL)flag","- (BOOL)imageDimsWhenDisabled","- (void) setShowsBorderOnlyWhileMouseInside:(BOOL)show","- (BOOL) showsBorderOnlyWhileMouseInside","- (void) mouseEntered:(NSEvent*)event","- (void) mouseExited:(NSEvent*)event","- (NSColor*)backgroundColor","- (void)setBackgroundColor:(NSColor*)color","- (NSAttributedString *)attributedTitle","- (void)setAttributedTitle:(NSAttributedString *)obj","- (NSAttributedString *)attributedAlternateTitle","- (void)setAttributedAlternateTitle:(NSAttributedString *)obj","- (void) setBezelStyle:(NSBezelStyle)bezelStyle","- (NSBezelStyle)bezelStyle","- (void)setSound:(NSSound *)aSound","- (NSSound *)sound","+ (BOOL)prefersTrackingUntilMouseUp","- (id)initTextCell:(NSString *)aString","- (id)initImageCell:(NSImage *)image","- (NSView *)controlView","- (void)setControlView:(NSView*)view","- (NSCellType)type","- (void)setType:(NSCellType)aType","- (NSInteger)state","- (void)setState:(NSInteger)value","- (id)target","- (void)setTarget:(id)anObject","- (SEL)action","- (void)setAction:(SEL)aSelector","- (NSInteger)tag","- (void)setTag:(NSInteger)anInt","- (NSString*)title","- (void)setTitle:(NSString*)aString","- (BOOL)isOpaque","- (BOOL)isEnabled","- (void)setEnabled:(BOOL)flag","- (NSInteger)sendActionOn:(NSInteger)mask","- (BOOL)isContinuous","- (void)setContinuous:(BOOL)flag","- (BOOL)isEditable","- (void)setEditable:(BOOL)flag","- (BOOL)isSelectable","- (void)setSelectable:(BOOL)flag","- (BOOL)isBordered","- (void)setBordered:(BOOL)flag","- (BOOL)isBezeled","- (void)setBezeled:(BOOL)flag","- (BOOL)isScrollable","- (void)setScrollable:(BOOL)flag","- (BOOL)isHighlighted","- (void)setHighlighted:(BOOL)flag","- (NSTextAlignment)alignment","- (void)setAlignment:(NSTextAlignment)mode","- (BOOL)wraps","- (void)setWraps:(BOOL)flag","- (NSFont *)font","- (void)setFont:(NSFont *)fontObj","- (NSString *)keyEquivalent","- (void)setFormatter:(NSFormatter *)newFormatter","- (id)formatter","- (id)objectValue","- (void)setObjectValue:(id <NSCopying>)obj","- (BOOL)hasValidObjectValue","- (NSString *)stringValue","- (void)setStringValue:(NSString *)aString","- (NSComparisonResult)compare:(id)otherCell","- (int)intValue","- (void)setIntValue:(int)anInt","- (float)floatValue","- (void)setFloatValue:(float)aFloat","- (double)doubleValue","- (void)setDoubleValue:(double)aDouble","- (void)takeIntValueFrom:(id)sender","- (void)takeFloatValueFrom:(id)sender","- (void)takeDoubleValueFrom:(id)sender","- (void)takeStringValueFrom:(id)sender","- (void)takeObjectValueFrom:(id)sender","- (NSImage *)image","- (void)setImage:(NSImage *)image","- (void)setControlTint:(NSControlTint)controlTint","- (NSControlTint)controlTint","- (void)setControlSize:(NSControlSize)size","- (NSControlSize)controlSize","- (id)representedObject","- (void)setRepresentedObject:(id)anObject","- (NSInteger)cellAttribute:(NSCellAttribute)aParameter","- (void)setCellAttribute:(NSCellAttribute)aParameter to:(NSInteger)value","- (NSRect)imageRectForBounds:(NSRect)theRect","- (NSRect)titleRectForBounds:(NSRect)theRect","- (NSRect)drawingRectForBounds:(NSRect)theRect","- (NSSize)cellSize","- (NSSize)cellSizeForBounds:(NSRect)aRect","- (NSColor *)highlightColorWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (void)calcDrawInfo:(NSRect)aRect","- (NSText *)setUpFieldEditorAttributes:(NSText *)textObj","- (void)drawInteriorWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (void)drawWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (void)highlight:(BOOL)flag withFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (NSInteger)mouseDownFlags","- (void)getPeriodicDelay:(float *)delay interval:(float *)interval","- (BOOL)startTrackingAt:(NSPoint)startPoint inView:(NSView *)controlView","- (BOOL)continueTracking:(NSPoint)lastPoint at:(NSPoint)currentPoint inView:(NSView *)controlView","- (void)stopTracking:(NSPoint)lastPoint at:(NSPoint)stopPoint inView:(NSView *)controlView mouseIsUp:(BOOL)flag","- (BOOL)trackMouse:(NSEvent *)theEvent inRect:(NSRect)cellFrame ofView:(NSView *)controlView untilMouseUp:(BOOL)flag","- (void)editWithFrame:(NSRect)aRect inView:(NSView *)controlView editor:(NSText *)textObj delegate:(id)anObject event:(NSEvent *)theEvent","- (void)selectWithFrame:(NSRect)aRect inView:(NSView *)controlView editor:(NSText *)textObj delegate:(id)anObject start:(NSInteger)selStart length:(NSInteger)selLength","- (void)endEditing:(NSText *)textObj","- (void)resetCursorRect:(NSRect)cellFrame inView:(NSView *)controlView","- (void)setMenu:(NSMenu *)aMenu","- (NSMenu *)menu","- (NSMenu *)menuForEvent:(NSEvent *)event inRect:(NSRect)cellFrame ofView:(NSView *)view","+ (NSMenu *)defaultMenu","- (void)setSendsActionOnEndEditing:(BOOL)flag","- (BOOL)sendsActionOnEndEditing","- (NSWritingDirection)baseWritingDirection","- (void)setBaseWritingDirection:(NSWritingDirection)writingDirection","- (void)setLineBreakMode:(NSLineBreakMode)mode","- (NSLineBreakMode)lineBreakMode","- (void)setAllowsUndo:(BOOL)allowsUndo","- (BOOL)allowsUndo","- (void)setRefusesFirstResponder:(BOOL)flag","- (BOOL)refusesFirstResponder","- (BOOL)acceptsFirstResponder","- (void)setShowsFirstResponder:(BOOL)showFR","- (BOOL)showsFirstResponder","- (void)setMnemonicLocation:(NSUInteger)location","- (NSUInteger)mnemonicLocation","- (NSString *)mnemonic","- (void)setTitleWithMnemonic:(NSString *)stringWithAmpersand","- (void)performClick:(id)sender","- (void)setFocusRingType:(NSFocusRingType)focusRingType","- (NSFocusRingType)focusRingType","+ (NSFocusRingType)defaultFocusRingType","- (BOOL)wantsNotificationForMarkedText","- (NSAttributedString *)attributedStringValue","- (void)setAttributedStringValue:(NSAttributedString *)obj","- (BOOL)allowsEditingTextAttributes","- (void)setAllowsEditingTextAttributes:(BOOL)flag","- (BOOL)importsGraphics","- (void)setImportsGraphics:(BOOL)flag","- (void)setAllowsMixedState:(BOOL)flag","- (BOOL)allowsMixedState","- (NSInteger)nextState","- (void)setNextState","+ (id)imageRepWithCIImage:(CIImage *)image","- (id)initWithCIImage:(CIImage *)image","- (CIImage *)CIImage","- (id)initWithBitmapImageRep:(NSBitmapImageRep *)bitmapImageRep","- (void)drawInRect:(NSRect)rect fromRect:(NSRect)fromRect operation:(NSCompositingOperation)op fraction:(CGFloat)delta","- (void)drawAtPoint:(NSPoint)point fromRect:(NSRect)fromRect operation:(NSCompositingOperation)op fraction:(CGFloat)delta","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (void)setDrawsBackground:(BOOL)flag","- (BOOL)drawsBackground","- (void)setDocumentView:(NSView *)aView","- (id)documentView","- (NSRect)documentRect","- (void)setDocumentCursor:(NSCursor *)anObj","- (NSCursor *)documentCursor","- (NSRect)documentVisibleRect","- (void)viewFrameChanged:(NSNotification *)notification","- (void)viewBoundsChanged:(NSNotification *)notification","- (void)setCopiesOnScroll:(BOOL)flag","- (BOOL)copiesOnScroll","- (BOOL)autoscroll:(NSEvent *)theEvent","- (NSPoint)constrainScrollPoint:(NSPoint)newOrigin","- (void)scrollToPoint:(NSPoint)newOrigin","- (void)reflectScrolledClipView:(NSClipView *)aClipView","- (void)scrollClipView:(NSClipView *)aClipView toPoint:(NSPoint)aPoint","- (void)setDelegate:(id <NSCollectionViewDelegate>)aDelegate","- (id <NSCollectionViewDelegate>)delegate","- (BOOL)isFirstResponder","- (void)setContent:(NSArray *)content","- (NSArray *)content","- (void)setSelectable:(BOOL)flag","- (BOOL)isSelectable","- (void)setAllowsMultipleSelection:(BOOL)flag","- (BOOL)allowsMultipleSelection","- (void)setSelectionIndexes:(NSIndexSet *)indexes","- (NSIndexSet *)selectionIndexes","- (NSCollectionViewItem *)newItemForRepresentedObject:(id)object","- (void)setItemPrototype:(NSCollectionViewItem *)prototype","- (NSCollectionViewItem *)itemPrototype","- (void)setMaxNumberOfRows:(NSUInteger)number","- (NSUInteger)maxNumberOfRows","- (void)setMaxNumberOfColumns:(NSUInteger)number","- (NSUInteger)maxNumberOfColumns","- (void)setMinItemSize:(NSSize)size","- (NSSize)minItemSize","- (void)setMaxItemSize:(NSSize)size","- (NSSize)maxItemSize","- (void)setBackgroundColors:(NSArray *)colors","- (NSArray *)backgroundColors","+ (NSColor *)colorWithCalibratedWhite:(CGFloat)white alpha:(CGFloat)alpha","+ (NSColor *)colorWithCalibratedHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha","+ (NSColor *)colorWithCalibratedRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha","+ (NSColor *)colorWithDeviceWhite:(CGFloat)white alpha:(CGFloat)alpha","+ (NSColor *)colorWithDeviceHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha","+ (NSColor *)colorWithDeviceRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha","+ (NSColor *)colorWithDeviceCyan:(CGFloat)cyan magenta:(CGFloat)magenta yellow:(CGFloat)yellow black:(CGFloat)black alpha:(CGFloat)alpha","+ (NSColor *)colorWithCatalogName:(NSString *)listName colorName:(NSString *)colorName","+ (NSColor *)colorWithColorSpace:(NSColorSpace *)space components:(const CGFloat *)components count:(NSInteger)numberOfComponents","+ (NSColor *)blackColor","+ (NSColor *)darkGrayColor","+ (NSColor *)lightGrayColor","+ (NSColor *)whiteColor","+ (NSColor *)grayColor","+ (NSColor *)redColor","+ (NSColor *)greenColor","+ (NSColor *)blueColor","+ (NSColor *)cyanColor","+ (NSColor *)yellowColor","+ (NSColor *)magentaColor","+ (NSColor *)orangeColor","+ (NSColor *)purpleColor","+ (NSColor *)brownColor","+ (NSColor *)clearColor","+ (NSColor *)controlShadowColor","+ (NSColor *)controlDarkShadowColor","+ (NSColor *)controlColor","+ (NSColor *)controlHighlightColor","+ (NSColor *)controlLightHighlightColor","+ (NSColor *)controlTextColor","+ (NSColor *)controlBackgroundColor","+ (NSColor *)selectedControlColor","+ (NSColor *)secondarySelectedControlColor","+ (NSColor *)selectedControlTextColor","+ (NSColor *)disabledControlTextColor","+ (NSColor *)textColor","+ (NSColor *)textBackgroundColor","+ (NSColor *)selectedTextColor","+ (NSColor *)selectedTextBackgroundColor","+ (NSColor *)gridColor","+ (NSColor *)keyboardFocusIndicatorColor","+ (NSColor *)windowBackgroundColor","+ (NSColor *)scrollBarColor","+ (NSColor *)knobColor","+ (NSColor *)selectedKnobColor","+ (NSColor *)windowFrameColor","+ (NSColor *)windowFrameTextColor","+ (NSColor *)selectedMenuItemColor","+ (NSColor *)selectedMenuItemTextColor","+ (NSColor *)highlightColor","+ (NSColor *)shadowColor","+ (NSColor *)headerColor","+ (NSColor *)headerTextColor","+ (NSColor *)alternateSelectedControlColor","+ (NSColor *)alternateSelectedControlTextColor","+ (NSArray *)controlAlternatingRowBackgroundColors","- (NSColor *)highlightWithLevel:(CGFloat)val","- (NSColor *)shadowWithLevel:(CGFloat)val","+ (NSColor *)colorForControlTint:(NSControlTint)controlTint","+ (NSControlTint) currentControlTint","- (void)set","- (void)setFill","- (void)setStroke","- (NSString *)colorSpaceName","- (NSColor *)colorUsingColorSpaceName:(NSString *)colorSpace","- (NSColor *)colorUsingColorSpaceName:(NSString *)colorSpace device:(NSDictionary *)deviceDescription","- (NSColor *)colorUsingColorSpace:(NSColorSpace *)space","- (NSColor *)blendedColorWithFraction:(CGFloat)fraction ofColor:(NSColor *)color","- (NSColor *)colorWithAlphaComponent:(CGFloat)alpha","- (NSString *)catalogNameComponent","- (NSString *)colorNameComponent","- (NSString *)localizedCatalogNameComponent","- (NSString *)localizedColorNameComponent","- (CGFloat)redComponent","- (CGFloat)greenComponent","- (CGFloat)blueComponent","- (void)getRed:(CGFloat *)red green:(CGFloat *)green blue:(CGFloat *)blue alpha:(CGFloat *)alpha","- (CGFloat)hueComponent","- (CGFloat)saturationComponent","- (CGFloat)brightnessComponent","- (void)getHue:(CGFloat *)hue saturation:(CGFloat *)saturation brightness:(CGFloat *)brightness alpha:(CGFloat *)alpha","- (CGFloat)whiteComponent","- (void)getWhite:(CGFloat *)white alpha:(CGFloat *)alpha","- (CGFloat)cyanComponent","- (CGFloat)magentaComponent","- (CGFloat)yellowComponent","- (CGFloat)blackComponent","- (void)getCyan:(CGFloat *)cyan magenta:(CGFloat *)magenta yellow:(CGFloat *)yellow black:(CGFloat *)black alpha:(CGFloat *)alpha","- (NSColorSpace *)colorSpace","- (NSInteger)numberOfComponents","- (void)getComponents:(CGFloat *)components","- (CGFloat)alphaComponent","+ (NSColor *)colorFromPasteboard:(NSPasteboard *)pasteBoard","- (void)writeToPasteboard:(NSPasteboard *)pasteBoard","+ (NSColor *)colorWithPatternImage:(NSImage*)image","- (NSImage *)patternImage","- (void)drawSwatchInRect:(NSRect)rect","+ (void)setIgnoresAlpha:(BOOL)flag","+ (BOOL)ignoresAlpha","+ (NSColor *)colorWithCIColor:(CIColor *)color","- (id)initWithColor:(NSColor *)color","- (NSColor *)decodeNXColor","+ (NSArray *)availableColorLists","+ (NSColorList *)colorListNamed:(NSString *)name","- (id)initWithName:(NSString *)name","- (id)initWithName:(NSString *)name fromFile:(NSString *)path","- (NSString *)name","- (void)setColor:(NSColor *)color forKey:(NSString *)key","- (void)insertColor:(NSColor *)color key:(NSString *)key atIndex:(NSUInteger)loc","- (void)removeColorWithKey:(NSString *)key","- (NSColor *)colorWithKey:(NSString *)key","- (NSArray *)allKeys","- (BOOL)isEditable","- (BOOL)writeToFile:(NSString *)path","- (void)removeFile","+ (NSColorPanel *)sharedColorPanel","+ (BOOL)sharedColorPanelExists","+ (BOOL)dragColor:(NSColor *)color withEvent:(NSEvent *)theEvent fromView:(NSView *)sourceView","+ (void)setPickerMask:(NSUInteger)mask","+ (void)setPickerMode:(NSColorPanelMode)mode","- (void)setAccessoryView:(NSView *)aView","- (NSView *)accessoryView","- (void)setContinuous:(BOOL)flag","- (BOOL)isContinuous","- (void)setShowsAlpha:(BOOL)flag","- (BOOL)showsAlpha","- (void)setMode:(NSColorPanelMode)mode","- (NSColorPanelMode)mode","- (void)setColor:(NSColor *)color","- (NSColor *)color","- (CGFloat)alpha","- (void)setAction:(SEL)aSelector","- (void)setTarget:(id)anObject","- (void)attachColorList:(NSColorList *)colorList","- (void)detachColorList:(NSColorList *)colorList","- (void)orderFrontColorPanel:(id)sender","- (void)changeColor:(id)sender","- (id)initWithPickerMask:(NSUInteger)mask colorPanel:(NSColorPanel *)owningColorPanel","- (NSColorPanel *)colorPanel","- (NSImage *)provideNewButtonImage","- (void)insertNewButtonImage:(NSImage *)newButtonImage in:(NSButtonCell *)buttonCell","- (void)viewSizeChanged:(id)sender","- (void)attachColorList:(NSColorList *)colorList","- (void)detachColorList:(NSColorList *)colorList","- (void)setMode:(NSColorPanelMode)mode","- (NSString *)buttonToolTip","- (NSSize)minContentSize","- (id)initWithICCProfileData:(NSData *)iccData","- (NSData *)ICCProfileData","- (NSInteger)numberOfColorComponents","- (NSColorSpaceModel)colorSpaceModel","- (NSString *)localizedName","+ (NSColorSpace *)genericRGBColorSpace","+ (NSColorSpace *)genericGrayColorSpace","+ (NSColorSpace *)genericCMYKColorSpace","+ (NSColorSpace *)deviceRGBColorSpace","+ (NSColorSpace *)deviceGrayColorSpace","+ (NSColorSpace *)deviceCMYKColorSpace","- (void)deactivate","- (void)activate:(BOOL)exclusive","- (BOOL)isActive","- (void)drawWellInside:(NSRect)insideRect","- (BOOL)isBordered","- (void)setBordered:(BOOL)flag","- (void)takeColorFrom:(id)sender","- (void)setColor:(NSColor *)color","- (NSColor *)color","- (BOOL)hasVerticalScroller","- (void)setHasVerticalScroller:(BOOL)flag","- (NSSize)intercellSpacing","- (void)setIntercellSpacing:(NSSize)aSize","- (CGFloat)itemHeight","- (void)setItemHeight:(CGFloat)itemHeight","- (NSInteger)numberOfVisibleItems","- (void)setNumberOfVisibleItems:(NSInteger)visibleItems","- (void)setButtonBordered:(BOOL)flag","- (BOOL)isButtonBordered","- (void)reloadData","- (void)noteNumberOfItemsChanged","- (void)setUsesDataSource:(BOOL)flag","- (BOOL)usesDataSource","- (void)scrollItemAtIndexToTop:(NSInteger)index","- (void)scrollItemAtIndexToVisible:(NSInteger)index","- (void)selectItemAtIndex:(NSInteger)index","- (void)deselectItemAtIndex:(NSInteger)index","- (NSInteger)indexOfSelectedItem","- (NSInteger)numberOfItems","- (BOOL)completes","- (void)setCompletes:(BOOL)completes","- (id <NSComboBoxDelegate>)delegate","- (void)setDelegate:(id <NSComboBoxDelegate>)anObject","- (id <NSComboBoxDataSource>)dataSource","- (void)setDataSource:(id <NSComboBoxDataSource>)aSource","- (void)addItemWithObjectValue:(id)object","- (void)addItemsWithObjectValues:(NSArray *)objects","- (void)insertItemWithObjectValue:(id)object atIndex:(NSInteger)index","- (void)removeItemWithObjectValue:(id)object","- (void)removeItemAtIndex:(NSInteger)index","- (void)removeAllItems","- (void)selectItemWithObjectValue:(id)object","- (id)itemObjectValueAtIndex:(NSInteger)index","- (id)objectValueOfSelectedItem","- (NSInteger)indexOfItemWithObjectValue:(id)object","- (NSArray *)objectValues","- (BOOL)hasVerticalScroller","- (void)setHasVerticalScroller:(BOOL)flag","- (NSSize)intercellSpacing","- (void)setIntercellSpacing:(NSSize)aSize","- (CGFloat)itemHeight","- (void)setItemHeight:(CGFloat)itemHeight","- (NSInteger)numberOfVisibleItems","- (void)setNumberOfVisibleItems:(NSInteger)visibleItems","- (void)setButtonBordered:(BOOL)flag","- (BOOL)isButtonBordered","- (void)reloadData","- (void)noteNumberOfItemsChanged","- (void)setUsesDataSource:(BOOL)flag","- (BOOL)usesDataSource","- (void)scrollItemAtIndexToTop:(NSInteger)index","- (void)scrollItemAtIndexToVisible:(NSInteger)index","- (void)selectItemAtIndex:(NSInteger)index","- (void)deselectItemAtIndex:(NSInteger)index","- (NSInteger)indexOfSelectedItem","- (NSInteger)numberOfItems","- (BOOL)completes","- (void)setCompletes:(BOOL)completes","- (NSString *)completedString:(NSString *)string","- (id <NSComboBoxCellDataSource>)dataSource","- (void)setDataSource:(id <NSComboBoxCellDataSource>)aSource","- (void)addItemWithObjectValue:(id)object","- (void)addItemsWithObjectValues:(NSArray *)objects","- (void)insertItemWithObjectValue:(id)object atIndex:(NSInteger)index","- (void)removeItemWithObjectValue:(id)object","- (void)removeItemAtIndex:(NSInteger)index","- (void)removeAllItems","- (void)selectItemWithObjectValue:(id)object","- (id)itemObjectValueAtIndex:(NSInteger)index","- (id)objectValueOfSelectedItem","- (NSInteger)indexOfItemWithObjectValue:(id)object","- (NSArray *)objectValues","+ (void)setCellClass:(Class)factoryId","+ (Class)cellClass","- (id)initWithFrame:(NSRect)frameRect","- (void)sizeToFit","- (void)calcSize","- (id)cell","- (void)setCell:(NSCell *)aCell","- (id)selectedCell","- (id)target","- (void)setTarget:(id)anObject","- (SEL)action","- (void)setAction:(SEL)aSelector","- (NSInteger)tag","- (void)setTag:(NSInteger)anInt","- (NSInteger)selectedTag","- (void)setIgnoresMultiClick:(BOOL)flag","- (BOOL)ignoresMultiClick","- (NSInteger)sendActionOn:(NSInteger)mask","- (BOOL)isContinuous","- (void)setContinuous:(BOOL)flag","- (BOOL)isEnabled","- (void)setEnabled:(BOOL)flag","- (NSTextAlignment)alignment","- (void)setAlignment:(NSTextAlignment)mode","- (NSFont *)font","- (void)setFont:(NSFont *)fontObj","- (void)setFormatter:(NSFormatter *)newFormatter","- (id)formatter","- (void)setObjectValue:(id<NSCopying>)obj","- (void)setStringValue:(NSString *)aString","- (void)setIntValue:(int)anInt","- (void)setFloatValue:(float)aFloat","- (void)setDoubleValue:(double)aDouble","- (id)objectValue","- (NSString *)stringValue","- (int)intValue","- (float)floatValue","- (double)doubleValue","- (void)setNeedsDisplay","- (void)updateCell:(NSCell *)aCell","- (void)updateCellInside:(NSCell *)aCell","- (void)drawCellInside:(NSCell *)aCell","- (void)drawCell:(NSCell *)aCell","- (void)selectCell:(NSCell *)aCell","- (BOOL)sendAction:(SEL)theAction to:(id)theTarget","- (void)takeIntValueFrom:(id)sender","- (void)takeFloatValueFrom:(id)sender","- (void)takeDoubleValueFrom:(id)sender","- (void)takeStringValueFrom:(id)sender","- (void)takeObjectValueFrom:(id)sender","- (NSText *)currentEditor","- (BOOL)abortEditing","- (void)validateEditing","- (void)mouseDown:(NSEvent *)theEvent","- (NSWritingDirection)baseWritingDirection","- (void)setBaseWritingDirection:(NSWritingDirection)writingDirection","- (void)performClick:sender","- (void)setRefusesFirstResponder:(BOOL)flag","- (BOOL)refusesFirstResponder","- (void)controlTextDidBeginEditing:(NSNotification *)obj","- (void)controlTextDidEndEditing:(NSNotification *)obj","- (void)controlTextDidChange:(NSNotification *)obj","- (NSAttributedString *)attributedStringValue","- (void)setAttributedStringValue:(NSAttributedString *)obj","- (void)objectDidBeginEditing:(id)editor","- (void)objectDidEndEditing:(id)editor","- (void)discardEditing","- (BOOL)commitEditing","- (void)commitEditingWithDelegate:(id)delegate didCommitSelector:(SEL)didCommitSelector contextInfo:(void *)contextInfo","- (BOOL)isEditing","+ (NSCursor *)currentCursor","+ (NSCursor *)arrowCursor","+ (NSCursor *)IBeamCursor","+ (NSCursor *)pointingHandCursor","+ (NSCursor *)closedHandCursor","+ (NSCursor *)openHandCursor","+ (NSCursor *)resizeLeftCursor","+ (NSCursor *)resizeRightCursor","+ (NSCursor *)resizeLeftRightCursor","+ (NSCursor *)resizeUpCursor","+ (NSCursor *)resizeDownCursor","+ (NSCursor *)resizeUpDownCursor","+ (NSCursor *)crosshairCursor","+ (NSCursor *)disappearingItemCursor","- (id)initWithImage:(NSImage *)newImage hotSpot:(NSPoint)aPoint","- (id)initWithImage:(NSImage *)newImage foregroundColorHint:(NSColor *)fg backgroundColorHint:(NSColor *)bg hotSpot:(NSPoint)hotSpot","+ (void)hide","+ (void)unhide","+ (void)setHiddenUntilMouseMoves:(BOOL)flag","+ (void)pop","- (NSImage *)image","- (NSPoint)hotSpot","- (void)push","- (void)pop","- (void)set","- (void)setOnMouseExited:(BOOL)flag","- (void)setOnMouseEntered:(BOOL)flag","- (BOOL)isSetOnMouseExited","- (BOOL)isSetOnMouseEntered","- (void)mouseEntered:(NSEvent *)theEvent","- (void)mouseExited:(NSEvent *)theEvent","- (id)initWithDrawSelector:(SEL)aMethod delegate:(id)anObject","- (SEL)drawSelector","- (id)delegate","- (NSDatePickerStyle)datePickerStyle","- (void)setDatePickerStyle:(NSDatePickerStyle)newStyle","- (BOOL)isBezeled","- (void)setBezeled:(BOOL)flag","- (BOOL)isBordered","- (void)setBordered:(BOOL)flag","- (BOOL)drawsBackground","- (void)setDrawsBackground:(BOOL)flag","- (NSColor *)backgroundColor","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)textColor","- (void)setTextColor:(NSColor *)color","- (NSDatePickerMode)datePickerMode","- (void)setDatePickerMode:(NSDatePickerMode)newMode","- (NSDatePickerElementFlags)datePickerElements","- (void)setDatePickerElements:(NSDatePickerElementFlags)elementFlags","- (NSCalendar *)calendar","- (void)setCalendar:(NSCalendar *)newCalendar","- (NSLocale *)locale","- (void)setLocale:(NSLocale *)newLocale","- (NSTimeZone *)timeZone","- (void)setTimeZone:(NSTimeZone *)newTimeZone","- (NSDate *)dateValue","- (void)setDateValue:(NSDate *)newStartDate","- (NSTimeInterval)timeInterval","- (void)setTimeInterval:(NSTimeInterval)newTimeInterval","- (NSDate *)minDate","- (void)setMinDate:(NSDate *)date","- (NSDate *)maxDate","- (void)setMaxDate:(NSDate *)date","- (id <NSDatePickerCellDelegate>)delegate","- (void)setDelegate:(id <NSDatePickerCellDelegate>)anObject","- (NSDatePickerStyle)datePickerStyle","- (void)setDatePickerStyle:(NSDatePickerStyle)newStyle","- (BOOL)drawsBackground","- (void)setDrawsBackground:(BOOL)flag","- (NSColor *)backgroundColor","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)textColor","- (void)setTextColor:(NSColor *)color","- (NSDatePickerMode)datePickerMode","- (void)setDatePickerMode:(NSDatePickerMode)newMode","- (NSDatePickerElementFlags)datePickerElements","- (void)setDatePickerElements:(NSDatePickerElementFlags)elementFlags","- (NSCalendar *)calendar","- (void)setCalendar:(NSCalendar *)newCalendar","- (NSLocale *)locale","- (void)setLocale:(NSLocale *)newLocale","- (NSTimeZone *)timeZone","- (void)setTimeZone:(NSTimeZone *)newTimeZone","- (NSDate *)dateValue","- (void)setDateValue:(NSDate *)newStartDate","- (NSTimeInterval)timeInterval","- (void)setTimeInterval:(NSTimeInterval)newTimeInterval","- (NSDate *)minDate","- (void)setMinDate:(NSDate *)date","- (NSDate *)maxDate","- (void)setMaxDate:(NSDate *)date","- (id <NSDatePickerCellDelegate>)delegate","- (void)setDelegate:(id <NSDatePickerCellDelegate>)anObject","- (void)setLocalizedKey:(NSString *)localizedKey","- (NSString *)localizedKey","- (void)setKey:(NSString *)key","- (NSString *)key","- (void)setValue:(id)value","- (id)value","- (BOOL)isExplicitlyIncluded","- (id)newObject","- (void)setInitialKey:(NSString *)key","- (NSString *)initialKey","- (void)setInitialValue:(id)value","- (id)initialValue","- (void)setIncludedKeys:(NSArray *)keys","- (NSArray *)includedKeys","- (void)setExcludedKeys:(NSArray *)keys","- (NSArray *)excludedKeys","- (void)setLocalizedKeyDictionary:(NSDictionary *)dictionary","- (NSDictionary *)localizedKeyDictionary","- (void)setLocalizedKeyTable:(NSString *)stringsFileName","- (NSString *)localizedKeyTable","- (NSSize)size","- (void)setContentView:(NSView *)view","- (NSView *)contentView","- (void)display","- (void)setShowsApplicationBadge:(BOOL)flag","- (BOOL)showsApplicationBadge","- (void)setBadgeLabel:(NSString *)string","- (NSString *)badgeLabel","- (id)owner","- (id)init","- (id)initWithType:(NSString *)typeName error:(NSError **)outError","- (id)initWithContentsOfURL:(NSURL *)url ofType:(NSString *)typeName error:(NSError **)outError","- (id)initForURL:(NSURL *)urlOrNil withContentsOfURL:(NSURL *)contentsURL ofType:(NSString *)typeName error:(NSError **)outError","- (void)setFileType:(NSString *)typeName","- (NSString *)fileType","- (void)setFileURL:(NSURL *)url","- (NSURL *)fileURL","- (void)setFileModificationDate:(NSDate *)modificationDate","- (NSDate *)fileModificationDate","- (IBAction)revertDocumentToSaved:(id)sender","- (BOOL)revertToContentsOfURL:(NSURL *)url ofType:(NSString *)typeName error:(NSError **)outError","- (BOOL)readFromURL:(NSURL *)url ofType:(NSString *)typeName error:(NSError **)outError","- (BOOL)readFromFileWrapper:(NSFileWrapper *)fileWrapper ofType:(NSString *)typeName error:(NSError **)outError","- (BOOL)readFromData:(NSData *)data ofType:(NSString *)typeName error:(NSError **)outError","- (BOOL)writeToURL:(NSURL *)url ofType:(NSString *)typeName error:(NSError **)outError","- (NSFileWrapper *)fileWrapperOfType:(NSString *)typeName error:(NSError **)outError","- (NSData *)dataOfType:(NSString *)typeName error:(NSError **)outError","- (BOOL)writeSafelyToURL:(NSURL *)url ofType:(NSString *)typeName forSaveOperation:(NSSaveOperationType)saveOperation error:(NSError **)outError","- (BOOL)writeToURL:(NSURL *)url ofType:(NSString *)typeName forSaveOperation:(NSSaveOperationType)saveOperation originalContentsURL:(NSURL *)absoluteOriginalContentsURL error:(NSError **)outError","- (NSDictionary *)fileAttributesToWriteToURL:(NSURL *)url ofType:(NSString *)typeName forSaveOperation:(NSSaveOperationType)saveOperation originalContentsURL:(NSURL *)absoluteOriginalContentsURL error:(NSError **)outError","- (BOOL)keepBackupFile","- (IBAction)saveDocument:(id)sender","- (IBAction)saveDocumentAs:(id)sender","- (IBAction)saveDocumentTo:(id)sender","- (void)document:(NSDocument *)document didSave:(BOOL)didSaveSuccessfully contextInfo:(void *)contextInfo","- (void)saveDocumentWithDelegate:(id)delegate didSaveSelector:(SEL)didSaveSelector contextInfo:(void *)contextInfo","- (void)document:(NSDocument *)document didSave:(BOOL)didSaveSuccessfully contextInfo:(void *)contextInfo","- (void)runModalSavePanelForSaveOperation:(NSSaveOperationType)saveOperation delegate:(id)delegate didSaveSelector:(SEL)didSaveSelector contextInfo:(void *)contextInfo","- (BOOL)shouldRunSavePanelWithAccessoryView","- (BOOL)prepareSavePanel:(NSSavePanel *)savePanel","- (BOOL)fileNameExtensionWasHiddenInLastRunSavePanel","- (NSString *)fileTypeFromLastRunSavePanel","- (void)document:(NSDocument *)document didSave:(BOOL)didSaveSuccessfully contextInfo:(void *)contextInfo","- (void)saveToURL:(NSURL *)url ofType:(NSString *)typeName forSaveOperation:(NSSaveOperationType)saveOperation delegate:(id)delegate didSaveSelector:(SEL)didSaveSelector contextInfo:(void *)contextInfo","- (BOOL)hasUnautosavedChanges","- (void)document:(NSDocument *)document didAutosave:(BOOL)didAutosaveSuccessfully contextInfo:(void *)contextInfo","- (void)autosaveDocumentWithDelegate:(id)delegate didAutosaveSelector:(SEL)didAutosaveSelector contextInfo:(void *)contextInfo","- (NSString *)autosavingFileType","- (void)setAutosavedContentsFileURL:(NSURL *)url","- (NSURL *)autosavedContentsFileURL","- (void)document:(NSDocument *)document shouldClose:(BOOL)shouldClose contextInfo:(void *)contextInfo","- (void)canCloseDocumentWithDelegate:(id)delegate shouldCloseSelector:(SEL)shouldCloseSelector contextInfo:(void *)contextInfo","- (void)close","- (void)document:(NSDocument *)document didDuplicate:(BOOL)didDuplicate contextInfo:(void *)contextInfo","- (IBAction)runPageLayout:(id)sender","- (void)document:(NSDocument *)document didRunPageLayoutAndUserAccepted:(BOOL)userAccepted contextInfo:(void *)contextInfo","- (void)runModalPageLayoutWithPrintInfo:(NSPrintInfo *)printInfo delegate:(id)delegate didRunSelector:(SEL)didRunSelector contextInfo:(void *)contextInfo","- (BOOL)preparePageLayout:(NSPageLayout *)pageLayout","- (BOOL)shouldChangePrintInfo:(NSPrintInfo *)newPrintInfo","- (void)setPrintInfo:(NSPrintInfo *)printInfo","- (NSPrintInfo *)printInfo","- (IBAction)printDocument:(id)sender","- (void)document:(NSDocument *)document didPrint:(BOOL)didPrintSuccessfully contextInfo:(void *)contextInfo","- (void)printDocumentWithSettings:(NSDictionary *)printSettings showPrintPanel:(BOOL)showPrintPanel delegate:(id)delegate didPrintSelector:(SEL)didPrintSelector contextInfo:(void *)contextInfo","- (NSPrintOperation *)printOperationWithSettings:(NSDictionary *)printSettings error:(NSError **)outError","- (void)document:(NSDocument *)document didRunPrintOperation:(BOOL)didPrintSuccessfully contextInfo:(void *)contextInfo","- (void)runModalPrintOperation:(NSPrintOperation *)printOperation delegate:(id)delegate didRunSelector:(SEL)didRunSelector contextInfo:(void *)contextInfo","- (BOOL)isDocumentEdited","- (void)updateChangeCount:(NSDocumentChangeType)change","- (void)setUndoManager:(NSUndoManager *)undoManager","- (NSUndoManager *)undoManager","- (void)setHasUndoManager:(BOOL)hasUndoManager","- (BOOL)hasUndoManager","- (void)presentError:(NSError *)error modalForWindow:(NSWindow *)window delegate:(id)delegate didPresentSelector:(SEL)didPresentSelector contextInfo:(void *)contextInfo","- (BOOL)presentError:(NSError *)error","- (NSError *)willPresentError:(NSError *)error","- (void)makeWindowControllers","- (NSString *)windowNibName","- (void)windowControllerWillLoadNib:(NSWindowController *)windowController","- (void)windowControllerDidLoadNib:(NSWindowController *)windowController","- (void)setWindow:(NSWindow *)window","- (void)addWindowController:(NSWindowController *)windowController","- (void)removeWindowController:(NSWindowController *)windowController","- (void)showWindows","- (NSArray *)windowControllers","- (void)document:(NSDocument *)document shouldClose:(BOOL)shouldClose contextInfo:(void *)contextInfo","- (void)shouldCloseWindowController:(NSWindowController *)windowController delegate:(id)delegate shouldCloseSelector:(SEL)shouldCloseSelector contextInfo:(void *)contextInfo","- (NSString *)displayName","- (NSWindow *)windowForSheet","+ (NSArray *)readableTypes","+ (NSArray *)writableTypes","+ (BOOL)isNativeType:(NSString *)type","- (NSArray *)writableTypesForSaveOperation:(NSSaveOperationType)saveOperation","- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)anItem","- (BOOL)saveToURL:(NSURL *)url ofType:(NSString *)typeName forSaveOperation:(NSSaveOperationType)saveOperation error:(NSError **)outError","+ (id)sharedDocumentController","- (id)init","- (NSArray *)documents","- (id)currentDocument","- (NSString *)currentDirectory","- (id)documentForURL:(NSURL *)url","- (id)documentForWindow:(NSWindow *)window","- (void)addDocument:(NSDocument *)document","- (void)removeDocument:(NSDocument *)document","- (IBAction)newDocument:(id)sender","- (id)openUntitledDocumentAndDisplay:(BOOL)displayDocument error:(NSError **)outError","- (id)makeUntitledDocumentOfType:(NSString *)typeName error:(NSError **)outError","- (IBAction)openDocument:(id)sender","- (NSArray *)URLsFromRunningOpenPanel","- (NSInteger)runModalOpenPanel:(NSOpenPanel *)openPanel forTypes:(NSArray *)types","- (id)makeDocumentWithContentsOfURL:(NSURL *)url ofType:(NSString *)typeName error:(NSError **)outError","- (id)makeDocumentForURL:(NSURL *)urlOrNil withContentsOfURL:(NSURL *)contentsURL ofType:(NSString *)typeName error:(NSError **)outError","- (void)setAutosavingDelay:(NSTimeInterval)autosavingDelay","- (NSTimeInterval)autosavingDelay","- (IBAction)saveAllDocuments:(id)sender","- (BOOL)hasEditedDocuments","- (void)documentController:(NSDocumentController *)documentController didReviewAll:(BOOL)didReviewAll contextInfo:(void *)contextInfo","- (void)reviewUnsavedDocumentsWithAlertTitle:(NSString *)title cancellable:(BOOL)cancellable delegate:(id)delegate didReviewAllSelector:(SEL)didReviewAllSelector contextInfo:(void *)contextInfo","- (void)documentController:(NSDocumentController *)documentController didCloseAll:(BOOL)didCloseAll contextInfo:(void *)contextInfo","- (void)closeAllDocumentsWithDelegate:(id)delegate didCloseAllSelector:(SEL)didCloseAllSelector contextInfo:(void *)contextInfo","- (void)presentError:(NSError *)error modalForWindow:(NSWindow *)window delegate:(id)delegate didPresentSelector:(SEL)didPresentSelector contextInfo:(void *)contextInfo","- (BOOL)presentError:(NSError *)error","- (NSError *)willPresentError:(NSError *)error","- (NSUInteger)maximumRecentDocumentCount","- (IBAction)clearRecentDocuments:(id)sender","- (void)noteNewRecentDocument:(NSDocument *)document","- (void)noteNewRecentDocumentURL:(NSURL *)url","- (NSArray *)recentDocumentURLs","- (NSString *)defaultType","- (NSString *)typeForContentsOfURL:(NSURL *)url error:(NSError **)outError","- (NSArray *)documentClassNames","- (Class)documentClassForType:(NSString *)typeName","- (NSString *)displayNameForType:(NSString *)typeName","- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)anItem","- (id)openDocumentWithContentsOfURL:(NSURL *)url display:(BOOL)displayDocument error:(NSError **)outError","- (BOOL)reopenDocumentForURL:(NSURL *)url withContentsOfURL:(NSURL *)contentsURL error:(NSError **)outError","- (NSString *)lastComponentOfFileName","- (void)setLastComponentOfFileName:(NSString *)str","- (id)handleSaveScriptCommand:(NSScriptCommand *)command","- (id)handleCloseScriptCommand:(NSCloseCommand *)command","- (id)handlePrintScriptCommand:(NSScriptCommand *)command","- (NSScriptObjectSpecifier *)objectSpecifier","- (NSDragOperation)draggingSourceOperationMaskForLocal:(BOOL)flag","- (NSArray *)namesOfPromisedFilesDroppedAtDestination:(NSURL *)dropDestination","- (void)draggedImage:(NSImage *)image beganAt:(NSPoint)screenPoint","- (void)draggedImage:(NSImage *)image endedAt:(NSPoint)screenPoint operation:(NSDragOperation)operation","- (void)draggedImage:(NSImage *)image movedTo:(NSPoint)screenPoint","- (BOOL)ignoreModifierKeysWhileDragging","+ (id)draggingImageComponentWithKey:(NSString *)key","- (id)initWithKey:(NSString *)key","- (id)initWithPasteboardWriter:(id <NSPasteboardWriting>) pasteboardWriter","- (void)setDraggingFrame:(NSRect)frame contents:(id)contents","- (id)initWithContentSize:(NSSize)contentSize preferredEdge:(NSRectEdge)edge","- (void)setParentWindow:(NSWindow *)parent","- (NSWindow *)parentWindow","- (void)setContentView:(NSView *)aView","- (NSView *)contentView","- (void)setPreferredEdge:(NSRectEdge)edge","- (NSRectEdge)preferredEdge","- (void)setDelegate:(id <NSDrawerDelegate>)anObject","- (id <NSDrawerDelegate>)delegate","- (void)open","- (void)openOnEdge:(NSRectEdge)edge","- (void)close","- (void)open:(id)sender","- (void)close:(id)sender","- (void)toggle:(id)sender","- (NSInteger)state","- (NSRectEdge)edge","- (void)setContentSize:(NSSize)size","- (NSSize)contentSize","- (void)setMinContentSize:(NSSize)size","- (NSSize)minContentSize","- (void)setMaxContentSize:(NSSize)size","- (NSSize)maxContentSize","- (void)setLeadingOffset:(CGFloat)offset","- (CGFloat)leadingOffset","- (void)setTrailingOffset:(CGFloat)offset","- (CGFloat)trailingOffset","- (NSArray *)drawers","+ (id)imageRepWithData:(NSData *)epsData","- (id)initWithData:(NSData *)epsData","- (void)prepareGState","- (NSData *)EPSRepresentation","- (NSRect)boundingBox","- (NSEventType)type","- (NSUInteger)modifierFlags","- (NSTimeInterval)timestamp","- (NSWindow *)window","- (NSInteger)windowNumber","- (NSGraphicsContext*)context","- (NSInteger)clickCount","- (NSInteger)buttonNumber","- (NSInteger)eventNumber","- (float)pressure","- (NSPoint)locationInWindow","- (CGFloat)deltaX","- (CGFloat)deltaY","- (CGFloat)deltaZ","- (NSString *)characters","- (NSString *)charactersIgnoringModifiers","- (BOOL)isARepeat","- (unsigned short)keyCode","- (NSInteger)trackingNumber","- (void *)userData","- (short)subtype","- (NSInteger)data1","- (NSInteger)data2","- (NSUInteger)deviceID","- (float)rotation","- (NSInteger)absoluteX","- (NSInteger)absoluteY","- (NSInteger)absoluteZ","- (NSUInteger)buttonMask","- (NSPoint)tilt","- (float)tangentialPressure","- (id)vendorDefined","- (NSUInteger)vendorID","- (NSUInteger)tabletID","- (NSUInteger)pointingDeviceID","- (NSUInteger)systemTabletID","- (NSUInteger)vendorPointingDeviceType","- (NSUInteger)pointingDeviceSerialNumber","- (unsigned long long)uniqueID","- (NSUInteger)capabilityMask","- (NSPointingDeviceType)pointingDeviceType","- (BOOL)isEnteringProximity","+ (void)startPeriodicEventsAfterDelay:(NSTimeInterval)delay withPeriod:(NSTimeInterval)period","+ (void)stopPeriodicEvents","+ (NSEvent *)mouseEventWithType:(NSEventType)type location:(NSPoint)location modifierFlags:(NSUInteger)flags timestamp:(NSTimeInterval)time windowNumber:(NSInteger)wNum context:(NSGraphicsContext*)context eventNumber:(NSInteger)eNum clickCount:(NSInteger)cNum pressure:(float)pressure","+ (NSEvent *)keyEventWithType:(NSEventType)type location:(NSPoint)location modifierFlags:(NSUInteger)flags timestamp:(NSTimeInterval)time windowNumber:(NSInteger)wNum context:(NSGraphicsContext*)context characters:(NSString *)keys charactersIgnoringModifiers:(NSString *)ukeys isARepeat:(BOOL)flag keyCode:(unsigned short)code","+ (NSEvent *)enterExitEventWithType:(NSEventType)type location:(NSPoint)location modifierFlags:(NSUInteger)flags timestamp:(NSTimeInterval)time windowNumber:(NSInteger)wNum context:(NSGraphicsContext*)context eventNumber:(NSInteger)eNum trackingNumber:(NSInteger)tNum userData:(void *)data","+ (NSEvent *)otherEventWithType:(NSEventType)type location:(NSPoint)location modifierFlags:(NSUInteger)flags timestamp:(NSTimeInterval)time windowNumber:(NSInteger)wNum context:(NSGraphicsContext*)context subtype:(short)subtype data1:(NSInteger)d1 data2:(NSInteger)d2","+ (NSPoint)mouseLocation","- (void)setIcon:(NSImage *)icon","- (NSImage *)icon","+ (NSFont *)fontWithName:(NSString *)fontName size:(CGFloat)fontSize","+ (NSFont *)fontWithName:(NSString *)fontName matrix:(const CGFloat *)fontMatrix","+ (NSFont *)fontWithDescriptor:(NSFontDescriptor *)fontDescriptor size:(CGFloat)fontSize","+ (NSFont *)fontWithDescriptor:(NSFontDescriptor *)fontDescriptor textTransform:(NSAffineTransform *)textTransform","+ (NSFont *)userFontOfSize:(CGFloat)fontSize","+ (NSFont *)userFixedPitchFontOfSize:(CGFloat)fontSize","+ (void)setUserFont:(NSFont *)aFont","+ (void)setUserFixedPitchFont:(NSFont *)aFont","+ (NSFont *)systemFontOfSize:(CGFloat)fontSize","+ (NSFont *)boldSystemFontOfSize:(CGFloat)fontSize","+ (NSFont *)labelFontOfSize:(CGFloat)fontSize","+ (NSFont *)titleBarFontOfSize:(CGFloat)fontSize","+ (NSFont *)menuFontOfSize:(CGFloat)fontSize","+ (NSFont *)menuBarFontOfSize:(CGFloat)fontSize","+ (NSFont *)messageFontOfSize:(CGFloat)fontSize","+ (NSFont *)paletteFontOfSize:(CGFloat)fontSize","+ (NSFont *)toolTipsFontOfSize:(CGFloat)fontSize","+ (NSFont *)controlContentFontOfSize:(CGFloat)fontSize","+ (CGFloat)systemFontSize","+ (CGFloat)smallSystemFontSize","+ (CGFloat)labelFontSize","+ (CGFloat)systemFontSizeForControlSize:(NSControlSize)controlSize","- (NSString *)fontName","- (CGFloat)pointSize","- (const CGFloat *)matrix","- (NSString *)familyName","- (NSString *)displayName","- (NSFontDescriptor *)fontDescriptor","- (NSAffineTransform *)textTransform","- (NSUInteger)numberOfGlyphs","- (NSStringEncoding)mostCompatibleStringEncoding","- (NSGlyph)glyphWithName:(NSString *)aName","- (NSCharacterSet *)coveredCharacterSet","- (NSRect)boundingRectForFont","- (NSSize)maximumAdvancement","- (CGFloat)ascender","- (CGFloat)descender","- (CGFloat)leading","- (CGFloat)underlinePosition","- (CGFloat)underlineThickness","- (CGFloat)italicAngle","- (CGFloat)capHeight","- (CGFloat)xHeight","- (BOOL)isFixedPitch","- (NSRect)boundingRectForGlyph:(NSGlyph)aGlyph","- (NSSize)advancementForGlyph:(NSGlyph)ag","- (void)getBoundingRects:(NSRectArray)bounds forGlyphs:(const NSGlyph *)glyphs count:(NSUInteger)glyphCount","- (void)getAdvancements:(NSSizeArray)advancements forGlyphs:(const NSGlyph *)glyphs count:(NSUInteger)glyphCount","- (void)getAdvancements:(NSSizeArray)advancements forPackedGlyphs:(const void *)packedGlyphs length:(NSUInteger)length","- (void)set","- (void)setInContext:(NSGraphicsContext *)graphicsContext","- (NSFont *)printerFont","- (NSFont *)screenFont","- (NSFont *)screenFontWithRenderingMode:(NSFontRenderingMode)renderingMode","- (NSFontRenderingMode)renderingMode","+ (id)fontCollectionWithDescriptors:(NSArray *)queryDescriptors","+ (id)fontCollectionWithAllAvailableDescriptors","+ (id)fontCollectionWithLocale:(NSLocale *)locale","+ (BOOL)showFontCollection:(NSFontCollection *)collection withName:(NSString *)name visibility:(NSFontCollectionVisibility)visibility error:(NSError **)error","+ (BOOL)hideFontCollectionWithName:(NSString *)name visibility:(NSFontCollectionVisibility)visibility error:(NSError **)error","+ (BOOL)renameFontCollectionWithName:(NSString *)name visibility:(NSFontCollectionVisibility)visibility toName:(NSString *)name error:(NSError **)error","+ (NSArray *)allFontCollectionNames","+ (id)fontCollectionWithName:(NSString *)name","+ (id)fontCollectionWithName:(NSString *)name visibility:(NSFontCollectionVisibility)visibility","- (NSArray *)queryDescriptors","- (NSArray *)exclusionDescriptors","- (NSArray *)matchingDescriptors","- (NSArray *)matchingDescriptorsWithOptions:(NSDictionary *)options","- (NSArray *)matchingDescriptorsForFamily:(NSString *)family","- (NSArray *)matchingDescriptorsForFamily:(NSString *)family options:(NSDictionary *)options","- (void)setQueryDescriptors:(NSArray *)descriptors","- (void)setExclusionDescriptors:(NSArray *)descriptors","- (void)addQueryForDescriptors:(NSArray *)descriptors","- (void)removeQueryForDescriptors:(NSArray *)descriptors","- (NSString *)postscriptName","- (CGFloat)pointSize","- (NSAffineTransform *)matrix","- (NSFontSymbolicTraits)symbolicTraits","- (id)objectForKey:(NSString *)anAttribute","- (NSDictionary *)fontAttributes","+ (NSFontDescriptor *)fontDescriptorWithFontAttributes:(NSDictionary *)attributes","+ (NSFontDescriptor *)fontDescriptorWithName:(NSString *)fontName size:(CGFloat)size","+ (NSFontDescriptor *)fontDescriptorWithName:(NSString *)fontName matrix:(NSAffineTransform *)matrix","- (id)initWithFontAttributes:(NSDictionary *)attributes","- (NSArray *)matchingFontDescriptorsWithMandatoryKeys:(NSSet *)mandatoryKeys","- (NSFontDescriptor *)fontDescriptorByAddingAttributes:(NSDictionary *)attributes","- (NSFontDescriptor *)fontDescriptorWithSymbolicTraits:(NSFontSymbolicTraits)symbolicTraits","- (NSFontDescriptor *)fontDescriptorWithSize:(CGFloat)newPointSize","- (NSFontDescriptor *)fontDescriptorWithMatrix:(NSAffineTransform *)matrix","- (NSFontDescriptor *)fontDescriptorWithFace:(NSString *)newFace","- (NSFontDescriptor *)fontDescriptorWithFamily:(NSString *)newFamily","+ (void)setFontPanelFactory:(Class)factoryId","+ (void)setFontManagerFactory:(Class)factoryId","+ (NSFontManager *)sharedFontManager","- (BOOL)isMultiple","- (NSFont *)selectedFont","- (void)setSelectedFont:(NSFont *)fontObj isMultiple:(BOOL)flag","- (void)setFontMenu:(NSMenu *)newMenu","- (NSMenu *)fontMenu:(BOOL)create","- (NSFontPanel *)fontPanel:(BOOL)create","- (NSFont *)fontWithFamily:(NSString *)family traits:(NSFontTraitMask)traits weight:(NSInteger)weight size:(CGFloat)size","- (NSFontTraitMask)traitsOfFont:(NSFont *)fontObj","- (NSInteger)weightOfFont:(NSFont *)fontObj","- (NSArray *)availableFonts","- (NSArray *)availableFontFamilies","- (NSArray *)availableMembersOfFontFamily:(NSString *)fam","- (NSFont *)convertFont:(NSFont *)fontObj","- (NSFont *)convertFont:(NSFont *)fontObj toSize:(CGFloat)size","- (NSFont *)convertFont:(NSFont *)fontObj toFace:(NSString *)typeface","- (NSFont *)convertFont:(NSFont *)fontObj toFamily:(NSString *)family","- (NSFont *)convertFont:(NSFont *)fontObj toHaveTrait:(NSFontTraitMask)trait","- (NSFont *)convertFont:(NSFont *)fontObj toNotHaveTrait:(NSFontTraitMask)trait","- (NSFont *)convertWeight:(BOOL)upFlag ofFont:(NSFont *)fontObj","- (BOOL)isEnabled","- (void)setEnabled:(BOOL)flag","- (SEL)action","- (void)setAction:(SEL)aSelector","- (BOOL)sendAction","- (void)setDelegate:(id)anObject","- (id)delegate","- (NSString *) localizedNameForFamily:(NSString *)family face:(NSString *)faceKey","- (void)setSelectedAttributes:(NSDictionary *)attributes isMultiple:(BOOL)flag","- (NSDictionary *)convertAttributes:(NSDictionary *)attributes","- (NSArray *)availableFontNamesMatchingFontDescriptor:(NSFontDescriptor *)descriptor","- (NSArray *)collectionNames","- (NSArray *)fontDescriptorsInCollection:(NSString *)collectionNames","- (BOOL)addCollection:(NSString *)collectionName options:(NSInteger)collectionOptions","- (BOOL)removeCollection:(NSString *)collectionName","- (void)addFontDescriptors:(NSArray *)descriptors toCollection:(NSString *)collectionName","- (void)removeFontDescriptor:(NSFontDescriptor *)descriptor fromCollection:(NSString *)collection","- (BOOL)fontNamed:(NSString *)fName hasTraits:(NSFontTraitMask)someTraits","- (NSArray *)availableFontNamesWithTraits:(NSFontTraitMask)someTraits","- (void)addFontTrait:(id)sender","- (void)removeFontTrait:(id)sender","- (void)modifyFontViaPanel:(id)sender","- (void)modifyFont:(id)sender","- (void)orderFrontFontPanel:(id)sender","- (void)orderFrontStylesPanel:(id)sender","- (BOOL)fontManager:(id)sender willIncludeFont:(NSString *)fontName","- (void)changeFont:(id)sender","- (NSUInteger) validModesForFontPanel: (NSFontPanel *) fontPanel","+ (NSFontPanel *)sharedFontPanel","+ (BOOL)sharedFontPanelExists","- (NSView *)accessoryView","- (void)setAccessoryView:(NSView *)aView","- (void)setPanelFont:(NSFont *)fontObj isMultiple:(BOOL)flag","- (NSFont *)panelConvertFont:(NSFont *)fontObj","- (BOOL)worksWhenModal","- (BOOL)isEnabled","- (void)setEnabled:(BOOL)flag","- (void) reloadDefaultFontFamilies","- (NSInteger)indexOfSelectedItem","- (void)setEntryWidth:(CGFloat)width","- (void)setInterlineSpacing:(CGFloat)spacing","- (void)setBordered:(BOOL)flag","- (void)setBezeled:(BOOL)flag","- (void)setTitleAlignment:(NSTextAlignment)mode","- (void)setTextAlignment:(NSTextAlignment)mode","- (void)setTitleFont:(NSFont *)fontObj","- (void)setTextFont:(NSFont *)fontObj","- (id)cellAtIndex:(NSInteger)index","- (void)drawCellAtIndex:(NSInteger)index","- (NSFormCell *)addEntry:(NSString *)title","- (NSFormCell *)insertEntry:(NSString *)title atIndex:(NSInteger)index","- (void)removeEntryAtIndex:(NSInteger)index","- (NSInteger)indexOfCellWithTag:(NSInteger)aTag","- (void)selectTextAtIndex:(NSInteger)index","- (void)setFrameSize:(NSSize)newSize","- (void)setTitleBaseWritingDirection:(NSWritingDirection)writingDirection","- (void)setTextBaseWritingDirection:(NSWritingDirection)writingDirection","- (id)initTextCell:(NSString *)aString","- (CGFloat)titleWidth:(NSSize)aSize","- (CGFloat)titleWidth","- (void)setTitleWidth:(CGFloat)width","- (NSString *)title","- (void)setTitle:(NSString *)aString","- (NSFont *)titleFont","- (void)setTitleFont:(NSFont *)fontObj","- (NSTextAlignment)titleAlignment","- (void)setTitleAlignment:(NSTextAlignment)mode","- (BOOL)isOpaque","- (void)setPlaceholderString:(NSString*)string","- (NSString*)placeholderString","- (void)setPlaceholderAttributedString:(NSAttributedString*)string","- (NSAttributedString*)placeholderAttributedString","- (NSWritingDirection)titleBaseWritingDirection","- (void)setTitleBaseWritingDirection:(NSWritingDirection)writingDirection","- (void)setTitleWithMnemonic:(NSString *)stringWithAmpersand","- (NSAttributedString *)attributedTitle","- (void)setAttributedTitle:(NSAttributedString *)obj","- (void)generateGlyphsForGlyphStorage:(id <NSGlyphStorage>)glyphStorage desiredNumberOfCharacters:(NSUInteger)nChars glyphIndex:(NSUInteger *)glyphIndex characterIndex:(NSUInteger *)charIndex","+ (id) sharedGlyphGenerator","+ (NSGlyphInfo *)glyphInfoWithGlyphName:(NSString *)glyphName forFont:(NSFont *)font baseString:(NSString *)theString","+ (NSGlyphInfo *)glyphInfoWithGlyph:(NSGlyph)glyph forFont:(NSFont *)font baseString:(NSString *)theString","+ (NSGlyphInfo *)glyphInfoWithCharacterIdentifier:(NSUInteger)cid collection:(NSCharacterCollection)characterCollection baseString:(NSString *)theString","- (NSString *)glyphName","- (NSUInteger)characterIdentifier","- (NSCharacterCollection)characterCollection","- (id)initWithStartingColor:(NSColor *)startingColor endingColor:(NSColor *)endingColor","- (id)initWithColors:(NSArray *)colorArray","- (id)initWithColors:(NSArray *)colorArray atLocations:(const CGFloat *)locations colorSpace:(NSColorSpace *)colorSpace","- (void)drawFromPoint:(NSPoint)startingPoint toPoint:(NSPoint)endingPoint options:(NSGradientDrawingOptions)options","- (void)drawInRect:(NSRect)rect angle:(CGFloat)angle","- (void)drawInBezierPath:(NSBezierPath *)path angle:(CGFloat)angle","- (void)drawFromCenter:(NSPoint)startCenter radius:(CGFloat)startRadius toCenter:(NSPoint)endCenter radius:(CGFloat)endRadius options:(NSGradientDrawingOptions)options","- (void)drawInRect:(NSRect)rect relativeCenterPosition:(NSPoint)relativeCenterPosition","- (void)drawInBezierPath:(NSBezierPath *)path relativeCenterPosition:(NSPoint)relativeCenterPosition","- (NSColorSpace *)colorSpace","- (NSInteger)numberOfColorStops","- (void)getColor:(NSColor **)color location:(CGFloat *)location atIndex:(NSInteger)index","- (NSColor *)interpolatedColorAtLocation:(CGFloat)location","+ (NSGraphicsContext *)graphicsContextWithAttributes:(NSDictionary *)attributes","+ (NSGraphicsContext *)graphicsContextWithWindow:(NSWindow *)window","+ (NSGraphicsContext *)graphicsContextWithBitmapImageRep:(NSBitmapImageRep *)bitmapRep","+ (NSGraphicsContext *)graphicsContextWithGraphicsPort:(void *)graphicsPort flipped:(BOOL)initialFlippedState","+ (NSGraphicsContext *)currentContext","+ (void)setCurrentContext:(NSGraphicsContext *)context","+ (BOOL)currentContextDrawingToScreen","+ (void)saveGraphicsState","+ (void)restoreGraphicsState","+ (void)setGraphicsState:(NSInteger)gState","- (NSDictionary *)attributes","- (BOOL)isDrawingToScreen","- (void)saveGraphicsState","- (void)restoreGraphicsState","- (void)flushGraphics","- (void *)graphicsPort","- (BOOL)isFlipped","- (void)setShouldAntialias:(BOOL)antialias","- (BOOL)shouldAntialias","- (void)setImageInterpolation:(NSImageInterpolation)interpolation","- (NSImageInterpolation)imageInterpolation","- (void)setPatternPhase:(NSPoint)phase","- (NSPoint)patternPhase","- (void)setCompositingOperation:(NSCompositingOperation)operation","- (NSCompositingOperation)compositingOperation","- (CIContext *)CIContext","- (id)focusStack","- (void)setFocusStack:(id)stack","+ (NSHelpManager *)sharedHelpManager","+ (void)setContextHelpModeActive:(BOOL)active","+ (BOOL)isContextHelpModeActive","- (void)setContextHelp:(NSAttributedString *)attrString forObject:(id)object","- (void)removeContextHelpForObject:(id)object","- (NSAttributedString *)contextHelpForObject:(id)object","- (BOOL)showContextHelpForObject:(id)object locationHint:(NSPoint)pt","- (void)openHelpAnchor:(NSString *)anchor inBook:(NSString *)book","- (void)findString:(NSString *)query inBook:(NSString *)book","- (NSAttributedString *)contextHelpForKey:(NSString *)key","- (void)activateContextHelpMode:(id)sender","- (void)showHelp:(id)sender","+ (id)imageNamed:(NSString *)name","- (id)initWithSize:(NSSize)aSize","- (id)initWithData:(NSData *)data","- (id)initWithContentsOfFile:(NSString *)fileName","- (id)initWithContentsOfURL:(NSURL *)url","- (id)initByReferencingFile:(NSString *)fileName","- (id)initByReferencingURL:(NSURL *)url","- (id)initWithPasteboard:(NSPasteboard *)pasteboard","- (void)setSize:(NSSize)aSize","- (NSSize)size","- (BOOL)setName:(NSString *)string","- (NSString *)name","- (void)setBackgroundColor:(NSColor *)aColor","- (NSColor *)backgroundColor","- (void)setUsesEPSOnResolutionMismatch:(BOOL)flag","- (BOOL)usesEPSOnResolutionMismatch","- (void)setPrefersColorMatch:(BOOL)flag","- (BOOL)prefersColorMatch","- (void)setMatchesOnMultipleResolution:(BOOL)flag","- (BOOL)matchesOnMultipleResolution","- (void)drawAtPoint:(NSPoint)point fromRect:(NSRect)fromRect operation:(NSCompositingOperation)op fraction:(CGFloat)delta","- (void)drawInRect:(NSRect)rect fromRect:(NSRect)fromRect operation:(NSCompositingOperation)op fraction:(CGFloat)delta","- (BOOL)drawRepresentation:(NSImageRep *)imageRep inRect:(NSRect)rect","- (void)recache","- (NSData *)TIFFRepresentation","- (NSData *)TIFFRepresentationUsingCompression:(NSTIFFCompression)comp factor:(float)aFloat","- (NSArray *)representations","- (void)addRepresentations:(NSArray *)imageReps","- (void)addRepresentation:(NSImageRep *)imageRep","- (void)removeRepresentation:(NSImageRep *)imageRep","- (BOOL)isValid","- (void)lockFocus","- (void)unlockFocus","- (void)setDelegate:(id <NSImageDelegate>)anObject","- (id <NSImageDelegate>)delegate","+ (NSArray *)imageUnfilteredFileTypes","+ (NSArray *)imageUnfilteredPasteboardTypes","+ (NSArray *)imageFileTypes","+ (NSArray *)imagePasteboardTypes","+ (BOOL)canInitWithPasteboard:(NSPasteboard *)pasteboard","- (void)cancelIncrementalLoad","-(void)setCacheMode:(NSImageCacheMode)mode","-(NSImageCacheMode)cacheMode","- (NSString *)pathForImageResource:(NSString *)name","- (void)setFlipped:(BOOL)flag","- (BOOL)isFlipped","- (void)dissolveToPoint:(NSPoint)point fraction:(CGFloat)aFloat","- (void)dissolveToPoint:(NSPoint)point fromRect:(NSRect)rect fraction:(CGFloat)aFloat","- (void)compositeToPoint:(NSPoint)point operation:(NSCompositingOperation)op","- (void)compositeToPoint:(NSPoint)point fromRect:(NSRect)rect operation:(NSCompositingOperation)op","- (void)compositeToPoint:(NSPoint)point operation:(NSCompositingOperation)op fraction:(CGFloat)delta","- (void)compositeToPoint:(NSPoint)point fromRect:(NSRect)rect operation:(NSCompositingOperation)op fraction:(CGFloat)delta","- (void)lockFocusOnRepresentation:(NSImageRep *)imageRepresentation","- (void)setScalesWhenResized:(BOOL)flag","- (BOOL)scalesWhenResized","- (void)setDataRetained:(BOOL)flag","- (BOOL)isDataRetained","- (void)setCachedSeparately:(BOOL)flag","- (BOOL)isCachedSeparately","- (void)setCacheDepthMatchesImageDepth:(BOOL)flag","- (BOOL)cacheDepthMatchesImageDepth","- (NSImageAlignment)imageAlignment","- (void)setImageAlignment:(NSImageAlignment)newAlign","- (NSImageScaling)imageScaling","- (void)setImageScaling:(NSImageScaling)newScaling","- (NSImageFrameStyle)imageFrameStyle","- (void)setImageFrameStyle:(NSImageFrameStyle)newStyle","- (BOOL)draw","- (BOOL)drawAtPoint:(NSPoint)point","- (BOOL)drawInRect:(NSRect)rect","- (void)setSize:(NSSize)aSize","- (NSSize)size","- (void)setAlpha:(BOOL)flag","- (BOOL)hasAlpha","- (void)setOpaque:(BOOL)flag","- (BOOL)isOpaque","- (void)setColorSpaceName:(NSString *)string","- (NSString *)colorSpaceName","- (void)setBitsPerSample:(NSInteger)anInt","- (NSInteger)bitsPerSample","- (void)setPixelsWide:(NSInteger)anInt","- (NSInteger)pixelsWide","- (void)setPixelsHigh:(NSInteger)anInt","- (NSInteger)pixelsHigh","+ (void)registerImageRepClass:(Class)imageRepClass","+ (void)unregisterImageRepClass:(Class)imageRepClass","+ (NSArray *)registeredImageRepClasses","+ (Class)imageRepClassForFileType:(NSString *)type","+ (Class)imageRepClassForPasteboardType:(NSString *)type","+ (Class)imageRepClassForData:(NSData *)data","+ (BOOL)canInitWithData:(NSData *)data","+ (NSArray *)imageUnfilteredFileTypes","+ (NSArray *)imageUnfilteredPasteboardTypes","+ (NSArray *)imageFileTypes","+ (NSArray *)imagePasteboardTypes","+ (BOOL)canInitWithPasteboard:(NSPasteboard *)pasteboard","+ (NSArray *)imageRepsWithContentsOfFile:(NSString *)filename","+ (id)imageRepWithContentsOfFile:(NSString *)filename","+ (NSArray *)imageRepsWithContentsOfURL:(NSURL *)url","+ (id)imageRepWithContentsOfURL:(NSURL *)url","+ (NSArray *)imageRepsWithPasteboard:(NSPasteboard *)pasteboard","+ (id)imageRepWithPasteboard:(NSPasteboard *)pasteboard","- (NSImage *)image","- (void)setImage:(NSImage *)newImage","- (NSImageAlignment)imageAlignment","- (void)setImageAlignment:(NSImageAlignment)newAlign","- (NSImageScaling)imageScaling","- (void)setImageScaling:(NSImageScaling)newScaling","- (NSImageFrameStyle)imageFrameStyle","- (void)setImageFrameStyle:(NSImageFrameStyle)newStyle","- (void)setEditable:(BOOL)yn","- (BOOL)isEditable","- (void)setAnimates:(BOOL)flag","- (BOOL)animates","- (BOOL)allowsCutCopyPaste","- (void)setAllowsCutCopyPaste:(BOOL)allow","+ (NSInputManager *) currentInputManager","+ (void)cycleToNextInputLanguage:(id)sender","+ (void)cycleToNextInputServerInLanguage:(id)sender","- (void) markedTextAbandoned:(id)cli","- (void) markedTextSelectionChanged:(NSRange)newSel client:(id)cli","- (BOOL) wantsToHandleMouseEvents","- (BOOL) handleMouseEvent:(NSEvent*)theMouseEvent","- (NSInterfaceStyle)interfaceStyle","- (void)setInterfaceStyle:(NSInterfaceStyle)interfaceStyle","+ (void)exposeBinding:(NSString *)binding","- (NSArray *)exposedBindings","- (Class)valueClassForBinding:(NSString *)binding","- (void)bind:(NSString *)binding toObject:(id)observable withKeyPath:(NSString *)keyPath options:(NSDictionary *)options","- (void)unbind:(NSString *)binding","- (NSDictionary *)infoForBinding:(NSString *)binding","+ (void)setDefaultPlaceholder:(id)placeholder forMarker:(id)marker withBinding:(NSString *)binding","+ (id)defaultPlaceholderForMarker:(id)marker withBinding:(NSString *)binding","- (void)objectDidBeginEditing:(id)editor","- (void)objectDidEndEditing:(id)editor","- (void)discardEditing","- (BOOL)commitEditing","- (void)editor:(id)editor didCommit:(BOOL)didCommit contextInfo:(void *)contextInfo","- (void)commitEditingWithDelegate:(id)delegate didCommitSelector:(SEL)didCommitSelector contextInfo:(void *)contextInfo","+ (NSArray *)constraintsWithVisualFormat:(NSString *)format options:(NSLayoutFormatOptions)opts metrics:(NSDictionary *)metrics views:(NSDictionary *)views","+(id)constraintWithItem:(id)view1 attribute:(NSLayoutAttribute)attr1 relatedBy:(NSLayoutRelation)relation toItem:(id)view2 attribute:(NSLayoutAttribute)attr2 multiplier:(CGFloat)multiplier constant:(CGFloat)c","- (NSLayoutAttribute)anchorAttributeForOrientation:(NSLayoutConstraintOrientation)orientation","- (void)setAnchorAttribute:(NSLayoutAttribute)attr forOrientation:(NSLayoutConstraintOrientation)orientation","- (id)init","- (NSTextStorage *)textStorage","- (void)setTextStorage:(NSTextStorage *)textStorage","- (NSAttributedString *)attributedString","- (void)replaceTextStorage:(NSTextStorage *)newTextStorage","- (NSGlyphGenerator *)glyphGenerator","- (void)setGlyphGenerator:(NSGlyphGenerator *)glyphGenerator","- (NSTypesetter *)typesetter","- (void)setTypesetter:(NSTypesetter *)typesetter","- (id <NSLayoutManagerDelegate>)delegate","- (void)setDelegate:(id <NSLayoutManagerDelegate>)delegate","- (NSArray *)textContainers","- (void)addTextContainer:(NSTextContainer *)container","- (void)insertTextContainer:(NSTextContainer *)container atIndex:(NSUInteger)index","- (void)removeTextContainerAtIndex:(NSUInteger)index","- (void)textContainerChangedGeometry:(NSTextContainer *)container","- (void)textContainerChangedTextView:(NSTextContainer *)container","- (void)setBackgroundLayoutEnabled:(BOOL)flag","- (BOOL)backgroundLayoutEnabled","- (void)setUsesScreenFonts:(BOOL)flag","- (BOOL)usesScreenFonts","- (void)setShowsInvisibleCharacters:(BOOL)flag","- (BOOL)showsInvisibleCharacters","- (void)setShowsControlCharacters:(BOOL)flag","- (BOOL)showsControlCharacters","- (void)setHyphenationFactor:(float)factor","- (float)hyphenationFactor","- (void)setDefaultAttachmentScaling:(NSImageScaling)scaling","- (NSImageScaling)defaultAttachmentScaling","- (void)setTypesetterBehavior:(NSTypesetterBehavior)theBehavior","- (NSTypesetterBehavior)typesetterBehavior","- (NSUInteger)layoutOptions","- (void)invalidateGlyphsForCharacterRange:(NSRange)charRange changeInLength:(NSInteger)delta actualCharacterRange:(NSRangePointer)actualCharRange","- (void)invalidateLayoutForCharacterRange:(NSRange)charRange isSoft:(BOOL)flag actualCharacterRange:(NSRangePointer)actualCharRange","- (void)invalidateDisplayForCharacterRange:(NSRange)charRange","- (void)invalidateDisplayForGlyphRange:(NSRange)glyphRange","- (void)textStorage:(NSTextStorage *)str edited:(NSUInteger)editedMask range:(NSRange)newCharRange changeInLength:(NSInteger)delta invalidatedRange:(NSRange)invalidatedCharRange","- (void)insertGlyphs:(const NSGlyph *)glyphs length:(NSUInteger)length forStartingGlyphAtIndex:(NSUInteger)glyphIndex characterIndex:(NSUInteger)charIndex","- (void)insertGlyph:(NSGlyph)glyph atGlyphIndex:(NSUInteger)glyphIndex characterIndex:(NSUInteger)charIndex","- (void)replaceGlyphAtIndex:(NSUInteger)glyphIndex withGlyph:(NSGlyph)newGlyph","- (void)deleteGlyphsInRange:(NSRange)glyphRange","- (void)setCharacterIndex:(NSUInteger)charIndex forGlyphAtIndex:(NSUInteger)glyphIndex","- (void)setIntAttribute:(NSInteger)attributeTag value:(NSInteger)val forGlyphAtIndex:(NSUInteger)glyphIndex","- (NSUInteger)numberOfGlyphs","- (NSGlyph)glyphAtIndex:(NSUInteger)glyphIndex isValidIndex:(BOOL *)isValidIndex","- (NSGlyph)glyphAtIndex:(NSUInteger)glyphIndex","- (BOOL)isValidGlyphIndex:(NSUInteger)glyphIndex","- (NSUInteger)characterIndexForGlyphAtIndex:(NSUInteger)glyphIndex","- (NSInteger)intAttribute:(NSInteger)attributeTag forGlyphAtIndex:(NSUInteger)glyphIndex","- (NSUInteger)getGlyphsInRange:(NSRange)glyphRange glyphs:(NSGlyph *)glyphBuffer characterIndexes:(NSUInteger *)charIndexBuffer glyphInscriptions:(NSGlyphInscription *)inscribeBuffer elasticBits:(BOOL *)elasticBuffer","- (NSUInteger)getGlyphsInRange:(NSRange)glyphRange glyphs:(NSGlyph *)glyphBuffer characterIndexes:(NSUInteger *)charIndexBuffer glyphInscriptions:(NSGlyphInscription *)inscribeBuffer elasticBits:(BOOL *)elasticBuffer bidiLevels:(unsigned char *)bidiLevelBuffer","- (NSUInteger)getGlyphs:(NSGlyph *)glyphArray range:(NSRange)glyphRange","- (void)setTextContainer:(NSTextContainer *)container forGlyphRange:(NSRange)glyphRange","- (void)setLineFragmentRect:(NSRect)fragmentRect forGlyphRange:(NSRange)glyphRange usedRect:(NSRect)usedRect","- (void)setExtraLineFragmentRect:(NSRect)fragmentRect usedRect:(NSRect)usedRect textContainer:(NSTextContainer *)container","- (void)setLocation:(NSPoint)location forStartOfGlyphRange:(NSRange)glyphRange","- (void)setNotShownAttribute:(BOOL)flag forGlyphAtIndex:(NSUInteger)glyphIndex","- (void)setDrawsOutsideLineFragment:(BOOL)flag forGlyphAtIndex:(NSUInteger)glyphIndex","- (void)setAttachmentSize:(NSSize)attachmentSize forGlyphRange:(NSRange)glyphRange","- (void)getFirstUnlaidCharacterIndex:(NSUInteger *)charIndex glyphIndex:(NSUInteger *)glyphIndex","- (NSUInteger)firstUnlaidCharacterIndex","- (NSUInteger)firstUnlaidGlyphIndex","- (NSTextContainer *)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer)effectiveGlyphRange","- (NSRect)usedRectForTextContainer:(NSTextContainer *)container","- (NSRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer)effectiveGlyphRange","- (NSRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer)effectiveGlyphRange","- (NSRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag","- (NSRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag","- (NSTextContainer *)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag","- (NSRect)extraLineFragmentRect","- (NSRect)extraLineFragmentUsedRect","- (NSTextContainer *)extraLineFragmentTextContainer","- (NSPoint)locationForGlyphAtIndex:(NSUInteger)glyphIndex","- (BOOL)notShownAttributeForGlyphAtIndex:(NSUInteger)glyphIndex","- (BOOL)drawsOutsideLineFragmentForGlyphAtIndex:(NSUInteger)glyphIndex","- (NSSize)attachmentSizeForGlyphAtIndex:(NSUInteger)glyphIndex","- (void)setLayoutRect:(NSRect)rect forTextBlock:(NSTextBlock *)block glyphRange:(NSRange)glyphRange","- (void)setBoundsRect:(NSRect)rect forTextBlock:(NSTextBlock *)block glyphRange:(NSRange)glyphRange","- (NSRect)layoutRectForTextBlock:(NSTextBlock *)block glyphRange:(NSRange)glyphRange","- (NSRect)boundsRectForTextBlock:(NSTextBlock *)block glyphRange:(NSRange)glyphRange","- (NSRect)layoutRectForTextBlock:(NSTextBlock *)block atIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer)effectiveGlyphRange","- (NSRect)boundsRectForTextBlock:(NSTextBlock *)block atIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer)effectiveGlyphRange","- (NSRange)glyphRangeForCharacterRange:(NSRange)charRange actualCharacterRange:(NSRangePointer)actualCharRange","- (NSRange)characterRangeForGlyphRange:(NSRange)glyphRange actualGlyphRange:(NSRangePointer)actualGlyphRange","- (NSRange)glyphRangeForTextContainer:(NSTextContainer *)container","- (NSRange)rangeOfNominallySpacedGlyphsContainingIndex:(NSUInteger)glyphIndex","- (NSRectArray)rectArrayForCharacterRange:(NSRange)charRange withinSelectedCharacterRange:(NSRange)selCharRange inTextContainer:(NSTextContainer *)container rectCount:(NSUInteger *)rectCount","- (NSRectArray)rectArrayForGlyphRange:(NSRange)glyphRange withinSelectedGlyphRange:(NSRange)selGlyphRange inTextContainer:(NSTextContainer *)container rectCount:(NSUInteger *)rectCount","- (NSRect)boundingRectForGlyphRange:(NSRange)glyphRange inTextContainer:(NSTextContainer *)container","- (NSRange)glyphRangeForBoundingRect:(NSRect)bounds inTextContainer:(NSTextContainer *)container","- (NSRange)glyphRangeForBoundingRectWithoutAdditionalLayout:(NSRect)bounds inTextContainer:(NSTextContainer *)container","- (NSUInteger)glyphIndexForPoint:(NSPoint)point inTextContainer:(NSTextContainer *)container fractionOfDistanceThroughGlyph:(CGFloat *)partialFraction","- (NSUInteger)glyphIndexForPoint:(NSPoint)point inTextContainer:(NSTextContainer *)container","- (CGFloat)fractionOfDistanceThroughGlyphForPoint:(NSPoint)point inTextContainer:(NSTextContainer *)container","- (NSDictionary *)temporaryAttributesAtCharacterIndex:(NSUInteger)charIndex effectiveRange:(NSRangePointer)effectiveCharRange","- (void)setTemporaryAttributes:(NSDictionary *)attrs forCharacterRange:(NSRange)charRange","- (void)addTemporaryAttributes:(NSDictionary *)attrs forCharacterRange:(NSRange)charRange","- (void)removeTemporaryAttribute:(NSString *)attrName forCharacterRange:(NSRange)charRange","- (NSFont *)substituteFontForFont:(NSFont *)originalFont","- (CGFloat)defaultLineHeightForFont:(NSFont *)theFont","- (CGFloat)defaultBaselineOffsetForFont:(NSFont *)theFont","- (BOOL)usesFontLeading","- (void)setUsesFontLeading:(BOOL)flag","- (NSArray *)rulerMarkersForTextView:(NSTextView *)view paragraphStyle:(NSParagraphStyle *)style ruler:(NSRulerView *)ruler","- (NSView *)rulerAccessoryViewForTextView:(NSTextView *)view paragraphStyle:(NSParagraphStyle *)style ruler:(NSRulerView *)ruler enabled:(BOOL)isEnabled","- (BOOL)layoutManagerOwnsFirstResponderInWindow:(NSWindow *)window","- (NSTextView *)firstTextView","- (NSTextView *)textViewForBeginningOfSelection","- (void)drawBackgroundForGlyphRange:(NSRange)glyphsToShow atPoint:(NSPoint)origin","- (void)drawGlyphsForGlyphRange:(NSRange)glyphsToShow atPoint:(NSPoint)origin","- (void)showAttachmentCell:(NSCell *)cell inRect:(NSRect)rect characterIndex:(NSUInteger)attachmentIndex","- (void)drawUnderlineForGlyphRange:(NSRange)glyphRange underlineType:(NSInteger)underlineVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(NSRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(NSPoint)containerOrigin","- (void)underlineGlyphRange:(NSRange)glyphRange underlineType:(NSInteger)underlineVal lineFragmentRect:(NSRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(NSPoint)containerOrigin","- (void)drawStrikethroughForGlyphRange:(NSRange)glyphRange strikethroughType:(NSInteger)strikethroughVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(NSRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(NSPoint)containerOrigin","- (void)strikethroughGlyphRange:(NSRange)glyphRange strikethroughType:(NSInteger)strikethroughVal lineFragmentRect:(NSRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(NSPoint)containerOrigin","- (double)minValue","- (void)setMinValue:(double)minValue","- (double)maxValue","- (void)setMaxValue:(double)maxValue","- (double)warningValue","- (void)setWarningValue:(double)warningValue","- (double)criticalValue","- (void)setCriticalValue:(double)criticalValue","- (NSTickMarkPosition)tickMarkPosition","- (void)setTickMarkPosition:(NSTickMarkPosition)position","- (NSInteger)numberOfTickMarks","- (void)setNumberOfTickMarks:(NSInteger)count","- (NSInteger)numberOfMajorTickMarks","- (void)setNumberOfMajorTickMarks:(NSInteger)count","- (double)tickMarkValueAtIndex:(NSInteger)index","- (NSRect)rectOfTickMarkAtIndex:(NSInteger)index","- (id)initWithLevelIndicatorStyle:(NSLevelIndicatorStyle)levelIndicatorStyle","- (NSLevelIndicatorStyle)levelIndicatorStyle","- (void)setLevelIndicatorStyle:(NSLevelIndicatorStyle)levelIndicatorStyle","- (double)minValue","- (void)setMinValue:(double)minValue","- (double)maxValue","- (void)setMaxValue:(double)maxValue","- (double)warningValue","- (void)setWarningValue:(double)warningValue","- (double)criticalValue","- (void)setCriticalValue:(double)criticalValue","- (void)setTickMarkPosition:(NSTickMarkPosition)position","- (NSTickMarkPosition)tickMarkPosition","- (void)setNumberOfTickMarks:(NSInteger)count","- (NSInteger)numberOfTickMarks","- (void)setNumberOfMajorTickMarks:(NSInteger)count","- (NSInteger)numberOfMajorTickMarks","- (NSRect)rectOfTickMarkAtIndex:(NSInteger)index","- (double)tickMarkValueAtIndex:(NSInteger)index","- (void)setImage:(NSImage*)image","- (id)initWithFrame:(NSRect)frameRect","- (id)initWithFrame:(NSRect)frameRect mode:(NSMatrixMode)aMode prototype:(NSCell *)aCell numberOfRows:(NSInteger)rowsHigh numberOfColumns:(NSInteger)colsWide","- (id)initWithFrame:(NSRect)frameRect mode:(NSMatrixMode)aMode cellClass:(Class)factoryId numberOfRows:(NSInteger)rowsHigh numberOfColumns:(NSInteger)colsWide","- (void)setCellClass:(Class)factoryId","- (Class)cellClass","- (id)prototype","- (void)setPrototype:(NSCell *)aCell","- (NSCell *)makeCellAtRow:(NSInteger)row column:(NSInteger)col","- (NSMatrixMode)mode","- (void)setMode:(NSMatrixMode)aMode","- (void)setAllowsEmptySelection:(BOOL)flag","- (BOOL)allowsEmptySelection","- (void)sendAction:(SEL)aSelector to:(id)anObject forAllCells:(BOOL)flag","- (NSArray *)cells","- (void)sortUsingSelector:(SEL)comparator","- (id)selectedCell","- (NSArray *)selectedCells","- (NSInteger)selectedRow","- (NSInteger)selectedColumn","- (void)setSelectionByRect:(BOOL)flag","- (BOOL)isSelectionByRect","- (void)setSelectionFrom:(NSInteger)startPos to:(NSInteger)endPos anchor:(NSInteger)anchorPos highlight:(BOOL)lit","- (void)deselectSelectedCell","- (void)deselectAllCells","- (void)selectCellAtRow:(NSInteger)row column:(NSInteger)col","- (void)selectAll:(id)sender","- (BOOL)selectCellWithTag:(NSInteger)anInt","- (NSSize)cellSize","- (void)setCellSize:(NSSize)aSize","- (NSSize)intercellSpacing","- (void)setIntercellSpacing:(NSSize)aSize","- (void)setScrollable:(BOOL)flag","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (void)setCellBackgroundColor:(NSColor *)color","- (NSColor *)cellBackgroundColor","- (void)setDrawsCellBackground:(BOOL)flag","- (BOOL)drawsCellBackground","- (void)setDrawsBackground:(BOOL)flag","- (BOOL)drawsBackground","- (void)setState:(NSInteger)value atRow:(NSInteger)row column:(NSInteger)col","- (void)getNumberOfRows:(NSInteger *)rowCount columns:(NSInteger *)colCount","- (NSInteger)numberOfRows","- (NSInteger)numberOfColumns","- (id)cellAtRow:(NSInteger)row column:(NSInteger)col","- (NSRect)cellFrameAtRow:(NSInteger)row column:(NSInteger)col","- (BOOL)getRow:(NSInteger *)row column:(NSInteger *)col ofCell:(NSCell *)aCell","- (BOOL)getRow:(NSInteger *)row column:(NSInteger *)col forPoint:(NSPoint)aPoint","- (void)renewRows:(NSInteger)newRows columns:(NSInteger)newCols","- (void)putCell:(NSCell *)newCell atRow:(NSInteger)row column:(NSInteger)col","- (void)addRow","- (void)addRowWithCells:(NSArray *)newCells","- (void)insertRow:(NSInteger)row","- (void)insertRow:(NSInteger)row withCells:(NSArray *)newCells","- (void)removeRow:(NSInteger)row","- (void)addColumn","- (void)addColumnWithCells:(NSArray *)newCells","- (void)insertColumn:(NSInteger)column","- (void)insertColumn:(NSInteger)column withCells:(NSArray *)newCells","- (void)removeColumn:(NSInteger)col","- (id)cellWithTag:(NSInteger)anInt","- (SEL)doubleAction","- (void)setDoubleAction:(SEL)aSelector","- (void)setAutosizesCells:(BOOL)flag","- (BOOL)autosizesCells","- (void)sizeToCells","- (void)setValidateSize:(BOOL)flag","- (void)drawCellAtRow:(NSInteger)row column:(NSInteger)col","- (void)highlightCell:(BOOL)flag atRow:(NSInteger)row column:(NSInteger)col","- (void)setAutoscroll:(BOOL)flag","- (BOOL)isAutoscroll","- (void)scrollCellToVisibleAtRow:(NSInteger)row column:(NSInteger)col","- (NSInteger)mouseDownFlags","- (void)mouseDown:(NSEvent *)theEvent","- (BOOL)performKeyEquivalent:(NSEvent *)theEvent","- (BOOL)sendAction","- (void)sendDoubleAction","- (id <NSMatrixDelegate>)delegate","- (void)setDelegate:(id <NSMatrixDelegate>)anObject","- (BOOL)textShouldBeginEditing:(NSText *)textObject","- (BOOL)textShouldEndEditing:(NSText *)textObject","- (void)textDidBeginEditing:(NSNotification *)notification","- (void)textDidEndEditing:(NSNotification *)notification","- (void)textDidChange:(NSNotification *)notification","- (void)selectText:(id)sender","- (id)selectTextAtRow:(NSInteger)row column:(NSInteger)col","- (BOOL)acceptsFirstMouse:(NSEvent *)theEvent","- (void)resetCursorRects","- (void)setToolTip:(NSString *)toolTipString forCell:(NSCell *)cell","- (NSString *)toolTipForCell:(NSCell *)cell","- (void)setTabKeyTraversesCells:(BOOL)flag","- (BOOL)tabKeyTraversesCells","- (void)setKeyCell:(NSCell *)keyCell","- (id)keyCell","- (id)initWithTitle:(NSString *)aTitle","- (void)setTitle:(NSString *)aString","- (NSString *)title","+ (void)popUpContextMenu:(NSMenu*)menu withEvent:(NSEvent*)event forView:(NSView*)view","+ (void)popUpContextMenu:(NSMenu*)menu withEvent:(NSEvent*)event forView:(NSView*)view withFont:(NSFont*)font","+ (void)setMenuBarVisible:(BOOL)visible","+ (BOOL)menuBarVisible","- (NSMenu *)supermenu","- (void)setSupermenu:(NSMenu *)supermenu","- (void)insertItem:(NSMenuItem *)newItem atIndex:(NSInteger)index","- (void)addItem:(NSMenuItem *)newItem","- (NSMenuItem *)insertItemWithTitle:(NSString *)aString action:(SEL)aSelector keyEquivalent:(NSString *)charCode atIndex:(NSInteger)index","- (NSMenuItem *)addItemWithTitle:(NSString *)aString action:(SEL)aSelector keyEquivalent:(NSString *)charCode","- (void)removeItemAtIndex:(NSInteger)index","- (void)removeItem:(NSMenuItem *)item","- (void)setSubmenu:(NSMenu *)aMenu forItem:(NSMenuItem *)anItem","- (NSArray *)itemArray","- (NSInteger)numberOfItems","- (NSMenuItem *)itemAtIndex:(NSInteger)index","- (NSInteger)indexOfItem:(NSMenuItem *)index","- (NSInteger)indexOfItemWithTitle:(NSString *)aTitle","- (NSInteger)indexOfItemWithTag:(NSInteger)aTag","- (NSInteger)indexOfItemWithRepresentedObject:(id)object","- (NSInteger)indexOfItemWithSubmenu:(NSMenu *)submenu","- (NSInteger)indexOfItemWithTarget:(id)target andAction:(SEL)actionSelector","- (NSMenuItem *)itemWithTitle:(NSString *)aTitle","- (NSMenuItem *)itemWithTag:(NSInteger)tag","- (void)setAutoenablesItems:(BOOL)flag","- (BOOL)autoenablesItems","- (void)update","- (BOOL)performKeyEquivalent:(NSEvent *)theEvent","- (void)itemChanged:(NSMenuItem *)item","- (void)performActionForItemAtIndex:(NSInteger)index","- (void)setDelegate:(id <NSMenuDelegate>)anObject","- (id <NSMenuDelegate>)delegate","- (CGFloat)menuBarHeight","+ (NSZone *)menuZone","- (void)setMenuChangedMessagesEnabled:(BOOL)flag","- (BOOL)menuChangedMessagesEnabled","- (void)helpRequested:(NSEvent *)eventPtr","- (BOOL)isTornOff","- (void)submenuAction:(id)sender","- (BOOL)validateMenuItem:(NSMenuItem *)menuItem","+ (void)setUsesUserKeyEquivalents:(BOOL)flag","+ (BOOL)usesUserKeyEquivalents","+ (NSMenuItem *)separatorItem","- (id)initWithTitle:(NSString *)aString action:(SEL)aSelector keyEquivalent:(NSString *)charCode","- (void)setMenu:(NSMenu *)menu","- (NSMenu *)menu","- (BOOL)hasSubmenu","- (void)setSubmenu:(NSMenu *)submenu","- (NSMenu *)submenu","- (void)setTitle:(NSString *)aString","- (NSString *)title","- (void)setAttributedTitle:(NSAttributedString*)string","- (NSAttributedString*)attributedTitle","- (BOOL)isSeparatorItem","- (void)setKeyEquivalent:(NSString *)aKeyEquivalent","- (NSString *)keyEquivalent","- (void)setKeyEquivalentModifierMask:(NSUInteger)mask","- (NSUInteger)keyEquivalentModifierMask","- (NSString *)userKeyEquivalent","- (void)setTitleWithMnemonic:(NSString *)stringWithAmpersand","- (void)setImage:(NSImage *)menuImage","- (NSImage *)image","- (void)setState:(NSInteger)state","- (NSInteger)state","- (void)setOnStateImage:(NSImage *)image","- (NSImage *)onStateImage","- (void)setOffStateImage:(NSImage *)image","- (NSImage *)offStateImage","- (void)setMixedStateImage:(NSImage *)image","- (NSImage *)mixedStateImage","- (void)setEnabled:(BOOL)flag","- (BOOL)isEnabled","- (void)setAlternate:(BOOL)isAlternate","- (BOOL)isAlternate","- (void)setIndentationLevel:(NSInteger)indentationLevel","- (NSInteger)indentationLevel","- (void)setTarget:(id)anObject","- (id)target","- (void)setAction:(SEL)aSelector","- (SEL)action","- (void)setTag:(NSInteger)anInt","- (NSInteger)tag","- (void)setRepresentedObject:(id)anObject","- (id)representedObject","- (void) setToolTip:(NSString*)toolTip","- (NSString*)toolTip","- (void)setMenuItem:(NSMenuItem *)item","- (NSMenuItem *)menuItem","- (void)setMenuView:(NSMenuView *)menuView","- (NSMenuView *)menuView","- (void)setNeedsSizing:(BOOL)flag","- (BOOL)needsSizing","- (void)calcSize","- (void)setNeedsDisplay:(BOOL)flag","- (BOOL)needsDisplay","- (CGFloat)stateImageWidth","- (CGFloat)imageWidth","- (CGFloat)titleWidth","- (CGFloat)keyEquivalentWidth","- (NSRect)stateImageRectForBounds:(NSRect)cellFrame","- (NSRect)titleRectForBounds:(NSRect)cellFrame","- (NSRect)keyEquivalentRectForBounds:(NSRect)cellFrame","- (void)drawSeparatorItemWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (void)drawStateImageWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (void)drawImageWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (void)drawTitleWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (void)drawKeyEquivalentWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (void)drawBorderAndBackgroundWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (NSInteger)tag","+ (CGFloat)menuBarHeight","- (id)initWithFrame:(NSRect)frame","- (id)initAsTearOff","- (void)setMenu:(NSMenu *)menu","- (NSMenu *)menu","- (void)itemChanged:(NSNotification *)notification","- (void)itemAdded:(NSNotification *)notification","- (void)itemRemoved:(NSNotification *)notification","- (void)update","- (void)setHorizontal:(BOOL)flag","- (BOOL)isHorizontal","- (void)setFont:(NSFont *)font","- (NSFont *)font","- (NSRect)innerRect","- (NSRect)rectOfItemAtIndex:(NSInteger)index","- (NSInteger)indexOfItemAtPoint:(NSPoint)point","- (void)setNeedsDisplayForItemAtIndex:(NSInteger)index","- (void)setHighlightedItemIndex:(NSInteger)index","- (NSInteger)highlightedItemIndex","- (CGFloat)stateImageOffset","- (CGFloat)stateImageWidth","- (CGFloat)imageAndTitleOffset","- (CGFloat)imageAndTitleWidth","- (CGFloat)keyEquivalentOffset","- (CGFloat)keyEquivalentWidth","- (void)setMenuItemCell:(NSMenuItemCell *)cell forItemAtIndex:(NSInteger)index","- (NSMenuItemCell *)menuItemCellForItemAtIndex:(NSInteger)index","- (NSMenuView *)attachedMenuView","- (void)setNeedsSizing:(BOOL)flag","- (BOOL)needsSizing","- (void)sizeToFit","- (NSMenu *)attachedMenu","- (BOOL)isAttached","- (BOOL)isTornOff","- (NSPoint)locationForSubmenu:(NSMenu *)aSubmenu","- (void)setWindowFrameForAttachingToRect:(NSRect)screenRect onScreen:(NSScreen *)screen preferredEdge:(NSRectEdge)edge popUpSelectedItem:(NSInteger)selectedItemIndex","- (void)detachSubmenu","- (void)attachSubmenuForItemAtIndex:(NSInteger)index","- (void)performActionWithHighlightingForItemAtIndex:(NSInteger)index","- (BOOL)trackWithEvent:(NSEvent *)event","- (CGFloat)horizontalEdgePadding","- (void)setHorizontalEdgePadding:(CGFloat)pad","- (id) initWithMovie:(QTMovie*)movie","- (QTMovie *)QTMovie","- (id)initWithContentsOfURL:(NSURL *)nibFileURL","- (id)initWithNibNamed:(NSString *)nibName bundle:(NSBundle *)bundle","- (BOOL)instantiateNibWithExternalNameTable:(NSDictionary *)externalNameTable","- (BOOL)instantiateNibWithOwner:(id)owner topLevelObjects:(NSArray **)topLevelObjects","- (id)source","- (void)setSource:(id)source","- (id)destination","- (void)setDestination:(id)destination","- (NSString *)label","- (void)setLabel:(NSString *)label","- (void)replaceObject:(id)oldObject withObject:(id)newObject","- (void)establishConnection","- (void)establishConnection","+ (BOOL)loadNibFile:(NSString *)fileName externalNameTable:(NSDictionary *)context withZone:(NSZone *)zone","+ (BOOL)loadNibNamed:(NSString *)nibName owner:(id)owner","- (BOOL)loadNibFile:(NSString *)fileName externalNameTable:(NSDictionary *)context withZone:(NSZone *)zone","- (void)awakeFromNib","- (void)establishConnection","- (id)initWithContent:(id)content","- (void)setContent:(id)content","- (id)content","- (id)selection","- (NSArray *)selectedObjects","- (void)setAutomaticallyPreparesContent:(BOOL)flag","- (BOOL)automaticallyPreparesContent","- (void)prepareContent","- (void)setObjectClass:(Class)objectClass","- (Class)objectClass","- (id)newObject","- (void)addObject:(id)object","- (void)removeObject:(id)object","- (void)setEditable:(BOOL)flag","- (BOOL)isEditable","- (void)add:(id)sender","- (BOOL)canAdd","- (void)remove:(id)sender","- (BOOL)canRemove","- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)item","- (NSManagedObjectContext *)managedObjectContext","- (void)setManagedObjectContext:(NSManagedObjectContext *)managedObjectContext","- (NSString *)entityName","- (void)setEntityName:(NSString *)entityName","- (NSPredicate *)fetchPredicate","- (void)setFetchPredicate:(NSPredicate *)predicate","- (BOOL)fetchWithRequest:(NSFetchRequest *)fetchRequest merge:(BOOL)merge error:(NSError **)error","- (void)fetch:(id)sender","- (id)initWithAttributes:(const NSOpenGLPixelFormatAttribute *)attribs","- (id)initWithData:(NSData*)attribs","- (NSData*)attributes","- (void)setAttributes:(NSData*)attribs","- (void)getValues:(GLint *)vals forAttribute:(NSOpenGLPixelFormatAttribute)attrib forVirtualScreen:(GLint)screen","- (GLint)numberOfVirtualScreens","- (void *)CGLPixelFormatObj","- (id)initWithTextureTarget:(GLenum)target textureInternalFormat:(GLenum)format textureMaxMipMapLevel:(GLint)maxLevel pixelsWide:(GLsizei)pixelsWide pixelsHigh:(GLsizei)pixelsHigh","- (GLsizei)pixelsWide","- (GLsizei)pixelsHigh","- (GLenum)textureTarget","- (GLenum)textureInternalFormat","- (GLint)textureMaxMipMapLevel","- (id)initWithFormat:(NSOpenGLPixelFormat *)format shareContext:(NSOpenGLContext *)share","- (void)setView:(NSView *)view","- (NSView *)view","- (void)setFullScreen","- (void)setOffScreen:(void *)baseaddr width:(GLsizei)width height:(GLsizei)height rowbytes:(GLint)rowbytes","- (void)clearDrawable","- (void)update","- (void)flushBuffer","- (void)makeCurrentContext","+ (void)clearCurrentContext","+ (NSOpenGLContext *)currentContext","- (void)copyAttributesFromContext:(NSOpenGLContext *)context withMask:(GLbitfield)mask","- (void)setValues:(const GLint *)vals forParameter:(NSOpenGLContextParameter)param","- (void)getValues:(GLint *)vals forParameter:(NSOpenGLContextParameter)param","- (void)setCurrentVirtualScreen:(GLint)screen","- (GLint)currentVirtualScreen","- (void)createTexture:(GLenum)target fromView:(NSView *)view internalFormat:(GLenum)format","- (void *)CGLContextObj","- (void)setPixelBuffer:(NSOpenGLPixelBuffer *)pixelBuffer cubeMapFace:(GLenum)face mipMapLevel:(GLint)level currentVirtualScreen:(GLint)screen","- (NSOpenGLPixelBuffer *)pixelBuffer","- (GLenum)pixelBufferCubeMapFace","- (GLint)pixelBufferMipMapLevel","- (void)setTextureImageToPixelBuffer:(NSOpenGLPixelBuffer *)pixelBuffer colorBuffer:(GLenum)source","- (NSOpenGLContext *)openGLContextForPixelFormat:(NSOpenGLPixelFormat *)pixelFormat","- (BOOL)canDrawInOpenGLContext:(NSOpenGLContext *)context pixelFormat:(NSOpenGLPixelFormat *)pixelFormat forLayerTime:(CFTimeInterval)t displayTime:(const CVTimeStamp *)ts","- (void)drawInOpenGLContext:(NSOpenGLContext *)context pixelFormat:(NSOpenGLPixelFormat *)pixelFormat forLayerTime:(CFTimeInterval)t displayTime:(const CVTimeStamp *)ts","+ (NSOpenGLPixelFormat*)defaultPixelFormat","- (id)initWithFrame:(NSRect)frameRect pixelFormat:(NSOpenGLPixelFormat*)format","- (void)setOpenGLContext:(NSOpenGLContext*)context","- (NSOpenGLContext*)openGLContext","- (void)clearGLContext","- (void)update","- (void)reshape","- (void)setPixelFormat:(NSOpenGLPixelFormat*)pixelFormat","- (NSOpenGLPixelFormat*)pixelFormat","- (void)prepareOpenGL","+ (NSOpenPanel *)openPanel","- (NSArray *)URLs","- (BOOL)resolvesAliases","- (void)setResolvesAliases:(BOOL)flag","- (BOOL)canChooseDirectories","- (void)setCanChooseDirectories:(BOOL)flag","- (BOOL)allowsMultipleSelection","- (void)setAllowsMultipleSelection:(BOOL)flag","- (BOOL)canChooseFiles","- (void)setCanChooseFiles:(BOOL)flag","- (void)setDelegate:(id <NSOutlineViewDelegate>)anObject","- (id <NSOutlineViewDelegate>)delegate","- (void)setDataSource:(id <NSOutlineViewDataSource>)aSource","- (id <NSOutlineViewDataSource>)dataSource","- (void)setOutlineTableColumn:(NSTableColumn *)outlineTableColumn","- (NSTableColumn *)outlineTableColumn","- (BOOL)isExpandable:(id)item","- (void)expandItem:(id)item expandChildren:(BOOL)expandChildren","- (void)expandItem:(id)item","- (void)collapseItem:(id)item collapseChildren:(BOOL)collapseChildren","- (void)collapseItem:(id)item","- (void)reloadItem:(id)item reloadChildren:(BOOL)reloadChildren","- (void)reloadItem:(id)item","- (id)parentForItem:(id)item","- (id)itemAtRow:(NSInteger)row","- (NSInteger)rowForItem:(id)item","- (NSInteger)levelForItem:(id)item","- (NSInteger)levelForRow:(NSInteger)row","- (BOOL)isItemExpanded:(id)item","- (void)setIndentationPerLevel:(CGFloat)indentationPerLevel","- (CGFloat)indentationPerLevel","- (void)setIndentationMarkerFollowsCell:(BOOL)drawInCell","- (BOOL)indentationMarkerFollowsCell","- (void)setAutoresizesOutlineColumn:(BOOL)resize","- (BOOL)autoresizesOutlineColumn","- (void)setDropItem:(id)item dropChildIndex:(NSInteger)index","- (BOOL)shouldCollapseAutoExpandedItemsForDeposited:(BOOL)deposited","- (BOOL)autosaveExpandedItems","- (void)setAutosaveExpandedItems:(BOOL)save","+ (NSPageLayout *)pageLayout","- (void)pageLayoutDidEnd:(NSPageLayout *)pageLayout returnCode:(NSInteger)returnCode contextInfo:(void *)contextInfo","- (void)beginSheetWithPrintInfo:(NSPrintInfo *)printInfo modalForWindow:(NSWindow *)docWindow delegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo","- (NSInteger)runModalWithPrintInfo:(NSPrintInfo *)printInfo","- (NSInteger)runModal","- (NSPrintInfo *)printInfo","- (void)runPageLayout:(id)sender","- (BOOL)isFloatingPanel","- (void)setFloatingPanel:(BOOL)flag","- (BOOL)becomesKeyOnlyIfNeeded","- (void)setBecomesKeyOnlyIfNeeded:(BOOL)flag","- (BOOL)worksWhenModal","- (void)setWorksWhenModal:(BOOL)flag","- (id)initWithTextAlignment:(NSTextAlignment)alignment location:(CGFloat)loc options:(NSDictionary *)options","- (NSTextAlignment)alignment","- (NSDictionary *)options","- (id)initWithType:(NSTextTabType)type location:(CGFloat)loc","- (CGFloat)location","- (NSTextTabType)tabStopType","+ (NSParagraphStyle *)defaultParagraphStyle","+ (NSWritingDirection)defaultWritingDirectionForLanguage:(NSString *)languageName","- (CGFloat)lineSpacing","- (CGFloat)paragraphSpacing","- (NSTextAlignment)alignment","- (CGFloat)headIndent","- (CGFloat)tailIndent","- (CGFloat)firstLineHeadIndent","- (NSArray *)tabStops","- (CGFloat)minimumLineHeight","- (CGFloat)maximumLineHeight","- (NSLineBreakMode)lineBreakMode","- (NSWritingDirection)baseWritingDirection","- (CGFloat)lineHeightMultiple","- (CGFloat)paragraphSpacingBefore","- (CGFloat)defaultTabInterval","- (NSArray *)textBlocks","- (NSArray *)textLists","- (float)hyphenationFactor","- (float)tighteningFactorForTruncation","- (NSInteger)headerLevel","- (void)setLineSpacing:(CGFloat)aFloat","- (void)setParagraphSpacing:(CGFloat)aFloat","- (void)setAlignment:(NSTextAlignment)alignment","- (void)setFirstLineHeadIndent:(CGFloat)aFloat","- (void)setHeadIndent:(CGFloat)aFloat","- (void)setTailIndent:(CGFloat)aFloat","- (void)setLineBreakMode:(NSLineBreakMode)mode","- (void)setMinimumLineHeight:(CGFloat)aFloat","- (void)setMaximumLineHeight:(CGFloat)aFloat","- (void)addTabStop:(NSTextTab *)anObject","- (void)removeTabStop:(NSTextTab *)anObject","- (void)setTabStops:(NSArray *)array","- (void)setParagraphStyle:(NSParagraphStyle *)obj","- (void)setBaseWritingDirection:(NSWritingDirection)writingDirection","- (void)setLineHeightMultiple:(CGFloat)aFloat","- (void)setParagraphSpacingBefore:(CGFloat)aFloat","- (void)setDefaultTabInterval:(CGFloat)aFloat","- (void)setTextBlocks:(NSArray *)array","- (void)setTextLists:(NSArray *)array","- (void)setHyphenationFactor:(float)aFactor","- (void)setTighteningFactorForTruncation:(float)aFactor","- (void)setHeaderLevel:(NSInteger)level","+ (NSPasteboard *)generalPasteboard","+ (NSPasteboard *)pasteboardWithName:(NSString *)name","+ (NSPasteboard *)pasteboardWithUniqueName","- (NSString *)name","- (NSInteger)changeCount","- (void)releaseGlobally","- (NSInteger)declareTypes:(NSArray *)newTypes owner:(id)newOwner","- (NSInteger)addTypes:(NSArray *)newTypes owner:(id)newOwner","- (NSArray *)types","- (NSString *)availableTypeFromArray:(NSArray *)types","- (BOOL)setData:(NSData *)data forType:(NSString *)dataType","- (BOOL)setPropertyList:(id)plist forType:(NSString *)dataType","- (BOOL)setString:(NSString *)string forType:(NSString *)dataType","- (NSData *)dataForType:(NSString *)dataType","- (id)propertyListForType:(NSString *)dataType","- (NSString *)stringForType:(NSString *)dataType","+ (NSArray *)typesFilterableTo:(NSString *)type","+ (NSPasteboard *)pasteboardByFilteringFile:(NSString *)filename","+ (NSPasteboard *)pasteboardByFilteringData:(NSData *)data ofType:(NSString *)type","+ (NSPasteboard *)pasteboardByFilteringTypesInPasteboard:(NSPasteboard *)pboard","- (void)pasteboard:(NSPasteboard *)sender provideDataForType:(NSString *)type","- (void)pasteboardChangedOwner:(NSPasteboard *)sender","+ (NSURL *)URLFromPasteboard:(NSPasteboard *)pasteBoard","- (void)writeToPasteboard:(NSPasteboard *)pasteBoard","- (BOOL)writeFileContents:(NSString *)filename","- (NSString *)readFileContentsType:(NSString *)type toFile:(NSString *)filename","- (BOOL)writeFileWrapper:(NSFileWrapper *)wrapper","- (NSFileWrapper *)readFileWrapper","- (NSArray *)types","- (NSString *)availableTypeFromArray:(NSArray *)types","- (BOOL)setDataProvider:(id <NSPasteboardItemDataProvider>)dataProvider forTypes:(NSArray *)types","- (BOOL)setData:(NSData *)data forType:(NSString *)type","- (BOOL)setString:(NSString *)string forType:(NSString *)type","- (BOOL)setPropertyList:(id)propertyList forType:(NSString *)type","- (NSData *)dataForType:(NSString *)type","- (NSString *)stringForType:(NSString *)type","- (id)propertyListForType:(NSString *)type","- (NSPathStyle)pathStyle","- (void)setPathStyle:(NSPathStyle)style","- (NSURL *)URL","- (void)setURL:(NSURL *)url","- (void)setObjectValue:(id <NSCopying>)obj","- (NSArray *)allowedTypes","- (void)setAllowedTypes:(NSArray *)allowedTypes","- (id <NSPathCellDelegate>)delegate","- (void)setDelegate:(id <NSPathCellDelegate>)value","+ (Class)pathComponentCellClass","- (NSArray *)pathComponentCells","- (void)setPathComponentCells:(NSArray *)cells","- (NSRect)rectOfPathComponentCell:(NSPathComponentCell *)cell withFrame:(NSRect)frame inView:(NSView *)view","- (NSPathComponentCell *)pathComponentCellAtPoint:(NSPoint)point withFrame:(NSRect)frame inView:(NSView *)view","- (NSPathComponentCell *)clickedPathComponentCell","- (void)mouseEntered:(NSEvent *)event withFrame:(NSRect)frame inView:(NSView *)view","- (void)mouseExited:(NSEvent *)event withFrame:(NSRect)frame inView:(NSView *)view","- (SEL)doubleAction","- (void)setDoubleAction:(SEL)action","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (void)setPlaceholderString:(NSString *)string","- (NSString *)placeholderString","- (void)setPlaceholderAttributedString:(NSAttributedString *)string","- (NSAttributedString *)placeholderAttributedString","- (void)setControlSize:(NSControlSize)size","- (NSImage *)image","- (void)setImage:(NSImage *)value","- (NSURL *)URL","- (void)setURL:(NSURL *)url","- (NSURL *)URL","- (void)setURL:(NSURL *)url","- (SEL)doubleAction","- (void)setDoubleAction:(SEL)action","- (NSPathStyle)pathStyle","- (void)setPathStyle:(NSPathStyle)style","- (NSPathComponentCell *)clickedPathComponentCell","- (NSArray *)pathComponentCells","- (void)setPathComponentCells:(NSArray *)cells","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (id <NSPathControlDelegate>)delegate","- (void)setDelegate:(id <NSPathControlDelegate>)delegate","- (void)setDraggingSourceOperationMask:(NSDragOperation)mask forLocal:(BOOL)isLocal","- (void)setMenu:(NSMenu *)menu","- (NSMenu *)menu","+ (id)imageRepWithData:(NSData*)pdfData","- (id)initWithData:(NSData*)pdfData","- (NSData*)PDFRepresentation","- (NSRect)bounds","- (void) setCurrentPage:(NSInteger)page","- (NSInteger) currentPage","- (NSInteger) pageCount","- (NSManagedObjectContext *)managedObjectContext","- (void)setManagedObjectContext:(NSManagedObjectContext *)managedObjectContext","- (id)managedObjectModel","- (NSString *)persistentStoreTypeForFileType:(NSString *)fileType","- (BOOL)writeToURL:(NSURL *)absoluteURL ofType:(NSString *)typeName forSaveOperation:(NSSaveOperationType)saveOperation originalContentsURL:(NSURL *)absoluteOriginalContentsURL error:(NSError **)error","- (BOOL)readFromURL:(NSURL *)absoluteURL ofType:(NSString *)typeName error:(NSError **)error","- (BOOL)revertToContentsOfURL:(NSURL *)inAbsoluteURL ofType:(NSString *)inTypeName error:(NSError **)outError","+ (id)imageRepWithData:(NSData*)pictData","- (id)initWithData:(NSData*)pictData","- (NSData*) PICTRepresentation","- (NSRect) boundingBox","- (void)showRelativeToRect:(NSRect)positioningRect ofView:(NSView *)positioningView preferredEdge:(NSRectEdge)preferredEdge","- (IBAction)performClose:(id)sender","- (void)close","- (id)initWithFrame:(NSRect)buttonFrame pullsDown:(BOOL)flag","- (void)setMenu:(NSMenu *)menu","- (NSMenu *)menu","- (void)setPullsDown:(BOOL)flag","- (BOOL)pullsDown","- (void)setAutoenablesItems:(BOOL)flag","- (BOOL)autoenablesItems","- (void)setPreferredEdge:(NSRectEdge)edge","- (NSRectEdge)preferredEdge","- (void)addItemWithTitle:(NSString *)title","- (void)addItemsWithTitles:(NSArray *)itemTitles","- (void)insertItemWithTitle:(NSString *)title atIndex:(NSInteger)index","- (void)removeItemWithTitle:(NSString *)title","- (void)removeItemAtIndex:(NSInteger)index","- (void)removeAllItems","- (NSArray *)itemArray","- (NSInteger)numberOfItems","- (NSInteger)indexOfItem:(NSMenuItem *)item","- (NSInteger)indexOfItemWithTitle:(NSString *)title","- (NSInteger)indexOfItemWithTag:(NSInteger)tag","- (NSInteger)indexOfItemWithRepresentedObject:(id)obj","- (NSInteger)indexOfItemWithTarget:(id)target andAction:(SEL)actionSelector","- (NSMenuItem *)itemAtIndex:(NSInteger)index","- (NSMenuItem *)itemWithTitle:(NSString *)title","- (NSMenuItem *)lastItem","- (void)selectItem:(NSMenuItem *)item","- (void)selectItemAtIndex:(NSInteger)index","- (void)selectItemWithTitle:(NSString *)title","- (BOOL)selectItemWithTag:(NSInteger)tag","- (void)setTitle:(NSString *)aString","- (NSMenuItem *)selectedItem","- (NSInteger)indexOfSelectedItem","- (void)synchronizeTitleAndSelectedItem","- (NSString *)itemTitleAtIndex:(NSInteger)index","- (NSArray *)itemTitles","- (NSString *)titleOfSelectedItem","- (id)initTextCell:(NSString *)stringValue pullsDown:(BOOL)pullDown","- (void)setMenu:(NSMenu *)menu","- (NSMenu *)menu","- (void)setPullsDown:(BOOL)flag","- (BOOL)pullsDown","- (void)setAutoenablesItems:(BOOL)flag","- (BOOL)autoenablesItems","- (void)setPreferredEdge:(NSRectEdge)edge","- (NSRectEdge)preferredEdge","- (void)setUsesItemFromMenu:(BOOL)flag","- (BOOL)usesItemFromMenu","- (void)setAltersStateOfSelectedItem:(BOOL)flag","- (BOOL)altersStateOfSelectedItem","- (void)addItemWithTitle:(NSString *)title","- (void)addItemsWithTitles:(NSArray *)itemTitles","- (void)insertItemWithTitle:(NSString *)title atIndex:(NSInteger)index","- (void)removeItemWithTitle:(NSString *)title","- (void)removeItemAtIndex:(NSInteger)index","- (void)removeAllItems","- (NSArray *)itemArray","- (NSInteger)numberOfItems","- (NSInteger)indexOfItem:(NSMenuItem *)item","- (NSInteger)indexOfItemWithTitle:(NSString *)title","- (NSInteger)indexOfItemWithTag:(NSInteger)tag","- (NSInteger)indexOfItemWithRepresentedObject:(id)obj","- (NSInteger)indexOfItemWithTarget:(id)target andAction:(SEL)actionSelector","- (NSMenuItem *)itemAtIndex:(NSInteger)index","- (NSMenuItem *)itemWithTitle:(NSString *)title","- (NSMenuItem *)lastItem","- (void)selectItem:(NSMenuItem *)item","- (void)selectItemAtIndex:(NSInteger)index","- (void)selectItemWithTitle:(NSString *)title","- (BOOL)selectItemWithTag:(NSInteger)tag","- (void)setTitle:(NSString *)aString","- (NSMenuItem *)selectedItem","- (NSInteger)indexOfSelectedItem","- (void)synchronizeTitleAndSelectedItem","- (NSString *)itemTitleAtIndex:(NSInteger)index","- (NSArray *)itemTitles","- (NSString *)titleOfSelectedItem","- (void)attachPopUpWithFrame:(NSRect)cellFrame inView:(NSView *)controlView","- (void)dismissPopUp","- (void)performClickWithFrame:(NSRect)frame inView:(NSView *)controlView","- (NSPopUpArrowPosition)arrowPosition","- (void)setArrowPosition:(NSPopUpArrowPosition)position","- (id)objectValue","- (void)setObjectValue:(id)obj","- (void)setRowTemplates:(NSArray *)rowTemplates","- (NSArray *)rowTemplates","- (double)matchForPredicate:(NSPredicate *)predicate","- (NSArray *)templateViews","- (void)setPredicate:(NSPredicate *)predicate","- (NSPredicate *)predicateWithSubpredicates:(NSArray *)subpredicates","- (NSArray *)displayableSubpredicatesOfPredicate:(NSPredicate *)predicate","- (id)initWithLeftExpressions:(NSArray *)leftExpressions rightExpressions:(NSArray *)rightExpressions modifier:(NSComparisonPredicateModifier)modifier operators:(NSArray *)operators options:(NSUInteger)options","- (id)initWithLeftExpressions:(NSArray *)leftExpressions rightExpressionAttributeType:(NSAttributeType)attributeType modifier:(NSComparisonPredicateModifier)modifier operators:(NSArray *)operators options:(NSUInteger)options","- (id)initWithCompoundTypes:(NSArray *)compoundTypes","- (NSArray *)leftExpressions","- (NSArray *)rightExpressions","- (NSAttributeType)rightExpressionAttributeType","- (NSComparisonPredicateModifier)modifier","- (NSArray *)operators","- (NSUInteger)options","- (NSArray *)compoundTypes","+ (NSArray *)templatesWithAttributeKeyPaths:(NSArray *)keyPaths inEntityDescription:(NSEntityDescription *)entityDescription","+ (NSArray *)printerNames","+ (NSArray *)printerTypes","+ (NSPrinter *)printerWithName:(NSString *)name","+ (NSPrinter *)printerWithType:(NSString *)type","- (NSString *)name","- (NSString *)type","- (NSInteger)languageLevel","- (NSSize)pageSizeForPaper:(NSString *)paperName","- (NSPrinterTableStatus)statusForTable:(NSString *)tableName","- (BOOL)isKey:(NSString *)key inTable:(NSString *)table","- (BOOL)booleanForKey:(NSString *)key inTable:(NSString *)table","- (float)floatForKey:(NSString *)key inTable:(NSString *)table","- (int)intForKey:(NSString *)key inTable:(NSString *)table","- (NSRect)rectForKey:(NSString *)key inTable:(NSString *)table","- (NSSize)sizeForKey:(NSString *)key inTable:(NSString *)table","- (NSString *)stringForKey:(NSString *)key inTable:(NSString *)table","- (NSArray *)stringListForKey:(NSString *)key inTable:(NSString *)table","- (NSDictionary *)deviceDescription","+ (void)setSharedPrintInfo:(NSPrintInfo *)printInfo","+ (NSPrintInfo *)sharedPrintInfo","- (id)initWithDictionary:(NSDictionary *)attributes","- (NSMutableDictionary *)dictionary","- (void)setPaperName:(NSString *)name","- (void)setPaperSize:(NSSize)size","- (void)setOrientation:(NSPrintingOrientation)orientation","- (NSString *)paperName","- (NSSize)paperSize","- (NSPrintingOrientation)orientation","- (void)setLeftMargin:(CGFloat)margin","- (void)setRightMargin:(CGFloat)margin","- (void)setTopMargin:(CGFloat)margin","- (void)setBottomMargin:(CGFloat)margin","- (CGFloat)leftMargin","- (CGFloat)rightMargin","- (CGFloat)topMargin","- (CGFloat)bottomMargin","- (void)setHorizontallyCentered:(BOOL)flag","- (void)setVerticallyCentered:(BOOL)flag","- (BOOL)isHorizontallyCentered","- (BOOL)isVerticallyCentered","- (void)setHorizontalPagination:(NSPrintingPaginationMode)mode","- (void)setVerticalPagination:(NSPrintingPaginationMode)mode","- (NSPrintingPaginationMode)horizontalPagination","- (NSPrintingPaginationMode)verticalPagination","- (void)setJobDisposition:(NSString *)disposition","- (NSString *)jobDisposition","- (void)setPrinter:(NSPrinter *)printer","- (NSPrinter *)printer","- (void)setUpPrintOperationDefaultValues","- (NSRect)imageablePageBounds","- (NSString *)localizedPaperName","+ (NSPrinter *)defaultPrinter","+ (NSPrintOperation *)printOperationWithView:(NSView *)view printInfo:(NSPrintInfo *)printInfo","+ (NSPrintOperation *)PDFOperationWithView:(NSView *)view insideRect:(NSRect)rect toData:(NSMutableData *)data printInfo:(NSPrintInfo *)printInfo","+ (NSPrintOperation *)PDFOperationWithView:(NSView *)view insideRect:(NSRect)rect toPath:(NSString *)path printInfo:(NSPrintInfo *)printInfo","+ (NSPrintOperation *)EPSOperationWithView:(NSView *)view insideRect:(NSRect)rect toData:(NSMutableData *)data printInfo:(NSPrintInfo *)printInfo","+ (NSPrintOperation *)EPSOperationWithView:(NSView *)view insideRect:(NSRect)rect toPath:(NSString *)path printInfo:(NSPrintInfo *)printInfo","+ (NSPrintOperation *)printOperationWithView:(NSView *)view","+ (NSPrintOperation *)PDFOperationWithView:(NSView *)view insideRect:(NSRect)rect toData:(NSMutableData *)data","+ (NSPrintOperation *)EPSOperationWithView:(NSView *)view insideRect:(NSRect)rect toData:(NSMutableData *)data","+ (NSPrintOperation *)currentOperation","+ (void)setCurrentOperation:(NSPrintOperation *)operation","- (BOOL)isCopyingOperation","- (void)setShowsPrintPanel:(BOOL)flag","- (BOOL)showsPrintPanel","- (void)setShowsProgressPanel:(BOOL)flag","- (BOOL)showsProgressPanel","- (void)setPrintPanel:(NSPrintPanel *)panel","- (NSPrintPanel *)printPanel","- (void)setCanSpawnSeparateThread:(BOOL)canSpawnSeparateThread","- (BOOL)canSpawnSeparateThread","- (void)setPageOrder:(NSPrintingPageOrder)pageOrder","- (NSPrintingPageOrder)pageOrder","- (void)printOperationDidRun:(NSPrintOperation *)printOperation success:(BOOL)success contextInfo:(void *)contextInfo","- (void)runOperationModalForWindow:(NSWindow *)docWindow delegate:(id)delegate didRunSelector:(SEL)didRunSelector contextInfo:(void *)contextInfo","- (BOOL)runOperation","- (NSView *)view","- (NSPrintInfo *)printInfo","- (void)setPrintInfo:(NSPrintInfo *)printInfo","- (NSGraphicsContext *)context","- (NSInteger)currentPage","- (NSGraphicsContext *)createContext","- (void)destroyContext","- (BOOL)deliverResult","- (void)cleanUpOperation","+ (NSPrintPanel *)printPanel","- (void)setJobStyleHint:(NSString *)hint","- (NSString *)jobStyleHint","- (void)printPanelDidEnd:(NSPrintPanel *)printPanel returnCode:(NSInteger)returnCode contextInfo:(void *)contextInfo","- (void)beginSheetWithPrintInfo:(NSPrintInfo *)printInfo modalForWindow:(NSWindow *)docWindow delegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo","- (NSInteger)runModal","- (BOOL)isIndeterminate","- (void)setIndeterminate:(BOOL)flag","- (BOOL)isBezeled","- (void)setBezeled:(BOOL)flag","- (NSControlTint)controlTint","- (void)setControlTint:(NSControlTint)tint","- (NSControlSize)controlSize","- (void)setControlSize:(NSControlSize)size","- (double)doubleValue","- (void)setDoubleValue:(double)doubleValue","- (void)incrementBy:(double)delta","- (double)minValue","- (double)maxValue","- (void)setMinValue:(double)newMinimum","- (void)setMaxValue:(double)newMaximum","- (BOOL)usesThreadedAnimation","- (void)setUsesThreadedAnimation:(BOOL)threadedAnimation","- (void)startAnimation:(id)sender","- (void)stopAnimation:(id)sender","- (void) setStyle: (NSProgressIndicatorStyle) style","- (NSProgressIndicatorStyle) style","- (void) sizeToFit","- (BOOL) isDisplayedWhenStopped","- (void) setDisplayedWhenStopped: (BOOL) isDisplayed","- (NSResponder *)nextResponder","- (void)setNextResponder:(NSResponder *)aResponder","- (BOOL)tryToPerform:(SEL)anAction with:(id)anObject","- (BOOL)performKeyEquivalent:(NSEvent *)theEvent","- (id)validRequestorForSendType:(NSString *)sendType returnType:(NSString *)returnType","- (void)mouseDown:(NSEvent *)theEvent","- (void)rightMouseDown:(NSEvent *)theEvent","- (void)otherMouseDown:(NSEvent *)theEvent","- (void)mouseUp:(NSEvent *)theEvent","- (void)rightMouseUp:(NSEvent *)theEvent","- (void)otherMouseUp:(NSEvent *)theEvent","- (void)mouseMoved:(NSEvent *)theEvent","- (void)mouseDragged:(NSEvent *)theEvent","- (void)scrollWheel:(NSEvent *)theEvent","- (void)rightMouseDragged:(NSEvent *)theEvent","- (void)otherMouseDragged:(NSEvent *)theEvent","- (void)mouseEntered:(NSEvent *)theEvent","- (void)mouseExited:(NSEvent *)theEvent","- (void)keyDown:(NSEvent *)theEvent","- (void)keyUp:(NSEvent *)theEvent","- (void)flagsChanged:(NSEvent *)theEvent","- (void)tabletPoint:(NSEvent *)theEvent","- (void)tabletProximity:(NSEvent *)theEvent","- (void)noResponderFor:(SEL)eventSelector","- (BOOL)acceptsFirstResponder","- (BOOL)becomeFirstResponder","- (BOOL)resignFirstResponder","- (void)interpretKeyEvents:(NSArray *)eventArray","- (void)flushBufferedKeyEvents","- (void)setMenu:(NSMenu *)menu","- (NSMenu *)menu","- (void)showContextHelp:(id)sender","- (void)helpRequested:(NSEvent *)eventPtr","- (BOOL)shouldBeTreatedAsInkEvent:(NSEvent *)theEvent","- (BOOL)performMnemonic:(NSString *)theString","- (void)insertText:(id)insertString","- (void)doCommandBySelector:(SEL)aSelector","- (void)moveForward:(id)sender","- (void)moveRight:(id)sender","- (void)moveBackward:(id)sender","- (void)moveLeft:(id)sender","- (void)moveUp:(id)sender","- (void)moveDown:(id)sender","- (void)moveWordForward:(id)sender","- (void)moveWordBackward:(id)sender","- (void)moveToBeginningOfLine:(id)sender","- (void)moveToEndOfLine:(id)sender","- (void)moveToBeginningOfParagraph:(id)sender","- (void)moveToEndOfParagraph:(id)sender","- (void)moveToEndOfDocument:(id)sender","- (void)moveToBeginningOfDocument:(id)sender","- (void)pageDown:(id)sender","- (void)pageUp:(id)sender","- (void)centerSelectionInVisibleArea:(id)sender","- (void)moveBackwardAndModifySelection:(id)sender","- (void)moveForwardAndModifySelection:(id)sender","- (void)moveWordForwardAndModifySelection:(id)sender","- (void)moveWordBackwardAndModifySelection:(id)sender","- (void)moveUpAndModifySelection:(id)sender","- (void)moveDownAndModifySelection:(id)sender","- (void)moveToBeginningOfLineAndModifySelection:(id)sender","- (void)moveToEndOfLineAndModifySelection:(id)sender","- (void)moveToBeginningOfParagraphAndModifySelection:(id)sender","- (void)moveToEndOfParagraphAndModifySelection:(id)sender","- (void)moveToEndOfDocumentAndModifySelection:(id)sender","- (void)moveToBeginningOfDocumentAndModifySelection:(id)sender","- (void)pageDownAndModifySelection:(id)sender","- (void)pageUpAndModifySelection:(id)sender","- (void)moveParagraphForwardAndModifySelection:(id)sender","- (void)moveParagraphBackwardAndModifySelection:(id)sender","- (void)moveWordRight:(id)sender","- (void)moveWordLeft:(id)sender","- (void)moveRightAndModifySelection:(id)sender","- (void)moveLeftAndModifySelection:(id)sender","- (void)moveWordRightAndModifySelection:(id)sender","- (void)moveWordLeftAndModifySelection:(id)sender","- (void)scrollPageUp:(id)sender","- (void)scrollPageDown:(id)sender","- (void)scrollLineUp:(id)sender","- (void)scrollLineDown:(id)sender","- (void)scrollToBeginningOfDocument:(id)sender","- (void)scrollToEndOfDocument:(id)sender","- (void)transpose:(id)sender","- (void)transposeWords:(id)sender","- (void)selectAll:(id)sender","- (void)selectParagraph:(id)sender","- (void)selectLine:(id)sender","- (void)selectWord:(id)sender","- (void)indent:(id)sender","- (void)insertTab:(id)sender","- (void)insertBacktab:(id)sender","- (void)insertNewline:(id)sender","- (void)insertParagraphSeparator:(id)sender","- (void)insertNewlineIgnoringFieldEditor:(id)sender","- (void)insertTabIgnoringFieldEditor:(id)sender","- (void)insertLineBreak:(id)sender","- (void)insertContainerBreak:(id)sender","- (void)changeCaseOfLetter:(id)sender","- (void)uppercaseWord:(id)sender","- (void)lowercaseWord:(id)sender","- (void)capitalizeWord:(id)sender","- (void)deleteForward:(id)sender","- (void)deleteBackward:(id)sender","- (void)deleteBackwardByDecomposingPreviousCharacter:(id)sender","- (void)deleteWordForward:(id)sender","- (void)deleteWordBackward:(id)sender","- (void)deleteToBeginningOfLine:(id)sender","- (void)deleteToEndOfLine:(id)sender","- (void)deleteToBeginningOfParagraph:(id)sender","- (void)deleteToEndOfParagraph:(id)sender","- (void)yank:(id)sender","- (void)complete:(id)sender","- (void)setMark:(id)sender","- (void)deleteToMark:(id)sender","- (void)selectToMark:(id)sender","- (void)swapWithMark:(id)sender","- (void)cancelOperation:(id)sender","- (NSUndoManager *)undoManager","- (void)didPresentErrorWithRecovery:(BOOL)didRecover contextInfo:(void *)contextInfo","- (void)presentError:(NSError *)error modalForWindow:(NSWindow *)window delegate:(id)delegate didPresentSelector:(SEL)didPresentSelector contextInfo:(void *)contextInfo","- (BOOL)presentError:(NSError *)error","- (NSError *)willPresentError:(NSError *)error","- (void)setDelegate:(id <NSRuleEditorDelegate>)delegate","- (id <NSRuleEditorDelegate>)delegate","- (void)setFormattingStringsFilename:(NSString *)stringsFilename","- (NSString *)formattingStringsFilename","- (void)setFormattingDictionary:(NSDictionary *)dictionary","- (NSDictionary *)formattingDictionary","- (void)reloadCriteria","- (void)setNestingMode:(NSRuleEditorNestingMode)mode","- (NSRuleEditorNestingMode)nestingMode","- (void)setRowHeight:(CGFloat)height","- (CGFloat)rowHeight","- (void)setEditable:(BOOL)editable","- (BOOL)isEditable","- (void)setCanRemoveAllRows:(BOOL)val","- (BOOL)canRemoveAllRows","- (NSPredicate *)predicate","- (void)reloadPredicate","- (NSPredicate *)predicateForRow:(NSInteger)row","- (NSInteger)numberOfRows","- (NSIndexSet *)subrowIndexesForRow:(NSInteger)rowIndex","- (NSArray *)criteriaForRow:(NSInteger)row","- (NSArray *)displayValuesForRow:(NSInteger)row","- (NSInteger)rowForDisplayValue:(id)displayValue","- (NSRuleEditorRowType)rowTypeForRow:(NSInteger)rowIndex","- (NSInteger)parentRowForRow:(NSInteger)rowIndex","- (void)addRow:(id)sender","- (void)insertRowAtIndex:(NSInteger)rowIndex withType:(NSRuleEditorRowType)rowType asSubrowOfRow:(NSInteger)parentRow animate:(BOOL)shouldAnimate","- (void)setCriteria:(NSArray *)criteria andDisplayValues:(NSArray *)values forRowAtIndex:(NSInteger)rowIndex","- (void)removeRowAtIndex:(NSInteger)rowIndex","- (void)removeRowsAtIndexes:(NSIndexSet *)rowIndexes includeSubrows:(BOOL)includeSubrows","- (NSIndexSet *)selectedRowIndexes","- (void)selectRowIndexes:(NSIndexSet *)indexes byExtendingSelection:(BOOL)extend","- (void)setRowClass:(Class)rowClass","- (Class)rowClass","- (void)setRowTypeKeyPath:(NSString *)keyPath","- (NSString *)rowTypeKeyPath","- (void)setSubrowsKeyPath:(NSString *)keyPath","- (NSString *)subrowsKeyPath","- (void)setCriteriaKeyPath:(NSString *)keyPath","- (NSString *)criteriaKeyPath","- (void)setDisplayValuesKeyPath:(NSString *)keyPath","- (NSString *)displayValuesKeyPath","- (id)initWithRulerView:(NSRulerView *)ruler markerLocation:(CGFloat)location image:(NSImage *)image imageOrigin:(NSPoint)imageOrigin","- (NSRulerView *)ruler","- (void)setMarkerLocation:(CGFloat)location","- (CGFloat)markerLocation","- (void)setImage:(NSImage *)image","- (NSImage *)image","- (void)setImageOrigin:(NSPoint)imageOrigin","- (NSPoint)imageOrigin","- (void)setMovable:(BOOL)flag","- (void)setRemovable:(BOOL)flag","- (BOOL)isMovable","- (BOOL)isRemovable","- (BOOL)isDragging","- (void)setRepresentedObject:(id <NSCopying>)representedObject","- (id <NSCopying>)representedObject","- (NSRect)imageRectInRuler","- (CGFloat)thicknessRequiredInRuler","- (void)drawRect:(NSRect)rect","- (BOOL)trackMouse:(NSEvent *)mouseDownEvent adding:(BOOL)isAdding","+ (void)registerUnitWithName:(NSString *)unitName abbreviation:(NSString *)abbreviation unitToPointsConversionFactor:(CGFloat)conversionFactor stepUpCycle:(NSArray *)stepUpCycle stepDownCycle:(NSArray *)stepDownCycle","- (id)initWithScrollView:(NSScrollView *)scrollView orientation:(NSRulerOrientation)orientation","- (void)setScrollView:(NSScrollView *)scrollView","- (NSScrollView *)scrollView","- (void)setOrientation:(NSRulerOrientation)orientation","- (NSRulerOrientation)orientation","- (CGFloat)baselineLocation","- (CGFloat)requiredThickness","- (void)setRuleThickness:(CGFloat)thickness","- (CGFloat)ruleThickness","- (void)setReservedThicknessForMarkers:(CGFloat)thickness","- (CGFloat)reservedThicknessForMarkers","- (void)setReservedThicknessForAccessoryView:(CGFloat)thickness","- (CGFloat)reservedThicknessForAccessoryView","- (void)setMeasurementUnits:(NSString *)unitName","- (NSString *)measurementUnits","- (void)setOriginOffset:(CGFloat)offset","- (CGFloat)originOffset","- (void)setClientView:(NSView *)client","- (NSView *)clientView","- (void)setMarkers:(NSArray *)markers","- (void)addMarker:(NSRulerMarker *)marker","- (void)removeMarker:(NSRulerMarker *)marker","- (NSArray *)markers","- (BOOL)trackMarker:(NSRulerMarker *)marker withMouseEvent:(NSEvent *)event","- (void)setAccessoryView:(NSView *)accessory","- (NSView *)accessoryView","- (void)moveRulerlineFromLocation:(CGFloat)oldLocation toLocation:(CGFloat)newLocation","- (void)invalidateHashMarks","- (void)drawHashMarksAndLabelsInRect:(NSRect)rect","- (void)drawMarkersInRect:(NSRect)rect","- (BOOL)isFlipped","- (BOOL)rulerView:(NSRulerView *)ruler shouldMoveMarker:(NSRulerMarker *)marker","- (CGFloat)rulerView:(NSRulerView *)ruler willMoveMarker:(NSRulerMarker *)marker toLocation:(CGFloat)location","- (void)rulerView:(NSRulerView *)ruler didMoveMarker:(NSRulerMarker *)marker","- (BOOL)rulerView:(NSRulerView *)ruler shouldRemoveMarker:(NSRulerMarker *)marker","- (void)rulerView:(NSRulerView *)ruler didRemoveMarker:(NSRulerMarker *)marker","- (BOOL)rulerView:(NSRulerView *)ruler shouldAddMarker:(NSRulerMarker *)marker","- (CGFloat)rulerView:(NSRulerView *)ruler willAddMarker:(NSRulerMarker *)marker atLocation:(CGFloat)location","- (void)rulerView:(NSRulerView *)ruler didAddMarker:(NSRulerMarker *)marker","- (void)rulerView:(NSRulerView *)ruler handleMouseDown:(NSEvent *)event","- (void)rulerView:(NSRulerView *)ruler willSetClientView:(NSView *)newClient","- (BOOL)hide","- (BOOL)unhide","- (BOOL)activateWithOptions:(NSApplicationActivationOptions)options","- (BOOL)terminate","- (BOOL)forceTerminate","+ (NSArray *)runningApplicationsWithBundleIdentifier:(NSString *)bundleIdentifier","+ (NSRunningApplication *)currentApplication","+ (void) terminateAutomaticallyTerminableApplications","+ (NSSavePanel *)savePanel","- (NSURL *)URL","- (NSArray *)allowedFileTypes","- (void)setAllowedFileTypes:(NSArray *)types","- (BOOL)allowsOtherFileTypes","- (void)setAllowsOtherFileTypes:(BOOL)flag","- (NSView *)accessoryView","- (void)setAccessoryView:(NSView *)view","- (id <NSOpenSavePanelDelegate>)delegate","- (void)setDelegate:(id<NSOpenSavePanelDelegate>)delegate","- (BOOL)isExpanded","- (BOOL)canCreateDirectories","- (void)setCanCreateDirectories:(BOOL)flag","- (BOOL)canSelectHiddenExtension","- (void)setCanSelectHiddenExtension:(BOOL)flag","- (BOOL)isExtensionHidden","- (void)setExtensionHidden:(BOOL)flag","- (BOOL)treatsFilePackagesAsDirectories","- (void)setTreatsFilePackagesAsDirectories:(BOOL)flag","- (NSString *)prompt","- (void)setPrompt:(NSString *)prompt","- (NSString *)title","- (void)setTitle:(NSString *)title","- (NSString *)nameFieldLabel","- (void)setNameFieldLabel:(NSString *)label","- (NSString *)message","- (void)setMessage:(NSString *)message","- (void)validateVisibleColumns","- (BOOL)showsHiddenFiles","- (void)setShowsHiddenFiles:(BOOL)flag","- (IBAction)ok:(id)sender","- (IBAction)cancel:(id)sender","- (NSInteger)runModal","- (BOOL)panel:(id)sender isValidFilename:(NSString *)filename","- (void)panel:(id)sender directoryDidChange:(NSString *)path","- (NSComparisonResult)panel:(id)sender compareFilename:(NSString *)name1 with:(NSString *)name2 caseSensitive:(BOOL)caseSensitive","- (BOOL)panel:(id)sender shouldShowFilename:(NSString *)filename","+ (NSArray *)screens","+ (NSScreen *)mainScreen","+ (NSScreen *)deepestScreen","- (NSWindowDepth)depth","- (NSRect)frame","- (NSRect)visibleFrame","- (NSDictionary *)deviceDescription","- (const NSWindowDepth *)supportedWindowDepths","- (CGFloat)userSpaceScaleFactor","+ (CGFloat)scrollerWidthForControlSize:(NSControlSize)controlSize","+ (CGFloat)scrollerWidth","- (NSRect)rectForPart:(NSScrollerPart)partCode","- (void)checkSpaceForParts","- (NSUsableScrollerParts)usableParts","- (void)setArrowsPosition:(NSScrollArrowPosition)where","- (NSScrollArrowPosition)arrowsPosition","- (void)setControlTint:(NSControlTint)controlTint","- (NSControlTint)controlTint","- (void)setControlSize:(NSControlSize)controlSize","- (NSControlSize)controlSize","- (void)drawArrow:(NSScrollerArrow)whichArrow highlight:(BOOL)flag","- (void)drawKnob","- (void)drawKnobSlotInRect:(NSRect)slotRect highlight:(BOOL)flag","- (void)highlight:(BOOL)flag","- (NSScrollerPart)testPart:(NSPoint)thePoint","- (void)trackKnob:(NSEvent *)theEvent","- (void)trackScrollButtons:(NSEvent *)theEvent","- (NSScrollerPart)hitPart","- (CGFloat)knobProportion","+ (NSSize)frameSizeForContentSize:(NSSize)cSize hasHorizontalScroller:(BOOL)hFlag hasVerticalScroller:(BOOL)vFlag borderType:(NSBorderType)aType","+ (NSSize)contentSizeForFrameSize:(NSSize)fSize hasHorizontalScroller:(BOOL)hFlag hasVerticalScroller:(BOOL)vFlag borderType:(NSBorderType)aType","- (NSRect)documentVisibleRect","- (NSSize)contentSize","- (void)setDocumentView:(NSView *)aView","- (id)documentView","- (void)setContentView:(NSClipView *)contentView","- (NSClipView *)contentView","- (void)setDocumentCursor:(NSCursor *)anObj","- (NSCursor *)documentCursor","- (void)setBorderType:(NSBorderType)aType","- (NSBorderType)borderType","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (void)setDrawsBackground:(BOOL)flag","- (BOOL)drawsBackground","- (void)setHasVerticalScroller:(BOOL)flag","- (BOOL)hasVerticalScroller","- (void)setHasHorizontalScroller:(BOOL)flag","- (BOOL)hasHorizontalScroller","- (void)setVerticalScroller:(NSScroller *)anObject","- (NSScroller *)verticalScroller","- (void)setHorizontalScroller:(NSScroller *)anObject","- (NSScroller *)horizontalScroller","- (BOOL)autohidesScrollers","- (void)setAutohidesScrollers:(BOOL)flag","- (void)setHorizontalLineScroll:(CGFloat)value","- (void)setVerticalLineScroll:(CGFloat)value","- (void)setLineScroll:(CGFloat)value","- (CGFloat)horizontalLineScroll","- (CGFloat)verticalLineScroll","- (CGFloat)lineScroll","- (void)setHorizontalPageScroll:(CGFloat)value","- (void)setVerticalPageScroll:(CGFloat)value","- (void)setPageScroll:(CGFloat)value","- (CGFloat)horizontalPageScroll","- (CGFloat)verticalPageScroll","- (CGFloat)pageScroll","- (void)setScrollsDynamically:(BOOL)flag","- (BOOL)scrollsDynamically","- (void)tile","- (void)reflectScrolledClipView:(NSClipView *)cView","- (void)scrollWheel:(NSEvent *)theEvent","+ (void)setRulerViewClass:(Class)rulerViewClass","+ (Class)rulerViewClass","- (void)setRulersVisible:(BOOL)flag","- (BOOL)rulersVisible","- (void)setHasHorizontalRuler:(BOOL)flag","- (BOOL)hasHorizontalRuler","- (void)setHasVerticalRuler:(BOOL)flag","- (BOOL)hasVerticalRuler","- (void)setHorizontalRulerView:(NSRulerView *)ruler","- (NSRulerView *)horizontalRulerView","- (void)setVerticalRulerView:(NSRulerView *)ruler","- (NSRulerView *)verticalRulerView","- (void) setRecentSearches:(NSArray*)searches","- (NSArray*) recentSearches","- (void) setRecentsAutosaveName:(NSString*)string","- (NSString*) recentsAutosaveName","- (NSButtonCell*) searchButtonCell","- (void) setSearchButtonCell:(NSButtonCell*)cell","- (NSButtonCell*) cancelButtonCell","- (void) setCancelButtonCell:(NSButtonCell*)cell","- (void) resetSearchButtonCell","- (void) resetCancelButtonCell","- (NSRect) searchTextRectForBounds:(NSRect)rect","- (NSRect) searchButtonRectForBounds:(NSRect)rect","- (NSRect) cancelButtonRectForBounds:(NSRect)rect","- (void) setSearchMenuTemplate:(NSMenu*)menu","- (NSMenu*)searchMenuTemplate","- (void) setSendsWholeSearchString:(BOOL)flag","- (BOOL) sendsWholeSearchString","- (void) setMaximumRecents:(NSInteger)maxRecents","- (NSInteger) maximumRecents","- (void) setRecentSearches:(NSArray*)searches","- (NSArray*) recentSearches","- (void) setRecentsAutosaveName:(NSString*)string","- (NSString*) recentsAutosaveName","- (BOOL) sendsSearchStringImmediately","- (void) setSendsSearchStringImmediately:(BOOL)flag","- (void)setEchosBullets:(BOOL)flag","- (BOOL)echosBullets","- (void)setSegmentCount:(NSInteger)count","- (NSInteger)segmentCount","- (void)setSelectedSegment:(NSInteger)selectedSegment","- (NSInteger)selectedSegment","- (BOOL)selectSegmentWithTag:(NSInteger)tag","- (void)makeNextSegmentKey","- (void)makePreviousSegmentKey","- (void)setTrackingMode:(NSSegmentSwitchTracking)trackingMode","- (NSSegmentSwitchTracking)trackingMode","- (void)setWidth:(CGFloat)width forSegment:(NSInteger)segment","- (CGFloat)widthForSegment:(NSInteger)segment","- (void)setImage:(NSImage *)image forSegment:(NSInteger)segment","- (NSImage *)imageForSegment:(NSInteger)segment","- (void)setLabel:(NSString *)label forSegment:(NSInteger)segment","- (NSString *)labelForSegment:(NSInteger)segment","- (void)setSelected:(BOOL)selected forSegment:(NSInteger)segment","- (BOOL)isSelectedForSegment:(NSInteger)segment","- (void)setEnabled:(BOOL)enabled forSegment:(NSInteger)segment","- (BOOL)isEnabledForSegment:(NSInteger)segment","- (void)setMenu:(NSMenu *)menu forSegment:(NSInteger)segment","- (NSMenu *)menuForSegment:(NSInteger)segment","- (void)setToolTip:(NSString *)toolTip forSegment:(NSInteger)segment","- (NSString *)toolTipForSegment:(NSInteger)segment","- (void)setTag:(NSInteger)tag forSegment:(NSInteger)segment","- (NSInteger)tagForSegment:(NSInteger)segment","- (void)drawSegment:(NSInteger)segment inFrame:(NSRect)frame withView:(NSView *)controlView","- (void)setSegmentCount:(NSInteger)count","- (NSInteger)segmentCount","- (void)setSelectedSegment:(NSInteger)selectedSegment","- (NSInteger)selectedSegment","- (BOOL)selectSegmentWithTag:(NSInteger)tag","- (void)setWidth:(CGFloat)width forSegment:(NSInteger)segment","- (CGFloat)widthForSegment:(NSInteger)segment","- (void)setImage:(NSImage *)image forSegment:(NSInteger)segment","- (NSImage *)imageForSegment:(NSInteger)segment","- (void)setLabel:(NSString *)label forSegment:(NSInteger)segment","- (NSString *)labelForSegment:(NSInteger)segment","- (void)setMenu:(NSMenu *)menu forSegment:(NSInteger)segment","- (NSMenu *)menuForSegment:(NSInteger)segment","- (void)setSelected:(BOOL)selected forSegment:(NSInteger)segment","- (BOOL)isSelectedForSegment:(NSInteger)segment","- (void)setEnabled:(BOOL)enabled forSegment:(NSInteger)segment","- (BOOL)isEnabledForSegment:(NSInteger)segment","- (id)init","- (NSSize)shadowOffset","- (void)setShadowOffset:(NSSize)offset","- (CGFloat)shadowBlurRadius","- (void)setShadowBlurRadius:(CGFloat)val","- (NSColor *)shadowColor","- (void)setShadowColor:(NSColor *)color","- (void)set","+ (id)sharedInstance","- (NSLayoutManager *)currentLayoutManager","- (NSTextContainer *)currentContainer","- (NSParagraphStyle *)currentParagraphStyle","- (NSTextStorage *)currentTextStorage","- (NSTypesetterGlyphInfo *)baseOfTypesetterGlyphInfo","- (NSUInteger)sizeOfTypesetterGlyphInfo","- (NSUInteger)capacityOfTypesetterGlyphInfo","- (NSUInteger)firstGlyphIndexOfCurrentLineFragment","- (void)layoutGlyphsInLayoutManager:(NSLayoutManager *)layoutManager startingAtGlyphIndex:(NSUInteger)startGlyphIndex maxNumberOfLineFragments:(NSUInteger)maxNumLines nextGlyphIndex:(NSUInteger *)nextGlyph","- (NSLayoutStatus)layoutGlyphsInHorizontalLineFragment:(NSRect *)lineFragmentRect baseline:(float *)baseline","- (void)clearGlyphCache","- (void)fillAttributesCache","- (void)clearAttributesCache","- (NSUInteger)growGlyphCaches:(NSUInteger)desiredCapacity fillGlyphInfo:(BOOL)fillGlyphInfo","- (void)updateCurGlyphOffset","- (void)insertGlyph:(NSGlyph)glyph atGlyphIndex:(NSUInteger)glyphIndex characterIndex:(NSUInteger)charIndex","- (NSLayoutStatus)layoutControlGlyphForLineFragment:(NSRect)lineFrag","- (void)layoutTab","- (void)breakLineAtIndex:(NSUInteger)location","- (NSUInteger)glyphIndexToBreakLineByHyphenatingWordAtIndex:(NSUInteger)charIndex","- (NSUInteger)glyphIndexToBreakLineByWordWrappingAtIndex:(NSUInteger)charIndex","- (void)layoutTab","- (NSLayoutStatus)layoutControlGlyphForLineFragment:(NSRect)lineFrag","- (void)fullJustifyLineAtGlyphIndex:(NSUInteger)glyphIndexForLineBreak","- (void)typesetterLaidOneGlyph:(NSTypesetterGlyphInfo *)gl","- (void) willSetLineFragmentRect:(NSRect *)aRect forGlyphRange:(NSRange)aRange usedRect:(NSRect *)bRect","- (double)minValue","- (void)setMinValue:(double)aDouble","- (double)maxValue","- (void)setMaxValue:(double)aDouble","- (void)setAltIncrementValue:(double)incValue","- (double)altIncrementValue","- (void)setTitleCell:(NSCell *)aCell","- (id)titleCell","- (void)setTitleColor:(NSColor *)newColor","- (NSColor *)titleColor","- (void)setTitleFont:(NSFont *)fontObj","- (NSFont *)titleFont","- (NSString *)title","- (void)setTitle:(NSString *)aString","- (void)setKnobThickness:(CGFloat)aFloat","- (CGFloat)knobThickness","- (void)setImage:(NSImage *)backgroundImage","- (NSImage *)image","- (NSInteger)isVertical","- (BOOL)acceptsFirstMouse:(NSEvent *)theEvent","- (void)setNumberOfTickMarks:(NSInteger)count","- (NSInteger)numberOfTickMarks","- (void)setTickMarkPosition:(NSTickMarkPosition)position","- (NSTickMarkPosition)tickMarkPosition","- (void)setAllowsTickMarkValuesOnly:(BOOL)yorn","- (BOOL)allowsTickMarkValuesOnly","- (double)tickMarkValueAtIndex:(NSInteger)index","- (NSRect)rectOfTickMarkAtIndex:(NSInteger)index","- (NSInteger)indexOfTickMarkAtPoint:(NSPoint)point","- (double)closestTickMarkValueToValue:(double)value","+ (BOOL)prefersTrackingUntilMouseUp","- (double)minValue","- (void)setMinValue:(double)aDouble","- (double)maxValue","- (void)setMaxValue:(double)aDouble","- (void)setAltIncrementValue:(double)incValue","- (double)altIncrementValue","- (NSInteger)isVertical","- (void)setTitleColor:(NSColor *)newColor","- (NSColor *)titleColor","- (void)setTitleFont:(NSFont *)fontObj","- (NSFont *)titleFont","- (NSString *)title","- (void)setTitle:(NSString *)aString","- (void)setTitleCell:(NSCell *)aCell","- (id)titleCell","- (void)setKnobThickness:(CGFloat)aFloat","- (CGFloat)knobThickness","- (NSRect)knobRectFlipped:(BOOL)flipped","- (void)drawKnob:(NSRect)knobRect","- (void)drawKnob","- (void)drawBarInside:(NSRect)aRect flipped:(BOOL)flipped","- (NSRect)trackRect","- (void) setSliderType:(NSSliderType)sliderType","- (NSSliderType)sliderType","- (void)setNumberOfTickMarks:(NSInteger)count","- (NSInteger)numberOfTickMarks","- (void)setTickMarkPosition:(NSTickMarkPosition)position","- (NSTickMarkPosition)tickMarkPosition","- (void)setAllowsTickMarkValuesOnly:(BOOL)yorn","- (BOOL)allowsTickMarkValuesOnly","- (double)tickMarkValueAtIndex:(NSInteger)index","- (NSRect)rectOfTickMarkAtIndex:(NSInteger)index","- (NSInteger)indexOfTickMarkAtPoint:(NSPoint)point","- (double)closestTickMarkValueToValue:(double)value","+ (id)soundNamed:(NSString *)name","- (id)initWithContentsOfURL:(NSURL *)url byReference:(BOOL)byRef","- (id)initWithContentsOfFile:(NSString *)path byReference:(BOOL)byRef","- (id)initWithData:(NSData *)data","- (BOOL)setName:(NSString *)string","- (NSString *)name","+ (BOOL)canInitWithPasteboard:(NSPasteboard *)pasteboard","- (id)initWithPasteboard:(NSPasteboard *)pasteboard","- (void)writeToPasteboard:(NSPasteboard *)pasteboard","- (BOOL)play","- (BOOL)pause","- (BOOL)resume","- (BOOL)stop","- (BOOL)isPlaying","- (id <NSSoundDelegate>)delegate","- (void)setDelegate:(id <NSSoundDelegate>)aDelegate","- (NSString *)pathForSoundResource:(NSString *)name","- (id)init","- (void)startListening","- (void)stopListening","- (id <NSSpeechRecognizerDelegate>)delegate","- (void)setDelegate:(id <NSSpeechRecognizerDelegate>)anObject","- (NSArray *)commands","- (void)setCommands:(NSArray *)commands","- (NSString *)displayedCommandsTitle","- (void)setDisplayedCommandsTitle:(NSString *)title","- (BOOL)listensInForegroundOnly","- (void)setListensInForegroundOnly:(BOOL)flag","- (BOOL)blocksOtherRecognizers","- (void)setBlocksOtherRecognizers:(BOOL)flag","- (id)initWithVoice:(NSString *)voice","- (BOOL)startSpeakingString:(NSString *)string","- (BOOL)startSpeakingString:(NSString *)string toURL:(NSURL *)url","- (BOOL)isSpeaking","- (void)stopSpeaking","- (id <NSSpeechSynthesizerDelegate>)delegate","- (void)setDelegate:(id <NSSpeechSynthesizerDelegate>)anObject","- (NSString *)voice","- (BOOL)setVoice:(NSString *)voice","- (BOOL)usesFeedbackWindow","- (void)setUsesFeedbackWindow:(BOOL)flag","+ (BOOL)isAnyApplicationSpeaking","+ (NSString *)defaultVoice","+ (NSArray *)availableVoices","+ (NSDictionary *)attributesForVoice:(NSString*)voice","+ (NSSpellChecker *)sharedSpellChecker","+ (BOOL)sharedSpellCheckerExists","+ (NSInteger)uniqueSpellDocumentTag","- (NSRange)checkSpellingOfString:(NSString *)stringToCheck startingAt:(NSInteger)startingOffset language:(NSString *)language wrap:(BOOL)wrapFlag inSpellDocumentWithTag:(NSInteger)tag wordCount:(NSInteger *)wordCount","- (NSRange)checkSpellingOfString:(NSString *)stringToCheck startingAt:(NSInteger)startingOffset","- (NSInteger)countWordsInString:(NSString *)stringToCount language:(NSString *)language","- (void)updateSpellingPanelWithMisspelledWord:(NSString *)word","- (NSPanel *)spellingPanel","- (NSView *)accessoryView","- (void)setAccessoryView:(NSView *)aView","- (void)ignoreWord:(NSString *)wordToIgnore inSpellDocumentWithTag:(NSInteger)tag","- (NSArray *)ignoredWordsInSpellDocumentWithTag:(NSInteger)tag","- (void)setIgnoredWords:(NSArray *)words inSpellDocumentWithTag:(NSInteger)tag","- (NSArray *)completionsForPartialWordRange:(NSRange)range inString:(NSString *)string language:(NSString *)language inSpellDocumentWithTag:(NSInteger)tag","- (void)closeSpellDocumentWithTag:(NSInteger)tag","- (void)setWordFieldStringValue:(NSString *)aString","- (void)learnWord:(NSString *)word","- (NSString *)language","- (BOOL)setLanguage:(NSString *)language","- (NSArray *)guessesForWord:(NSString *)word","- (void)setVertical:(BOOL)flag","- (BOOL)isVertical","- (void)setDelegate:(id <NSSplitViewDelegate>)delegate","- (id <NSSplitViewDelegate>)delegate","- (void)drawDividerInRect:(NSRect)rect","- (CGFloat)dividerThickness","- (void)adjustSubviews","- (BOOL)isSubviewCollapsed:(NSView *)subview","+ (NSStatusBar*)systemStatusBar","- (NSStatusItem*)statusItemWithLength:(CGFloat)length","- (void)removeStatusItem:(NSStatusItem*)item","- (BOOL)isVertical","- (CGFloat)thickness","- (NSStatusBar* )statusBar","- (CGFloat)length","- (void)setLength:(CGFloat)length","- (SEL)action","- (void)setAction:(SEL)action","- (SEL)doubleAction","- (void)setDoubleAction:(SEL)action","- (id)target","- (void)setTarget:(id)target","- (NSString* )title","- (void)setTitle:(NSString*)title","- (NSAttributedString* )attributedTitle","- (void)setAttributedTitle:(NSAttributedString*)title","- (NSImage* )image","- (void)setImage:(NSImage*)image","- (NSImage *)alternateImage","- (void)setAlternateImage:(NSImage*)image","- (NSMenu* )menu","- (void)setMenu:(NSMenu*)menu","- (BOOL)isEnabled","- (void)setEnabled:(BOOL)enabled","- (NSString* )toolTip","- (void)setToolTip:(NSString*)toolTip","- (void)setHighlightMode:(BOOL)highlightMode","- (BOOL)highlightMode","- (NSInteger)sendActionOn:(NSInteger)mask","- (void)popUpStatusItemMenu:(NSMenu*)menu","- (void)drawStatusBarBackgroundInRect:(NSRect)rect withHighlight:(BOOL)highlight","- (NSView* )view","- (void)setView:(NSView*)view","- (double)minValue","- (void)setMinValue:(double)minValue","- (double)maxValue","- (void)setMaxValue:(double)maxValue","- (double)increment","- (void)setIncrement:(double)increment","- (BOOL)valueWraps","- (void)setValueWraps:(BOOL)valueWraps","- (BOOL)autorepeat","- (void)setAutorepeat:(BOOL)autorepeat","- (double)minValue","- (void)setMinValue:(double)minValue","- (double)maxValue","- (void)setMaxValue:(double)maxValue","- (double)increment","- (void)setIncrement:(double)increment","- (BOOL)valueWraps","- (void)setValueWraps:(BOOL)valueWraps","- (BOOL)autorepeat","- (void)setAutorepeat:(BOOL)autorepeat","- (NSSize)sizeWithAttributes:(NSDictionary *)attrs","- (void)drawAtPoint:(NSPoint)point withAttributes:(NSDictionary *)attrs","- (void)drawInRect:(NSRect)rect withAttributes:(NSDictionary *)attrs","- (NSSize)size","- (void)drawAtPoint:(NSPoint)point","- (void)drawInRect:(NSRect)rect","- (void)drawWithRect:(NSRect)rect options:(NSStringDrawingOptions)options attributes:(NSDictionary *)attributes","- (NSRect)boundingRectWithSize:(NSSize)size options:(NSStringDrawingOptions)options attributes:(NSDictionary *)attributes","- (void)drawWithRect:(NSRect)rect options:(NSStringDrawingOptions)options","- (NSRect)boundingRectWithSize:(NSSize)size options:(NSStringDrawingOptions)options","- (id)initWithIdentifier:(NSString *)identifier","- (void)setIdentifier:(NSString *)identifier","- (NSString *)identifier","- (void)setTableView:(NSTableView *)tableView","- (NSTableView *)tableView","- (void)setWidth:(CGFloat)width","- (CGFloat)width","- (void)setMinWidth:(CGFloat)minWidth","- (CGFloat)minWidth","- (void)setMaxWidth:(CGFloat)maxWidth","- (CGFloat)maxWidth","- (void)setHeaderCell:(NSCell *)cell","- (id)headerCell","- (void)setDataCell:(NSCell *)cell","- (id)dataCell","- (id)dataCellForRow:(NSInteger)row","- (void)setEditable:(BOOL)flag","- (BOOL)isEditable","- (void)sizeToFit","- (void)setSortDescriptorPrototype:(NSSortDescriptor *)sortDescriptor","- (NSSortDescriptor *)sortDescriptorPrototype","- (void)setResizingMask:(NSUInteger)resizingMask","- (NSUInteger)resizingMask","- (void)drawSortIndicatorWithFrame:(NSRect)cellFrame inView:(NSView *)controlView ascending:(BOOL)ascending priority:(NSInteger)priority","- (NSRect)sortIndicatorRectForBounds:(NSRect)theRect","- (void)setTableView:(NSTableView *)tableView","- (NSTableView *)tableView","- (NSInteger)draggedColumn","- (CGFloat)draggedDistance","- (NSInteger)resizedColumn","- (NSRect)headerRectOfColumn:(NSInteger)column","- (NSInteger)columnAtPoint:(NSPoint)point","- (void)drawBackgroundInRect:(NSRect)dirtyRect","- (void)drawSelectionInRect:(NSRect)dirtyRect","- (void)drawSeparatorInRect:(NSRect)dirtyRect","- (void)drawDraggingDestinationFeedbackInRect:(NSRect)dirtyRect","- (id)viewAtColumn:(NSInteger)column","- (void)setDataSource:(id <NSTableViewDataSource>)aSource","- (id <NSTableViewDataSource>)dataSource","- (void)setDelegate:(id <NSTableViewDelegate>)delegate","- (id <NSTableViewDelegate>)delegate","- (void)setHeaderView:(NSTableHeaderView *)headerView","- (NSTableHeaderView *)headerView","- (void)setCornerView:(NSView *)cornerView","- (NSView *)cornerView","- (void)setAllowsColumnReordering:(BOOL)flag","- (BOOL)allowsColumnReordering","- (void)setAllowsColumnResizing:(BOOL)flag","- (BOOL)allowsColumnResizing","- (void)setColumnAutoresizingStyle:(NSTableViewColumnAutoresizingStyle)style","- (NSTableViewColumnAutoresizingStyle)columnAutoresizingStyle","- (void)setGridStyleMask:(NSTableViewGridLineStyle)gridStyle","- (NSTableViewGridLineStyle)gridStyleMask","- (void)setIntercellSpacing:(NSSize)aSize","- (NSSize)intercellSpacing","- (void)setUsesAlternatingRowBackgroundColors:(BOOL)useAlternatingRowColors","- (BOOL)usesAlternatingRowBackgroundColors","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (void)setGridColor:(NSColor *)color","- (NSColor *)gridColor","- (void)setRowHeight:(CGFloat)rowHeight","- (CGFloat)rowHeight","- (void)noteHeightOfRowsWithIndexesChanged:(NSIndexSet *)indexSet","- (NSArray *)tableColumns","- (NSInteger)numberOfColumns","- (NSInteger)numberOfRows","- (void)addTableColumn:(NSTableColumn *)tableColumn","- (void)removeTableColumn:(NSTableColumn *)tableColumn","- (void)moveColumn:(NSInteger)oldIndex toColumn:(NSInteger)newIndex","- (NSInteger)columnWithIdentifier:(NSString *)identifier","- (NSTableColumn *)tableColumnWithIdentifier:(NSString *)identifier","- (void)tile","- (void)sizeToFit","- (void)sizeLastColumnToFit","- (void)scrollRowToVisible:(NSInteger)row","- (void)scrollColumnToVisible:(NSInteger)column","- (void)reloadData","- (void)noteNumberOfRowsChanged","- (NSInteger)editedColumn","- (NSInteger)editedRow","- (NSInteger)clickedColumn","- (NSInteger)clickedRow","- (void)setDoubleAction:(SEL)aSelector","- (SEL)doubleAction","- (void)setSortDescriptors:(NSArray *)array","- (NSArray *)sortDescriptors","- (void)setIndicatorImage:(NSImage *)anImage inTableColumn:(NSTableColumn *)tableColumn","- (NSImage *)indicatorImageInTableColumn:(NSTableColumn *)tableColumn","- (void)setHighlightedTableColumn:(NSTableColumn *)tableColumn","- (NSTableColumn *)highlightedTableColumn","- (void)setVerticalMotionCanBeginDrag:(BOOL)flag","- (BOOL)verticalMotionCanBeginDrag","- (BOOL)canDragRowsWithIndexes:(NSIndexSet *)rowIndexes atPoint:(NSPoint)mouseDownPoint","- (NSImage *)dragImageForRowsWithIndexes:(NSIndexSet *)dragRows tableColumns:(NSArray *)tableColumns event:(NSEvent*)dragEvent offset:(NSPointPointer)dragImageOffset","- (void)setDraggingSourceOperationMask:(NSDragOperation)mask forLocal:(BOOL)isLocal","- (void)setDropRow:(NSInteger)row dropOperation:(NSTableViewDropOperation)dropOperation","- (void)setAllowsMultipleSelection:(BOOL)flag","- (BOOL)allowsMultipleSelection","- (void)setAllowsEmptySelection:(BOOL)flag","- (BOOL)allowsEmptySelection","- (void)setAllowsColumnSelection:(BOOL)flag","- (BOOL)allowsColumnSelection","- (void)selectAll:(id)sender","- (void)deselectAll:(id)sender","- (void)selectColumnIndexes:(NSIndexSet *)indexes byExtendingSelection:(BOOL)extend","- (void)selectRowIndexes:(NSIndexSet *)indexes byExtendingSelection:(BOOL)extend","- (NSIndexSet *)selectedColumnIndexes","- (NSIndexSet *)selectedRowIndexes","- (void)deselectColumn:(NSInteger)column","- (void)deselectRow:(NSInteger)row","- (NSInteger)selectedColumn","- (NSInteger)selectedRow","- (BOOL)isColumnSelected:(NSInteger)column","- (BOOL)isRowSelected:(NSInteger)row","- (NSInteger)numberOfSelectedColumns","- (NSInteger)numberOfSelectedRows","- (NSRect)rectOfColumn:(NSInteger)column","- (NSRect)rectOfRow:(NSInteger)row","- (NSRange)rowsInRect:(NSRect)rect","- (NSInteger)columnAtPoint:(NSPoint)point","- (NSInteger)rowAtPoint:(NSPoint)point","- (NSRect)frameOfCellAtColumn:(NSInteger)column row:(NSInteger)row","- (BOOL)textShouldBeginEditing:(NSText *)textObject","- (BOOL)textShouldEndEditing:(NSText *)textObject","- (void)textDidBeginEditing:(NSNotification *)notification","- (void)textDidEndEditing:(NSNotification *)notification","- (void)textDidChange:(NSNotification *)notification","- (void)setAutosaveName:(NSString *)name","- (NSString *)autosaveName","- (void)setAutosaveTableColumns:(BOOL)save","- (BOOL)autosaveTableColumns","- (void)editWithFrame:(NSRect)aRect inView:(NSView *)controlView editor:(NSText *)textObj delegate:(id)anObject event:(NSEvent *)theEvent","- (void)selectWithFrame:(NSRect)aRect inView:(NSView *)controlView editor:(NSText *)textObj delegate:(id)anObject start:(NSInteger)selStart length:(NSInteger)selLength","- (void)editColumn:(NSInteger)column row:(NSInteger)row withEvent:(NSEvent *)theEvent select:(BOOL)select","- (void)drawRow:(NSInteger)row clipRect:(NSRect)clipRect","- (void)highlightSelectionInClipRect:(NSRect)clipRect","- (void)drawGridInClipRect:(NSRect)clipRect","- (void)drawBackgroundInClipRect:(NSRect)clipRect","- (void)selectTabViewItem:(NSTabViewItem *)tabViewItem","- (void)selectTabViewItemAtIndex:(NSInteger)index","- (void)selectTabViewItemWithIdentifier:(id)identifier","- (void)takeSelectedTabViewItemFromSender:(id)sender","- (void)selectFirstTabViewItem:(id)sender","- (void)selectLastTabViewItem:(id)sender","- (void)selectNextTabViewItem:(id)sender","- (void)selectPreviousTabViewItem:(id)sender","- (NSTabViewItem *)selectedTabViewItem","- (NSFont *)font","- (NSTabViewType)tabViewType","- (NSArray *)tabViewItems","- (BOOL)allowsTruncatedLabels","- (NSSize)minimumSize","- (BOOL)drawsBackground","- (NSControlTint)controlTint","- (NSControlSize)controlSize","- (void)setFont:(NSFont *)font","- (void)setTabViewType:(NSTabViewType)tabViewType","- (void)setAllowsTruncatedLabels:(BOOL)allowTruncatedLabels","- (void)setDrawsBackground:(BOOL)flag","- (void)setControlTint:(NSControlTint)controlTint","- (void)setControlSize:(NSControlSize)controlSize","- (void)addTabViewItem:(NSTabViewItem *)tabViewItem","- (void)insertTabViewItem:(NSTabViewItem *)tabViewItem atIndex:(NSInteger)index","- (void)removeTabViewItem:(NSTabViewItem *)tabViewItem","- (void)setDelegate:(id <NSTabViewDelegate>)anObject","- (id <NSTabViewDelegate>)delegate","- (NSTabViewItem *)tabViewItemAtPoint:(NSPoint)point","- (NSRect)contentRect","- (NSInteger)numberOfTabViewItems","- (NSInteger)indexOfTabViewItem:(NSTabViewItem *)tabViewItem","- (NSTabViewItem *)tabViewItemAtIndex:(NSInteger)index","- (NSInteger)indexOfTabViewItemWithIdentifier:(id)identifier","- (id)initWithIdentifier:(id)identifier","- (id)identifier","- (id)view","- (id)initialFirstResponder","- (NSString *)label","- (NSColor *)color","- (NSTabState)tabState","- (NSTabView *)tabView","- (void)setIdentifier:(id)identifier","- (void)setLabel:(NSString *)label","- (void)setColor:(NSColor *)color","- (void)setView:(NSView *)view","- (void)setInitialFirstResponder:(NSView *)view","- (void)drawLabel:(BOOL)shouldTruncateLabel inRect:(NSRect)labelRect","- (NSSize)sizeOfLabel:(BOOL)computeMin","- (NSString *)string","- (void)setString:(NSString *)string","- (void)replaceCharactersInRange:(NSRange)range withString:(NSString *)aString","- (void)replaceCharactersInRange:(NSRange)range withRTF:(NSData *)rtfData","- (void)replaceCharactersInRange:(NSRange)range withRTFD:(NSData *)rtfdData","- (NSData *)RTFFromRange:(NSRange)range","- (NSData *)RTFDFromRange:(NSRange)range","- (BOOL)writeRTFDToFile:(NSString *)path atomically:(BOOL)flag","- (BOOL)readRTFDFromFile:(NSString *)path","- (id <NSTextDelegate>)delegate","- (void)setDelegate:(id <NSTextDelegate>)anObject","- (BOOL)isEditable","- (void)setEditable:(BOOL)flag","- (BOOL)isSelectable","- (void)setSelectable:(BOOL)flag","- (BOOL)isRichText","- (void)setRichText:(BOOL)flag","- (BOOL)importsGraphics","- (void)setImportsGraphics:(BOOL)flag","- (BOOL)isFieldEditor","- (void)setFieldEditor:(BOOL)flag","- (BOOL)usesFontPanel","- (void)setUsesFontPanel:(BOOL)flag","- (BOOL)drawsBackground","- (void)setDrawsBackground:(BOOL)flag","- (NSColor *)backgroundColor","- (void)setBackgroundColor:(NSColor *)color","- (BOOL)isRulerVisible","- (NSRange)selectedRange","- (void)setSelectedRange:(NSRange)range","- (void)scrollRangeToVisible:(NSRange)range","- (void)setFont:(NSFont *)obj","- (NSFont *)font","- (void)setTextColor:(NSColor *)color","- (NSColor *)textColor","- (NSTextAlignment)alignment","- (void)setAlignment:(NSTextAlignment)mode","- (NSWritingDirection)baseWritingDirection","- (void)setBaseWritingDirection:(NSWritingDirection)writingDirection","- (void)setTextColor:(NSColor *)color range:(NSRange)range","- (void)setFont:(NSFont *)font range:(NSRange)range","- (NSSize)maxSize","- (void)setMaxSize:(NSSize)newMaxSize","- (NSSize)minSize","- (void)setMinSize:(NSSize)newMinSize","- (BOOL)isHorizontallyResizable","- (void)setHorizontallyResizable:(BOOL)flag","- (BOOL)isVerticallyResizable","- (void)setVerticallyResizable:(BOOL)flag","- (void)sizeToFit","- (void)copy:(id)sender","- (void)copyFont:(id)sender","- (void)copyRuler:(id)sender","- (void)cut:(id)sender","- (void)delete:(id)sender","- (void)paste:(id)sender","- (void)pasteFont:(id)sender","- (void)pasteRuler:(id)sender","- (void)selectAll:(id)sender","- (void)changeFont:(id)sender","- (void)alignLeft:(id)sender","- (void)alignRight:(id)sender","- (void)alignCenter:(id)sender","- (void)subscript:(id)sender","- (void)superscript:(id)sender","- (void)underline:(id)sender","- (void)unscript:(id)sender","- (void)showGuessPanel:(id)sender","- (void)checkSpelling:(id)sender","- (void)toggleRuler:(id)sender","- (id)initWithFileWrapper:(NSFileWrapper *)fileWrapper","- (void)setFileWrapper:(NSFileWrapper *)fileWrapper","- (NSFileWrapper *)fileWrapper","- (id <NSTextAttachmentCell>)attachmentCell","- (void)setAttachmentCell:(id <NSTextAttachmentCell>)cell","+ (NSAttributedString *)attributedStringWithAttachment:(NSTextAttachment *)attachment","- (void)updateAttachmentsFromPath:(NSString *)path","- (id)initWithContainerSize:(NSSize)size","- (NSLayoutManager *)layoutManager","- (void)setLayoutManager:(NSLayoutManager *)layoutManager","- (void)replaceLayoutManager:(NSLayoutManager *)newLayoutManager","- (NSTextView *)textView","- (void)setTextView:(NSTextView *)textView","- (void)setWidthTracksTextView:(BOOL)flag","- (BOOL)widthTracksTextView","- (void)setHeightTracksTextView:(BOOL)flag","- (BOOL)heightTracksTextView","- (void)setContainerSize:(NSSize)size","- (NSSize)containerSize","- (void)setLineFragmentPadding:(CGFloat)pad","- (CGFloat)lineFragmentPadding","- (NSRect)lineFragmentRectForProposedRect:(NSRect)proposedRect sweepDirection:(NSLineSweepDirection)sweepDirection movementDirection:(NSLineMovementDirection)movementDirection remainingRect:(NSRectPointer)remainingRect","- (BOOL)isSimpleRectangularTextContainer","- (BOOL)containsPoint:(NSPoint)point","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (void)setDrawsBackground:(BOOL)flag","- (BOOL)drawsBackground","- (void)setTextColor:(NSColor *)color","- (NSColor *)textColor","- (BOOL)isBordered","- (void)setBordered:(BOOL)flag","- (BOOL)isBezeled","- (void)setBezeled:(BOOL)flag","- (BOOL)isEditable","- (void)setEditable:(BOOL)flag","- (BOOL)isSelectable","- (void)setSelectable:(BOOL)flag","- (void)selectText:(id)sender","- (id <NSTextFieldDelegate>)delegate","- (void)setDelegate:(id <NSTextFieldDelegate>)anObject","- (BOOL)textShouldBeginEditing:(NSText *)textObject","- (BOOL)textShouldEndEditing:(NSText *)textObject","- (void)textDidBeginEditing:(NSNotification *)notification","- (void)textDidEndEditing:(NSNotification *)notification","- (void)textDidChange:(NSNotification *)notification","- (BOOL)acceptsFirstResponder","- (void)setBezelStyle:(NSTextFieldBezelStyle)style","- (NSTextFieldBezelStyle)bezelStyle","- (void)setTitleWithMnemonic:(NSString *)stringWithAmpersand","- (BOOL)allowsEditingTextAttributes","- (void)setAllowsEditingTextAttributes:(BOOL)flag","- (BOOL)importsGraphics","- (void)setImportsGraphics:(BOOL)flag","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (void)setDrawsBackground:(BOOL)flag","- (BOOL)drawsBackground","- (void)setTextColor:(NSColor *)color","- (NSColor *)textColor","- (NSText *)setUpFieldEditorAttributes:(NSText *)textObj","- (void)setBezelStyle:(NSTextFieldBezelStyle)style","- (NSTextFieldBezelStyle)bezelStyle","- (void)setPlaceholderString:(NSString*)string","- (NSString*)placeholderString","- (void)setPlaceholderAttributedString:(NSAttributedString*)string","- (NSAttributedString*)placeholderAttributedString","- (id)init","- (void)performAction:(NSTextFinderAction)op","- (BOOL)validateAction:(NSTextFinderAction)op","- (void)cancelFindIndicator","+ (void)drawIncrementalMatchHighlightInRect:(NSRect)rect","- (void)noteClientStringWillChange","+ (NSTextInputContext *)currentInputContext","- (id)initWithClient:(id <NSTextInputClient>)theClient","- (void)activate","- (void)deactivate","- (BOOL)handleEvent:(NSEvent *)theEvent","- (void)discardMarkedText","- (void)invalidateCharacterCoordinates","+ (NSString *)localizedNameForInputSource:(NSString *)inputSourceIdentifier","- (id)initWithMarkerFormat:(NSString *)format options:(NSUInteger)mask","- (NSString *)markerFormat","- (NSUInteger)listOptions","- (NSString *)markerForItemNumber:(NSInteger)itemNum","- (void)addLayoutManager:(NSLayoutManager *)obj","- (void)removeLayoutManager:(NSLayoutManager *)obj","- (NSArray *)layoutManagers","- (void)edited:(NSUInteger)editedMask range:(NSRange)range changeInLength:(NSInteger)delta","- (void)processEditing","- (void)invalidateAttributesInRange:(NSRange)range","- (void)ensureAttributesAreFixedInRange:(NSRange)range","- (BOOL)fixesAttributesLazily","- (NSUInteger)editedMask","- (NSRange)editedRange","- (NSInteger)changeInLength","- (void)setDelegate:(id <NSTextStorageDelegate>)delegate","- (id <NSTextStorageDelegate>)delegate","- (NSArray *)attributeRuns","- (void)setAttributeRuns:(NSArray *)attributeRuns","- (NSArray *)paragraphs","- (void)setParagraphs:(NSArray *)paragraphs","- (NSArray *)words","- (void)setWords:(NSArray *)words","- (NSArray *)characters","- (void)setCharacters:(NSArray *)characters","- (NSFont *)font","- (void)setFont:(NSFont *)font","- (NSColor *)foregroundColor","- (void)setForegroundColor:(NSColor *)color","- (id)init","- (void)setValue:(CGFloat)val type:(NSTextBlockValueType)type forDimension:(NSTextBlockDimension)dimension","- (CGFloat)valueForDimension:(NSTextBlockDimension)dimension","- (NSTextBlockValueType)valueTypeForDimension:(NSTextBlockDimension)dimension","- (void)setContentWidth:(CGFloat)val type:(NSTextBlockValueType)type","- (CGFloat)contentWidth","- (NSTextBlockValueType)contentWidthValueType","- (void)setWidth:(CGFloat)val type:(NSTextBlockValueType)type forLayer:(NSTextBlockLayer)layer edge:(NSRectEdge)edge","- (void)setWidth:(CGFloat)val type:(NSTextBlockValueType)type forLayer:(NSTextBlockLayer)layer","- (CGFloat)widthForLayer:(NSTextBlockLayer)layer edge:(NSRectEdge)edge","- (NSTextBlockValueType)widthValueTypeForLayer:(NSTextBlockLayer)layer edge:(NSRectEdge)edge","- (void)setVerticalAlignment:(NSTextBlockVerticalAlignment)alignment","- (NSTextBlockVerticalAlignment)verticalAlignment","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (void)setBorderColor:(NSColor *)color forEdge:(NSRectEdge)edge","- (void)setBorderColor:(NSColor *)color","- (NSColor *)borderColorForEdge:(NSRectEdge)edge","- (NSRect)rectForLayoutAtPoint:(NSPoint)startingPoint inRect:(NSRect)rect textContainer:(NSTextContainer *)textContainer characterRange:(NSRange)charRange","- (NSRect)boundsRectForContentRect:(NSRect)contentRect inRect:(NSRect)rect textContainer:(NSTextContainer *)textContainer characterRange:(NSRange)charRange","- (void)drawBackgroundWithFrame:(NSRect)frameRect inView:(NSView *)controlView characterRange:(NSRange)charRange layoutManager:(NSLayoutManager *)layoutManager","- (id)initWithTable:(NSTextTable *)table startingRow:(NSInteger)row rowSpan:(NSInteger)rowSpan startingColumn:(NSInteger)col columnSpan:(NSInteger)colSpan","- (NSTextTable *)table","- (NSInteger)startingRow","- (NSInteger)rowSpan","- (NSInteger)startingColumn","- (NSInteger)columnSpan","- (NSUInteger)numberOfColumns","- (void)setNumberOfColumns:(NSUInteger)numCols","- (NSTextTableLayoutAlgorithm)layoutAlgorithm","- (void)setLayoutAlgorithm:(NSTextTableLayoutAlgorithm)algorithm","- (BOOL)collapsesBorders","- (void)setCollapsesBorders:(BOOL)flag","- (BOOL)hidesEmptyCells","- (void)setHidesEmptyCells:(BOOL)flag","- (NSRect)rectForBlock:(NSTextTableBlock *)block layoutAtPoint:(NSPoint)startingPoint inRect:(NSRect)rect textContainer:(NSTextContainer *)textContainer characterRange:(NSRange)charRange","- (NSRect)boundsRectForBlock:(NSTextTableBlock *)block contentRect:(NSRect)contentRect inRect:(NSRect)rect textContainer:(NSTextContainer *)textContainer characterRange:(NSRange)charRange","- (void)drawBackgroundForBlock:(NSTextTableBlock *)block withFrame:(NSRect)frameRect inView:(NSView *)controlView characterRange:(NSRange)charRange layoutManager:(NSLayoutManager *)layoutManager","- (id)initWithFrame:(NSRect)frameRect textContainer:(NSTextContainer *)container","- (id)initWithFrame:(NSRect)frameRect","- (NSTextContainer *)textContainer","- (void)setTextContainer:(NSTextContainer *)container","- (void)replaceTextContainer:(NSTextContainer *)newContainer","- (void)setTextContainerInset:(NSSize)inset","- (NSSize)textContainerInset","- (NSPoint)textContainerOrigin","- (void)invalidateTextContainerOrigin","- (NSLayoutManager *)layoutManager","- (NSTextStorage *)textStorage","- (void)insertText:(id)insertString","- (void)setConstrainedFrameSize:(NSSize)desiredSize","- (void)setAlignment:(NSTextAlignment)alignment range:(NSRange)range","- (void)setBaseWritingDirection:(NSWritingDirection)writingDirection range:(NSRange)range","- (void)turnOffKerning:(id)sender","- (void)tightenKerning:(id)sender","- (void)loosenKerning:(id)sender","- (void)useStandardKerning:(id)sender","- (void)turnOffLigatures:(id)sender","- (void)useStandardLigatures:(id)sender","- (void)useAllLigatures:(id)sender","- (void)raiseBaseline:(id)sender","- (void)lowerBaseline:(id)sender","- (void)toggleTraditionalCharacterShape:(id)sender","- (void)outline:(id)sender","- (void)performFindPanelAction:(id)sender","- (void)alignJustified:(id)sender","- (void)changeColor:(id)sender","- (void)changeAttributes:(id)sender","- (void)changeDocumentBackgroundColor:(id)sender","- (void)orderFrontSpacingPanel:(id)sender","- (void)orderFrontLinkPanel:(id)sender","- (void)orderFrontListPanel:(id)sender","- (void)orderFrontTablePanel:(id)sender","- (void)rulerView:(NSRulerView *)ruler didMoveMarker:(NSRulerMarker *)marker","- (void)rulerView:(NSRulerView *)ruler didRemoveMarker:(NSRulerMarker *)marker","- (void)rulerView:(NSRulerView *)ruler didAddMarker:(NSRulerMarker *)marker","- (BOOL)rulerView:(NSRulerView *)ruler shouldMoveMarker:(NSRulerMarker *)marker","- (BOOL)rulerView:(NSRulerView *)ruler shouldAddMarker:(NSRulerMarker *)marker","- (CGFloat)rulerView:(NSRulerView *)ruler willMoveMarker:(NSRulerMarker *)marker toLocation:(CGFloat)location","- (BOOL)rulerView:(NSRulerView *)ruler shouldRemoveMarker:(NSRulerMarker *)marker","- (CGFloat)rulerView:(NSRulerView *)ruler willAddMarker:(NSRulerMarker *)marker atLocation:(CGFloat)location","- (void)rulerView:(NSRulerView *)ruler handleMouseDown:(NSEvent *)event","- (void)setNeedsDisplayInRect:(NSRect)rect avoidAdditionalLayout:(BOOL)flag","- (BOOL)shouldDrawInsertionPoint","- (void)drawInsertionPointInRect:(NSRect)rect color:(NSColor *)color turnedOn:(BOOL)flag","- (void)drawViewBackgroundInRect:(NSRect)rect","- (void)updateRuler","- (void)updateFontPanel","- (void)updateDragTypeRegistration","- (NSRange)selectionRangeForProposedRange:(NSRange)proposedCharRange granularity:(NSSelectionGranularity)granularity","- (void)clickedOnLink:(id)link atIndex:(NSUInteger)charIndex","- (void)startSpeaking:(id)sender","- (void)stopSpeaking:(id)sender","- (void)complete:(id)sender","- (NSRange)rangeForUserCompletion","- (NSArray *)completionsForPartialWordRange:(NSRange)charRange indexOfSelectedItem:(NSInteger *)index","- (void)insertCompletion:(NSString *)word forPartialWordRange:(NSRange)charRange movement:(NSInteger)movement isFinal:(BOOL)flag","- (NSArray *)writablePasteboardTypes","- (BOOL)writeSelectionToPasteboard:(NSPasteboard *)pboard type:(NSString *)type","- (BOOL)writeSelectionToPasteboard:(NSPasteboard *)pboard types:(NSArray *)types","- (NSArray *)readablePasteboardTypes","- (NSString *)preferredPasteboardTypeFromArray:(NSArray *)availableTypes restrictedToTypesFromArray:(NSArray *)allowedTypes","- (BOOL)readSelectionFromPasteboard:(NSPasteboard *)pboard type:(NSString *)type","- (BOOL)readSelectionFromPasteboard:(NSPasteboard *)pboard","+ (void)registerForServices","- (id)validRequestorForSendType:(NSString *)sendType returnType:(NSString *)returnType","- (void)pasteAsPlainText:(id)sender","- (void)pasteAsRichText:(id)sender","- (BOOL)dragSelectionWithEvent:(NSEvent *)event offset:(NSSize)mouseOffset slideBack:(BOOL)slideBack","- (NSImage *)dragImageForSelectionWithEvent:(NSEvent *)event origin:(NSPointPointer)origin","- (NSArray *)acceptableDragTypes","- (NSDragOperation)dragOperationForDraggingInfo:(id <NSDraggingInfo>)dragInfo type:(NSString *)type","- (void)cleanUpAfterDragOperation","- (NSArray *)selectedRanges","- (void)setSelectedRanges:(NSArray *)ranges affinity:(NSSelectionAffinity)affinity stillSelecting:(BOOL)stillSelectingFlag","- (void)setSelectedRanges:(NSArray *)ranges","- (void)setSelectedRange:(NSRange)charRange affinity:(NSSelectionAffinity)affinity stillSelecting:(BOOL)stillSelectingFlag","- (NSSelectionAffinity)selectionAffinity","- (NSSelectionGranularity)selectionGranularity","- (void)setSelectionGranularity:(NSSelectionGranularity)granularity","- (void)setSelectedTextAttributes:(NSDictionary *)attributeDictionary","- (NSDictionary *)selectedTextAttributes","- (void)setInsertionPointColor:(NSColor *)color","- (NSColor *)insertionPointColor","- (void)updateInsertionPointStateAndRestartTimer:(BOOL)restartFlag","- (void)setMarkedTextAttributes:(NSDictionary *)attributeDictionary","- (NSDictionary *)markedTextAttributes","- (void)setLinkTextAttributes:(NSDictionary *)attributeDictionary","- (NSDictionary *)linkTextAttributes","- (BOOL)acceptsGlyphInfo","- (void)setAcceptsGlyphInfo:(BOOL)flag","- (void)setRulerVisible:(BOOL)flag","- (BOOL)usesRuler","- (void)setUsesRuler:(BOOL)flag","- (void)setContinuousSpellCheckingEnabled:(BOOL)flag","- (BOOL)isContinuousSpellCheckingEnabled","- (void)toggleContinuousSpellChecking:(id)sender","- (NSInteger)spellCheckerDocumentTag","- (NSDictionary *)typingAttributes","- (void)setTypingAttributes:(NSDictionary *)attrs","- (BOOL)shouldChangeTextInRanges:(NSArray *)affectedRanges replacementStrings:(NSArray *)replacementStrings","- (NSArray *)rangesForUserTextChange","- (NSArray *)rangesForUserCharacterAttributeChange","- (NSArray *)rangesForUserParagraphAttributeChange","- (BOOL)shouldChangeTextInRange:(NSRange)affectedCharRange replacementString:(NSString *)replacementString","- (void)didChangeText","- (NSRange)rangeForUserTextChange","- (NSRange)rangeForUserCharacterAttributeChange","- (NSRange)rangeForUserParagraphAttributeChange","- (void)setAllowsDocumentBackgroundColorChange:(BOOL)flag","- (BOOL)allowsDocumentBackgroundColorChange","- (void)setDefaultParagraphStyle:(NSParagraphStyle *)paragraphStyle","- (NSParagraphStyle *)defaultParagraphStyle","- (void)setAllowsUndo:(BOOL)flag","- (BOOL)allowsUndo","- (void)breakUndoCoalescing","- (id <NSTextViewDelegate>)delegate","- (void)setDelegate:(id <NSTextViewDelegate>)anObject","- (BOOL)isEditable","- (void)setEditable:(BOOL)flag","- (BOOL)isSelectable","- (void)setSelectable:(BOOL)flag","- (BOOL)isRichText","- (void)setRichText:(BOOL)flag","- (BOOL)importsGraphics","- (void)setImportsGraphics:(BOOL)flag","- (BOOL)drawsBackground","- (void)setDrawsBackground:(BOOL)flag","- (NSColor *)backgroundColor","- (void)setBackgroundColor:(NSColor *)color","- (BOOL)isFieldEditor","- (void)setFieldEditor:(BOOL)flag","- (BOOL)usesFontPanel","- (void)setUsesFontPanel:(BOOL)flag","- (BOOL)isRulerVisible","- (void)setSelectedRange:(NSRange)charRange","- (BOOL)smartInsertDeleteEnabled","- (void)setSmartInsertDeleteEnabled:(BOOL)flag","- (NSRange)smartDeleteRangeForProposedRange:(NSRange)proposedCharRange","- (void)toggleSmartInsertDelete:(id)sender","- (void)smartInsertForString:(NSString *)pasteString replacingRange:(NSRange)charRangeToReplace beforeString:(NSString **)beforeString afterString:(NSString **)afterString","- (NSString *)smartInsertBeforeStringForString:(NSString *)pasteString replacingRange:(NSRange)charRangeToReplace","- (NSString *)smartInsertAfterStringForString:(NSString *)pasteString replacingRange:(NSRange)charRangeToReplace","- (void)setUsesFindPanel:(BOOL)flag","- (BOOL)usesFindPanel","- (void)toggleBaseWritingDirection:(id)sender","- (void)setDelegate:(id <NSTokenFieldDelegate>)anObject","- (id <NSTokenFieldDelegate>)delegate","- (void)setTokenStyle: (NSTokenStyle) style","- (NSTokenStyle)tokenStyle","- (void)setCompletionDelay: (NSTimeInterval) delay","- (NSTimeInterval)completionDelay","+ (NSTimeInterval)defaultCompletionDelay","- (void)setTokenizingCharacterSet:(NSCharacterSet *)characterSet","- (NSCharacterSet *)tokenizingCharacterSet","+ (NSCharacterSet *)defaultTokenizingCharacterSet","- (void)setTokenStyle:(NSTokenStyle)style","- (NSTokenStyle)tokenStyle","- (void)setCompletionDelay:(NSTimeInterval)delay","- (NSTimeInterval)completionDelay","+ (NSTimeInterval)defaultCompletionDelay","- (void)setTokenizingCharacterSet:(NSCharacterSet *)characterSet","- (NSCharacterSet *)tokenizingCharacterSet","+ (NSCharacterSet *)defaultTokenizingCharacterSet","- (void)setDelegate:(id <NSTokenFieldCellDelegate>)anObject","- (id <NSTokenFieldCellDelegate>)delegate","- (id)initWithIdentifier:(NSString *)identifier","- (void)insertItemWithItemIdentifier:(NSString *)itemIdentifier atIndex:(NSInteger)index","- (void)removeItemAtIndex:(NSInteger)index","- (void)setDelegate:(id <NSToolbarDelegate>)delegate","- (id <NSToolbarDelegate>)delegate","- (void)setVisible:(BOOL)shown","- (BOOL)isVisible","- (void)runCustomizationPalette:(id)sender","- (BOOL)customizationPaletteIsRunning","- (void)setDisplayMode:(NSToolbarDisplayMode)displayMode","- (NSToolbarDisplayMode)displayMode","- (void)setSelectedItemIdentifier:(NSString *)itemIdentifier","- (NSString *)selectedItemIdentifier","- (void)setSizeMode:(NSToolbarSizeMode)sizeMode","- (NSToolbarSizeMode)sizeMode","- (void)setShowsBaselineSeparator:(BOOL)flag","- (BOOL)showsBaselineSeparator","- (void)setAllowsUserCustomization:(BOOL)allowCustomization","- (BOOL)allowsUserCustomization","- (NSString *)identifier","- (NSArray *)items","- (NSArray *)visibleItems","- (void)setAutosavesConfiguration:(BOOL)flag","- (BOOL)autosavesConfiguration","- (void)setConfigurationFromDictionary:(NSDictionary *)configDict","- (NSDictionary *)configurationDictionary","- (void)validateVisibleItems","- (id)initWithItemIdentifier:(NSString *)itemIdentifier","- (NSString *)itemIdentifier","- (NSToolbar *)toolbar","- (void)setLabel:(NSString *)label","- (NSString *)label","- (void)setPaletteLabel:(NSString *)paletteLabel","- (NSString *)paletteLabel","- (void)setToolTip:(NSString*)toolTip","- (NSString *)toolTip","- (void)setMenuFormRepresentation:(NSMenuItem *)menuItem","- (NSMenuItem *)menuFormRepresentation","- (void)setTag:(NSInteger)tag","- (NSInteger)tag","- (void)setTarget:(id)target","- (id)target","- (void)setAction:(SEL)action","- (SEL)action","- (void)setEnabled:(BOOL)enabled","- (BOOL)isEnabled","- (void)setImage:(NSImage*)image","- (NSImage *)image","- (void)setView:(NSView *)view","- (NSView *)view","- (void)setMinSize:(NSSize)size","- (NSSize)minSize","- (void)setMaxSize:(NSSize)size","- (NSSize)maxSize","- (void)setVisibilityPriority:(NSInteger)visibilityPriority","- (NSInteger)visibilityPriority","- (void)validate","- (void)setAutovalidates:(BOOL)resistance","- (BOOL)autovalidates","- (BOOL)allowsDuplicatesInToolbar","- (BOOL)validateToolbarItem:(NSToolbarItem *)theItem","- (void)setSubitems:(NSArray *)subitems","- (NSArray *)subitems","- (id)initWithRect:(NSRect)rect options:(NSTrackingAreaOptions)options owner:(id)owner userInfo:(NSDictionary *)userInfo","- (NSRect)rect","- (NSTrackingAreaOptions)options","- (id)owner","- (NSDictionary *)userInfo","- (void)rearrangeObjects","- (id)arrangedObjects","- (void)setChildrenKeyPath:(NSString *)keyPath","- (NSString *)childrenKeyPath","- (void)setCountKeyPath:(NSString *)keyPath","- (NSString *)countKeyPath","- (void)setLeafKeyPath:(NSString *)keyPath","- (NSString *)leafKeyPath","- (void)setSortDescriptors:(NSArray *)sortDescriptors","- (NSArray *)sortDescriptors","- (id)content","- (void)setContent:(id)content","- (void)add:(id)sender","- (void)remove:(id)sender","- (void)addChild:(id)sender","- (void)insert:(id)sender","- (void)insertChild:(id)sender","- (BOOL)canInsert","- (BOOL)canInsertChild","- (BOOL)canAddChild","- (void)insertObject:(id)object atArrangedObjectIndexPath:(NSIndexPath *)indexPath","- (void)insertObjects:(NSArray *)objects atArrangedObjectIndexPaths:(NSArray *)indexPaths","- (void)removeObjectAtArrangedObjectIndexPath:(NSIndexPath *)indexPath","- (void)removeObjectsAtArrangedObjectIndexPaths:(NSArray *)indexPaths","- (void)setAvoidsEmptySelection:(BOOL)flag","- (BOOL)avoidsEmptySelection","- (void)setPreservesSelection:(BOOL)flag","- (BOOL)preservesSelection","- (void)setSelectsInsertedObjects:(BOOL)flag","- (BOOL)selectsInsertedObjects","- (void)setAlwaysUsesMultipleValuesMarker:(BOOL)flag","- (BOOL)alwaysUsesMultipleValuesMarker","- (NSArray *)selectedObjects","- (BOOL)setSelectionIndexPaths:(NSArray *)indexPaths","- (NSArray *)selectionIndexPaths","- (BOOL)setSelectionIndexPath:(NSIndexPath *)indexPath","- (NSIndexPath *)selectionIndexPath","- (BOOL)addSelectionIndexPaths:(NSArray *)indexPaths","- (BOOL)removeSelectionIndexPaths:(NSArray *)indexPaths","+ (id)treeNodeWithRepresentedObject:(id)modelObject","- (id)initWithRepresentedObject:(id)modelObject","- (id)representedObject","- (NSIndexPath *)indexPath","- (BOOL)isLeaf","- (NSArray *)childNodes","- (NSMutableArray *)mutableChildNodes","- (NSTreeNode *)descendantNodeAtIndexPath:(NSIndexPath *)indexPath","- (NSTreeNode *)parentNode","- (void)sortWithSortDescriptors:(NSArray *)sortDescriptors recursively:(BOOL)recursively","- (BOOL)usesFontLeading","- (void)setUsesFontLeading:(BOOL)flag","- (NSTypesetterBehavior)typesetterBehavior","- (void)setTypesetterBehavior:(NSTypesetterBehavior)behavior","- (float)hyphenationFactor","- (void)setHyphenationFactor:(float)factor","- (CGFloat)lineFragmentPadding","- (void)setLineFragmentPadding:(CGFloat)padding","- (NSFont *)substituteFontForFont:(NSFont *)originalFont","- (NSTextTab *)textTabForGlyphLocation:(CGFloat)glyphLocation writingDirection:(NSWritingDirection)direction maxLocation:(CGFloat)maxLocation","- (BOOL)bidiProcessingEnabled","- (void)setBidiProcessingEnabled:(BOOL)flag","- (void)setAttributedString:(NSAttributedString *)attrString","- (NSAttributedString *)attributedString","- (void)setParagraphGlyphRange:(NSRange)paragraphRange separatorGlyphRange:(NSRange)paragraphSeparatorRange","- (NSRange)paragraphGlyphRange","- (NSRange)paragraphSeparatorGlyphRange","- (NSRange)paragraphCharacterRange","- (NSRange)paragraphSeparatorCharacterRange","- (NSUInteger)layoutParagraphAtPoint:(NSPointPointer)lineFragmentOrigin","- (void)beginParagraph","- (void)endParagraph","- (void)beginLineWithGlyphAtIndex:(NSUInteger)glyphIndex","- (void)endLineWithGlyphRange:(NSRange)lineGlyphRange","- (CGFloat)lineSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(NSRect)rect","- (CGFloat)paragraphSpacingBeforeGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(NSRect)rect","- (CGFloat)paragraphSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(NSRect)rect","- (void)getLineFragmentRect:(NSRectPointer)lineFragmentRect usedRect:(NSRectPointer)lineFragmentUsedRect forParagraphSeparatorGlyphRange:(NSRange)paragraphSeparatorGlyphRange atProposedOrigin:(NSPoint)lineOrigin","- (NSDictionary *)attributesForExtraLineFragment","- (NSTypesetterControlCharacterAction)actionForControlCharacterAtIndex:(NSUInteger)charIndex","- (NSLayoutManager *)layoutManager","- (NSArray *)textContainers","- (NSTextContainer *)currentTextContainer","- (NSParagraphStyle *)currentParagraphStyle","- (void)setHardInvalidation:(BOOL)flag forGlyphRange:(NSRange)glyphRange","- (void)layoutGlyphsInLayoutManager:(NSLayoutManager *)layoutManager startingAtGlyphIndex:(NSUInteger)startGlyphIndex maxNumberOfLineFragments:(NSUInteger)maxNumLines nextGlyphIndex:(NSUInteger *)nextGlyph","+ (NSSize)printingAdjustmentInLayoutManager:(NSLayoutManager *)layoutMgr forNominallySpacedGlyphRange:(NSRange)nominallySpacedGlyphsRange packedGlyphs:(const unsigned char *)packedGlyphs count:(NSUInteger)packedGlyphsCount","- (CGFloat)baselineOffsetInLayoutManager:(NSLayoutManager *)layoutMgr glyphIndex:(NSUInteger)glyphIndex","+ (id)sharedSystemTypesetter","+ (id)sharedSystemTypesetterForBehavior:(NSTypesetterBehavior)theBehavior","+ (NSTypesetterBehavior)defaultTypesetterBehavior","- (void)willSetLineFragmentRect:(NSRectPointer)lineRect forGlyphRange:(NSRange)glyphRange usedRect:(NSRectPointer)usedRect baselineOffset:(CGFloat *)baselineOffset","- (BOOL)shouldBreakLineByWordBeforeCharacterAtIndex:(NSUInteger)charIndex","- (BOOL)shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(NSUInteger)charIndex","- (float)hyphenationFactorForGlyphAtIndex:(NSUInteger)glyphIndex","- (UTF32Char)hyphenCharacterForGlyphAtIndex:(NSUInteger)glyphIndex","- (NSRect)boundingBoxForControlGlyphAtIndex:(NSUInteger)glyphIndex forTextContainer:(NSTextContainer *)textContainer proposedLineFragment:(NSRect)proposedRect glyphPosition:(NSPoint)glyphPosition characterIndex:(NSUInteger)charIndex","- (NSRange)characterRangeForGlyphRange:(NSRange)glyphRange actualGlyphRange:(NSRangePointer)actualGlyphRange","- (NSRange)glyphRangeForCharacterRange:(NSRange)charRange actualCharacterRange:(NSRangePointer)actualCharRange","- (NSUInteger)getGlyphsInRange:(NSRange)glyphsRange glyphs:(NSGlyph *)glyphBuffer characterIndexes:(NSUInteger *)charIndexBuffer glyphInscriptions:(NSGlyphInscription *)inscribeBuffer elasticBits:(BOOL *)elasticBuffer bidiLevels:(unsigned char *)bidiLevelBuffer","- (void)getLineFragmentRect:(NSRectPointer)lineFragmentRect usedRect:(NSRectPointer)lineFragmentUsedRect remainingRect:(NSRectPointer)remainingRect forStartingGlyphAtIndex:(NSUInteger)startingGlyphIndex proposedRect:(NSRect)proposedRect lineSpacing:(CGFloat)lineSpacing paragraphSpacingBefore:(CGFloat)paragraphSpacingBefore paragraphSpacingAfter:(CGFloat)paragraphSpacingAfter","- (void)setLineFragmentRect:(NSRect)fragmentRect forGlyphRange:(NSRange)glyphRange usedRect:(NSRect)usedRect baselineOffset:(CGFloat)baselineOffset","- (void)substituteGlyphsInRange:(NSRange)glyphRange withGlyphs:(NSGlyph *)glyphs","- (void)insertGlyph:(NSGlyph)glyph atGlyphIndex:(NSUInteger)glyphIndex characterIndex:(NSUInteger)characterIndex","- (void)deleteGlyphsInRange:(NSRange)glyphRange","- (void)setNotShownAttribute:(BOOL)flag forGlyphRange:(NSRange)glyphRange","- (void)setDrawsOutsideLineFragment:(BOOL)flag forGlyphRange:(NSRange)glyphRange","- (void)setLocation:(NSPoint)location withAdvancements:(const CGFloat *)advancements forStartOfGlyphRange:(NSRange)glyphRange","- (void)setAttachmentSize:(NSSize)attachmentSize forGlyphRange:(NSRange)glyphRange","+ (id)sharedUserDefaultsController","- (id)initWithDefaults:(NSUserDefaults *)defaults initialValues:(NSDictionary *)initialValues","- (NSUserDefaults *)defaults","- (void)setInitialValues:(NSDictionary *)initialValues","- (NSDictionary *)initialValues","- (void)setAppliesImmediately:(BOOL)flag","- (BOOL)appliesImmediately","- (BOOL)hasUnappliedChanges","- (id)values","- (void)revert:(id)sender","- (void)save:(id)sender","- (void)revertToInitialValues:(id)sender","- (id)initWithFrame:(NSRect)frameRect","- (NSWindow *)window","- (NSView *)superview","- (NSArray *)subviews","- (BOOL)isDescendantOf:(NSView *)aView","- (NSView *)ancestorSharedWithView:(NSView *)aView","- (NSView *)opaqueAncestor","- (void)setHidden:(BOOL)flag","- (BOOL)isHidden","- (BOOL)isHiddenOrHasHiddenAncestor","- (void)getRectsBeingDrawn:(const NSRect **)rects count:(NSInteger *)count","- (BOOL)needsToDrawRect:(NSRect)aRect","- (BOOL)wantsDefaultClipping","- (void)addSubview:(NSView *)aView","- (void)addSubview:(NSView *)aView positioned:(NSWindowOrderingMode)place relativeTo:(NSView *)otherView","- (void)viewWillMoveToWindow:(NSWindow *)newWindow","- (void)viewDidMoveToWindow","- (void)viewWillMoveToSuperview:(NSView *)newSuperview","- (void)viewDidMoveToSuperview","- (void)didAddSubview:(NSView *)subview","- (void)willRemoveSubview:(NSView *)subview","- (void)removeFromSuperview","- (void)replaceSubview:(NSView *)oldView with:(NSView *)newView","- (void)removeFromSuperviewWithoutNeedingDisplay","- (void)setPostsFrameChangedNotifications:(BOOL)flag","- (BOOL)postsFrameChangedNotifications","- (void)resizeSubviewsWithOldSize:(NSSize)oldSize","- (void)resizeWithOldSuperviewSize:(NSSize)oldSize","- (void)setAutoresizesSubviews:(BOOL)flag","- (BOOL)autoresizesSubviews","- (void)setAutoresizingMask:(NSUInteger)mask","- (NSUInteger)autoresizingMask","- (void)setFrameOrigin:(NSPoint)newOrigin","- (void)setFrameSize:(NSSize)newSize","- (void)setFrame:(NSRect)frameRect","- (NSRect)frame","- (void)setFrameRotation:(CGFloat)angle","- (CGFloat)frameRotation","- (void)setBoundsOrigin:(NSPoint)newOrigin","- (void)setBoundsSize:(NSSize)newSize","- (void)setBoundsRotation:(CGFloat)angle","- (CGFloat)boundsRotation","- (void)translateOriginToPoint:(NSPoint)translation","- (void)scaleUnitSquareToSize:(NSSize)newUnitSize","- (void)rotateByAngle:(CGFloat)angle","- (void)setBounds:(NSRect)aRect","- (NSRect)bounds","- (BOOL)isFlipped","- (BOOL)isRotatedFromBase","- (BOOL)isRotatedOrScaledFromBase","- (BOOL)isOpaque","- (NSPoint)convertPoint:(NSPoint)aPoint fromView:(NSView *)aView","- (NSPoint)convertPoint:(NSPoint)aPoint toView:(NSView *)aView","- (NSSize)convertSize:(NSSize)aSize fromView:(NSView *)aView","- (NSSize)convertSize:(NSSize)aSize toView:(NSView *)aView","- (NSRect)convertRect:(NSRect)aRect fromView:(NSView *)aView","- (NSRect)convertRect:(NSRect)aRect toView:(NSView *)aView","- (NSRect)centerScanRect:(NSRect)aRect","- (BOOL)canDraw","- (void)setNeedsDisplay:(BOOL)flag","- (void)setNeedsDisplayInRect:(NSRect)invalidRect","- (BOOL)needsDisplay","- (void)lockFocus","- (void)unlockFocus","- (BOOL)lockFocusIfCanDraw","- (BOOL)lockFocusIfCanDrawInContext:(NSGraphicsContext *)context","+ (NSView *)focusView","- (NSRect)visibleRect","- (void)display","- (void)displayIfNeeded","- (void)displayIfNeededIgnoringOpacity","- (void)displayRect:(NSRect)rect","- (void)displayIfNeededInRect:(NSRect)rect","- (void)displayRectIgnoringOpacity:(NSRect)rect","- (void)displayIfNeededInRectIgnoringOpacity:(NSRect)rect","- (void)drawRect:(NSRect)dirtyRect","- (void)displayRectIgnoringOpacity:(NSRect)aRect inContext:(NSGraphicsContext *)context","- (NSBitmapImageRep *)bitmapImageRepForCachingDisplayInRect:(NSRect)rect","- (void)cacheDisplayInRect:(NSRect)rect toBitmapImageRep:(NSBitmapImageRep *)bitmapImageRep","- (NSInteger)gState","- (void)allocateGState","- (void)releaseGState","- (void)setUpGState","- (void)renewGState","- (void)scrollPoint:(NSPoint)aPoint","- (BOOL)scrollRectToVisible:(NSRect)aRect","- (BOOL)autoscroll:(NSEvent *)theEvent","- (NSRect)adjustScroll:(NSRect)newVisible","- (void)scrollRect:(NSRect)aRect by:(NSSize)delta","- (NSView *)hitTest:(NSPoint)aPoint","- (BOOL)mouse:(NSPoint)aPoint inRect:(NSRect)aRect","- (id)viewWithTag:(NSInteger)aTag","- (NSInteger)tag","- (BOOL)performKeyEquivalent:(NSEvent *)theEvent","- (BOOL)acceptsFirstMouse:(NSEvent *)theEvent","- (BOOL)shouldDelayWindowOrderingForEvent:(NSEvent *)theEvent","- (BOOL)needsPanelToBecomeKey","- (BOOL)mouseDownCanMoveWindow","- (void)addCursorRect:(NSRect)aRect cursor:(NSCursor *)anObj","- (void)removeCursorRect:(NSRect)aRect cursor:(NSCursor *)anObj","- (void)discardCursorRects","- (void)resetCursorRects","- (NSTrackingRectTag)addTrackingRect:(NSRect)aRect owner:(id)anObject userData:(void *)data assumeInside:(BOOL)flag","- (void)removeTrackingRect:(NSTrackingRectTag)tag","- (BOOL)shouldDrawColor","- (void)setPostsBoundsChangedNotifications:(BOOL)flag","- (BOOL)postsBoundsChangedNotifications","- (NSScrollView *)enclosingScrollView","- (NSMenu *)menuForEvent:(NSEvent *)event","+ (NSMenu *)defaultMenu","- (void)setToolTip:(NSString *)string","- (NSString *)toolTip","- (NSToolTipTag)addToolTipRect:(NSRect)aRect owner:(id)anObject userData:(void *)data","- (void)removeToolTip:(NSToolTipTag)tag","- (void)removeAllToolTips","- (void)viewWillStartLiveResize","- (void)viewDidEndLiveResize","- (BOOL)inLiveResize","- (BOOL)preservesContentDuringLiveResize","- (NSRect)rectPreservedDuringLiveResize","- (void)getRectsExposedDuringLiveResize:(NSRect[4])exposedRects count:(NSInteger *)count","- (NSString *)view:(NSView *)view stringForToolTip:(NSToolTipTag)tag point:(NSPoint)point userData:(void *)data","- (BOOL)performMnemonic:(NSString *)theString","- (void)setNextKeyView:(NSView *)next","- (NSView *)nextKeyView","- (NSView *)previousKeyView","- (NSView *)nextValidKeyView","- (NSView *)previousValidKeyView","- (BOOL)canBecomeKeyView","- (void)setKeyboardFocusRingNeedsDisplayInRect:(NSRect)rect","- (void)setFocusRingType:(NSFocusRingType)focusRingType","- (NSFocusRingType)focusRingType","+ (NSFocusRingType)defaultFocusRingType","- (void)writeEPSInsideRect:(NSRect)rect toPasteboard:(NSPasteboard *)pasteboard","- (NSData *)dataWithEPSInsideRect:(NSRect)rect","- (void)writePDFInsideRect:(NSRect)rect toPasteboard:(NSPasteboard *)pasteboard","- (NSData *)dataWithPDFInsideRect:(NSRect)rect","- (void)print:(id)sender","- (BOOL)knowsPageRange:(NSRangePointer)range","- (CGFloat)heightAdjustLimit","- (CGFloat)widthAdjustLimit","- (void)adjustPageWidthNew:(CGFloat *)newRight left:(CGFloat)oldLeft right:(CGFloat)oldRight limit:(CGFloat)rightLimit","- (void)adjustPageHeightNew:(CGFloat *)newBottom top:(CGFloat)oldTop bottom:(CGFloat)oldBottom limit:(CGFloat)bottomLimit","- (NSRect)rectForPage:(NSInteger)page","- (NSPoint)locationOfPrintRect:(NSRect)aRect","- (void)drawPageBorderWithSize:(NSSize)borderSize","- (NSAttributedString *)pageHeader","- (NSAttributedString *)pageFooter","- (void)drawSheetBorderWithSize:(NSSize)borderSize","- (NSString *)printJobTitle","- (void)beginDocument","- (void)endDocument","- (void)beginPageInRect:(NSRect)aRect atPlacement:(NSPoint)location","- (void)endPage","- (void)dragImage:(NSImage *)anImage at:(NSPoint)viewLocation offset:(NSSize)initialOffset event:(NSEvent *)event pasteboard:(NSPasteboard *)pboard source:(id)sourceObj slideBack:(BOOL)slideFlag","- (NSArray *)registeredDraggedTypes","- (void)registerForDraggedTypes:(NSArray *)newTypes","- (void)unregisterDraggedTypes","- (BOOL)dragFile:(NSString *)filename fromRect:(NSRect)rect slideBack:(BOOL)aFlag event:(NSEvent *)event","- (BOOL)dragPromisedFilesOfTypes:(NSArray *)typeArray fromRect:(NSRect)rect source:(id)sourceObject slideBack:(BOOL)aFlag event:(NSEvent *)event","- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil","- (void)setRepresentedObject:(id)representedObject","- (id)representedObject","- (void)setTitle:(NSString *)title","- (NSString *)title","- (NSView *)view","- (void)loadView","- (NSString *)nibName","- (NSBundle *)nibBundle","- (void)setView:(NSView *)view","- (void)commitEditingWithDelegate:(id)delegate didCommitSelector:(SEL)didCommitSelector contextInfo:(void *)contextInfo","- (BOOL)commitEditing","- (void)discardEditing","+ (NSRect)frameRectForContentRect:(NSRect)cRect styleMask:(NSUInteger)aStyle","+ (NSRect)contentRectForFrameRect:(NSRect)fRect styleMask:(NSUInteger)aStyle","+ (CGFloat)minFrameWidthWithTitle:(NSString *)aTitle styleMask:(NSUInteger)aStyle","+ (NSWindowDepth)defaultDepthLimit","- (NSRect)frameRectForContentRect:(NSRect)contentRect","- (NSRect)contentRectForFrameRect:(NSRect)frameRect","- (id)initWithContentRect:(NSRect)contentRect styleMask:(NSUInteger)aStyle backing:(NSBackingStoreType)bufferingType defer:(BOOL)flag","- (id)initWithContentRect:(NSRect)contentRect styleMask:(NSUInteger)aStyle backing:(NSBackingStoreType)bufferingType defer:(BOOL)flag screen:(NSScreen *)screen","- (NSString *)title","- (void)setTitle:(NSString *)aString","- (NSString *)representedFilename","- (void)setRepresentedFilename:(NSString *)aString","- (void)setTitleWithRepresentedFilename:(NSString *)filename","- (void)setExcludedFromWindowsMenu:(BOOL)flag","- (BOOL)isExcludedFromWindowsMenu","- (void)setContentView:(NSView *)aView","- (id)contentView","- (void)setDelegate:(id <NSWindowDelegate>)anObject","- (id <NSWindowDelegate>)delegate","- (NSInteger)windowNumber","- (NSUInteger)styleMask","- (NSText *)fieldEditor:(BOOL)createFlag forObject:(id)anObject","- (void)endEditingFor:(id)anObject","- (NSRect)constrainFrameRect:(NSRect)frameRect toScreen:(NSScreen *)screen","- (void)setFrame:(NSRect)frameRect display:(BOOL)flag","- (void)setContentSize:(NSSize)aSize","- (void)setFrameOrigin:(NSPoint)aPoint","- (void)setFrameTopLeftPoint:(NSPoint)aPoint","- (NSPoint)cascadeTopLeftFromPoint:(NSPoint)topLeftPoint","- (NSRect)frame","- (NSTimeInterval)animationResizeTime:(NSRect)newFrame","- (void)setFrame:(NSRect)frameRect display:(BOOL)displayFlag animate:(BOOL)animateFlag","- (void)setShowsResizeIndicator:(BOOL)show","- (BOOL)showsResizeIndicator","- (void)setResizeIncrements:(NSSize)increments","- (NSSize)resizeIncrements","- (void)setAspectRatio:(NSSize)ratio","- (NSSize)aspectRatio","- (void)setContentResizeIncrements:(NSSize)increments","- (NSSize)contentResizeIncrements","- (void)setContentAspectRatio:(NSSize)ratio","- (NSSize)contentAspectRatio","- (void)useOptimizedDrawing:(BOOL)flag","- (void)disableFlushWindow","- (void)enableFlushWindow","- (BOOL)isFlushWindowDisabled","- (void)flushWindow","- (void)flushWindowIfNeeded","- (void)setViewsNeedDisplay:(BOOL)flag","- (BOOL)viewsNeedDisplay","- (void)displayIfNeeded","- (void)display","- (void)setAutodisplay:(BOOL)flag","- (BOOL)isAutodisplay","- (BOOL)preservesContentDuringLiveResize","- (void)setPreservesContentDuringLiveResize:(BOOL)flag","- (void)update","- (BOOL)makeFirstResponder:(NSResponder *)aResponder","- (NSResponder *)firstResponder","- (NSInteger)resizeFlags","- (void)keyDown:(NSEvent *)theEvent","- (void)close","- (void)setReleasedWhenClosed:(BOOL)flag","- (BOOL)isReleasedWhenClosed","- (void)miniaturize:(id)sender","- (void)deminiaturize:(id)sender","- (BOOL)isZoomed","- (void)zoom:(id)sender","- (BOOL)isMiniaturized","- (BOOL)tryToPerform:(SEL)anAction with:(id)anObject","- (id)validRequestorForSendType:(NSString *)sendType returnType:(NSString *)returnType","- (void)setBackgroundColor:(NSColor *)color","- (NSColor *)backgroundColor","- (void)setMovableByWindowBackground:(BOOL)flag","- (BOOL)isMovableByWindowBackground","- (void)setHidesOnDeactivate:(BOOL)flag","- (BOOL)hidesOnDeactivate","- (void)setCanHide:(BOOL)flag","- (BOOL)canHide","- (void)center","- (void)makeKeyAndOrderFront:(id)sender","- (void)orderFront:(id)sender","- (void)orderBack:(id)sender","- (void)orderOut:(id)sender","- (void)orderWindow:(NSWindowOrderingMode)place relativeTo:(NSInteger)otherWin","- (void)orderFrontRegardless","- (void)setMiniwindowImage:(NSImage *)image","- (void)setMiniwindowTitle:(NSString *)title","- (NSImage *)miniwindowImage","- (NSString *)miniwindowTitle","- (void)setDocumentEdited:(BOOL)flag","- (BOOL)isDocumentEdited","- (BOOL)isVisible","- (BOOL)isKeyWindow","- (BOOL)isMainWindow","- (BOOL)canBecomeKeyWindow","- (BOOL)canBecomeMainWindow","- (void)makeKeyWindow","- (void)makeMainWindow","- (void)becomeKeyWindow","- (void)resignKeyWindow","- (void)becomeMainWindow","- (void)resignMainWindow","- (BOOL)worksWhenModal","- (NSPoint)convertBaseToScreen:(NSPoint)aPoint","- (NSPoint)convertScreenToBase:(NSPoint)aPoint","- (void)performClose:(id)sender","- (void)performMiniaturize:(id)sender","- (void)performZoom:(id)sender","- (NSInteger)gState","- (void)setOneShot:(BOOL)flag","- (BOOL)isOneShot","- (NSData *)dataWithEPSInsideRect:(NSRect)rect","- (NSData *)dataWithPDFInsideRect:(NSRect)rect","- (void)print:(id)sender","- (void)disableCursorRects","- (void)enableCursorRects","- (void)discardCursorRects","- (BOOL)areCursorRectsEnabled","- (void)invalidateCursorRectsForView:(NSView *)aView","- (void)resetCursorRects","- (void)setAllowsToolTipsWhenApplicationIsInactive:(BOOL)allowWhenInactive","- (BOOL)allowsToolTipsWhenApplicationIsInactive","- (void)setBackingType:(NSBackingStoreType)bufferingType","- (NSBackingStoreType)backingType","- (void)setLevel:(NSInteger)newLevel","- (NSInteger)level","- (void)setDepthLimit:(NSWindowDepth)limit","- (NSWindowDepth)depthLimit","- (void)setDynamicDepthLimit:(BOOL)flag","- (BOOL)hasDynamicDepthLimit","- (NSScreen *)screen","- (NSScreen *)deepestScreen","- (BOOL)canStoreColor","- (void)setHasShadow:(BOOL)hasShadow","- (BOOL)hasShadow","- (void)invalidateShadow","- (void)setAlphaValue:(CGFloat)windowAlpha","- (CGFloat)alphaValue","- (void)setOpaque:(BOOL)isOpaque","- (BOOL)isOpaque","- (BOOL)displaysWhenScreenProfileChanges","- (void)setDisplaysWhenScreenProfileChanges:(BOOL)flag","- (void)disableScreenUpdatesUntilFlush","- (NSString *)stringWithSavedFrame","- (void)setFrameFromString:(NSString *)string","- (void)saveFrameUsingName:(NSString *)name","- (BOOL)setFrameUsingName:(NSString *)name force:(BOOL)force","- (BOOL)setFrameUsingName:(NSString *)name","- (BOOL)setFrameAutosaveName:(NSString *)name","- (NSString *)frameAutosaveName","+ (void)removeFrameUsingName:(NSString *)name","- (void)cacheImageInRect:(NSRect)aRect","- (void)restoreCachedImage","- (void)discardCachedImage","- (NSSize)minSize","- (NSSize)maxSize","- (void)setMinSize:(NSSize)size","- (void)setMaxSize:(NSSize)size","- (NSSize)contentMinSize","- (NSSize)contentMaxSize","- (void)setContentMinSize:(NSSize)size","- (void)setContentMaxSize:(NSSize)size","- (NSEvent *)nextEventMatchingMask:(NSUInteger)mask","- (NSEvent *)nextEventMatchingMask:(NSUInteger)mask untilDate:(NSDate *)expiration inMode:(NSString *)mode dequeue:(BOOL)deqFlag","- (void)discardEventsMatchingMask:(NSUInteger)mask beforeEvent:(NSEvent *)lastEvent","- (void)postEvent:(NSEvent *)event atStart:(BOOL)flag","- (NSEvent *)currentEvent","- (void)setAcceptsMouseMovedEvents:(BOOL)flag","- (BOOL)acceptsMouseMovedEvents","- (void)setIgnoresMouseEvents:(BOOL)flag","- (BOOL)ignoresMouseEvents","- (NSDictionary *)deviceDescription","- (void)sendEvent:(NSEvent *)theEvent","- (NSPoint)mouseLocationOutsideOfEventStream","+ (void)menuChanged:(NSMenu *)menu","- (id)windowController","- (void)setWindowController:(NSWindowController *)windowController","- (BOOL)isSheet","- (NSWindow *)attachedSheet","+ (NSButton *)standardWindowButton:(NSWindowButton)b forStyleMask:(NSUInteger)styleMask","- (NSButton *)standardWindowButton:(NSWindowButton)b","- (void)addChildWindow:(NSWindow *)childWin ordered:(NSWindowOrderingMode)place","- (void)removeChildWindow:(NSWindow *)childWin","- (NSArray *)childWindows","- (NSWindow *)parentWindow","- (void)setParentWindow:(NSWindow *)window","- (NSGraphicsContext *)graphicsContext","- (CGFloat)userSpaceScaleFactor","- (void)setInitialFirstResponder:(NSView *)view","- (NSView *)initialFirstResponder","- (void)selectNextKeyView:(id)sender","- (void)selectPreviousKeyView:(id)sender","- (void)selectKeyViewFollowingView:(NSView *)aView","- (void)selectKeyViewPrecedingView:(NSView *)aView","- (NSSelectionDirection)keyViewSelectionDirection","- (void)setDefaultButtonCell:(NSButtonCell *)defButt","- (NSButtonCell *)defaultButtonCell","- (void)disableKeyEquivalentForDefaultButtonCell","- (void)enableKeyEquivalentForDefaultButtonCell","- (void)setAutorecalculatesKeyViewLoop:(BOOL)flag","- (BOOL)autorecalculatesKeyViewLoop","- (void)recalculateKeyViewLoop","- (void)setToolbar:(NSToolbar*)toolbar","- (NSToolbar *)toolbar","- (void)toggleToolbarShown:(id)sender","- (void)runToolbarCustomizationPalette:(id)sender","- (void)setShowsToolbarButton:(BOOL)show","- (BOOL)showsToolbarButton","- (void)dragImage:(NSImage *)anImage at:(NSPoint)baseLocation offset:(NSSize)initialOffset event:(NSEvent *)event pasteboard:(NSPasteboard *)pboard source:(id)sourceObj slideBack:(BOOL)slideFlag","- (void)registerForDraggedTypes:(NSArray *)newTypes","- (void)unregisterDraggedTypes","- (id)initWithWindow:(NSWindow *)window","- (id)initWithWindowNibName:(NSString *)windowNibName","- (id)initWithWindowNibName:(NSString *)windowNibName owner:(id)owner","- (id)initWithWindowNibPath:(NSString *)windowNibPath owner:(id)owner","- (NSString *)windowNibName","- (NSString *)windowNibPath","- (id)owner","- (void)setWindowFrameAutosaveName:(NSString *)name","- (NSString *)windowFrameAutosaveName","- (void)setShouldCascadeWindows:(BOOL)flag","- (BOOL)shouldCascadeWindows","- (id)document","- (void)setDocument:(NSDocument *)document","- (void)setDocumentEdited:(BOOL)dirtyFlag","- (void)setShouldCloseDocument:(BOOL)flag","- (BOOL)shouldCloseDocument","- (void)setWindow:(NSWindow *)window","- (NSWindow *)window","- (void)synchronizeWindowTitleWithDocumentName","- (NSString *)windowTitleForDocumentDisplayName:(NSString *)displayName","- (void)close","- (IBAction)showWindow:(id)sender","- (BOOL)isWindowLoaded","- (void)windowWillLoad","- (void)windowDidLoad","- (void)loadWindow","- (void)disableSnapshotRestoration","- (void)enableSnapshotRestoration","- (BOOL)hasCloseBox","- (BOOL)hasTitleBar","- (BOOL)isFloatingPanel","- (BOOL)isMiniaturizable","- (BOOL)isModalPanel","- (BOOL)isResizable","- (BOOL)isZoomable","- (NSInteger)orderedIndex","- (void)setIsMiniaturized:(BOOL)flag","- (void)setIsVisible:(BOOL)flag","- (void)setIsZoomed:(BOOL)flag","- (void)setOrderedIndex:(NSInteger)index","- (id)handleCloseScriptCommand:(NSCloseCommand *)command","- (id)handlePrintScriptCommand:(NSScriptCommand *)command","- (id)handleSaveScriptCommand:(NSScriptCommand *)command","+ (NSWorkspace *)sharedWorkspace","- (NSNotificationCenter *)notificationCenter","- (BOOL)openFile:(NSString *)fullPath","- (BOOL)openFile:(NSString *)fullPath withApplication:(NSString *)appName","- (BOOL)openFile:(NSString *)fullPath withApplication:(NSString *)appName andDeactivate:(BOOL)flag","- (BOOL)openFile:(NSString *)fullPath fromImage:(NSImage *)anImage at:(NSPoint)point inView:(NSView *)aView","- (BOOL)openURL:(NSURL *)url","- (BOOL)launchApplication:(NSString *)appName","- (BOOL)launchApplication:(NSString *)appName showIcon:(BOOL)showIcon autolaunch:(BOOL)autolaunch","- (NSString *)fullPathForApplication:(NSString *)appName","- (BOOL)selectFile:(NSString *)fullPath inFileViewerRootedAtPath:(NSString *)rootFullPath","- (void)noteFileSystemChanged:(NSString *)path","- (BOOL)getInfoForFile:(NSString *)fullPath application:(NSString **)appName type:(NSString **)type","- (BOOL)isFilePackageAtPath:(NSString *)fullPath","- (NSImage *)iconForFile:(NSString *)fullPath","- (NSImage *)iconForFiles:(NSArray *)fullPaths","- (NSImage *)iconForFileType:(NSString *)fileType","- (BOOL)setIcon:(NSImage *)image forFile:(NSString *)fullPath options:(NSWorkspaceIconCreationOptions)options","- (BOOL)getFileSystemInfoForPath:(NSString *)fullPath isRemovable:(BOOL *)removableFlag isWritable:(BOOL *)writableFlag isUnmountable:(BOOL *)unmountableFlag description:(NSString **)description type:(NSString **)fileSystemType","- (BOOL)performFileOperation:(NSString *)operation source:(NSString *)source destination:(NSString *)destination files:(NSArray *)files tag:(NSInteger *)tag","- (BOOL)unmountAndEjectDeviceAtPath:(NSString *)path","- (NSInteger)extendPowerOffBy:(NSInteger)requested","- (void)hideOtherApplications","- (NSString *)absolutePathForAppBundleWithIdentifier:(NSString *)bundleIdentifier","- (BOOL)launchAppWithBundleIdentifier:(NSString *)bundleIdentifier options:(NSWorkspaceLaunchOptions)options additionalEventParamDescriptor:(NSAppleEventDescriptor *)descriptor launchIdentifier:(NSNumber **)identifier","- (BOOL)openURLs:(NSArray *)urls withAppBundleIdentifier:(NSString *)bundleIdentifier options:(NSWorkspaceLaunchOptions)options additionalEventParamDescriptor:(NSAppleEventDescriptor *)descriptor launchIdentifiers:(NSArray **)identifiers","- (NSDictionary *)activeApplication","- (NSArray *)mountedLocalVolumePaths","- (NSArray *)mountedRemovableMedia","+ (void)pluginDidLoad:(NSBundle *)bundle","- (id)initWithDefinition:(NSDictionary *)dict fromArchive:(BOOL)archived","- (void)stop","- (void)reset","- (void)writeToDictionary:(NSMutableDictionary *)dictionary","- (void)opened","- (void)activated","- (void)updateParameters","- (void)parametersUpdated","- (BOOL)isStopped","- (OSAScript *)script","- (void)setScript:(OSAScript *)newScript","- (id)initWithDefinition:(NSDictionary *)dict fromArchive:(BOOL)archived","- (void)awakeFromBundle","- (BOOL)hasView","- (NSView *)view","- (NSBundle *)bundle","- (NSMutableDictionary *)parameters","- (void)setParameters:(NSMutableDictionary *)newParameters","- (BOOL) remapLineEndings","- (NSString *) inputFieldSeparator","- (NSString *) outputFieldSeparator","+ (id)runWorkflowAtURL:(NSURL *)fileURL withInput:(id)input error:(NSError **)error","- (id)initWithContentsOfURL:(NSURL *)fileURL error:(NSError **)outError","- (BOOL)writeToURL:(NSURL *)fileURL error:(NSError **)outError","- (BOOL)setValue:(id)value forVariableWithName:(NSString *)variableName","- (id)valueForVariableWithName:(NSString *)variableName","- (void)addAction:(AMAction *)action","- (void)removeAction:(AMAction *)action","- (void)insertAction:(AMAction *)action atIndex:(NSUInteger)index","- (void)moveActionAtIndex:(NSUInteger)startIndex toIndex:(NSUInteger)endIndex","- (AMWorkflow *)workflow","- (void)setWorkflow:(AMWorkflow *)workflow","- (AMWorkflowView *)workflowView","- (void)setWorkflowView:(AMWorkflowView *)view","- (id)delegate","- (void)setDelegate:(id)delegate","- (BOOL)canRun","- (BOOL)isRunning","- (IBAction)run:(id)sender","- (IBAction)stop:(id)sender","- (BOOL)isPaused","- (IBAction)pause:(id)sender","- (IBAction)step:(id)sender","- (IBAction)reset:(id)sender","- (void)workflowControllerWillRun:(AMWorkflowController *)controller","- (void)workflowControllerWillStop:(AMWorkflowController *)controller","- (void)workflowControllerDidRun:(AMWorkflowController *)controller","- (void)workflowControllerDidStop:(AMWorkflowController *)controller","- (void)workflowController:(AMWorkflowController *)controller willRunAction:(AMAction *)action","- (void)workflowController:(AMWorkflowController *)controller didRunAction:(AMAction *)action","- (void)workflowController:(AMWorkflowController *)controller didError:(NSError *)error","- (BOOL)isEditable","- (void)setEditable:(BOOL)flag","+ (id)assetWithURL:(NSURL *)URL","- (void)cancelLoading","- (AVAssetTrack *)trackWithTrackID:(CMPersistentTrackID)trackID","- (NSArray *)tracksWithMediaType:(NSString *)mediaType","- (NSArray *)tracksWithMediaCharacteristic:(NSString *)mediaCharacteristic","- (NSArray *)metadataForFormat:(NSString *)format","+ (AVURLAsset *)URLAssetWithURL:(NSURL *)URL options:(NSDictionary *)options","- (id)initWithURL:(NSURL *)URL options:(NSDictionary *)options","- (AVAssetTrack *)compatibleTrackForCompositionTrack:(AVCompositionTrack *)compositionTrack","+ (NSArray *)allExportPresets","+ (NSArray *)exportPresetsCompatibleWithAsset:(AVAsset *)asset","- (id)initWithAsset:(AVAsset *)asset presetName:(NSString *)presetName","- (void)exportAsynchronouslyWithCompletionHandler:(void (^)(void))handler","- (void)cancelExport","+ (AVAssetImageGenerator *)assetImageGeneratorWithAsset:(AVAsset *)asset","- (id)initWithAsset:(AVAsset *)asset","- (CGImageRef)copyCGImageAtTime:(CMTime)requestedTime actualTime:(CMTime *)actualTime error:(NSError **)outError","- (void)generateCGImagesAsynchronouslyForTimes:(NSArray *)requestedTimes completionHandler:(AVAssetImageGeneratorCompletionHandler)handler","- (void)cancelAllCGImageGeneration","+ (AVAssetReader *)assetReaderWithAsset:(AVAsset *)asset error:(NSError **)outError","- (id)initWithAsset:(AVAsset *)asset error:(NSError **)outError","- (BOOL)canAddOutput:(AVAssetReaderOutput *)output","- (void)addOutput:(AVAssetReaderOutput *)output","- (BOOL)startReading","- (void)cancelReading","- (CMSampleBufferRef)copyNextSampleBuffer","+ (AVAssetReaderTrackOutput *)assetReaderTrackOutputWithTrack:(AVAssetTrack *)track outputSettings:(NSDictionary *)outputSettings","- (id)initWithTrack:(AVAssetTrack *)track outputSettings:(NSDictionary *)outputSettings","+ (AVAssetReaderAudioMixOutput *)assetReaderAudioMixOutputWithAudioTracks:(NSArray *)audioTracks audioSettings:(NSDictionary *)audioSettings","- (id)initWithAudioTracks:(NSArray *)audioTracks audioSettings:(NSDictionary *)audioSettings","+ (AVAssetReaderVideoCompositionOutput *)assetReaderVideoCompositionOutputWithVideoTracks:(NSArray *)videoTracks videoSettings:(NSDictionary *)videoSettings","- (id)initWithVideoTracks:(NSArray *)videoTracks videoSettings:(NSDictionary *)videoSettings","- (BOOL)hasMediaCharacteristic:(NSString *)mediaCharacteristic","- (AVAssetTrackSegment *)segmentForTrackTime:(CMTime)trackTime","- (CMTime)samplePresentationTimeForTrackTime:(CMTime)trackTime","- (NSArray *)metadataForFormat:(NSString *)format","+ (AVAssetWriter *)assetWriterWithURL:(NSURL *)outputURL fileType:(NSString *)outputFileType error:(NSError **)outError","- (id)initWithURL:(NSURL *)outputURL fileType:(NSString *)outputFileType error:(NSError **)outError","- (BOOL)canApplyOutputSettings:(NSDictionary *)outputSettings forMediaType:(NSString *)mediaType","- (BOOL)canAddInput:(AVAssetWriterInput *)input","- (void)addInput:(AVAssetWriterInput *)input","- (BOOL)startWriting","- (void)startSessionAtSourceTime:(CMTime)startTime","- (void)endSessionAtSourceTime:(CMTime)endTime","- (void)cancelWriting","- (BOOL)finishWriting","+ (AVAssetWriterInput *)assetWriterInputWithMediaType:(NSString *)mediaType outputSettings:(NSDictionary *)outputSettings","- (id)initWithMediaType:(NSString *)mediaType outputSettings:(NSDictionary *)outputSettings","- (BOOL)appendSampleBuffer:(CMSampleBufferRef)sampleBuffer","- (void)markAsFinished","+ (AVAssetWriterInputPixelBufferAdaptor *)assetWriterInputPixelBufferAdaptorWithAssetWriterInput:(AVAssetWriterInput *)input sourcePixelBufferAttributes:(NSDictionary *)sourcePixelBufferAttributes","- (id)initWithAssetWriterInput:(AVAssetWriterInput *)input sourcePixelBufferAttributes:(NSDictionary *)sourcePixelBufferAttributes","- (BOOL)appendPixelBuffer:(CVPixelBufferRef)pixelBuffer withPresentationTime:(CMTime)presentationTime","+ (AVMutableAudioMix *)audioMix","- (BOOL)getVolumeRampForTime:(CMTime)time startVolume:(float *)startVolume endVolume:(float *)endVolume timeRange:(CMTimeRange *)timeRange","+ (AVMutableAudioMixInputParameters *)audioMixInputParametersWithTrack:(AVAssetTrack *)track","+ (AVMutableAudioMixInputParameters *)audioMixInputParameters","- (void)setVolumeRampFromStartVolume:(float)startVolume toEndVolume:(float)endVolume timeRange:(CMTimeRange)timeRange","- (void)setVolume:(float)volume atTime:(CMTime)time","- (id)initWithContentsOfURL:(NSURL *)url error:(NSError **)outError","- (id)initWithData:(NSData *)data error:(NSError **)outError","- (BOOL)prepareToPlay","- (BOOL)play","- (void)pause","- (void)stop","- (void)updateMeters","- (float)peakPowerForChannel:(NSUInteger)channelNumber","- (float)averagePowerForChannel:(NSUInteger)channelNumber","- (id)initWithURL:(NSURL *)url settings:(NSDictionary *)settings error:(NSError **)outError","- (BOOL)prepareToRecord","- (BOOL)record","- (BOOL)recordForDuration: (NSTimeInterval) duration","- (void)pause","- (void)stop","- (BOOL)deleteRecording","- (void)updateMeters","- (float)peakPowerForChannel:(NSUInteger)channelNumber","- (float)averagePowerForChannel:(NSUInteger)channelNumber","+ (NSArray *)devices","+ (NSArray *)devicesWithMediaType:(NSString *)mediaType","+ (AVCaptureDevice *)defaultDeviceWithMediaType:(NSString *)mediaType","+ (AVCaptureDevice *)deviceWithUniqueID:(NSString *)deviceUniqueID","- (BOOL)hasMediaType:(NSString *)mediaType","- (BOOL)lockForConfiguration:(NSError **)outError","- (void)unlockForConfiguration","- (BOOL)supportsAVCaptureSessionPreset:(NSString *)preset","- (BOOL)isFlashModeSupported:(AVCaptureFlashMode)flashMode","- (BOOL)isTorchModeSupported:(AVCaptureTorchMode)torchMode","- (BOOL)isFocusModeSupported:(AVCaptureFocusMode)focusMode","- (BOOL)isExposureModeSupported:(AVCaptureExposureMode)exposureMode","- (BOOL)isWhiteBalanceModeSupported:(AVCaptureWhiteBalanceMode)whiteBalanceMode","+ (id)deviceInputWithDevice:(AVCaptureDevice *)device error:(NSError **)outError","- (id)initWithDevice:(AVCaptureDevice *)device error:(NSError **)outError","- (id)initWithDisplayID:(CGDirectDisplayID)displayID","- (void)startRecordingToOutputFileURL:(NSURL*)outputFileURL recordingDelegate:(id<AVCaptureFileOutputRecordingDelegate>)delegate","- (void)stopRecording","+ (NSArray *) availableOutputFileTypes","- (void)startRecordingToOutputFileURL:(NSURL*)outputFileURL outputFileType:(NSString *)fileType recordingDelegate:(id<AVCaptureFileOutputRecordingDelegate>)delegate","+ (NSData *)jpegStillImageNSDataRepresentation:(CMSampleBufferRef)jpegSampleBuffer","- (BOOL)canSetSessionPreset:(NSString*)preset","- (BOOL)canAddInput:(AVCaptureInput *)input","- (void)addInput:(AVCaptureInput *)input","- (void)removeInput:(AVCaptureInput *)input","- (BOOL)canAddOutput:(AVCaptureOutput *)output","- (void)addOutput:(AVCaptureOutput *)output","- (void)removeOutput:(AVCaptureOutput *)output","- (void)beginConfiguration","- (void)commitConfiguration","- (void)startRunning","- (void)stopRunning","+ (id)layerWithSession:(AVCaptureSession *)session","- (id)initWithSession:(AVCaptureSession *)session","+ (AVMutableComposition *)composition","- (BOOL)insertTimeRange:(CMTimeRange)timeRange ofAsset:(AVAsset *)asset atTime:(CMTime)startTime error:(NSError **)outError","- (void)insertEmptyTimeRange:(CMTimeRange)timeRange","- (void)removeTimeRange:(CMTimeRange)timeRange","- (void)scaleTimeRange:(CMTimeRange)timeRange toDuration:(CMTime)duration","- (AVMutableCompositionTrack *)addMutableTrackWithMediaType:(NSString *)mediaType preferredTrackID:(CMPersistentTrackID)preferredTrackID","- (void)removeTrack:(AVCompositionTrack *)track","- (AVMutableCompositionTrack *)mutableTrackCompatibleWithTrack:(AVAssetTrack *)track","- (BOOL)insertTimeRange:(CMTimeRange)timeRange ofTrack:(AVAssetTrack *)track atTime:(CMTime)startTime error:(NSError **)error","- (void)insertEmptyTimeRange:(CMTimeRange)timeRange","- (void)removeTimeRange:(CMTimeRange)timeRange","- (void)scaleTimeRange:(CMTimeRange)timeRange toDuration:(CMTime)duration","- (BOOL)validateTrackSegments:(NSArray *)trackSegments error:(NSError **)error","+ (AVCompositionTrackSegment *)compositionTrackSegmentWithURL:(NSURL *)URL trackID:(CMPersistentTrackID)trackID sourceTimeRange:(CMTimeRange)sourceTimeRange targetTimeRange:(CMTimeRange)targetTimeRange","+ (AVCompositionTrackSegment *)compositionTrackSegmentWithTimeRange:(CMTimeRange)timeRange","- (id)initWithURL:(NSURL *)URL trackID:(CMPersistentTrackID)trackID sourceTimeRange:(CMTimeRange)sourceTimeRange targetTimeRange:(CMTimeRange)targetTimeRange","- (id)initWithTimeRange:(CMTimeRange)timeRange","+ (NSArray *)metadataItemsFromArray:(NSArray *)array withLocale:(NSLocale *)locale","+ (NSArray *)metadataItemsFromArray:(NSArray *)array withKey:(id)key keySpace:(NSString *)keySpace","+ (AVMutableMetadataItem *)metadataItem","+ (id)playerWithURL:(NSURL *)URL","+ (id)playerWithPlayerItem:(AVPlayerItem *)item","- (id)initWithURL:(NSURL *)URL","- (id)initWithPlayerItem:(AVPlayerItem *)item","- (CMTime)currentTime","- (void)seekToTime:(CMTime)time","- (void)seekToTime:(CMTime)time toleranceBefore:(CMTime)toleranceBefore toleranceAfter:(CMTime)toleranceAfter","- (void)seekToTime:(CMTime)time completionHandler: (void (^)(BOOL finished))completionHandler","- (void)seekToTime:(CMTime)time toleranceBefore:(CMTime)toleranceBefore toleranceAfter:(CMTime)toleranceAfter completionHandler: (void (^)(BOOL finished))completionHandler","- (void)play","- (void)pause","- (void)replaceCurrentItemWithPlayerItem:(AVPlayerItem *)item","- (void)removeTimeObserver:(id)observer","+ (id)queuePlayerWithItems:(NSArray *)items","- (id)initWithItems:(NSArray *)items","- (NSArray *)items","- (void)advanceToNextItem","- (BOOL)canInsertItem:(AVPlayerItem *)item afterItem:(AVPlayerItem *)afterItem","- (void)insertItem:(AVPlayerItem *)item afterItem:(AVPlayerItem *)afterItem","- (void)removeItem:(AVPlayerItem *)item","- (void)removeAllItems","+ (AVPlayerItem *)playerItemWithURL:(NSURL *)URL","+ (AVPlayerItem *)playerItemWithAsset:(AVAsset *)asset","- (id)initWithURL:(NSURL *)URL","- (id)initWithAsset:(AVAsset *)asset","- (CMTime)currentTime","- (void)seekToTime:(CMTime)time","- (void)seekToTime:(CMTime)time completionHandler: (void (^)(BOOL finished))completionHandler","- (void)seekToTime:(CMTime)time toleranceBefore:(CMTime)toleranceBefore toleranceAfter:(CMTime)toleranceAfter","- (void)seekToTime:(CMTime)time toleranceBefore:(CMTime)toleranceBefore toleranceAfter:(CMTime)toleranceAfter completionHandler: (void (^)(BOOL finished))completionHandler","- (void)cancelPendingSeeks","- (void)stepByCount:(NSInteger)stepCount","- (NSDate*)currentDate","- (BOOL)seekToDate:(NSDate *)date","- (NSData *)extendedLogData","- (NSStringEncoding)extendedLogDataStringEncoding","- (NSData *)extendedLogData","- (NSStringEncoding)extendedLogDataStringEncoding","+ (AVPlayerLayer *)playerLayerWithPlayer:(AVPlayer *)player","+ (AVSynchronizedLayer *)synchronizedLayerWithPlayerItem:(AVPlayerItem *)playerItem","- (id)initWithItems:(NSArray *)items timeRange:(CMTimeRange)timeRange","+ (AVMutableVideoComposition *)videoComposition","+ (AVMutableVideoCompositionInstruction *)videoCompositionInstruction","- (BOOL)getTransformRampForTime:(CMTime)time startTransform:(CGAffineTransform *)startTransform endTransform:(CGAffineTransform *)endTransform timeRange:(CMTimeRange *)timeRange","- (BOOL)getOpacityRampForTime:(CMTime)time startOpacity:(float *)startOpacity endOpacity:(float *)endOpacity timeRange:(CMTimeRange *)timeRange","+ (AVMutableVideoCompositionLayerInstruction *)videoCompositionLayerInstructionWithAssetTrack:(AVAssetTrack *)track","+ (AVMutableVideoCompositionLayerInstruction *)videoCompositionLayerInstruction","- (void)setTransformRampFromStartTransform:(CGAffineTransform)startTransform toEndTransform:(CGAffineTransform)endTransform timeRange:(CMTimeRange)timeRange","- (void)setTransform:(CGAffineTransform)transform atTime:(CMTime)time","- (void)setOpacityRampFromStartOpacity:(float)startOpacity toEndOpacity:(float)endOpacity timeRange:(CMTimeRange)timeRange","- (void)setOpacity:(float)opacity atTime:(CMTime)time","+ (AVVideoCompositionCoreAnimationTool *)videoCompositionCoreAnimationToolWithAdditionalLayer:(CALayer *)layer asTrackID:(CMPersistentTrackID)trackID","+ (AVVideoCompositionCoreAnimationTool *)videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:(CALayer *)videoLayer inLayer:(CALayer *)animationLayer","- (CMPersistentTrackID)unusedTrackID","+ (id)alarm","- (NSDate *)triggerDateRelativeTo:(NSDate *)date","+ (id)calendar","- (BOOL)hasAlarm","- (NSDate *)nextAlarmDate","- (void) addAlarm:(CalAlarm *)alarm","- (void) addAlarms:(NSArray *)alarms","- (void) removeAlarm:(CalAlarm *)alarm","- (void) removeAlarms:(NSArray *)alarms","+ (CalCalendarStore *)defaultCalendarStore","- (NSArray *)calendars","- (CalCalendar *)calendarWithUID:(NSString *)UID","- (BOOL)saveCalendar:(CalCalendar *)calendar error:(NSError **)error","- (BOOL)removeCalendar:(CalCalendar *)calendar error:(NSError **)error","- (NSArray *)eventsWithPredicate:(NSPredicate *)predicate","- (CalEvent *)eventWithUID:(NSString *)uid occurrence:(NSDate *)date","- (NSArray *)tasksWithPredicate:(NSPredicate *)predicate","- (CalTask *)taskWithUID:(NSString *)uid","- (BOOL)saveEvent:(CalEvent *)event span:(CalSpan)span error:(NSError **)error","- (BOOL)removeEvent:(CalEvent *)event span:(CalSpan)span error:(NSError **)error","- (BOOL)saveTask:(CalTask *)task error:(NSError **)error","- (BOOL)removeTask:(CalTask *)task error:(NSError **)error","+ (NSPredicate *)eventPredicateWithStartDate:(NSDate *)startDate endDate:(NSDate *)endDate calendars:(NSArray *)calendars","+ (NSPredicate *)eventPredicateWithStartDate:(NSDate *)startDate endDate:(NSDate *)endDate UID:(NSString *)UID calendars:(NSArray *)calendars","+ (NSPredicate *)taskPredicateWithCalendars:(NSArray *)calendars","+ (NSPredicate *)taskPredicateWithUncompletedTasks:(NSArray *)calendars","+ (NSPredicate *)taskPredicateWithUncompletedTasksDueBefore:(NSDate *)dueDate calendars:(NSArray *)calendars","+ (NSPredicate *)taskPredicateWithTasksCompletedSince:(NSDate *)completedSince calendars:(NSArray *)calendars","+ (id)event","+ (id)recurrenceEndWithEndDate:(NSDate *)endDate","+ (id)recurrenceEndWithOccurrenceCount:(NSUInteger)occurrenceCount","- (id)initDailyRecurrenceWithInterval:(NSUInteger)interval end:(CalRecurrenceEnd *)end","- (id)initWeeklyRecurrenceWithInterval:(NSUInteger)interval end:(CalRecurrenceEnd *)end","- (id)initWeeklyRecurrenceWithInterval:(NSUInteger)interval forDaysOfTheWeek:(NSArray *)days end:(CalRecurrenceEnd *)end","- (id)initMonthlyRecurrenceWithInterval:(NSUInteger)interval end:(CalRecurrenceEnd *)end","- (id)initMonthlyRecurrenceWithInterval:(NSUInteger)interval forDaysOfTheMonth:(NSArray *)monthDays end:(CalRecurrenceEnd *)end","- (id)initMonthlyRecurrenceWithInterval:(NSUInteger)interval forDayOfTheWeek:(NSUInteger)weekDay forWeekOfTheMonth:(NSInteger)monthWeek end:(CalRecurrenceEnd *)end","- (id)initYearlyRecurrenceWithInterval:(NSUInteger)interval end:(CalRecurrenceEnd *)end","- (id)initYearlyRecurrenceWithInterval:(NSUInteger)interval forMonthsOfTheYear:(NSArray *)months end:(CalRecurrenceEnd *)end","- (id)initYearlyRecurrenceWithInterval:(NSUInteger)interval forDayOfTheWeek:(NSUInteger)weekDay forWeekOfTheMonth:(NSInteger)monthWeek forMonthsOfTheYear:(NSArray *)months end:(CalRecurrenceEnd *)end","+ (id)task","+ (CBIdentity *)identityWithName:(NSString *)name authority:(CBIdentityAuthority *)authority","+ (CBIdentity *)identityWithUUIDString:(NSString *)uuid authority:(CBIdentityAuthority *)authority","+ (CBIdentity *)identityWithPersistentReference:(NSData *)data","+ (CBIdentity *)identityWithCSIdentity:(CSIdentityRef)csIdentity","- (CBIdentityAuthority *)authority","- (NSString *)UUIDString","- (NSString *)fullName","- (NSString *)posixName","- (NSArray *)aliases","- (NSString *)emailAddress","- (NSImage *)image","- (NSData *)persistentReference","- (BOOL)isHidden","- (BOOL)isMemberOfGroup:(CBGroupIdentity *)group","- (CSIdentityRef)CSIdentity","- (SecCertificateRef)certificate","- (BOOL)isEnabled","- (BOOL)authenticateWithPassword:(NSString *)password","- (NSArray *)members","+ (CBIdentityAuthority *)localIdentityAuthority","+ (CBIdentityAuthority *)managedIdentityAuthority","+ (CBIdentityAuthority *)defaultIdentityAuthority","+ (CBIdentityAuthority *)identityAuthorityWithCSIdentityAuthority:(CSIdentityAuthorityRef)CSIdentityAuthority","- (CSIdentityAuthorityRef)CSIdentityAuthority","- (NSString *)localizedName","- (void)setTitle:(NSString *)title","- (NSString *)title","- (void)setAllowsMultipleSelection:(BOOL)flag","- (BOOL)allowsMultipleSelection","- (NSInteger)runModal","- (void)identityPickerDidEnd:(CBIdentityPicker *)identityPicker returnCode:(NSInteger)returnCode contextInfo:(void *)contextInfo","- (void)runModalForWindow:(NSWindow *)window modalDelegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo","- (NSArray *)identities","- (id)initWithAudioUnit:(AudioUnit)au","- (id)initWithAudioUnit:(AudioUnit)inAudioUnit displayFlags:(UInt32)inFlags","- (AudioUnit)audioUnit","- (BOOL)showsExpertParameters","- (void)setShowsExpertParameters:(BOOL)inShowsExpertParameters","+ (id) AUPannerViewWithAudioUnit: (AudioUnit) au","- (AudioUnit) audioUnit","- (id)initWithPersistentStoreCoordinator:(NSPersistentStoreCoordinator *)coordinator configurationName:(NSString *)configurationName URL:(NSURL *)url options:(NSDictionary *)options","- (BOOL)load:(NSError **)error","- (BOOL)save:(NSError **)error","- (NSAtomicStoreCacheNode *)newCacheNodeForManagedObject:(NSManagedObject *)managedObject","- (void)updateCacheNode:(NSAtomicStoreCacheNode *)node fromManagedObject:(NSManagedObject *)managedObject","- (NSSet *)cacheNodes","- (void)addCacheNodes:(NSSet *)cacheNodes","- (void)willRemoveCacheNodes:(NSSet *)cacheNodes","- (NSAtomicStoreCacheNode *)cacheNodeForObjectID:(NSManagedObjectID *)objectID","- (NSManagedObjectID *)objectIDForEntity:(NSEntityDescription *)entity referenceObject:(id)data","- (id)newReferenceObjectForManagedObject:(NSManagedObject *)managedObject","- (id)referenceObjectForObjectID:(NSManagedObjectID *)objectID","- (id)initWithObjectID:(NSManagedObjectID *)moid","- (NSManagedObjectID*)objectID","- (NSMutableDictionary *)propertyCache","- (void)setPropertyCache:(NSMutableDictionary *)propertyCache","- (id)valueForKey:(NSString*)key","- (void)setValue:(id)value forKey:(NSString*)key","- (NSAttributeType)attributeType","- (void)setAttributeType:(NSAttributeType)type","- (NSString *)attributeValueClassName","- (id)defaultValue","- (void)setDefaultValue:(id)value","+ (NSEntityDescription *)entityForName:(NSString *)entityName inManagedObjectContext:(NSManagedObjectContext *)context","+ (id)insertNewObjectForEntityForName:(NSString *)entityName inManagedObjectContext:(NSManagedObjectContext *)context","- (NSManagedObjectModel *)managedObjectModel","- (NSString *)managedObjectClassName","- (void)setManagedObjectClassName:(NSString *)name","- (NSString *)name","- (void)setName:(NSString *)name","- (BOOL)isAbstract","- (void)setAbstract:(BOOL)flag","- (NSDictionary *)subentitiesByName","- (NSArray *)subentities","- (void)setSubentities:(NSArray *)array","- (NSEntityDescription *)superentity","- (NSDictionary *)propertiesByName","- (NSArray *)properties","- (void)setProperties:(NSArray *)properties","- (NSDictionary *)userInfo","- (void)setUserInfo:(NSDictionary *)dictionary","- (NSDictionary *)attributesByName","- (NSDictionary *)relationshipsByName","- (NSArray *)relationshipsWithDestinationEntity:(NSEntityDescription *)entity","- (NSString *)name","- (void)setName:(NSString *)name","- (NSEntityMappingType)mappingType","- (void)setMappingType:(NSEntityMappingType)type","- (NSString *)sourceEntityName","- (void)setSourceEntityName:(NSString *)name","- (NSData *)sourceEntityVersionHash","- (void)setSourceEntityVersionHash:(NSData *)vhash","- (NSString *)destinationEntityName","- (void)setDestinationEntityName:(NSString *)name","- (NSData *)destinationEntityVersionHash","- (void)setDestinationEntityVersionHash:(NSData *)vhash","- (NSArray *)attributeMappings","- (void)setAttributeMappings:(NSArray *)mappings","- (NSArray *)relationshipMappings","- (void)setRelationshipMappings:(NSArray *)mappings","- (NSExpression *)sourceExpression","- (void)setSourceExpression:(NSExpression *)source","- (NSDictionary *)userInfo","- (void)setUserInfo:(NSDictionary *)dict","- (NSString *)entityMigrationPolicyClassName","- (void)setEntityMigrationPolicyClassName:(NSString *)name","- (BOOL)beginEntityMapping:(NSEntityMapping *)mapping manager:(NSMigrationManager *)manager error:(NSError **)error","- (BOOL)createDestinationInstancesForSourceInstance:(NSManagedObject *)sInstance entityMapping:(NSEntityMapping *)mapping manager:(NSMigrationManager *)manager error:(NSError **)error","- (BOOL)endInstanceCreationForEntityMapping:(NSEntityMapping *)mapping manager:(NSMigrationManager *)manager error:(NSError **)error","- (BOOL)createRelationshipsForDestinationInstance:(NSManagedObject *)dInstance entityMapping:(NSEntityMapping *)mapping manager:(NSMigrationManager *)manager error:(NSError **)error","- (BOOL)endRelationshipCreationForEntityMapping:(NSEntityMapping *)mapping manager:(NSMigrationManager *)manager error:(NSError **)error","- (BOOL)performCustomValidationForEntityMapping:(NSEntityMapping *)mapping manager:(NSMigrationManager *)manager error:(NSError **)error","- (BOOL)endEntityMapping:(NSEntityMapping *)mapping manager:(NSMigrationManager *)manager error:(NSError **)error","- (NSExpression *)expression","- (void)setExpression:(NSExpression *)expression","- (NSAttributeType)expressionResultType","- (void)setExpressionResultType:(NSAttributeType)type","- (NSFetchRequest *)fetchRequest","- (void)setFetchRequest:(NSFetchRequest *)fetchRequest","- (id)init","- (NSEntityDescription *)entity","- (void)setEntity:(NSEntityDescription *)entity","- (NSPredicate *)predicate","- (void)setPredicate:(NSPredicate *)predicate","- (NSArray *)sortDescriptors","- (void)setSortDescriptors:(NSArray *)sortDescriptors","- (NSUInteger)fetchLimit","- (void)setFetchLimit:(NSUInteger)limit","- (NSArray *)affectedStores","- (void)setAffectedStores:(NSArray *)stores","+ (NSExpression*)expressionForFetch:(NSExpression*)fetch context:(NSExpression*)context countOnly:(BOOL)countFlag","- (NSExpression *)requestExpression","- (NSExpression *)contextExpression","- (BOOL)isCountOnlyRequest","-(BOOL)loadMetadata:(NSError **)error","- (id)executeRequest:(NSPersistentStoreRequest *)request withContext:(NSManagedObjectContext*)context error:(NSError **)error","- (NSIncrementalStoreNode *)newValuesForObjectWithID:(NSManagedObjectID*)objectID withContext:(NSManagedObjectContext*)context error:(NSError**)error","- (id)newValueForRelationship:(NSRelationshipDescription*)relationship forObjectWithID:(NSManagedObjectID*)objectID withContext:(NSManagedObjectContext *)context error:(NSError **)error","+ (id)identifierForNewStoreAtURL:(NSURL*)storeURL","- (NSArray*)obtainPermanentIDsForObjects:(NSArray*)array error:(NSError **)error","- (void)managedObjectContextDidRegisterObjectsWithIDs:(NSArray*)objectIDs","- (void)managedObjectContextDidUnregisterObjectsWithIDs:(NSArray*)objectIDs","- (NSManagedObjectID *)newObjectIDForEntity:(NSEntityDescription *)entity referenceObject:(id)data","- (id)referenceObjectForObjectID:(NSManagedObjectID *)objectID","- (NSManagedObjectID*)objectID","- (id)valueForPropertyDescription:(NSPropertyDescription*)prop","- (id)initWithEntity:(NSEntityDescription *)entity insertIntoManagedObjectContext:(NSManagedObjectContext *)context","- (NSManagedObjectContext *)managedObjectContext","- (NSEntityDescription *)entity","- (NSManagedObjectID *)objectID","- (BOOL)isInserted","- (BOOL)isUpdated","- (BOOL)isDeleted","- (BOOL)isFault","- (void)willAccessValueForKey:(NSString *)key","- (void)didAccessValueForKey:(NSString *)key","- (void)willChangeValueForKey:(NSString *)key","- (void)didChangeValueForKey:(NSString *)key","- (void)willChangeValueForKey:(NSString *)inKey withSetMutation:(NSKeyValueSetMutationKind)inMutationKind usingObjects:(NSSet *)inObjects","- (void)didChangeValueForKey:(NSString *)inKey withSetMutation:(NSKeyValueSetMutationKind)inMutationKind usingObjects:(NSSet *)inObjects","- (void)setObservationInfo:(id)inObservationInfo","- (id)observationInfo","- (void)awakeFromFetch","- (void)awakeFromInsert","- (void)willSave","- (void)didSave","- (void)didTurnIntoFault","- (id)valueForKey:(NSString *)key","- (void)setValue:(id)value forKey:(NSString *)key","- (id)primitiveValueForKey:(NSString *)key","- (void)setPrimitiveValue:(id)value forKey:(NSString *)key","- (NSDictionary *)committedValuesForKeys:(NSArray *)keys","- (NSDictionary *)changedValues","- (BOOL)validateValue:(id *)value forKey:(NSString *)key error:(NSError **)error","- (BOOL)validateForDelete:(NSError **)error","- (BOOL)validateForInsert:(NSError **)error","- (BOOL)validateForUpdate:(NSError **)error","- (void)setPersistentStoreCoordinator:(NSPersistentStoreCoordinator *)coordinator","- (NSPersistentStoreCoordinator *)persistentStoreCoordinator","- (void)setUndoManager:(NSUndoManager *)undoManager","- (NSUndoManager *)undoManager","- (BOOL)hasChanges","- (NSManagedObject *)objectRegisteredForID:(NSManagedObjectID *)objectID","- (NSManagedObject *)objectWithID:(NSManagedObjectID *)objectID","- (NSArray *)executeFetchRequest:(NSFetchRequest *)request error:(NSError **)error","- (void)insertObject:(NSManagedObject *)object","- (void)deleteObject:(NSManagedObject *)object","- (void)refreshObject:(NSManagedObject *)object mergeChanges:(BOOL)flag","- (void)detectConflictsForObject:(NSManagedObject *)object","- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context","- (void)processPendingChanges","- (void)assignObject:(id)object toPersistentStore:(NSPersistentStore *)store","- (NSSet *)insertedObjects","- (NSSet *)updatedObjects","- (NSSet *)deletedObjects","- (NSSet *)registeredObjects","- (void)undo","- (void)redo","- (void)reset","- (void)rollback","- (BOOL)save:(NSError **)error","- (void)lock","- (void)unlock","- (BOOL)tryLock","- (BOOL)propagatesDeletesAtEndOfEvent","- (void)setPropagatesDeletesAtEndOfEvent:(BOOL)flag","- (BOOL)retainsRegisteredObjects","- (void)setRetainsRegisteredObjects:(BOOL)flag","- (NSTimeInterval)stalenessInterval","- (void)setStalenessInterval:(NSTimeInterval)expiration","- (void)setMergePolicy:(id)mergePolicy","- (id)mergePolicy","- (NSEntityDescription *)entity","- (NSPersistentStore *)persistentStore","- (BOOL)isTemporaryID","- (NSURL *)URIRepresentation","+ (NSManagedObjectModel *)mergedModelFromBundles:(NSArray *)bundles","+ (NSManagedObjectModel *)modelByMergingModels:(NSArray *)models","- (id)init","- (id)initWithContentsOfURL:(NSURL *)url","- (NSDictionary *)entitiesByName","- (NSArray *)entities","- (void)setEntities:(NSArray *)entities","- (NSArray *)configurations","- (NSArray *)entitiesForConfiguration:(NSString *)configuration","- (void)setEntities:(NSArray *)entities forConfiguration:(NSString *)configuration","- (void)setFetchRequestTemplate:(NSFetchRequest *)fetchRequestTemplate forName:(NSString *)name","- (NSFetchRequest *)fetchRequestTemplateForName:(NSString *)name","- (NSFetchRequest *)fetchRequestFromTemplateWithName:(NSString *)name substitutionVariables:(NSDictionary *)variables","- (NSDictionary *)localizationDictionary","- (void)setLocalizationDictionary:(NSDictionary *)localizationDictionary","+ (NSMappingModel *)mappingModelFromBundles:(NSArray *)bundles forSourceModel:(NSManagedObjectModel *)sourceModel destinationModel:(NSManagedObjectModel *)destinationModel","- (id)initWithContentsOfURL:(NSURL *)url","- (NSArray *)entityMappings","- (void)setEntityMappings:(NSArray *)mappings","- (NSDictionary *)entityMappingsByName","- (id)initWithSource:(NSManagedObject*)srcObject newVersion:(NSUInteger)newvers oldVersion:(NSUInteger)oldvers cachedSnapshot:(NSDictionary*)cachesnap persistedSnapshot:(NSDictionary*)persnap","- (id)initWithMergeType:(NSMergePolicyType)ty","- (BOOL)resolveConflicts:(NSArray*)list error:(NSError **)error","- (id)initWithSourceModel:(NSManagedObjectModel *)sourceModel destinationModel:(NSManagedObjectModel *)destinationModel","- (BOOL)migrateStoreFromURL:(NSURL *)sourceURL type:(NSString *)sStoreType options:(NSDictionary *)sOptions withMappingModel:(NSMappingModel *)mappings toDestinationURL:(NSURL *)dURL destinationType:(NSString *)dStoreType destinationOptions:(NSDictionary *)dOptions error:(NSError **)error","- (void)reset","- (NSMappingModel *)mappingModel","- (NSManagedObjectModel *)sourceModel","- (NSManagedObjectModel *)destinationModel","- (NSManagedObjectContext *)sourceContext","- (NSManagedObjectContext *)destinationContext","- (NSEntityDescription *)sourceEntityForEntityMapping:(NSEntityMapping *)mEntity","- (NSEntityDescription *)destinationEntityForEntityMapping:(NSEntityMapping *)mEntity","- (void)associateSourceInstance:(NSManagedObject *)sourceInstance withDestinationInstance:(NSManagedObject *)destinationInstance forEntityMapping:(NSEntityMapping *)entityMapping","- (NSArray *)destinationInstancesForEntityMappingNamed:(NSString *)mappingName sourceInstances:(NSArray*)sourceInstances","- (NSArray *)sourceInstancesForEntityMappingNamed:(NSString *)mappingName destinationInstances:(NSArray *)destinationInstances","- (NSEntityMapping *)currentEntityMapping","- (float)migrationProgress","- (NSDictionary *)userInfo","- (void)setUserInfo:(NSDictionary *)dict","- (void)cancelMigrationWithError:(NSError *)error","+ (NSDictionary *)metadataForPersistentStoreWithURL:(NSURL *)url error:(NSError **)error","+ (BOOL)setMetadata:(NSDictionary *)metadata forPersistentStoreWithURL:(NSURL*)url error:(NSError **)error","- (id)initWithPersistentStoreCoordinator:(NSPersistentStoreCoordinator *)root configurationName:(NSString *)name URL:(NSURL *)url options:(NSDictionary *)options","-(BOOL)loadMetadata:(NSError **)error","- (NSPersistentStoreCoordinator*) persistentStoreCoordinator","- (NSString *)configurationName","- (NSDictionary *)options","- (NSURL *)URL","- (void)setURL:(NSURL *)url","- (NSString *)identifier","- (void)setIdentifier:(NSString *)identifier","- (NSString *)type","- (BOOL)isReadOnly","- (void)setReadOnly:(BOOL)flag","- (NSDictionary *)metadata","- (void)setMetadata:(NSDictionary *)storeMetadata","- (void)didAddToPersistentStoreCoordinator:(NSPersistentStoreCoordinator *)coordinator","- (void)willRemoveFromPersistentStoreCoordinator:(NSPersistentStoreCoordinator *)coordinator","- (void)setMetadata:(NSDictionary *)metadata forPersistentStore:(NSPersistentStore *)store","- (NSDictionary *)metadataForPersistentStore:(NSPersistentStore *)store","- (id)initWithManagedObjectModel:(NSManagedObjectModel *)model","- (NSManagedObjectModel *)managedObjectModel","- (NSArray *)persistentStores","- (NSPersistentStore *)persistentStoreForURL:(NSURL *)URL","- (NSURL *)URLForPersistentStore:(NSPersistentStore *)store","- (NSPersistentStore *)addPersistentStoreWithType:(NSString *)storeType configuration:(NSString *)configuration URL:(NSURL *)storeURL options:(NSDictionary *)options error:(NSError **)error","- (BOOL)removePersistentStore:(NSPersistentStore *)store error:(NSError **)error","- (NSPersistentStore *)migratePersistentStore:(NSPersistentStore *)store toURL:(NSURL *)URL options:(NSDictionary *)options withType:(NSString *)storeType error:(NSError **)error","- (NSManagedObjectID *)managedObjectIDForURIRepresentation:(NSURL *)url","- (void)lock","- (void)unlock","- (BOOL)tryLock","- (NSArray*)affectedStores","- (void)setAffectedStores:(NSArray*)stores","- (NSPersistentStoreRequestType)requestType","- (NSEntityDescription *)entity","- (NSString *)name","- (void)setName:(NSString *)name","- (BOOL)isOptional","- (void)setOptional:(BOOL)flag","- (BOOL)isTransient","- (void)setTransient:(BOOL)flag","- (NSArray *)validationPredicates","- (NSArray *)validationWarnings","- (void)setValidationPredicates:(NSArray *)validationPredicates withValidationWarnings:(NSArray *)validationWarnings","- (NSDictionary *)userInfo","- (void)setUserInfo:(NSDictionary *)dictionary","- (NSString *)name","- (void)setName:(NSString *)name","- (NSExpression *)valueExpression","- (void)setValueExpression:(NSExpression *)expression","- (NSDictionary *)userInfo","- (void)setUserInfo:(NSDictionary *)userInfo","- (NSEntityDescription *)destinationEntity","- (void)setDestinationEntity:(NSEntityDescription *)entity","- (NSRelationshipDescription *)inverseRelationship","- (void)setInverseRelationship:(NSRelationshipDescription *)relationship","- (NSUInteger)maxCount","- (void)setMaxCount:(NSUInteger)maxCount","- (NSUInteger)minCount","- (void)setMinCount:(NSUInteger)minCount","- (NSDeleteRule)deleteRule","- (void)setDeleteRule:(NSDeleteRule)rule","- (BOOL)isToMany","- (id)initWithInsertedObjects:(NSSet*)insertedObjects updatedObjects:(NSSet*)updatedObjects deletedObjects:(NSSet*)deletedObjects lockedObjects:(NSSet*)lockedObjects","- (NSSet *)insertedObjects","- (NSSet *)updatedObjects","- (NSSet *)deletedObjects","- (NSSet *)lockedObjects","- (NSString *)description","- (id)initWithLatitude:(CLLocationDegrees)latitude longitude:(CLLocationDegrees)longitude","- (id)initWithCoordinate:(CLLocationCoordinate2D)coordinate altitude:(CLLocationDistance)altitude horizontalAccuracy:(CLLocationAccuracy)hAccuracy verticalAccuracy:(CLLocationAccuracy)vAccuracy timestamp:(NSDate *)timestamp","- (NSString *)description","- (void)startUpdatingLocation","- (void)stopUpdatingLocation","- (BOOL)supportsSecurity:(CWSecurity)security","- (BOOL)supportsPHYMode:(CWPHYMode)phyMode","+ (DRBurn*) burnForDevice:(DRDevice*)device","- (id) initWithDevice:(DRDevice*)device","- (void) writeLayout:(id)layout","- (NSDictionary*) status","- (void) abort","- (NSDictionary*) properties","- (void) setProperties:(NSDictionary*)properties","- (DRDevice*) device","- (float) requestedBurnSpeed","- (void) setRequestedBurnSpeed:(float)speed","- (BOOL) appendable","- (void) setAppendable:(BOOL)appendable","- (BOOL) verifyDisc","- (void) setVerifyDisc:(BOOL)verify","- (NSString*) completionAction","- (void) setCompletionAction:(NSString*)action","+ (id) layoutForImageFile:(NSString*)path","+ (NSArray*) arrayOfCDTextBlocksFromPacks:(NSData*)packs","+ (DRCDTextBlock*) cdTextBlockWithLanguage:(NSString*)lang encoding:(NSStringEncoding)enc","- (id) initWithLanguage:(NSString*)lang encoding:(NSStringEncoding)enc","- (NSDictionary*) properties","- (void) setProperties:(NSDictionary*)properties","- (NSArray*) trackDictionaries","- (void) setTrackDictionaries:(NSArray*)tracks","- (id) objectForKey:(NSString*)key ofTrack:(NSUInteger)trackIndex","- (void) setObject:(id)value forKey:(NSString*)key ofTrack:(NSUInteger)trackIndex","- (NSUInteger) flatten","- (NSString*) language","- (NSStringEncoding) encoding","+ (NSArray*) devices","+ (DRDevice*) deviceForBSDName:(NSString*)bsdName","+ (DRDevice*) deviceForIORegistryEntryPath:(NSString*)path","- (BOOL) isValid","- (NSDictionary*) info","- (NSDictionary*) status","- (BOOL) openTray","- (BOOL) closeTray","- (BOOL) ejectMedia","- (BOOL) acquireExclusiveAccess","- (void) releaseExclusiveAccess","- (void) acquireMediaReservation","- (void) releaseMediaReservation","- (BOOL) isEqualToDevice:(DRDevice*) otherDevice","- (BOOL) writesCD","- (BOOL) writesDVD","- (NSString*) displayName","- (NSString*) ioRegistryEntryPath","- (BOOL) mediaIsPresent","- (BOOL) mediaIsTransitioning","- (BOOL) mediaIsBusy","- (NSString*) mediaType","- (BOOL) mediaIsBlank","- (BOOL) mediaIsAppendable","- (BOOL) mediaIsOverwritable","- (BOOL) mediaIsErasable","- (BOOL) mediaIsReserved","- (DRMSF*) mediaSpaceOverwritable","- (DRMSF*) mediaSpaceUsed","- (DRMSF*) mediaSpaceFree","- (BOOL) trayIsOpen","- (NSString*) bsdName","+ (DRErase*) eraseForDevice:(DRDevice*)device","- (id) initWithDevice:(DRDevice*)device","- (void) start","- (NSDictionary*) status","- (NSDictionary*) properties","- (void) setProperties:(NSDictionary*)properties","- (DRDevice*) device","- (NSString*) eraseType","- (void) setEraseType:(NSString*)type","+ (DRFile*) fileWithPath:(NSString*)path","- (id) initWithPath:(NSString*)path","+ (DRFile*) virtualFileWithName:(NSString*)name data:(NSData*)data","+ (DRFile*) virtualFileWithName:(NSString*)name dataProducer:(id)producer","- (id) initWithName:(NSString*)name data:(NSData*)data","- (id) initWithName:(NSString*)name dataProducer:(id)producer","+ (DRFile*) hardLinkPointingTo:(DRFile*)original inFilesystem:(NSString*)filesystem","+ (DRFile*) symLinkPointingTo:(DRFSObject*)original inFilesystem:(NSString*)filesystem","+ (DRFile*) finderAliasPointingTo:(DRFSObject*)original inFilesystem:(NSString*)filesystem","- (id) initWithLinkType:(NSString*)linkType pointingTo:(DRFSObject*)original inFilesystem:(NSString*)filesystem","+ (DRFolder*) folderWithPath:(NSString*)path","- (id) initWithPath:(NSString*)path","+ (DRFolder*) virtualFolderWithName:(NSString*)name","- (id) initWithName:(NSString*)name","- (void) makeVirtual","- (void) addChild:(DRFSObject*)child","- (void) removeChild:(DRFSObject*)child","- (NSUInteger) count","- (NSArray*) children","- (BOOL) isVirtual","- (NSString*) sourcePath","- (DRFolder*) parent","- (NSString*) baseName","- (void) setBaseName:(NSString*)baseName","- (NSString*) specificNameForFilesystem:(NSString*)filesystem","- (NSDictionary*) specificNames","- (void) setSpecificName:(NSString*)name forFilesystem:(NSString*)filesystem","- (void) setSpecificNames:(NSDictionary*)specificNames","- (NSString*)mangledNameForFilesystem:(NSString*)filesystem","- (NSDictionary*) mangledNames","- (id) propertyForKey:(NSString*)key inFilesystem:(NSString*)filesystem mergeWithOtherFilesystems:(BOOL)merge","- (NSDictionary*) propertiesForFilesystem:(NSString*)filesystem mergeWithOtherFilesystems:(BOOL)merge","- (void) setProperty:(id)property forKey:(NSString*)key inFilesystem:(NSString*)filesystem","- (void) setProperties:(NSDictionary*)properties inFilesystem:(NSString*)filesystem","- (DRFilesystemInclusionMask) explicitFilesystemMask","- (void) setExplicitFilesystemMask:(DRFilesystemInclusionMask)mask","- (DRFilesystemInclusionMask) effectiveFilesystemMask","+ (DRMSF*) msf","+ (DRMSF*) msfWithFrames:(UInt32)frames","+ (DRMSF*) msfWithString:(NSString*)string","- (id) initWithFrames:(UInt32)frames","- (id) initWithString:(NSString*)string","- (UInt32) minutes","- (UInt32) seconds","- (UInt32) frames","- (UInt32) sectors","- (DRMSF*) msfByAdding:(DRMSF*)msf","- (DRMSF*) msfBySubtracting:(DRMSF*)msf","- (NSString*) description","- (NSString*) descriptionWithFormat:(NSString*) format","- (BOOL) isEqualToMSF:(DRMSF*)otherDRMSF","- (id) initWithFormat:(NSString*)format","- (NSString*) format","- (void) setFormat:(NSString*)format","+ (DRNotificationCenter*) currentRunLoopCenter","- (void)addObserver:(id)observer selector:(SEL)aSelector name:(NSString *)notificationName object:(id)anObject","- (void)removeObserver:(id)observer name:(NSString *)aName object:(id)anObject","- (id) initWithProducer:(id)producer","- (NSDictionary*) properties","- (void) setProperties:(NSDictionary*)properties","- (float) testProductionSpeedForInterval:(NSTimeInterval)interval","- (DRMSF*) length","- (DRMSF*) preGap","- (void) setPreGap:(DRMSF*)preGap","+ (DRTrack*) trackForAudioOfLength:(DRMSF*)length producer:(id)producer","+ (DRTrack*) trackForAudioFile:(NSString*)path","+ (DRTrack*) trackForRootFolder:(DRFolder*)rootFolder","+ (DRBurnProgressPanel*) progressPanel","- (void) beginProgressSheetForBurn:(DRBurn*)burn layout:(id)layout modalForWindow:(NSWindow *)docWindow","- (void) beginProgressPanelForBurn:(DRBurn*)burn layout:(id)layout","- (void) setDescription:(NSString*)description","- (NSString*) description","- (void) setVerboseProgressStatus:(BOOL)verbose","- (BOOL) verboseProgressStatus","- (IBAction) stopBurn:(id)sender","- (void) burnProgressPanelWillBegin:(NSNotification*)aNotification","- (void) burnProgressPanelDidFinish:(NSNotification*)aNotification","- (BOOL) burnProgressPanel:(DRBurnProgressPanel*)theBurnPanel burnDidFinish:(DRBurn*)burn","+ (DRBurnSetupPanel*) setupPanel","- (void) setDefaultButtonTitle:(NSString*)title","- (void) setCanSelectTestBurn:(BOOL)flag","- (void) setCanSelectAppendableMedia:(BOOL)flag","- (DRBurn*) burnObject","- (IBAction) expand:(id) sender","- (IBAction) burnSpeed:(id) sender","- (IBAction) appendable:(id) sender","- (IBAction) completionAction:(id) sender","- (IBAction) testBurn:(id) sender","- (IBAction) verifyBurn:(id) sender","+ (DREraseProgressPanel*) progressPanel","- (void) beginProgressSheetForErase:(DRErase*)erase modalForWindow:(NSWindow *)docWindow","- (void) beginProgressPanelForErase:(DRErase*)erase","- (void) setDescription:(NSString*)description","- (NSString*) description","- (void) eraseProgressPanelWillBegin:(NSNotification*)aNotification","- (void) eraseProgressPanelDidFinish:(NSNotification*)aNotification","- (BOOL) eraseProgressPanel:(DREraseProgressPanel*)theErasePanel eraseDidFinish:(DRErase*)erase","+ (DREraseSetupPanel*) setupPanel","- (DRErase*) eraseObject","- (IBAction) eraseType:(id) sender","- (id) initWithNibName:(NSString*)nibName","- (NSInteger) runSetupPanel","- (void) beginSetupSheetForWindow:(NSWindow*)owner modalDelegate:(id)modalDelegate didEndSelector:(SEL)didEndSelector contextInfo:(void*)contextInfo","- (IBAction) ok:(id)sender","- (IBAction) cancel:(id)sender","- (IBAction) eject:(id)sender","- (IBAction) open:(id)sender","- (IBAction) close:(id)sender","- (void) deviceSelectionChanged:(DRDevice*)device","- (BOOL) mediaStateChanged:(NSDictionary*)status","- (void) setupForDisplay","- (BOOL) setupPanel:(DRSetupPanel*)aPanel deviceCouldBeTarget:(DRDevice*)device","- (DRDevice*) setupPanel:(DRSetupPanel*)aPanel determineBestDeviceOfA:(DRDevice*)deviceA orB:(DRDevice*)device","- (void) setupPanelDeviceSelectionChanged:(NSNotification*)aNotification","- (BOOL) setupPanelShouldHandleMediaReservations:(DRSetupPanel*)aPanel","- (BOOL) setupPanel:(DRSetupPanel*)aPanel deviceContainsSuitableMedia:(DRDevice*)device promptString:(NSString**)prompt","+ (NSExceptionHandler *)defaultExceptionHandler","- (void)setExceptionHandlingMask:(NSUInteger)aMask","- (NSUInteger)exceptionHandlingMask","- (void)setExceptionHangingMask:(NSUInteger)aMask","- (NSUInteger)exceptionHangingMask","- (void)setDelegate:(id)anObject","- (id)delegate","- (BOOL)exceptionHandler:(NSExceptionHandler *)sender shouldLogException:(NSException *)exception mask:(NSUInteger)aMask","- (BOOL)exceptionHandler:(NSExceptionHandler *)sender shouldHandleException:(NSException *)exception mask:(NSUInteger)aMask","+ (NSAffineTransform *)transform","- (id)initWithTransform:(NSAffineTransform *)transform","- (void)translateXBy:(CGFloat)deltaX yBy:(CGFloat)deltaY","- (void)rotateByDegrees:(CGFloat)angle","- (void)rotateByRadians:(CGFloat)angle","- (void)scaleBy:(CGFloat)scale","- (void)scaleXBy:(CGFloat)scaleX yBy:(CGFloat)scaleY","- (void)invert","- (void)appendTransform:(NSAffineTransform *)transform","- (void)prependTransform:(NSAffineTransform *)transform","- (NSPoint)transformPoint:(NSPoint)aPoint","- (NSSize)transformSize:(NSSize)aSize","- (NSAffineTransformStruct)transformStruct","- (void)setTransformStruct:(NSAffineTransformStruct)transformStruct","+ (NSAppleEventDescriptor *)nullDescriptor","+ (NSAppleEventDescriptor *)descriptorWithDescriptorType:(DescType)descriptorType bytes:(const void *)bytes length:(NSUInteger)byteCount","+ (NSAppleEventDescriptor *)descriptorWithDescriptorType:(DescType)descriptorType data:(NSData *)data","+ (NSAppleEventDescriptor *)descriptorWithBoolean:(Boolean)boolean","+ (NSAppleEventDescriptor *)descriptorWithEnumCode:(OSType)enumerator","+ (NSAppleEventDescriptor *)descriptorWithInt32:(SInt32)signedInt","+ (NSAppleEventDescriptor *)descriptorWithTypeCode:(OSType)typeCode","+ (NSAppleEventDescriptor *)descriptorWithString:(NSString *)string","+ (NSAppleEventDescriptor *)appleEventWithEventClass:(AEEventClass)eventClass eventID:(AEEventID)eventID targetDescriptor:(NSAppleEventDescriptor *)targetDescriptor returnID:(AEReturnID)returnID transactionID:(AETransactionID)transactionID","+ (NSAppleEventDescriptor *)listDescriptor","+ (NSAppleEventDescriptor *)recordDescriptor","- (id)initWithAEDescNoCopy:(const AEDesc *)aeDesc","- (id)initWithDescriptorType:(DescType)descriptorType bytes:(const void *)bytes length:(NSUInteger)byteCount","- (id)initWithDescriptorType:(DescType)descriptorType data:(NSData *)data","- (id)initWithEventClass:(AEEventClass)eventClass eventID:(AEEventID)eventID targetDescriptor:(NSAppleEventDescriptor *)targetDescriptor returnID:(AEReturnID)returnID transactionID:(AETransactionID)transactionID","- (id)initListDescriptor","- (id)initRecordDescriptor","- (const AEDesc *)aeDesc","- (DescType)descriptorType","- (NSData *)data","- (Boolean)booleanValue","- (OSType)enumCodeValue","- (SInt32)int32Value","- (OSType)typeCodeValue","- (NSString *)stringValue","- (AEEventClass)eventClass","- (AEEventID)eventID","- (AEReturnID)returnID","- (AETransactionID)transactionID","- (void)setParamDescriptor:(NSAppleEventDescriptor *)descriptor forKeyword:(AEKeyword)keyword","- (NSAppleEventDescriptor *)paramDescriptorForKeyword:(AEKeyword)keyword","- (void)removeParamDescriptorWithKeyword:(AEKeyword)keyword","- (void)setAttributeDescriptor:(NSAppleEventDescriptor *)descriptor forKeyword:(AEKeyword)keyword","- (NSAppleEventDescriptor *)attributeDescriptorForKeyword:(AEKeyword)keyword","- (NSInteger)numberOfItems","- (void)insertDescriptor:(NSAppleEventDescriptor *)descriptor atIndex:(NSInteger)index","- (NSAppleEventDescriptor *)descriptorAtIndex:(NSInteger)index","- (void)removeDescriptorAtIndex:(NSInteger)index","- (void)setDescriptor:(NSAppleEventDescriptor *)descriptor forKeyword:(AEKeyword)keyword","- (NSAppleEventDescriptor *)descriptorForKeyword:(AEKeyword)keyword","- (void)removeDescriptorWithKeyword:(AEKeyword)keyword","- (AEKeyword)keywordForDescriptorAtIndex:(NSInteger)index","- (NSAppleEventDescriptor *)coerceToDescriptorType:(DescType)descriptorType","+ (NSAppleEventManager *)sharedAppleEventManager","- (void)setEventHandler:(id)handler andSelector:(SEL)handleEventSelector forEventClass:(AEEventClass)eventClass andEventID:(AEEventID)eventID","- (void)removeEventHandlerForEventClass:(AEEventClass)eventClass andEventID:(AEEventID)eventID","- (OSErr)dispatchRawAppleEvent:(const AppleEvent *)theAppleEvent withRawReply:(AppleEvent *)theReply handlerRefCon:(SRefCon)handlerRefCon","- (NSAppleEventDescriptor *)currentAppleEvent","- (NSAppleEventDescriptor *)currentReplyAppleEvent","- (NSAppleEventManagerSuspensionID)suspendCurrentAppleEvent","- (NSAppleEventDescriptor *)appleEventForSuspensionID:(NSAppleEventManagerSuspensionID)suspensionID","- (NSAppleEventDescriptor *)replyAppleEventForSuspensionID:(NSAppleEventManagerSuspensionID)suspensionID","- (void)setCurrentAppleEventAndReplyEventWithSuspensionID:(NSAppleEventManagerSuspensionID)suspensionID","- (void)resumeWithSuspensionID:(NSAppleEventManagerSuspensionID)suspensionID","- (id)initWithContentsOfURL:(NSURL *)url error:(NSDictionary **)errorInfo","- (id)initWithSource:(NSString *)source","- (NSString *)source","- (BOOL)isCompiled","- (BOOL)compileAndReturnError:(NSDictionary **)errorInfo","- (NSAppleEventDescriptor *)executeAndReturnError:(NSDictionary **)errorInfo","- (NSAppleEventDescriptor *)executeAppleEvent:(NSAppleEventDescriptor *)event error:(NSDictionary **)errorInfo","- (id)initForWritingWithMutableData:(NSMutableData *)mdata","- (NSMutableData *)archiverData","- (void)encodeRootObject:(id)rootObject","- (void)encodeConditionalObject:(id)object","+ (NSData *)archivedDataWithRootObject:(id)rootObject","+ (BOOL)archiveRootObject:(id)rootObject toFile:(NSString *)path","- (void)encodeClassName:(NSString *)trueName intoClassName:(NSString *)inArchiveName","- (NSString *)classNameEncodedForTrueClassName:(NSString *)trueName","- (void)replaceObject:(id)object withObject:(id)newObject","- (id)initForReadingWithData:(NSData *)data","- (BOOL)isAtEnd","- (unsigned)systemVersion","+ (id)unarchiveObjectWithData:(NSData *)data","+ (id)unarchiveObjectWithFile:(NSString *)path","+ (void)decodeClassName:(NSString *)inArchiveName asClassName:(NSString *)trueName","- (void)decodeClassName:(NSString *)inArchiveName asClassName:(NSString *)trueName","+ (NSString *)classNameDecodedForArchiveClassName:(NSString *)inArchiveName","- (NSString *)classNameDecodedForArchiveClassName:(NSString *)inArchiveName","- (void)replaceObject:(id)object withObject:(id)newObject","- (Class)classForArchiver","- (id)replacementObjectForArchiver:(NSArchiver *)archiver","- (NSUInteger)count","- (id)objectAtIndex:(NSUInteger)index","- (NSArray *)arrayByAddingObject:(id)anObject","- (NSArray *)arrayByAddingObjectsFromArray:(NSArray *)otherArray","- (NSString *)componentsJoinedByString:(NSString *)separator","- (BOOL)containsObject:(id)anObject","- (NSString *)description","- (NSString *)descriptionWithLocale:(id)locale","- (NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level","- (id)firstObjectCommonWithArray:(NSArray *)otherArray","- (NSUInteger)indexOfObject:(id)anObject","- (NSUInteger)indexOfObject:(id)anObject inRange:(NSRange)range","- (NSUInteger)indexOfObjectIdenticalTo:(id)anObject","- (NSUInteger)indexOfObjectIdenticalTo:(id)anObject inRange:(NSRange)range","- (BOOL)isEqualToArray:(NSArray *)otherArray","- (id)lastObject","- (NSEnumerator *)objectEnumerator","- (NSEnumerator *)reverseObjectEnumerator","- (NSData *)sortedArrayHint","- (NSArray *)sortedArrayUsingSelector:(SEL)comparator","- (NSArray *)subarrayWithRange:(NSRange)range","- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile","- (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically","- (void)makeObjectsPerformSelector:(SEL)aSelector","- (void)makeObjectsPerformSelector:(SEL)aSelector withObject:(id)argument","- (NSArray *)objectsAtIndexes:(NSIndexSet *)indexes","+ (id)array","+ (id)arrayWithObject:(id)anObject","+ (id)arrayWithObjects:(const id [])objects count:(NSUInteger)cnt","+ (id)arrayWithArray:(NSArray *)array","- (id)initWithObjects:(const id [])objects count:(NSUInteger)cnt","- (id)initWithArray:(NSArray *)array","- (id)initWithArray:(NSArray *)array copyItems:(BOOL)flag","+ (id)arrayWithContentsOfFile:(NSString *)path","+ (id)arrayWithContentsOfURL:(NSURL *)url","- (id)initWithContentsOfFile:(NSString *)path","- (id)initWithContentsOfURL:(NSURL *)url","- (void)addObject:(id)anObject","- (void)insertObject:(id)anObject atIndex:(NSUInteger)index","- (void)removeLastObject","- (void)removeObjectAtIndex:(NSUInteger)index","- (void)replaceObjectAtIndex:(NSUInteger)index withObject:(id)anObject","- (void)addObjectsFromArray:(NSArray *)otherArray","- (void)exchangeObjectAtIndex:(NSUInteger)idx1 withObjectAtIndex:(NSUInteger)idx2","- (void)removeAllObjects","- (void)removeObject:(id)anObject inRange:(NSRange)range","- (void)removeObject:(id)anObject","- (void)removeObjectIdenticalTo:(id)anObject inRange:(NSRange)range","- (void)removeObjectIdenticalTo:(id)anObject","- (void)removeObjectsInArray:(NSArray *)otherArray","- (void)removeObjectsInRange:(NSRange)range","- (void)replaceObjectsInRange:(NSRange)range withObjectsFromArray:(NSArray *)otherArray range:(NSRange)otherRange","- (void)replaceObjectsInRange:(NSRange)range withObjectsFromArray:(NSArray *)otherArray","- (void)setArray:(NSArray *)otherArray","- (void)sortUsingSelector:(SEL)comparator","- (void)insertObjects:(NSArray *)objects atIndexes:(NSIndexSet *)indexes","- (void)removeObjectsAtIndexes:(NSIndexSet *)indexes","- (void)replaceObjectsAtIndexes:(NSIndexSet *)indexes withObjects:(NSArray *)objects","+ (id)arrayWithCapacity:(NSUInteger)numItems","- (id)initWithCapacity:(NSUInteger)numItems","- (NSString *)string","- (NSDictionary *)attributesAtIndex:(NSUInteger)location effectiveRange:(NSRangePointer)range","- (NSUInteger)length","- (id)attribute:(NSString *)attrName atIndex:(NSUInteger)location effectiveRange:(NSRangePointer)range","- (NSAttributedString *)attributedSubstringFromRange:(NSRange)range","- (NSDictionary *)attributesAtIndex:(NSUInteger)location longestEffectiveRange:(NSRangePointer)range inRange:(NSRange)rangeLimit","- (id)attribute:(NSString *)attrName atIndex:(NSUInteger)location longestEffectiveRange:(NSRangePointer)range inRange:(NSRange)rangeLimit","- (BOOL)isEqualToAttributedString:(NSAttributedString *)other","- (id)initWithString:(NSString *)str","- (id)initWithString:(NSString *)str attributes:(NSDictionary *)attrs","- (id)initWithAttributedString:(NSAttributedString *)attrStr","- (void)replaceCharactersInRange:(NSRange)range withString:(NSString *)str","- (void)setAttributes:(NSDictionary *)attrs range:(NSRange)range","- (NSMutableString *)mutableString","- (void)addAttribute:(NSString *)name value:(id)value range:(NSRange)range","- (void)addAttributes:(NSDictionary *)attrs range:(NSRange)range","- (void)removeAttribute:(NSString *)name range:(NSRange)range","- (void)replaceCharactersInRange:(NSRange)range withAttributedString:(NSAttributedString *)attrString","- (void)insertAttributedString:(NSAttributedString *)attrString atIndex:(NSUInteger)loc","- (void)appendAttributedString:(NSAttributedString *)attrString","- (void)deleteCharactersInRange:(NSRange)range","- (void)setAttributedString:(NSAttributedString *)attrString","- (void)beginEditing","- (void)endEditing","+ (void)addObject:(id)anObject","- (void)addObject:(id)anObject","- (void)drain","+ (NSBundle *)mainBundle","+ (NSBundle *)bundleWithPath:(NSString *)path","- (id)initWithPath:(NSString *)path","+ (NSBundle *)bundleForClass:(Class)aClass","+ (NSBundle *)bundleWithIdentifier:(NSString *)identifier","+ (NSArray *)allBundles","+ (NSArray *)allFrameworks","- (BOOL)load","- (BOOL)isLoaded","- (BOOL)unload","- (NSString *)bundlePath","- (NSString *)resourcePath","- (NSString *)executablePath","- (NSString *)pathForAuxiliaryExecutable:(NSString *)executableName","- (NSString *)privateFrameworksPath","- (NSString *)sharedFrameworksPath","- (NSString *)sharedSupportPath","- (NSString *)builtInPlugInsPath","+ (NSString *)pathForResource:(NSString *)name ofType:(NSString *)ext inDirectory:(NSString *)bundlePath","+ (NSArray *)pathsForResourcesOfType:(NSString *)ext inDirectory:(NSString *)bundlePath","- (NSString *)pathForResource:(NSString *)name ofType:(NSString *)ext","- (NSString *)pathForResource:(NSString *)name ofType:(NSString *)ext inDirectory:(NSString *)subpath","- (NSString *)pathForResource:(NSString *)name ofType:(NSString *)ext inDirectory:(NSString *)subpath forLocalization:(NSString *)localizationName","- (NSArray *)pathsForResourcesOfType:(NSString *)ext inDirectory:(NSString *)subpath","- (NSArray *)pathsForResourcesOfType:(NSString *)ext inDirectory:(NSString *)subpath forLocalization:(NSString *)localizationName","- (NSString *)localizedStringForKey:(NSString *)key value:(NSString *)value table:(NSString *)tableName","- (NSString *)bundleIdentifier","- (NSDictionary *)infoDictionary","- (NSDictionary *)localizedInfoDictionary","- (id)objectForInfoDictionaryKey:(NSString *)key","- (Class)classNamed:(NSString *)className","- (Class)principalClass","- (NSArray *)localizations","- (NSArray *)preferredLocalizations","- (NSString *)developmentLocalization","+ (NSArray *)preferredLocalizationsFromArray:(NSArray *)localizationsArray","+ (NSArray *)preferredLocalizationsFromArray:(NSArray *)localizationsArray forPreferences:(NSArray *)preferencesArray","- (void)setName:(NSString *)n","- (NSString *)name","- (void)setDelegate:(id <NSCacheDelegate>)d","- (id <NSCacheDelegate>)delegate","- (id)objectForKey:(id)key","- (void)setObject:(id)obj forKey:(id)key","- (void)setObject:(id)obj forKey:(id)key cost:(NSUInteger)g","- (void)removeObjectForKey:(id)key","- (void)removeAllObjects","- (void)setTotalCostLimit:(NSUInteger)lim","- (NSUInteger)totalCostLimit","- (void)setCountLimit:(NSUInteger)lim","- (NSUInteger)countLimit","- (BOOL)evictsObjectsWithDiscardedContent","- (void)setEvictsObjectsWithDiscardedContent:(BOOL)b","+ (id)currentCalendar","- (id)initWithCalendarIdentifier:(NSString *)ident","- (NSString *)calendarIdentifier","- (void)setLocale:(NSLocale *)locale","- (NSLocale *)locale","- (void)setTimeZone:(NSTimeZone *)tz","- (NSTimeZone *)timeZone","- (void)setFirstWeekday:(NSUInteger)weekday","- (NSUInteger)firstWeekday","- (void)setMinimumDaysInFirstWeek:(NSUInteger)mdw","- (NSUInteger)minimumDaysInFirstWeek","- (NSRange)minimumRangeOfUnit:(NSCalendarUnit)unit","- (NSRange)maximumRangeOfUnit:(NSCalendarUnit)unit","- (NSRange)rangeOfUnit:(NSCalendarUnit)smaller inUnit:(NSCalendarUnit)larger forDate:(NSDate *)date","- (NSUInteger)ordinalityOfUnit:(NSCalendarUnit)smaller inUnit:(NSCalendarUnit)larger forDate:(NSDate *)date","- (NSDate *)dateFromComponents:(NSDateComponents *)comps","- (NSDateComponents *)components:(NSUInteger)unitFlags fromDate:(NSDate *)date","- (NSDate *)dateByAddingComponents:(NSDateComponents *)comps toDate:(NSDate *)date options:(NSUInteger)opts","- (NSDateComponents *)components:(NSUInteger)unitFlags fromDate:(NSDate *)startingDate toDate:(NSDate *)resultDate options:(NSUInteger)opts","- (NSInteger)era","- (NSInteger)year","- (NSInteger)month","- (NSInteger)day","- (NSInteger)hour","- (NSInteger)minute","- (NSInteger)second","- (NSInteger)week","- (NSInteger)weekday","- (NSInteger)weekdayOrdinal","- (void)setEra:(NSInteger)v","- (void)setYear:(NSInteger)v","- (void)setMonth:(NSInteger)v","- (void)setDay:(NSInteger)v","- (void)setHour:(NSInteger)v","- (void)setMinute:(NSInteger)v","- (void)setSecond:(NSInteger)v","- (void)setWeek:(NSInteger)v","- (void)setWeekday:(NSInteger)v","- (void)setWeekdayOrdinal:(NSInteger)v","+ (id)calendarDate","+ (id)dateWithString:(NSString *)description calendarFormat:(NSString *)format locale:(id)locale","+ (id)dateWithString:(NSString *)description calendarFormat:(NSString *)format","+ (id)dateWithYear:(NSInteger)year month:(NSUInteger)month day:(NSUInteger)day hour:(NSUInteger)hour minute:(NSUInteger)minute second:(NSUInteger)second timeZone:(NSTimeZone *)aTimeZone","- (NSCalendarDate *)dateByAddingYears:(NSInteger)year months:(NSInteger)month days:(NSInteger)day hours:(NSInteger)hour minutes:(NSInteger)minute seconds:(NSInteger)second","- (NSInteger)dayOfCommonEra","- (NSInteger)dayOfMonth","- (NSInteger)dayOfWeek","- (NSInteger)dayOfYear","- (NSInteger)hourOfDay","- (NSInteger)minuteOfHour","- (NSInteger)monthOfYear","- (NSInteger)secondOfMinute","- (NSInteger)yearOfCommonEra","- (NSString *)calendarFormat","- (NSString *)descriptionWithCalendarFormat:(NSString *)format locale:(id)locale","- (NSString *)descriptionWithCalendarFormat:(NSString *)format","- (NSString *)descriptionWithLocale:(id)locale","- (NSTimeZone *)timeZone","- (id)initWithString:(NSString *)description calendarFormat:(NSString *)format locale:(id)locale","- (id)initWithString:(NSString *)description calendarFormat:(NSString *)format","- (id)initWithString:(NSString *)description","- (id)initWithYear:(NSInteger)year month:(NSUInteger)month day:(NSUInteger)day hour:(NSUInteger)hour minute:(NSUInteger)minute second:(NSUInteger)second timeZone:(NSTimeZone *)aTimeZone","- (void)setCalendarFormat:(NSString *)format","- (void)setTimeZone:(NSTimeZone *)aTimeZone","- (void)years:(NSInteger *)yp months:(NSInteger *)mop days:(NSInteger *)dp hours:(NSInteger *)hp minutes:(NSInteger *)mip seconds:(NSInteger *)sp sinceDate:(NSCalendarDate *)date","+ (id)dateWithNaturalLanguageString:(NSString *)string locale:(id)locale","+ (id)dateWithNaturalLanguageString:(NSString *)string","+ (id)dateWithString:(NSString *)aString","- (NSCalendarDate *)dateWithCalendarFormat:(NSString *)format timeZone:(NSTimeZone *)aTimeZone","- (NSString *)descriptionWithCalendarFormat:(NSString *)format timeZone:(NSTimeZone *)aTimeZone locale:(id)locale","- (id)initWithString:(NSString *)description","+ (id)controlCharacterSet","+ (id)whitespaceCharacterSet","+ (id)whitespaceAndNewlineCharacterSet","+ (id)decimalDigitCharacterSet","+ (id)letterCharacterSet","+ (id)lowercaseLetterCharacterSet","+ (id)uppercaseLetterCharacterSet","+ (id)nonBaseCharacterSet","+ (id)alphanumericCharacterSet","+ (id)decomposableCharacterSet","+ (id)illegalCharacterSet","+ (id)punctuationCharacterSet","+ (id)capitalizedLetterCharacterSet","+ (id)symbolCharacterSet","+ (id)characterSetWithRange:(NSRange)aRange","+ (id)characterSetWithCharactersInString:(NSString *)aString","+ (id)characterSetWithBitmapRepresentation:(NSData *)data","+ (id)characterSetWithContentsOfFile:(NSString *)fName","- (BOOL)characterIsMember:(unichar)aCharacter","- (NSData *)bitmapRepresentation","- (NSCharacterSet *)invertedSet","- (BOOL)longCharacterIsMember:(UTF32Char)theLongChar","- (BOOL)isSupersetOfSet:(NSCharacterSet *)theOtherSet","- (void)addCharactersInRange:(NSRange)aRange","- (void)removeCharactersInRange:(NSRange)aRange","- (void)addCharactersInString:(NSString *)aString","- (void)removeCharactersInString:(NSString *)aString","- (void)formUnionWithCharacterSet:(NSCharacterSet *)otherSet","- (void)formIntersectionWithCharacterSet:(NSCharacterSet *)otherSet","- (void)invert","+ (void)registerClassDescription:(NSClassDescription *)description forClass:(Class)aClass","+ (void)invalidateClassDescriptionCache","+ (NSClassDescription *)classDescriptionForClass:(Class)aClass","- (NSArray *)attributeKeys","- (NSArray *)toOneRelationshipKeys","- (NSArray *)toManyRelationshipKeys","- (NSString *)inverseForRelationshipKey:(NSString *)relationshipKey","- (NSClassDescription *)classDescription","- (NSArray *)attributeKeys","- (NSArray *)toOneRelationshipKeys","- (NSArray *)toManyRelationshipKeys","- (NSString *)inverseForRelationshipKey:(NSString *)relationshipKey","- (void)encodeValueOfObjCType:(const char *)type at:(const void *)addr","- (void)encodeDataObject:(NSData *)data","- (void)decodeValueOfObjCType:(const char *)type at:(void *)data","- (NSData *)decodeDataObject","- (NSInteger)versionForClassName:(NSString *)className","- (void)encodeObject:(id)object","- (void)encodeRootObject:(id)rootObject","- (void)encodeBycopyObject:(id)anObject","- (void)encodeByrefObject:(id)anObject","- (void)encodeConditionalObject:(id)object","- (void)encodeArrayOfObjCType:(const char *)type count:(NSUInteger)count at:(const void *)array","- (void)encodeBytes:(const void *)byteaddr length:(NSUInteger)length","- (id)decodeObject","- (void)decodeArrayOfObjCType:(const char *)itemType count:(NSUInteger)count at:(void *)array","- (void *)decodeBytesWithReturnedLength:(NSUInteger *)lengthp","- (void)encodePropertyList:(id)aPropertyList","- (id)decodePropertyList","- (unsigned)systemVersion","- (BOOL)allowsKeyedCoding","- (void)encodeObject:(id)objv forKey:(NSString *)key","- (void)encodeConditionalObject:(id)objv forKey:(NSString *)key","- (void)encodeBool:(BOOL)boolv forKey:(NSString *)key","- (void)encodeInt:(int)intv forKey:(NSString *)key","- (void)encodeFloat:(float)realv forKey:(NSString *)key","- (void)encodeDouble:(double)realv forKey:(NSString *)key","- (BOOL)containsValueForKey:(NSString *)key","- (id)decodeObjectForKey:(NSString *)key","- (BOOL)decodeBoolForKey:(NSString *)key","- (int)decodeIntForKey:(NSString *)key","- (float)decodeFloatForKey:(NSString *)key","- (double)decodeDoubleForKey:(NSString *)key","+ (NSPredicate *)predicateWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs modifier:(NSComparisonPredicateModifier)modifier type:(NSPredicateOperatorType)type options:(NSComparisonPredicateOptions)options","+ (NSPredicate *)predicateWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs customSelector:(SEL)selector","- (id)initWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs modifier:(NSComparisonPredicateModifier)modifier type:(NSPredicateOperatorType)type options:(NSComparisonPredicateOptions)options","- (id)initWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs customSelector:(SEL)selector","- (NSPredicateOperatorType)predicateOperatorType","- (NSComparisonPredicateModifier)comparisonPredicateModifier","- (NSExpression *)leftExpression","- (NSExpression *)rightExpression","- (SEL)customSelector","- (NSComparisonPredicateOptions)options","- (id)initWithType:(NSCompoundPredicateType)type subpredicates:(NSArray *)subpredicates","- (NSCompoundPredicateType)compoundPredicateType","- (NSArray *)subpredicates","+ (NSPredicate *)andPredicateWithSubpredicates:(NSArray *)subpredicates","+ (NSPredicate *)orPredicateWithSubpredicates:(NSArray *)subpredicates","+ (NSPredicate *)notPredicateWithSubpredicate:(NSPredicate *)predicate","- (NSDictionary *)statistics","+ (NSArray *)allConnections","+ (id)connectionWithRegisteredName:(NSString *)name host:(NSString *)hostName","+ (id)connectionWithRegisteredName:(NSString *)name host:(NSString *)hostName usingNameServer:(NSPortNameServer *)server","+ (NSDistantObject *)rootProxyForConnectionWithRegisteredName:(NSString *)name host:(NSString *)hostName","+ (NSDistantObject *)rootProxyForConnectionWithRegisteredName:(NSString *)name host:(NSString *)hostName usingNameServer:(NSPortNameServer *)server","- (void)setRequestTimeout:(NSTimeInterval)ti","- (NSTimeInterval)requestTimeout","- (void)setReplyTimeout:(NSTimeInterval)ti","- (NSTimeInterval)replyTimeout","- (void)setRootObject:(id)anObject","- (id)rootObject","- (NSDistantObject *)rootProxy","- (void)setDelegate:(id <NSConnectionDelegate>)anObject","- (id <NSConnectionDelegate>)delegate","- (void)setIndependentConversationQueueing:(BOOL)yorn","- (BOOL)independentConversationQueueing","- (BOOL)isValid","- (void)invalidate","- (void)addRequestMode:(NSString *)rmode","- (void)removeRequestMode:(NSString *)rmode","- (NSArray *)requestModes","- (BOOL)registerName:(NSString *) name","- (BOOL)registerName:(NSString *) name withNameServer:(NSPortNameServer *)server","+ (id)connectionWithReceivePort:(NSPort *)receivePort sendPort:(NSPort *)sendPort","+ (id)currentConversation","- (id)initWithReceivePort:(NSPort *)receivePort sendPort:(NSPort *)sendPort","- (NSPort *)sendPort","- (NSPort *)receivePort","- (void)enableMultipleThreads","- (BOOL)multipleThreadsEnabled","- (void)addRunLoop:(NSRunLoop *)runloop","- (void)removeRunLoop:(NSRunLoop *)runloop","- (void)runInNewThread","- (NSArray *)remoteObjects","- (NSArray *)localObjects","- (NSInvocation *)invocation","- (NSConnection *)connection","- (id)conversation","- (void)replyWithException:(NSException *)exception","- (NSUInteger)length","- (const void *)bytes","- (NSString *)description","- (void)getBytes:(void *)buffer length:(NSUInteger)length","- (void)getBytes:(void *)buffer range:(NSRange)range","- (BOOL)isEqualToData:(NSData *)other","- (NSData *)subdataWithRange:(NSRange)range","- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile","- (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically","- (BOOL)writeToFile:(NSString *)path options:(NSDataWritingOptions)writeOptionsMask error:(NSError **)errorPtr","- (BOOL)writeToURL:(NSURL *)url options:(NSDataWritingOptions)writeOptionsMask error:(NSError **)errorPtr","+ (id)data","+ (id)dataWithBytes:(const void *)bytes length:(NSUInteger)length","+ (id)dataWithBytesNoCopy:(void *)bytes length:(NSUInteger)length","+ (id)dataWithBytesNoCopy:(void *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)b","+ (id)dataWithContentsOfFile:(NSString *)path options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr","+ (id)dataWithContentsOfURL:(NSURL *)url options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr","+ (id)dataWithContentsOfFile:(NSString *)path","+ (id)dataWithContentsOfURL:(NSURL *)url","- (id)initWithBytes:(const void *)bytes length:(NSUInteger)length","- (id)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length","- (id)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)b","- (id)initWithContentsOfFile:(NSString *)path options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr","- (id)initWithContentsOfURL:(NSURL *)url options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr","- (id)initWithContentsOfFile:(NSString *)path","- (id)initWithContentsOfURL:(NSURL *)url","- (id)initWithData:(NSData *)data","+ (id)dataWithData:(NSData *)data","- (void)getBytes:(void *)buffer","+ (id)dataWithContentsOfMappedFile:(NSString *)path","- (id)initWithContentsOfMappedFile:(NSString *)path","- (void *)mutableBytes","- (void)setLength:(NSUInteger)length","- (void)appendBytes:(const void *)bytes length:(NSUInteger)length","- (void)appendData:(NSData *)other","- (void)increaseLengthBy:(NSUInteger)extraLength","- (void)replaceBytesInRange:(NSRange)range withBytes:(const void *)bytes","- (void)resetBytesInRange:(NSRange)range","- (void)setData:(NSData *)data","- (void)replaceBytesInRange:(NSRange)range withBytes:(const void *)replacementBytes length:(NSUInteger)replacementLength","+ (id)dataWithCapacity:(NSUInteger)aNumItems","+ (id)dataWithLength:(NSUInteger)length","- (id)initWithCapacity:(NSUInteger)capacity","- (id)initWithLength:(NSUInteger)length","- (NSTimeInterval)timeIntervalSinceReferenceDate","- (NSTimeInterval)timeIntervalSinceDate:(NSDate *)anotherDate","- (NSTimeInterval)timeIntervalSinceNow","- (NSTimeInterval)timeIntervalSince1970","- (NSDate *)earlierDate:(NSDate *)anotherDate","- (NSDate *)laterDate:(NSDate *)anotherDate","- (NSComparisonResult)compare:(NSDate *)other","- (BOOL)isEqualToDate:(NSDate *)otherDate","- (NSString *)description","- (NSString *)descriptionWithLocale:(id)locale","+ (NSTimeInterval)timeIntervalSinceReferenceDate","+ (id)date","+ (id)dateWithTimeIntervalSinceNow:(NSTimeInterval)secs","+ (id)dateWithTimeIntervalSinceReferenceDate:(NSTimeInterval)secs","+ (id)dateWithTimeIntervalSince1970:(NSTimeInterval)secs","+ (id)dateWithTimeInterval:(NSTimeInterval)ti sinceDate:(NSDate *)date","+ (id)distantFuture","+ (id)distantPast","- (id)init","- (id)initWithTimeIntervalSinceNow:(NSTimeInterval)secs","- (id)initWithTimeIntervalSinceReferenceDate:(NSTimeInterval)secsToBeAdded","- (id)initWithTimeIntervalSince1970:(NSTimeInterval)ti","- (id)initWithTimeInterval:(NSTimeInterval)secsToBeAdded sinceDate:(NSDate *)anotherDate","- (BOOL)getObjectValue:(out id *)obj forString:(NSString *)string range:(inout NSRange *)rangep error:(out NSError **)error","- (NSString *)stringFromDate:(NSDate *)date","- (NSDate *)dateFromString:(NSString *)string","- (NSString *)dateFormat","- (NSDateFormatterStyle)dateStyle","- (void)setDateStyle:(NSDateFormatterStyle)style","- (NSDateFormatterStyle)timeStyle","- (void)setTimeStyle:(NSDateFormatterStyle)style","- (NSLocale *)locale","- (void)setLocale:(NSLocale *)locale","- (BOOL)generatesCalendarDates","- (void)setGeneratesCalendarDates:(BOOL)b","- (NSDateFormatterBehavior)formatterBehavior","- (void)setFormatterBehavior:(NSDateFormatterBehavior)behavior","+ (NSDateFormatterBehavior)defaultFormatterBehavior","+ (void)setDefaultFormatterBehavior:(NSDateFormatterBehavior)behavior","- (void)setDateFormat:(NSString *)string","- (NSTimeZone *)timeZone","- (void)setTimeZone:(NSTimeZone *)tz","- (NSCalendar *)calendar","- (void)setCalendar:(NSCalendar *)calendar","- (BOOL)isLenient","- (void)setLenient:(BOOL)b","- (NSDate *)twoDigitStartDate","- (void)setTwoDigitStartDate:(NSDate *)date","- (NSDate *)defaultDate","- (void)setDefaultDate:(NSDate *)date","- (NSArray *)eraSymbols","- (void)setEraSymbols:(NSArray *)array","- (NSArray *)monthSymbols","- (void)setMonthSymbols:(NSArray *)array","- (NSArray *)shortMonthSymbols","- (void)setShortMonthSymbols:(NSArray *)array","- (NSArray *)weekdaySymbols","- (void)setWeekdaySymbols:(NSArray *)array","- (NSArray *)shortWeekdaySymbols","- (void)setShortWeekdaySymbols:(NSArray *)array","- (NSString *)AMSymbol","- (void)setAMSymbol:(NSString *)string","- (NSString *)PMSymbol","- (void)setPMSymbol:(NSString *)string","- (id)initWithDateFormat:(NSString *)format allowNaturalLanguage:(BOOL)flag","- (BOOL)allowsNaturalLanguage","+ (void)showPools","- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)flag","- (id)initWithDecimal:(NSDecimal)dcm","- (id)initWithString:(NSString *)numberValue","- (id)initWithString:(NSString *)numberValue locale:(id)locale","- (NSString *)descriptionWithLocale:(id)locale","- (NSDecimal)decimalValue","+ (NSDecimalNumber *)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)flag","+ (NSDecimalNumber *)decimalNumberWithDecimal:(NSDecimal)dcm","+ (NSDecimalNumber *)decimalNumberWithString:(NSString *)numberValue","+ (NSDecimalNumber *)decimalNumberWithString:(NSString *)numberValue locale:(id)locale","+ (NSDecimalNumber *)zero","+ (NSDecimalNumber *)one","+ (NSDecimalNumber *)minimumDecimalNumber","+ (NSDecimalNumber *)maximumDecimalNumber","+ (NSDecimalNumber *)notANumber","- (NSDecimalNumber *)decimalNumberByAdding:(NSDecimalNumber *)decimalNumber","- (NSDecimalNumber *)decimalNumberByAdding:(NSDecimalNumber *)decimalNumber withBehavior:(id <NSDecimalNumberBehaviors>)behavior","- (NSDecimalNumber *)decimalNumberBySubtracting:(NSDecimalNumber *)decimalNumber","- (NSDecimalNumber *)decimalNumberBySubtracting:(NSDecimalNumber *)decimalNumber withBehavior:(id <NSDecimalNumberBehaviors>)behavior","- (NSDecimalNumber *)decimalNumberByMultiplyingBy:(NSDecimalNumber *)decimalNumber","- (NSDecimalNumber *)decimalNumberByMultiplyingBy:(NSDecimalNumber *)decimalNumber withBehavior:(id <NSDecimalNumberBehaviors>)behavior","- (NSDecimalNumber *)decimalNumberByDividingBy:(NSDecimalNumber *)decimalNumber","- (NSDecimalNumber *)decimalNumberByDividingBy:(NSDecimalNumber *)decimalNumber withBehavior:(id <NSDecimalNumberBehaviors>)behavior","- (NSDecimalNumber *)decimalNumberByRaisingToPower:(NSUInteger)power","- (NSDecimalNumber *)decimalNumberByRaisingToPower:(NSUInteger)power withBehavior:(id <NSDecimalNumberBehaviors>)behavior","- (NSDecimalNumber *)decimalNumberByMultiplyingByPowerOf10:(short)power","- (NSDecimalNumber *)decimalNumberByMultiplyingByPowerOf10:(short)power withBehavior:(id <NSDecimalNumberBehaviors>)behavior","- (NSDecimalNumber *)decimalNumberByRoundingAccordingToBehavior:(id <NSDecimalNumberBehaviors>)behavior","- (NSComparisonResult)compare:(NSNumber *)decimalNumber","+ (void)setDefaultBehavior:(id <NSDecimalNumberBehaviors>)behavior","+ (id <NSDecimalNumberBehaviors>)defaultBehavior","- (const char *)objCType","- (double)doubleValue","+ (id)defaultDecimalNumberHandler","- (id)initWithRoundingMode:(NSRoundingMode)roundingMode scale:(short)scale raiseOnExactness:(BOOL)exact raiseOnOverflow:(BOOL)overflow raiseOnUnderflow:(BOOL)underflow raiseOnDivideByZero:(BOOL)divideByZero","+ (id)decimalNumberHandlerWithRoundingMode:(NSRoundingMode)roundingMode scale:(short)scale raiseOnExactness:(BOOL)exact raiseOnOverflow:(BOOL)overflow raiseOnUnderflow:(BOOL)underflow raiseOnDivideByZero:(BOOL)divideByZero","- (NSDecimal)decimalValue","- (BOOL)scanDecimal:(NSDecimal *)dcm","- (NSUInteger)count","- (id)objectForKey:(id)aKey","- (NSEnumerator *)keyEnumerator","- (NSArray *)allKeys","- (NSArray *)allKeysForObject:(id)anObject","- (NSArray *)allValues","- (NSString *)description","- (NSString *)descriptionInStringsFileFormat","- (NSString *)descriptionWithLocale:(id)locale","- (NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level","- (BOOL)isEqualToDictionary:(NSDictionary *)otherDictionary","- (NSEnumerator *)objectEnumerator","- (NSArray *)objectsForKeys:(NSArray *)keys notFoundMarker:(id)marker","- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile","- (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically","- (NSArray *)keysSortedByValueUsingSelector:(SEL)comparator","+ (id)dictionary","+ (id)dictionaryWithObject:(id)object forKey:(id)key","+ (id)dictionaryWithObjects:(const id [])objects forKeys:(const id [])keys count:(NSUInteger)cnt","+ (id)dictionaryWithDictionary:(NSDictionary *)dict","+ (id)dictionaryWithObjects:(NSArray *)objects forKeys:(NSArray *)keys","- (id)initWithObjects:(const id [])objects forKeys:(const id [])keys count:(NSUInteger)cnt","- (id)initWithDictionary:(NSDictionary *)otherDictionary","- (id)initWithDictionary:(NSDictionary *)otherDictionary copyItems:(BOOL)flag","- (id)initWithObjects:(NSArray *)objects forKeys:(NSArray *)keys","+ (id)dictionaryWithContentsOfFile:(NSString *)path","+ (id)dictionaryWithContentsOfURL:(NSURL *)url","- (id)initWithContentsOfFile:(NSString *)path","- (id)initWithContentsOfURL:(NSURL *)url","- (void)removeObjectForKey:(id)aKey","- (void)setObject:(id)anObject forKey:(id)aKey","- (void)addEntriesFromDictionary:(NSDictionary *)otherDictionary","- (void)removeAllObjects","- (void)removeObjectsForKeys:(NSArray *)keyArray","- (void)setDictionary:(NSDictionary *)otherDictionary","+ (id)dictionaryWithCapacity:(NSUInteger)numItems","- (id)initWithCapacity:(NSUInteger)numItems","+ (NSDistantObject *)proxyWithTarget:(id)target connection:(NSConnection *)connection","- (id)initWithTarget:(id)target connection:(NSConnection *)connection","+ (NSDistantObject *)proxyWithLocal:(id)target connection:(NSConnection *)connection","- (id)initWithLocal:(id)target connection:(NSConnection *)connection","- (void)setProtocolForProxy:(Protocol *)proto","- (NSConnection *)connectionForProxy","+ (NSDistributedLock *)lockWithPath:(NSString *)path","- (id)initWithPath:(NSString *)path","- (BOOL)tryLock","- (void)unlock","- (void)breakLock","- (NSDate *)lockDate","+ (NSDistributedNotificationCenter *)notificationCenterForType:(NSString *)notificationCenterType","+ (id)defaultCenter","- (void)addObserver:(id)observer selector:(SEL)selector name:(NSString *)name object:(NSString *)object suspensionBehavior:(NSNotificationSuspensionBehavior)suspensionBehavior","- (void)postNotificationName:(NSString *)name object:(NSString *)object userInfo:(NSDictionary *)userInfo deliverImmediately:(BOOL)deliverImmediately","- (void)postNotificationName:(NSString *)name object:(NSString *)object userInfo:(NSDictionary *)userInfo options:(NSUInteger)options","- (void)setSuspended:(BOOL)suspended","- (BOOL)suspended","- (void)addObserver:(id)observer selector:(SEL)aSelector name:(NSString *)aName object:(NSString *)anObject","- (void)postNotificationName:(NSString *)aName object:(NSString *)anObject","- (void)postNotificationName:(NSString *)aName object:(NSString *)anObject userInfo:(NSDictionary *)aUserInfo","- (void)removeObserver:(id)observer name:(NSString *)aName object:(NSString *)anObject","- (id)nextObject","- (NSArray *)allObjects","- (id)initWithDomain:(NSString *)domain code:(NSInteger)code userInfo:(NSDictionary *)dict","+ (id)errorWithDomain:(NSString *)domain code:(NSInteger)code userInfo:(NSDictionary *)dict","- (NSString *)domain","- (NSInteger)code","- (NSDictionary *)userInfo","- (NSString *)localizedDescription","- (NSString *)localizedFailureReason","- (NSString *)localizedRecoverySuggestion","- (NSArray *)localizedRecoveryOptions","- (id)recoveryAttempter","- (NSString *)helpAnchor","- (void)didPresentErrorWithRecovery:(BOOL)didRecover contextInfo:(void *)contextInfo","- (void)attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex delegate:(id)delegate didRecoverSelector:(SEL)didRecoverSelector contextInfo:(void *)contextInfo","- (BOOL)attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex","+ (NSException *)exceptionWithName:(NSString *)name reason:(NSString *)reason userInfo:(NSDictionary *)userInfo","- (id)initWithName:(NSString *)aName reason:(NSString *)aReason userInfo:(NSDictionary *)aUserInfo","- (NSString *)name","- (NSString *)reason","- (NSDictionary *)userInfo","- (void)raise","+ (NSAssertionHandler *)currentHandler","+ (NSExpression *)expressionForConstantValue:(id)obj","+ (NSExpression *)expressionForEvaluatedObject","+ (NSExpression *)expressionForVariable:(NSString *)string","+ (NSExpression *)expressionForKeyPath:(NSString *)keyPath","+ (NSExpression *)expressionForFunction:(NSString *)name arguments:(NSArray *)parameters","- (id)initWithExpressionType:(NSExpressionType)type","- (NSExpressionType)expressionType","- (id)constantValue","- (NSString *)keyPath","- (NSString *)function","- (NSString *)variable","- (NSExpression *)operand","- (NSArray *)arguments","- (id)expressionValueWithObject:(id)object context:(NSMutableDictionary *)context","+ (void)addFilePresenter:(id<NSFilePresenter>)filePresenter","+ (void)removeFilePresenter:(id<NSFilePresenter>)filePresenter","+ (NSArray *)filePresenters","- (id)initWithFilePresenter:(id<NSFilePresenter>)filePresenterOrNil","- (void)coordinateReadingItemAtURL:(NSURL *)url options:(NSFileCoordinatorReadingOptions)options error:(NSError **)outError byAccessor:(void (^)(NSURL *newURL))reader","- (void)coordinateWritingItemAtURL:(NSURL *)url options:(NSFileCoordinatorWritingOptions)options error:(NSError **)outError byAccessor:(void (^)(NSURL *newURL))writer","- (void)prepareForReadingItemsAtURLs:(NSArray *)readingURLs options:(NSFileCoordinatorReadingOptions)readingOptions writingItemsAtURLs:(NSArray *)writingURLs options:(NSFileCoordinatorWritingOptions)writingOptions error:(NSError **)outError byAccessor:(void (^)(void (^completionHandler)(void)))batchAccessor","- (void)itemAtURL:(NSURL *)oldURL didMoveToURL:(NSURL *)newURL","- (void)cancel","- (NSData *)availableData","- (NSData *)readDataToEndOfFile","- (NSData *)readDataOfLength:(NSUInteger)length","- (void)writeData:(NSData *)data","- (unsigned long long)offsetInFile","- (unsigned long long)seekToEndOfFile","- (void)seekToFileOffset:(unsigned long long)offset","- (void)truncateFileAtOffset:(unsigned long long)offset","- (void)synchronizeFile","- (void)closeFile","+ (id)fileHandleWithStandardInput","+ (id)fileHandleWithStandardOutput","+ (id)fileHandleWithStandardError","+ (id)fileHandleWithNullDevice","+ (id)fileHandleForReadingAtPath:(NSString *)path","+ (id)fileHandleForWritingAtPath:(NSString *)path","+ (id)fileHandleForUpdatingAtPath:(NSString *)path","- (void)readInBackgroundAndNotifyForModes:(NSArray *)modes","- (void)readInBackgroundAndNotify","- (void)readToEndOfFileInBackgroundAndNotifyForModes:(NSArray *)modes","- (void)readToEndOfFileInBackgroundAndNotify","- (void)acceptConnectionInBackgroundAndNotifyForModes:(NSArray *)modes","- (void)acceptConnectionInBackgroundAndNotify","- (void)waitForDataInBackgroundAndNotifyForModes:(NSArray *)modes","- (void)waitForDataInBackgroundAndNotify","- (id)initWithFileDescriptor:(int)fd closeOnDealloc:(BOOL)closeopt","- (id)initWithFileDescriptor:(int)fd","- (int)fileDescriptor","- (NSFileHandle *)fileHandleForReading","- (NSFileHandle *)fileHandleForWriting","- (id)init","+ (id)pipe","+ (NSFileManager *)defaultManager","- (NSString *)currentDirectoryPath","- (BOOL)changeCurrentDirectoryPath:(NSString *)path","- (BOOL)fileExistsAtPath:(NSString *)path","- (BOOL)fileExistsAtPath:(NSString *)path isDirectory:(BOOL *)isDirectory","- (BOOL)isReadableFileAtPath:(NSString *)path","- (BOOL)isWritableFileAtPath:(NSString *)path","- (BOOL)isExecutableFileAtPath:(NSString *)path","- (BOOL)isDeletableFileAtPath:(NSString *)path","- (BOOL)contentsEqualAtPath:(NSString *)path1 andPath:(NSString *)path2","- (NSString *)displayNameAtPath:(NSString *)path","- (NSArray *)componentsToDisplayForPath:(NSString *)path","- (NSDirectoryEnumerator *)enumeratorAtPath:(NSString *)path","- (NSArray *)subpathsAtPath:(NSString *)path","- (NSData *)contentsAtPath:(NSString *)path","- (BOOL)createFileAtPath:(NSString *)path contents:(NSData *)data attributes:(NSDictionary *)attr","- (NSString *)stringWithFileSystemRepresentation:(const char *)str length:(NSUInteger)len","- (NSDictionary *)fileAttributes","- (NSDictionary *)directoryAttributes","- (void)skipDescendents","- (unsigned long long)fileSize","- (NSDate *)fileModificationDate","- (NSString *)fileType","- (NSUInteger)filePosixPermissions","- (NSString *)fileOwnerAccountName","- (NSString *)fileGroupOwnerAccountName","- (NSInteger)fileSystemNumber","- (NSUInteger)fileSystemFileNumber","- (BOOL)fileExtensionHidden","- (OSType)fileHFSCreatorCode","- (OSType)fileHFSTypeCode","- (BOOL)fileIsImmutable","- (BOOL)fileIsAppendOnly","- (NSDate *)fileCreationDate","- (NSNumber *)fileOwnerAccountID","- (NSNumber *)fileGroupOwnerAccountID","+ (NSFileVersion *)currentVersionOfItemAtURL:(NSURL *)url","+ (NSArray *)otherVersionsOfItemAtURL:(NSURL *)url","+ (NSArray *)unresolvedConflictVersionsOfItemAtURL:(NSURL *)url","+ (NSFileVersion *)versionOfItemAtURL:(NSURL *)url forPersistentIdentifier:(id)persistentIdentifier","- (NSURL *)replaceItemAtURL:(NSURL *)url options:(NSFileVersionReplacingOptions)options error:(NSError **)error","- (BOOL)removeAndReturnError:(NSError **)outError","+ (BOOL)removeOtherVersionsOfItemAtURL:(NSURL *)url error:(NSError **)outError","- (id)initDirectoryWithFileWrappers:(NSDictionary *)childrenByPreferredName","- (id)initRegularFileWithContents:(NSData *)contents","- (id)initWithSerializedRepresentation:(NSData *)serializeRepresentation","- (BOOL)isDirectory","- (BOOL)isRegularFile","- (BOOL)isSymbolicLink","- (void)setPreferredFilename:(NSString *)fileName","- (NSString *)preferredFilename","- (void)setFilename:(NSString *)fileName","- (NSString *)filename","- (void)setFileAttributes:(NSDictionary *)fileAttributes","- (NSDictionary *)fileAttributes","- (NSData *)serializedRepresentation","- (NSString *)addFileWrapper:(NSFileWrapper *)child","- (NSString *)addRegularFileWithContents:(NSData *)data preferredFilename:(NSString *)fileName","- (void)removeFileWrapper:(NSFileWrapper *)child","- (NSDictionary *)fileWrappers","- (NSString *)keyForFileWrapper:(NSFileWrapper *)child","- (NSData *)regularFileContents","- (id)initWithPath:(NSString *)path","- (id)initSymbolicLinkWithDestination:(NSString *)path","- (BOOL)needsToBeUpdatedFromPath:(NSString *)path","- (BOOL)updateFromPath:(NSString *)path","- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)atomicFlag updateFilenames:(BOOL)updateFilenamesFlag","- (NSString *)addFileWithPath:(NSString *)path","- (NSString *)addSymbolicLinkWithDestination:(NSString *)path preferredFilename:(NSString *)filename","- (NSString *)symbolicLinkDestination","- (NSString *)stringForObjectValue:(id)obj","- (NSAttributedString *)attributedStringForObjectValue:(id)obj withDefaultAttributes:(NSDictionary *)attrs","- (NSString *)editingStringForObjectValue:(id)obj","- (BOOL)getObjectValue:(out id *)obj forString:(NSString *)string errorDescription:(out NSString **)error","- (BOOL)isPartialStringValid:(NSString *)partialString newEditingString:(NSString **)newString errorDescription:(NSString **)error","- (BOOL)isPartialStringValid:(NSString **)partialStringPtr proposedSelectedRange:(NSRangePointer)proposedSelRangePtr originalString:(NSString *)origString originalSelectedRange:(NSRange)origSelRange errorDescription:(NSString **)error","+ (id)defaultCollector","- (void)disable","- (void)enable","- (BOOL)isEnabled","- (void)collectIfNeeded","- (void)collectExhaustively","- (void)disableCollectorForPointer:(void *)ptr","- (void)enableCollectorForPointer:(void *)ptr","- (NSZone *)zone","+ (NSValue *)valueWithPoint:(NSPoint)point","+ (NSValue *)valueWithSize:(NSSize)size","+ (NSValue *)valueWithRect:(NSRect)rect","- (NSPoint)pointValue","- (NSSize)sizeValue","- (NSRect)rectValue","- (void)encodePoint:(NSPoint)point","- (NSPoint)decodePoint","- (void)encodeSize:(NSSize)size","- (NSSize)decodeSize","- (void)encodeRect:(NSRect)rect","- (NSRect)decodeRect","- (void)encodePoint:(NSPoint)point forKey:(NSString *)key","- (void)encodeSize:(NSSize)size forKey:(NSString *)key","- (void)encodeRect:(NSRect)rect forKey:(NSString *)key","- (NSPoint)decodePointForKey:(NSString *)key","- (NSSize)decodeSizeForKey:(NSString *)key","- (NSRect)decodeRectForKey:(NSString *)key","- (id)initWithOptions:(NSPointerFunctionsOptions)options capacity:(NSUInteger)initialCapacity","- (id)initWithPointerFunctions:(NSPointerFunctions *)functions capacity:(NSUInteger)initialCapacity","+ (id)hashTableWithOptions:(NSPointerFunctionsOptions)options","+ (id)hashTableWithWeakObjects","- (NSPointerFunctions *)pointerFunctions","- (NSUInteger)count","- (id)member:(id)object","- (NSEnumerator *)objectEnumerator","- (void)addObject:(id)object","- (void)removeObject:(id)object","- (void)removeAllObjects","- (NSArray *)allObjects","- (id)anyObject","- (BOOL)containsObject:(id)anObject","- (BOOL)intersectsHashTable:(NSHashTable *)other","- (BOOL)isEqualToHashTable:(NSHashTable *)other","- (BOOL)isSubsetOfHashTable:(NSHashTable *)other","- (void)intersectHashTable:(NSHashTable *)other","- (void)unionHashTable:(NSHashTable *)other","- (void)minusHashTable:(NSHashTable *)other","- (NSSet *)setRepresentation","+ (NSHost *)currentHost","+ (NSHost *)hostWithName:(NSString *)name","+ (NSHost *)hostWithAddress:(NSString *)address","- (BOOL)isEqualToHost:(NSHost *)aHost","- (NSString *)name","- (NSArray *)names","- (NSString *)address","- (NSArray *)addresses","- (id)initWithProperties:(NSDictionary *)properties","+ (id)cookieWithProperties:(NSDictionary *)properties","+ (NSDictionary *)requestHeaderFieldsWithCookies:(NSArray *)cookies","+ (NSArray *)cookiesWithResponseHeaderFields:(NSDictionary *)headerFields forURL:(NSURL *)URL","- (NSDictionary *)properties","- (NSUInteger)version","- (NSString *)name","- (NSString *)value","- (NSDate *)expiresDate","- (BOOL)isSessionOnly","- (NSString *)domain","- (NSString *)path","- (BOOL)isSecure","- (BOOL)isHTTPOnly","- (NSString *)comment","- (NSURL *)commentURL","- (NSArray *)portList","+ (NSHTTPCookieStorage *)sharedHTTPCookieStorage","- (NSArray *)cookies","- (void)setCookie:(NSHTTPCookie *)cookie","- (void)deleteCookie:(NSHTTPCookie *)cookie","- (NSArray *)cookiesForURL:(NSURL *)URL","- (void)setCookies:(NSArray *)cookies forURL:(NSURL *)URL mainDocumentURL:(NSURL *)mainDocumentURL","- (NSHTTPCookieAcceptPolicy)cookieAcceptPolicy","- (void)setCookieAcceptPolicy:(NSHTTPCookieAcceptPolicy)cookieAcceptPolicy","+ (id)indexPathWithIndex:(NSUInteger)index","+ (id)indexPathWithIndexes:(NSUInteger *)indexes length:(NSUInteger)length","- (id)initWithIndex:(NSUInteger)index","- (id)initWithIndexes:(NSUInteger *)indexes length:(NSUInteger)length","- (NSIndexPath *)indexPathByAddingIndex:(NSUInteger)index","- (NSIndexPath *)indexPathByRemovingLastIndex","- (NSUInteger)indexAtPosition:(NSUInteger)position","- (NSUInteger)length","- (void)getIndexes:(NSUInteger *)indexes","- (NSComparisonResult)compare:(NSIndexPath *)otherObject","+ (id)indexSet","+ (id)indexSetWithIndex:(NSUInteger)value","+ (id)indexSetWithIndexesInRange:(NSRange)range","- (id)init","- (id)initWithIndex:(NSUInteger)value","- (id)initWithIndexesInRange:(NSRange)range","- (id)initWithIndexSet:(NSIndexSet *)indexSet","- (BOOL)isEqualToIndexSet:(NSIndexSet *)indexSet","- (NSUInteger)count","- (NSUInteger)firstIndex","- (NSUInteger)lastIndex","- (NSUInteger)indexGreaterThanIndex:(NSUInteger)value","- (NSUInteger)indexLessThanIndex:(NSUInteger)value","- (NSUInteger)indexGreaterThanOrEqualToIndex:(NSUInteger)value","- (NSUInteger)indexLessThanOrEqualToIndex:(NSUInteger)value","- (NSUInteger)getIndexes:(NSUInteger *)indexBuffer maxCount:(NSUInteger)bufferSize inIndexRange:(NSRangePointer)range","- (BOOL)containsIndex:(NSUInteger)value","- (BOOL)containsIndexesInRange:(NSRange)range","- (BOOL)containsIndexes:(NSIndexSet *)indexSet","- (BOOL)intersectsIndexesInRange:(NSRange)range","- (void)addIndexes:(NSIndexSet *)indexSet","- (void)removeIndexes:(NSIndexSet *)indexSet","- (void)removeAllIndexes","- (void)addIndex:(NSUInteger)value","- (void)removeIndex:(NSUInteger)value","- (void)addIndexesInRange:(NSRange)range","- (void)removeIndexesInRange:(NSRange)range","- (void)shiftIndexesStartingAtIndex:(NSUInteger)index by:(NSInteger)delta","+ (NSInvocation *)invocationWithMethodSignature:(NSMethodSignature *)sig","- (NSMethodSignature *)methodSignature","- (void)retainArguments","- (BOOL)argumentsRetained","- (id)target","- (void)setTarget:(id)target","- (SEL)selector","- (void)setSelector:(SEL)selector","- (void)getReturnValue:(void *)retLoc","- (void)setReturnValue:(void *)retLoc","- (void)getArgument:(void *)argumentLocation atIndex:(NSInteger)idx","- (void)setArgument:(void *)argumentLocation atIndex:(NSInteger)idx","- (void)invoke","- (void)invokeWithTarget:(id)target","+ (BOOL)isValidJSONObject:(id)obj","+ (NSData *)dataWithJSONObject:(id)obj options:(NSJSONWritingOptions)opt error:(NSError **)error","+ (id)JSONObjectWithData:(NSData *)data options:(NSJSONReadingOptions)opt error:(NSError **)error","+ (NSInteger)writeJSONObject:(id)obj toStream:(NSOutputStream *)stream options:(NSJSONWritingOptions)opt error:(NSError **)error","+ (id)JSONObjectWithStream:(NSInputStream *)stream options:(NSJSONReadingOptions)opt error:(NSError **)error","+ (NSData *)archivedDataWithRootObject:(id)rootObject","+ (BOOL)archiveRootObject:(id)rootObject toFile:(NSString *)path","- (id)initForWritingWithMutableData:(NSMutableData *)data","- (void)setDelegate:(id <NSKeyedArchiverDelegate>)delegate","- (id <NSKeyedArchiverDelegate>)delegate","- (void)setOutputFormat:(NSPropertyListFormat)format","- (NSPropertyListFormat)outputFormat","- (void)finishEncoding","+ (void)setClassName:(NSString *)codedName forClass:(Class)cls","- (void)setClassName:(NSString *)codedName forClass:(Class)cls","+ (NSString *)classNameForClass:(Class)cls","- (NSString *)classNameForClass:(Class)cls","- (void)encodeObject:(id)objv forKey:(NSString *)key","- (void)encodeConditionalObject:(id)objv forKey:(NSString *)key","- (void)encodeBool:(BOOL)boolv forKey:(NSString *)key","- (void)encodeInt:(int)intv forKey:(NSString *)key","- (void)encodeFloat:(float)realv forKey:(NSString *)key","- (void)encodeDouble:(double)realv forKey:(NSString *)key","+ (id)unarchiveObjectWithData:(NSData *)data","+ (id)unarchiveObjectWithFile:(NSString *)path","- (id)initForReadingWithData:(NSData *)data","- (void)setDelegate:(id <NSKeyedUnarchiverDelegate>)delegate","- (id <NSKeyedUnarchiverDelegate>)delegate","- (void)finishDecoding","+ (void)setClass:(Class)cls forClassName:(NSString *)codedName","- (void)setClass:(Class)cls forClassName:(NSString *)codedName","+ (Class)classForClassName:(NSString *)codedName","- (Class)classForClassName:(NSString *)codedName","- (BOOL)containsValueForKey:(NSString *)key","- (id)decodeObjectForKey:(NSString *)key","- (BOOL)decodeBoolForKey:(NSString *)key","- (int)decodeIntForKey:(NSString *)key","- (float)decodeFloatForKey:(NSString *)key","- (double)decodeDoubleForKey:(NSString *)key","- (Class)classForKeyedArchiver","- (id)replacementObjectForKeyedArchiver:(NSKeyedArchiver *)archiver","+ (NSArray *)classFallbacksForKeyedArchiver","+ (Class)classForKeyedUnarchiver","+ (BOOL)accessInstanceVariablesDirectly","- (id)valueForKey:(NSString *)key","- (void)setValue:(id)value forKey:(NSString *)key","- (BOOL)validateValue:(inout id *)ioValue forKey:(NSString *)inKey error:(out NSError **)outError","- (NSMutableArray *)mutableArrayValueForKey:(NSString *)key","- (NSMutableSet *)mutableSetValueForKey:(NSString *)key","- (id)valueForKeyPath:(NSString *)keyPath","- (void)setValue:(id)value forKeyPath:(NSString *)keyPath","- (BOOL)validateValue:(inout id *)ioValue forKeyPath:(NSString *)inKeyPath error:(out NSError **)outError","- (NSMutableArray *)mutableArrayValueForKeyPath:(NSString *)keyPath","- (NSMutableSet *)mutableSetValueForKeyPath:(NSString *)keyPath","- (id)valueForUndefinedKey:(NSString *)key","- (void)setValue:(id)value forUndefinedKey:(NSString *)key","- (void)setNilValueForKey:(NSString *)key","- (NSDictionary *)dictionaryWithValuesForKeys:(NSArray *)keys","- (void)setValuesForKeysWithDictionary:(NSDictionary *)keyedValues","- (id)valueForKey:(NSString *)key","- (void)setValue:(id)value forKey:(NSString *)key","- (id)valueForKey:(NSString *)key","- (void)setValue:(id)value forKey:(NSString *)key","- (id)valueForKey:(NSString *)key","- (void)setValue:(id)value forKey:(NSString *)key","- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context","- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context","- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath","- (void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context","- (void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath","- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context","- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath","- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context","- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath","- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context","- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath","- (void)willChangeValueForKey:(NSString *)key","- (void)didChangeValueForKey:(NSString *)key","- (void)willChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key","- (void)didChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key","- (void)willChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects","- (void)didChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects","+ (BOOL)automaticallyNotifiesObserversForKey:(NSString *)key","- (void)setObservationInfo:(void *)observationInfo","- (void *)observationInfo","- (id)objectForKey:(id)key","- (NSString *)displayNameForKey:(id)key value:(id)value","- (NSString *)localeIdentifier","+ (id)systemLocale","+ (id)currentLocale","- (id)initWithLocaleIdentifier:(NSString *)string","+ (NSArray *)availableLocaleIdentifiers","+ (NSArray *)ISOLanguageCodes","+ (NSArray *)ISOCountryCodes","+ (NSArray *)ISOCurrencyCodes","+ (NSDictionary *)componentsFromLocaleIdentifier:(NSString *)string","+ (NSString *)localeIdentifierFromComponents:(NSDictionary *)dict","+ (NSString *)canonicalLocaleIdentifierFromString:(NSString *)string","+ (NSString *)canonicalLanguageIdentifierFromString:(NSString *)string","- (BOOL)tryLock","- (BOOL)lockBeforeDate:(NSDate *)limit","- (id)initWithCondition:(NSInteger)condition","- (NSInteger)condition","- (void)lockWhenCondition:(NSInteger)condition","- (BOOL)tryLock","- (BOOL)tryLockWhenCondition:(NSInteger)condition","- (void)unlockWithCondition:(NSInteger)condition","- (BOOL)lockBeforeDate:(NSDate *)limit","- (BOOL)lockWhenCondition:(NSInteger)condition beforeDate:(NSDate *)limit","- (BOOL)tryLock","- (BOOL)lockBeforeDate:(NSDate *)limit","- (void)wait","- (BOOL)waitUntilDate:(NSDate *)limit","- (void)signal","- (void)broadcast","- (void)setName:(NSString *)n","- (NSString *)name","- (id)initWithKeyOptions:(NSPointerFunctionsOptions)keyOptions valueOptions:(NSPointerFunctionsOptions)valueOptions capacity:(NSUInteger)initialCapacity","- (id)initWithKeyPointerFunctions:(NSPointerFunctions *)keyFunctions valuePointerFunctions:(NSPointerFunctions *)valueFunctions capacity:(NSUInteger)initialCapacity","+ (id)mapTableWithKeyOptions:(NSPointerFunctionsOptions)keyOptions valueOptions:(NSPointerFunctionsOptions)valueOptions","+ (id)mapTableWithStrongToStrongObjects","+ (id)mapTableWithWeakToStrongObjects","+ (id)mapTableWithStrongToWeakObjects","+ (id)mapTableWithWeakToWeakObjects","- (NSPointerFunctions *)keyPointerFunctions","- (NSPointerFunctions *)valuePointerFunctions","- (id)objectForKey:(id)aKey","- (void)removeObjectForKey:(id)aKey","- (void)setObject:(id)anObject forKey:(id)aKey","- (NSUInteger)count","- (NSEnumerator *)keyEnumerator","- (NSEnumerator *)objectEnumerator","- (void)removeAllObjects","- (NSDictionary *)dictionaryRepresentation","- (id)init","- (id <NSMetadataQueryDelegate>)delegate","- (void)setDelegate:(id <NSMetadataQueryDelegate>)delegate","- (NSPredicate *)predicate","- (void)setPredicate:(NSPredicate *)predicate","- (NSArray *)sortDescriptors","- (void)setSortDescriptors:(NSArray *)descriptors","- (NSArray *)valueListAttributes","- (void)setValueListAttributes:(NSArray *)attrs","- (NSArray *)groupingAttributes","- (void)setGroupingAttributes:(NSArray *)attrs","- (NSTimeInterval)notificationBatchingInterval","- (void)setNotificationBatchingInterval:(NSTimeInterval)ti","- (NSArray *)searchScopes","- (void)setSearchScopes:(NSArray *)scopes","- (BOOL)startQuery","- (void)stopQuery","- (BOOL)isStarted","- (BOOL)isGathering","- (BOOL)isStopped","- (void)disableUpdates","- (void)enableUpdates","- (NSUInteger)resultCount","- (id)resultAtIndex:(NSUInteger)idx","- (NSArray *)results","- (NSUInteger)indexOfResult:(id)result","- (NSDictionary *)valueLists","- (NSArray *)groupedResults","- (id)valueOfAttribute:(NSString *)attrName forResultAtIndex:(NSUInteger)idx","- (id)valueForAttribute:(NSString *)key","- (NSDictionary *)valuesForAttributes:(NSArray *)keys","- (NSArray *)attributes","- (NSString *)attribute","- (id)value","- (NSUInteger)count","- (NSString *)attribute","- (id)value","- (NSArray *)subgroups","- (NSUInteger)resultCount","- (id)resultAtIndex:(NSUInteger)idx","- (NSArray *)results","+ (NSMethodSignature *)signatureWithObjCTypes:(const char *)types","- (NSUInteger)numberOfArguments","- (const char *)getArgumentTypeAtIndex:(NSUInteger)idx","- (NSUInteger)frameLength","- (BOOL)isOneway","- (const char *)methodReturnType","- (NSUInteger)methodReturnLength","- (id)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name port:(int)port","- (id)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name","- (id <NSNetServiceDelegate>)delegate","- (void)setDelegate:(id <NSNetServiceDelegate>)delegate","- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode","- (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode","- (NSString *)domain","- (NSString *)type","- (NSString *)name","- (NSArray *)addresses","- (void)publish","- (void)stop","+ (NSDictionary *)dictionaryFromTXTRecordData:(NSData *)txtData","+ (NSData *)dataFromTXTRecordDictionary:(NSDictionary *)txtDictionary","- (NSString *)hostName","- (void)resolveWithTimeout:(NSTimeInterval)timeout","- (BOOL)getInputStream:(NSInputStream **)inputStream outputStream:(NSOutputStream **)outputStream","- (BOOL)setTXTRecordData:(NSData *)recordData","- (NSData *)TXTRecordData","- (void)startMonitoring","- (void)stopMonitoring","- (id)init","- (id <NSNetServiceBrowserDelegate>)delegate","- (void)setDelegate:(id <NSNetServiceBrowserDelegate>)delegate","- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode","- (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode","- (void)searchForBrowsableDomains","- (void)searchForRegistrationDomains","- (void)searchForServicesOfType:(NSString *)type inDomain:(NSString *)domainString","- (void)stop","- (NSString *)name","- (id)object","- (NSDictionary *)userInfo","+ (id)notificationWithName:(NSString *)aName object:(id)anObject","+ (id)notificationWithName:(NSString *)aName object:(id)anObject userInfo:(NSDictionary *)aUserInfo","+ (id)defaultCenter","- (void)addObserver:(id)observer selector:(SEL)aSelector name:(NSString *)aName object:(id)anObject","- (void)postNotification:(NSNotification *)notification","- (void)postNotificationName:(NSString *)aName object:(id)anObject","- (void)postNotificationName:(NSString *)aName object:(id)anObject userInfo:(NSDictionary *)aUserInfo","- (void)removeObserver:(id)observer","- (void)removeObserver:(id)observer name:(NSString *)aName object:(id)anObject","+ (id)defaultQueue","- (id)initWithNotificationCenter:(NSNotificationCenter *)notificationCenter","- (void)enqueueNotification:(NSNotification *)notification postingStyle:(NSPostingStyle)postingStyle","- (void)enqueueNotification:(NSNotification *)notification postingStyle:(NSPostingStyle)postingStyle coalesceMask:(NSUInteger)coalesceMask forModes:(NSArray *)modes","- (void)dequeueNotificationsMatching:(NSNotification *)notification coalesceMask:(NSUInteger)coalesceMask","+ (NSNull *)null","- (BOOL)getObjectValue:(out id *)obj forString:(NSString *)string range:(inout NSRange *)rangep error:(out NSError **)error","- (NSString *)stringFromNumber:(NSNumber *)number","- (NSNumber *)numberFromString:(NSString *)string","- (NSNumberFormatterStyle)numberStyle","- (void)setNumberStyle:(NSNumberFormatterStyle)style","- (NSLocale *)locale","- (void)setLocale:(NSLocale *)locale","- (BOOL)generatesDecimalNumbers","- (void)setGeneratesDecimalNumbers:(BOOL)b","- (NSNumberFormatterBehavior)formatterBehavior","- (void)setFormatterBehavior:(NSNumberFormatterBehavior)behavior","+ (NSNumberFormatterBehavior)defaultFormatterBehavior","+ (void)setDefaultFormatterBehavior:(NSNumberFormatterBehavior)behavior","- (NSString *)negativeFormat","- (void)setNegativeFormat:(NSString *)format","- (NSDictionary *)textAttributesForNegativeValues","- (void)setTextAttributesForNegativeValues:(NSDictionary *)newAttributes","- (NSString *)positiveFormat","- (void)setPositiveFormat:(NSString *)format","- (NSDictionary *)textAttributesForPositiveValues","- (void)setTextAttributesForPositiveValues:(NSDictionary *)newAttributes","- (BOOL)allowsFloats","- (void)setAllowsFloats:(BOOL)flag","- (NSString *)decimalSeparator","- (void)setDecimalSeparator:(NSString *)string","- (BOOL)alwaysShowsDecimalSeparator","- (void)setAlwaysShowsDecimalSeparator:(BOOL)b","- (NSString *)currencyDecimalSeparator","- (void)setCurrencyDecimalSeparator:(NSString *)string","- (BOOL)usesGroupingSeparator","- (void)setUsesGroupingSeparator:(BOOL)b","- (NSString *)groupingSeparator","- (void)setGroupingSeparator:(NSString *)string","- (NSString *)zeroSymbol","- (void)setZeroSymbol:(NSString *)string","- (NSDictionary *)textAttributesForZero","- (void)setTextAttributesForZero:(NSDictionary *)newAttributes","- (NSString *)nilSymbol","- (void)setNilSymbol:(NSString *)string","- (NSDictionary *)textAttributesForNil","- (void)setTextAttributesForNil:(NSDictionary *)newAttributes","- (NSString *)notANumberSymbol","- (void)setNotANumberSymbol:(NSString *)string","- (NSDictionary *)textAttributesForNotANumber","- (void)setTextAttributesForNotANumber:(NSDictionary *)newAttributes","- (NSString *)positiveInfinitySymbol","- (void)setPositiveInfinitySymbol:(NSString *)string","- (NSDictionary *)textAttributesForPositiveInfinity","- (void)setTextAttributesForPositiveInfinity:(NSDictionary *)newAttributes","- (NSString *)negativeInfinitySymbol","- (void)setNegativeInfinitySymbol:(NSString *)string","- (NSDictionary *)textAttributesForNegativeInfinity","- (void)setTextAttributesForNegativeInfinity:(NSDictionary *)newAttributes","- (NSString *)positivePrefix","- (void)setPositivePrefix:(NSString *)string","- (NSString *)positiveSuffix","- (void)setPositiveSuffix:(NSString *)string","- (NSString *)negativePrefix","- (void)setNegativePrefix:(NSString *)string","- (NSString *)negativeSuffix","- (void)setNegativeSuffix:(NSString *)string","- (NSString *)currencyCode","- (void)setCurrencyCode:(NSString *)string","- (NSString *)currencySymbol","- (void)setCurrencySymbol:(NSString *)string","- (NSString *)internationalCurrencySymbol","- (void)setInternationalCurrencySymbol:(NSString *)string","- (NSString *)percentSymbol","- (void)setPercentSymbol:(NSString *)string","- (NSString *)perMillSymbol","- (void)setPerMillSymbol:(NSString *)string","- (NSString *)minusSign","- (void)setMinusSign:(NSString *)string","- (NSString *)plusSign","- (void)setPlusSign:(NSString *)string","- (NSString *)exponentSymbol","- (void)setExponentSymbol:(NSString *)string","- (NSUInteger)groupingSize","- (void)setGroupingSize:(NSUInteger)number","- (NSUInteger)secondaryGroupingSize","- (void)setSecondaryGroupingSize:(NSUInteger)number","- (NSNumber *)multiplier","- (void)setMultiplier:(NSNumber *)number","- (NSUInteger)formatWidth","- (void)setFormatWidth:(NSUInteger)number","- (NSString *)paddingCharacter","- (void)setPaddingCharacter:(NSString *)string","- (NSNumberFormatterPadPosition)paddingPosition","- (void)setPaddingPosition:(NSNumberFormatterPadPosition)position","- (NSNumberFormatterRoundingMode)roundingMode","- (void)setRoundingMode:(NSNumberFormatterRoundingMode)mode","- (NSNumber *)roundingIncrement","- (void)setRoundingIncrement:(NSNumber *)number","- (NSUInteger)minimumIntegerDigits","- (void)setMinimumIntegerDigits:(NSUInteger)number","- (NSUInteger)maximumIntegerDigits","- (void)setMaximumIntegerDigits:(NSUInteger)number","- (NSUInteger)minimumFractionDigits","- (void)setMinimumFractionDigits:(NSUInteger)number","- (NSUInteger)maximumFractionDigits","- (void)setMaximumFractionDigits:(NSUInteger)number","- (NSNumber *)minimum","- (void)setMinimum:(NSNumber *)number","- (NSNumber *)maximum","- (void)setMaximum:(NSNumber *)number","- (BOOL)hasThousandSeparators","- (void)setHasThousandSeparators:(BOOL)flag","- (NSString *)thousandSeparator","- (void)setThousandSeparator:(NSString *)newSeparator","- (BOOL)localizesFormat","- (void)setLocalizesFormat:(BOOL)flag","- (NSString *)format","- (void)setFormat:(NSString *)string","- (NSAttributedString *)attributedStringForZero","- (void)setAttributedStringForZero:(NSAttributedString *)newAttributedString","- (NSAttributedString *)attributedStringForNil","- (void)setAttributedStringForNil:(NSAttributedString *)newAttributedString","- (NSAttributedString *)attributedStringForNotANumber","- (void)setAttributedStringForNotANumber:(NSAttributedString *)newAttributedString","- (NSDecimalNumberHandler *)roundingBehavior","- (void)setRoundingBehavior:(NSDecimalNumberHandler *)newRoundingBehavior","+ (NSInteger)version","+ (void)setVersion:(NSInteger)aVersion","- (Class)classForCoder","- (id)replacementObjectForCoder:(NSCoder *)aCoder","- (id)awakeAfterUsingCoder:(NSCoder *)aDecoder","- (NSDictionary *)scriptingProperties","- (void)setScriptingProperties:(NSDictionary *)properties","- (id)init","- (void)start","- (void)main","- (BOOL)isCancelled","- (void)cancel","- (BOOL)isExecuting","- (BOOL)isFinished","- (BOOL)isConcurrent","- (BOOL)isReady","- (void)addDependency:(NSOperation *)op","- (void)removeDependency:(NSOperation *)op","- (NSArray *)dependencies","- (NSOperationQueuePriority)queuePriority","- (void)setQueuePriority:(NSOperationQueuePriority)p","+ (id)blockOperationWithBlock:(void (^)(void))block","- (void)addExecutionBlock:(void (^)(void))block","- (NSArray *)executionBlocks","- (id)initWithTarget:(id)target selector:(SEL)sel object:(id)arg","- (id)initWithInvocation:(NSInvocation *)inv","- (NSInvocation *)invocation","- (id)result","- (void)addOperation:(NSOperation *)op","- (NSArray *)operations","- (NSInteger)maxConcurrentOperationCount","- (void)setMaxConcurrentOperationCount:(NSInteger)cnt","- (void)setSuspended:(BOOL)b","- (BOOL)isSuspended","- (void)cancelAllOperations","- (void)waitUntilAllOperationsAreFinished","- (NSUInteger)count","- (id)objectAtIndex:(NSUInteger)idx","- (NSUInteger)indexOfObject:(id)object","- (NSArray *)objectsAtIndexes:(NSIndexSet *)indexes","- (id)firstObject","- (id)lastObject","- (BOOL)isEqualToOrderedSet:(NSOrderedSet *)other","- (BOOL)containsObject:(id)object","- (BOOL)intersectsOrderedSet:(NSOrderedSet *)other","- (BOOL)intersectsSet:(NSSet *)set","- (BOOL)isSubsetOfOrderedSet:(NSOrderedSet *)other","- (BOOL)isSubsetOfSet:(NSSet *)set","- (NSEnumerator *)objectEnumerator","- (NSEnumerator *)reverseObjectEnumerator","- (NSOrderedSet *)reversedOrderedSet","- (NSArray *)array","- (NSSet *)set","- (NSUInteger)indexOfObject:(id)object inSortedRange:(NSRange)range options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp","- (NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr","- (NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr","- (NSString *)description","- (NSString *)descriptionWithLocale:(id)locale","- (NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level","+ (id)orderedSet","+ (id)orderedSetWithObject:(id)object","+ (id)orderedSetWithObjects:(const id [])objects count:(NSUInteger)cnt","+ (id)orderedSetWithOrderedSet:(NSOrderedSet *)set","+ (id)orderedSetWithOrderedSet:(NSOrderedSet *)set range:(NSRange)range copyItems:(BOOL)flag","+ (id)orderedSetWithArray:(NSArray *)array","+ (id)orderedSetWithArray:(NSArray *)array range:(NSRange)range copyItems:(BOOL)flag","+ (id)orderedSetWithSet:(NSSet *)set","+ (id)orderedSetWithSet:(NSSet *)set copyItems:(BOOL)flag","- (id)initWithObject:(id)object","- (id)initWithObjects:(const id [])objects count:(NSUInteger)cnt","- (id)initWithOrderedSet:(NSOrderedSet *)set","- (id)initWithOrderedSet:(NSOrderedSet *)set copyItems:(BOOL)flag","- (id)initWithOrderedSet:(NSOrderedSet *)set range:(NSRange)range copyItems:(BOOL)flag","- (id)initWithArray:(NSArray *)array","- (id)initWithArray:(NSArray *)set copyItems:(BOOL)flag","- (id)initWithArray:(NSArray *)set range:(NSRange)range copyItems:(BOOL)flag","- (id)initWithSet:(NSSet *)set","- (id)initWithSet:(NSSet *)set copyItems:(BOOL)flag","- (void)insertObject:(id)object atIndex:(NSUInteger)idx","- (void)removeObjectAtIndex:(NSUInteger)idx","- (void)replaceObjectAtIndex:(NSUInteger)idx withObject:(id)object","- (void)addObject:(id)object","- (void)addObjects:(const id [])objects count:(NSUInteger)count","- (void)addObjectsFromArray:(NSArray *)array","- (void)exchangeObjectAtIndex:(NSUInteger)idx1 withObjectAtIndex:(NSUInteger)idx2","- (void)moveObjectsAtIndexes:(NSIndexSet *)indexes toIndex:(NSUInteger)idx","- (void)insertObjects:(NSArray *)objects atIndexes:(NSIndexSet *)indexes","- (void)setObject:(id)obj atIndex:(NSUInteger)idx","- (void)replaceObjectsInRange:(NSRange)range withObjects:(const id [])objects count:(NSUInteger)count","- (void)replaceObjectsAtIndexes:(NSIndexSet *)indexes withObjects:(NSArray *)objects","- (void)removeObjectsInRange:(NSRange)range","- (void)removeObjectsAtIndexes:(NSIndexSet *)indexes","- (void)removeAllObjects","- (void)removeObject:(id)object","- (void)removeObjectsInArray:(NSArray *)array","- (void)intersectOrderedSet:(NSOrderedSet *)other","- (void)minusOrderedSet:(NSOrderedSet *)other","- (void)unionOrderedSet:(NSOrderedSet *)other","- (void)intersectSet:(NSSet *)other","- (void)minusSet:(NSSet *)other","- (void)unionSet:(NSSet *)other","- (void)sortUsingComparator:(NSComparator)cmptr","- (void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr","- (void)sortRange:(NSRange)range options:(NSSortOptions)opts usingComparator:(NSComparator)cmptr","+ (id)orderedSetWithCapacity:(NSUInteger)numItems","- (id)initWithCapacity:(NSUInteger)numItems","- (NSArray *)languagesForScript:(NSString *)script","- (NSString *)dominantLanguageForScript:(NSString *)script","+ (id)orthographyWithDominantScript:(NSString *)script languageMap:(NSDictionary *)map","- (id)initWithDominantScript:(NSString *)script languageMap:(NSDictionary *)map","+ (NSString *)pathWithComponents:(NSArray *)components","- (NSArray *)pathComponents","- (BOOL)isAbsolutePath","- (NSString *)lastPathComponent","- (NSString *)stringByDeletingLastPathComponent","- (NSString *)stringByAppendingPathComponent:(NSString *)str","- (NSString *)pathExtension","- (NSString *)stringByDeletingPathExtension","- (NSString *)stringByAppendingPathExtension:(NSString *)str","- (NSString *)stringByAbbreviatingWithTildeInPath","- (NSString *)stringByExpandingTildeInPath","- (NSString *)stringByStandardizingPath","- (NSString *)stringByResolvingSymlinksInPath","- (NSArray *)stringsByAppendingPaths:(NSArray *)paths","- (NSUInteger)completePathIntoString:(NSString **)outputName caseSensitive:(BOOL)flag matchesIntoArray:(NSArray **)outputArray filterTypes:(NSArray *)filterTypes","- (BOOL)getFileSystemRepresentation:(char *)cname maxLength:(NSUInteger)max","- (NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes","- initWithOptions:(NSPointerFunctionsOptions)options","- initWithPointerFunctions:(NSPointerFunctions *)functions","+ pointerArrayWithOptions:(NSPointerFunctionsOptions)options","+ pointerArrayWithPointerFunctions:(NSPointerFunctions *)functions","- (NSPointerFunctions *)pointerFunctions","- (void *)pointerAtIndex:(NSUInteger)index","- (void)addPointer:(void *)pointer","- (void)removePointerAtIndex:(NSUInteger)index","- (void)insertPointer:(void *)item atIndex:(NSUInteger)index","- (void)replacePointerAtIndex:(NSUInteger)index withPointer:(void *)item","- (void)compact","- (NSUInteger)count","- (void)setCount:(NSUInteger)count","+ pointerArrayWithStrongObjects","+ pointerArrayWithWeakObjects","- (NSArray *)allObjects","- (id)initWithOptions:(NSPointerFunctionsOptions)options","+ (id)pointerFunctionsWithOptions:(NSPointerFunctionsOptions)options","+ (NSPort *)port","- (void)invalidate","- (BOOL)isValid","- (void)setDelegate:(id <NSPortDelegate>)anObject","- (id <NSPortDelegate>)delegate","- (void)scheduleInRunLoop:(NSRunLoop *)runLoop forMode:(NSString *)mode","- (void)removeFromRunLoop:(NSRunLoop *)runLoop forMode:(NSString *)mode","- (NSUInteger)reservedSpaceLength","- (BOOL)sendBeforeDate:(NSDate *)limitDate components:(NSMutableArray *)components from:(NSPort *) receivePort reserved:(NSUInteger)headerSpaceReserved","- (BOOL)sendBeforeDate:(NSDate *)limitDate msgid:(NSUInteger)msgID components:(NSMutableArray *)components from:(NSPort *)receivePort reserved:(NSUInteger)headerSpaceReserved","- (void)addConnection:(NSConnection *)conn toRunLoop:(NSRunLoop *)runLoop forMode:(NSString *)mode","- (void)removeConnection:(NSConnection *)conn fromRunLoop:(NSRunLoop *)runLoop forMode:(NSString *)mode","- (void)setDelegate:(id <NSMachPortDelegate>)anObject","- (id <NSMachPortDelegate>)delegate","- (void)scheduleInRunLoop:(NSRunLoop *)runLoop forMode:(NSString *)mode","- (void)removeFromRunLoop:(NSRunLoop *)runLoop forMode:(NSString *)mode","- (id)init","- (id)initWithTCPPort:(unsigned short)port","- (id)initWithProtocolFamily:(int)family socketType:(int)type protocol:(int)protocol address:(NSData *)address","- (id)initWithProtocolFamily:(int)family socketType:(int)type protocol:(int)protocol socket:(NSSocketNativeHandle)sock","- (id)initRemoteWithTCPPort:(unsigned short)port host:(NSString *)hostName","- (id)initRemoteWithProtocolFamily:(int)family socketType:(int)type protocol:(int)protocol address:(NSData *)address","- (int)protocolFamily","- (int)socketType","- (int)protocol","- (NSData *)address","- (NSSocketNativeHandle)socket","- (BOOL)isBycopy","- (BOOL)isByref","- (void)encodePortObject:(NSPort *)aport","- (NSPort *)decodePortObject","- (Class)classForPortCoder","- (id)replacementObjectForPortCoder:(NSPortCoder *)coder","- (id)initWithSendPort:(NSPort *)sendPort receivePort:(NSPort *)replyPort components:(NSArray *)components","- (NSArray *)components","- (NSPort *)receivePort","- (NSPort *)sendPort","- (BOOL)sendBeforeDate:(NSDate *)date","+ (NSPortNameServer *)systemDefaultPortNameServer","- (NSPort *)portForName:(NSString *)name","- (NSPort *)portForName:(NSString *)name host:(NSString *)host","- (BOOL)registerPort:(NSPort *)port name:(NSString *)name","- (BOOL)removePortForName:(NSString *)name","+ (id)sharedInstance","- (NSPort *)portForName:(NSString *)name","- (NSPort *)portForName:(NSString *)name host:(NSString *)host","- (BOOL)registerPort:(NSPort *)port name:(NSString *)name","+ (id)sharedInstance","- (NSPort *)portForName:(NSString *)name","- (NSPort *)portForName:(NSString *)name host:(NSString *)host","+ (id)sharedInstance","- (NSPort *)portForName:(NSString *)name","- (NSPort *)portForName:(NSString *)name host:(NSString *)host","- (BOOL)registerPort:(NSPort *)port name:(NSString *)name","- (BOOL)removePortForName:(NSString *)name","+ (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat argumentArray:(NSArray *)arguments","+ (NSPredicate *)predicateWithValue:(BOOL)value","- (NSString *)predicateFormat","- (NSPredicate *)predicateWithSubstitutionVariables:(NSDictionary *)variables","- (BOOL)evaluateWithObject:(id)object","- (NSArray *)filteredArrayUsingPredicate:(NSPredicate *)predicate","- (void)filterUsingPredicate:(NSPredicate *)predicate","+ (NSProcessInfo *)processInfo","- (NSDictionary *)environment","- (NSArray *)arguments","- (NSString *)hostName","- (NSString *)processName","- (int)processIdentifier","- (void)setProcessName:(NSString *)newName","- (NSString *)globallyUniqueString","- (NSUInteger)operatingSystem","- (NSString *)operatingSystemName","- (NSString *)operatingSystemVersionString","+ (BOOL)propertyList:(id)plist isValidForFormat:(NSPropertyListFormat)format","- (Protocol *)protocol","- (NSObject *)target","+ (id)protocolCheckerWithTarget:(NSObject *)anObject protocol:(Protocol *)aProtocol","- (id)initWithTarget:(NSObject *)anObject protocol:(Protocol *)aProtocol","+ (NSValue *)valueWithRange:(NSRange)range","- (NSRange)rangeValue","+ (NSRegularExpression *)regularExpressionWithPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options error:(NSError **)error","- (id)initWithPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options error:(NSError **)error","+ (NSString *)escapedPatternForString:(NSString *)string","- (NSArray *)matchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range","- (NSUInteger)numberOfMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range","- (NSTextCheckingResult *)firstMatchInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range","- (NSRange)rangeOfFirstMatchInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range","- (NSString *)stringByReplacingMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range withTemplate:(NSString *)templ","- (NSUInteger)replaceMatchesInString:(NSMutableString *)string options:(NSMatchingOptions)options range:(NSRange)range withTemplate:(NSString *)templ","- (NSString *)replacementStringForResult:(NSTextCheckingResult *)result inString:(NSString *)string offset:(NSInteger)offset template:(NSString *)templ","+ (NSString *)escapedTemplateForString:(NSString *)string","+ (NSDataDetector *)dataDetectorWithTypes:(NSTextCheckingTypes)checkingTypes error:(NSError **)error","- (id)initWithTypes:(NSTextCheckingTypes)checkingTypes error:(NSError **)error","+ (NSRunLoop *)currentRunLoop","- (NSString *)currentMode","- (CFRunLoopRef)getCFRunLoop","- (void)addTimer:(NSTimer *)timer forMode:(NSString *)mode","- (void)addPort:(NSPort *)aPort forMode:(NSString *)mode","- (void)removePort:(NSPort *)aPort forMode:(NSString *)mode","- (NSDate *)limitDateForMode:(NSString *)mode","- (void)acceptInputForMode:(NSString *)mode beforeDate:(NSDate *)limitDate","- (void)run","- (void)runUntilDate:(NSDate *)limitDate","- (BOOL)runMode:(NSString *)mode beforeDate:(NSDate *)limitDate","- (void)performSelector:(SEL)aSelector withObject:(id)anArgument afterDelay:(NSTimeInterval)delay inModes:(NSArray *)modes","- (void)performSelector:(SEL)aSelector withObject:(id)anArgument afterDelay:(NSTimeInterval)delay","+ (void)cancelPreviousPerformRequestsWithTarget:(id)aTarget selector:(SEL)aSelector object:(id)anArgument","+ (void)cancelPreviousPerformRequestsWithTarget:(id)aTarget","- (void)performSelector:(SEL)aSelector target:(id)target argument:(id)arg order:(NSUInteger)order modes:(NSArray *)modes","- (void)cancelPerformSelector:(SEL)aSelector target:(id)target argument:(id)arg","- (void)cancelPerformSelectorsWithTarget:(id)target","- (NSString *)string","- (NSUInteger)scanLocation","- (void)setScanLocation:(NSUInteger)pos","- (void)setCharactersToBeSkipped:(NSCharacterSet *)set","- (void)setCaseSensitive:(BOOL)flag","- (void)setLocale:(id)locale","- (NSCharacterSet *)charactersToBeSkipped","- (BOOL)caseSensitive","- (id)locale","- (BOOL)scanInt:(int *)value","- (BOOL)scanHexInt:(unsigned *)value","- (BOOL)scanLongLong:(long long *)value","- (BOOL)scanFloat:(float *)value","- (BOOL)scanDouble:(double *)value","- (BOOL)scanString:(NSString *)string intoString:(NSString **)value","- (BOOL)scanCharactersFromSet:(NSCharacterSet *)set intoString:(NSString **)value","- (BOOL)scanUpToString:(NSString *)string intoString:(NSString **)value","- (BOOL)scanUpToCharactersFromSet:(NSCharacterSet *)set intoString:(NSString **)value","- (BOOL)isAtEnd","- (id)initWithString:(NSString *)string","+ (id)scannerWithString:(NSString *)string","+ (id)localizedScannerWithString:(NSString *)string","+ (NSScriptClassDescription *)classDescriptionForClass:(Class)aClass","- (id)initWithSuiteName:(NSString *)suiteName className:(NSString *)className dictionary:(NSDictionary *)classDeclaration","- (NSString *)suiteName","- (NSString *)className","- (NSString *)implementationClassName","- (NSScriptClassDescription *)superclassDescription","- (FourCharCode)appleEventCode","- (BOOL)matchesAppleEventCode:(FourCharCode)appleEventCode","- (BOOL)supportsCommand:(NSScriptCommandDescription *)commandDescription","- (SEL)selectorForCommand:(NSScriptCommandDescription *)commandDescription","- (NSString *)typeForKey:(NSString *)key","- (NSScriptClassDescription *)classDescriptionForKey:(NSString *)key","- (FourCharCode)appleEventCodeForKey:(NSString *)key","- (NSString *)keyWithAppleEventCode:(FourCharCode)appleEventCode","- (NSString *)defaultSubcontainerAttributeKey","- (BOOL)isLocationRequiredToCreateForKey:(NSString *)toManyRelationshipKey","- (FourCharCode)classCode","- (NSString *)className","+ (NSScriptCoercionHandler *)sharedCoercionHandler","- (id)coerceValue:(id)value toClass:(Class)toClass","- (void)registerCoercer:(id)coercer selector:(SEL)selector toConvertFromClass:(Class)fromClass toClass:(Class)toClass","- (id)initWithCommandDescription:(NSScriptCommandDescription *)commandDef","- (NSScriptCommandDescription *)commandDescription","- (void)setDirectParameter:(id)directParameter","- (id)directParameter","- (void)setReceiversSpecifier:(NSScriptObjectSpecifier *)receiversRef","- (NSScriptObjectSpecifier *)receiversSpecifier","- (id)evaluatedReceivers","- (void)setArguments:(NSDictionary *)args","- (NSDictionary *)arguments","- (NSDictionary *)evaluatedArguments","- (BOOL)isWellFormed","- (id)performDefaultImplementation","- (id)executeCommand","- (void)setScriptErrorNumber:(int)errorNumber","- (void)setScriptErrorString:(NSString *)errorString","- (int)scriptErrorNumber","- (NSString *)scriptErrorString","+ (NSScriptCommand *)currentCommand","- (NSAppleEventDescriptor *)appleEvent","- (void)suspendExecution","- (void)resumeExecutionWithResult:(id)result","- (id)initWithSuiteName:(NSString *)suiteName commandName:(NSString *)commandName dictionary:(NSDictionary *)commandDeclaration","- (NSString *)suiteName","- (NSString *)commandName","- (FourCharCode)appleEventClassCode","- (FourCharCode)appleEventCode","- (NSString *)commandClassName","- (NSString *)returnType","- (FourCharCode)appleEventCodeForReturnType","- (NSArray *)argumentNames","- (NSString *)typeForArgumentWithName:(NSString *)argumentName","- (FourCharCode)appleEventCodeForArgumentWithName:(NSString *)argumentName","- (BOOL)isOptionalArgumentWithName:(NSString *)argumentName","- (NSScriptCommand *)createCommandInstance","- (NSScriptCommand *)createCommandInstanceWithZone:(NSZone *)zone","+ (NSScriptExecutionContext *)sharedScriptExecutionContext","- (id)topLevelObject","- (void)setTopLevelObject:(id)obj","- (id)objectBeingTested","- (void)setObjectBeingTested:(id)obj","- (id)rangeContainerObject","- (void)setRangeContainerObject:(id)obj","- (id)valueAtIndex:(NSUInteger)index inPropertyWithKey:(NSString *)key","- (id)valueWithName:(NSString *)name inPropertyWithKey:(NSString *)key","- (id)valueWithUniqueID:(id)uniqueID inPropertyWithKey:(NSString *)key","- (void)insertValue:(id)value atIndex:(NSUInteger)index inPropertyWithKey:(NSString *)key","- (void)removeValueAtIndex:(NSUInteger)index fromPropertyWithKey:(NSString *)key","- (void)replaceValueAtIndex:(NSUInteger)index inPropertyWithKey:(NSString *)key withValue:(id)value","- (void)insertValue:(id)value inPropertyWithKey:(NSString *)key","- (id)coerceValue:(id)value forKey:(NSString *)key","- (id)initWithContainerSpecifier:(NSScriptObjectSpecifier *)container key:(NSString *)property","- (id)initWithContainerClassDescription:(NSScriptClassDescription *)classDesc containerSpecifier:(NSScriptObjectSpecifier *)container key:(NSString *)property","- (NSScriptObjectSpecifier *)childSpecifier","- (void)setChildSpecifier:(NSScriptObjectSpecifier *)child","- (NSScriptObjectSpecifier *)containerSpecifier","- (void)setContainerSpecifier:(NSScriptObjectSpecifier *)subRef","- (BOOL)containerIsObjectBeingTested","- (void)setContainerIsObjectBeingTested:(BOOL)flag","- (BOOL)containerIsRangeContainerObject","- (void)setContainerIsRangeContainerObject:(BOOL)flag","- (NSString *)key","- (void)setKey:(NSString *)key","- (NSScriptClassDescription *)containerClassDescription","- (void)setContainerClassDescription:(NSScriptClassDescription *)classDesc","- (NSScriptClassDescription *)keyClassDescription","- (NSInteger *)indicesOfObjectsByEvaluatingWithContainer:(id)container count:(NSInteger *)count","- (id)objectsByEvaluatingWithContainers:(id)containers","- (id)objectsByEvaluatingSpecifier","- (NSInteger)evaluationErrorNumber","- (void)setEvaluationErrorNumber:(NSInteger)error","- (NSScriptObjectSpecifier *)evaluationErrorSpecifier","- (NSScriptObjectSpecifier *)objectSpecifier","- (NSArray *)indicesOfObjectsByEvaluatingObjectSpecifier:(NSScriptObjectSpecifier *)specifier","- (id)initWithContainerClassDescription:(NSScriptClassDescription *)classDesc containerSpecifier:(NSScriptObjectSpecifier *)container key:(NSString *)property index:(NSInteger)index","- (NSInteger)index","- (void)setIndex:(NSInteger)index","- (id)initWithContainerClassDescription:(NSScriptClassDescription *)classDesc containerSpecifier:(NSScriptObjectSpecifier *)container key:(NSString *)property name:(NSString *)name","- (NSString *)name","- (void)setName:(NSString *)name","- (id)initWithPosition:(NSInsertionPosition)position objectSpecifier:(NSScriptObjectSpecifier *)specifier","- (void)setInsertionClassDescription:(NSScriptClassDescription *)classDescription","- (void)evaluate","- (id)insertionContainer","- (NSString *)insertionKey","- (NSInteger)insertionIndex","- (BOOL)insertionReplaces","- (id)initWithContainerClassDescription:(NSScriptClassDescription *)classDesc containerSpecifier:(NSScriptObjectSpecifier *)container key:(NSString *)property startSpecifier:(NSScriptObjectSpecifier *)startSpec endSpecifier:(NSScriptObjectSpecifier *)endSpec","- (NSScriptObjectSpecifier *)startSpecifier","- (void)setStartSpecifier:(NSScriptObjectSpecifier *)startSpec","- (NSScriptObjectSpecifier *)endSpecifier","- (void)setEndSpecifier:(NSScriptObjectSpecifier *)endSpec","- (id)initWithContainerClassDescription:(NSScriptClassDescription *)classDesc containerSpecifier:(NSScriptObjectSpecifier *)container key:(NSString *)property relativePosition:(NSRelativePosition)relPos baseSpecifier:(NSScriptObjectSpecifier *)baseSpecifier","- (NSRelativePosition)relativePosition","- (void)setRelativePosition:(NSRelativePosition)relPos","- (NSScriptObjectSpecifier *)baseSpecifier","- (void)setBaseSpecifier:(NSScriptObjectSpecifier *)baseSpecifier","- (id)initWithContainerClassDescription:(NSScriptClassDescription *)classDesc containerSpecifier:(NSScriptObjectSpecifier *)container key:(NSString *)property uniqueID:(id)uniqueID","- (id)uniqueID","- (void)setUniqueID:(id)uniqueID","- (id)initWithContainerClassDescription:(NSScriptClassDescription *)classDesc containerSpecifier:(NSScriptObjectSpecifier *)container key:(NSString *)property test:(NSScriptWhoseTest *)test","- (NSScriptWhoseTest *)test","- (void)setTest:(NSScriptWhoseTest *)test","- (NSWhoseSubelementIdentifier)startSubelementIdentifier","- (void)setStartSubelementIdentifier:(NSWhoseSubelementIdentifier)subelement","- (NSInteger)startSubelementIndex","- (void)setStartSubelementIndex:(NSInteger)index","- (NSWhoseSubelementIdentifier)endSubelementIdentifier","- (void)setEndSubelementIdentifier:(NSWhoseSubelementIdentifier)subelement","- (NSInteger)endSubelementIndex","- (void)setEndSubelementIndex:(NSInteger)index","- (void)setReceiversSpecifier:(NSScriptObjectSpecifier *)receiversRef","- (NSScriptObjectSpecifier *)keySpecifier","- (NSSaveOptions)saveOptions","- (NSScriptClassDescription *)createClassDescription","- (NSDictionary *)resolvedKeyDictionary","- (void)setReceiversSpecifier:(NSScriptObjectSpecifier *)receiversRef","- (NSScriptObjectSpecifier *)keySpecifier","- (void)setReceiversSpecifier:(NSScriptObjectSpecifier *)receiversRef","- (NSScriptObjectSpecifier *)keySpecifier","- (NSSaveOptions)saveOptions","- (void)setReceiversSpecifier:(NSScriptObjectSpecifier *)receiversRef","- (NSScriptObjectSpecifier *)keySpecifier","+ (NSScriptSuiteRegistry *)sharedScriptSuiteRegistry","+ (void)setSharedScriptSuiteRegistry:(NSScriptSuiteRegistry *)registry","- (void)loadSuitesFromBundle:(NSBundle *)bundle","- (void)loadSuiteWithDictionary:(NSDictionary *)suiteDeclaration fromBundle:(NSBundle *)bundle","- (void)registerClassDescription:(NSScriptClassDescription *)classDescription","- (void)registerCommandDescription:(NSScriptCommandDescription *)commandDescription","- (NSArray *)suiteNames","- (FourCharCode)appleEventCodeForSuite:(NSString *)suiteName","- (NSBundle *)bundleForSuite:(NSString *)suiteName","- (NSDictionary *)classDescriptionsInSuite:(NSString *)suiteName","- (NSDictionary *)commandDescriptionsInSuite:(NSString *)suiteName","- (NSString *)suiteForAppleEventCode:(FourCharCode)appleEventCode","- (NSScriptClassDescription *)classDescriptionWithAppleEventCode:(FourCharCode)appleEventCode","- (NSScriptCommandDescription *)commandDescriptionWithAppleEventClass:(FourCharCode)appleEventClassCode andAppleEventCode:(FourCharCode)appleEventIDCode","- (NSData *)aeteResource:(NSString *)languageName","- (BOOL)isTrue","- (id)initAndTestWithTests:(NSArray *)subTests","- (id)initOrTestWithTests:(NSArray *)subTests","- (id)initNotTestWithTest:(NSScriptWhoseTest *)subTest","- (id)initWithObjectSpecifier:(NSScriptObjectSpecifier *)obj1 comparisonOperator:(NSTestComparisonOperation)compOp testObject:(id)obj2","- (BOOL)isEqualTo:(id)object","- (BOOL)isLessThanOrEqualTo:(id)object","- (BOOL)isLessThan:(id)object","- (BOOL)isGreaterThanOrEqualTo:(id)object","- (BOOL)isGreaterThan:(id)object","- (BOOL)isNotEqualTo:(id)object","- (BOOL)doesContain:(id)object","- (BOOL)isLike:(NSString *)object","- (BOOL)isCaseInsensitiveLike:(NSString *)object","- (BOOL)scriptingIsEqualTo:(id)object","- (BOOL)scriptingIsLessThanOrEqualTo:(id)object","- (BOOL)scriptingIsLessThan:(id)object","- (BOOL)scriptingIsGreaterThanOrEqualTo:(id)object","- (BOOL)scriptingIsGreaterThan:(id)object","- (BOOL)scriptingBeginsWith:(id)object","- (BOOL)scriptingEndsWith:(id)object","- (BOOL)scriptingContains:(id)object","- (NSUInteger)count","- (id)member:(id)object","- (NSEnumerator *)objectEnumerator","- (NSArray *)allObjects","- (id)anyObject","- (BOOL)containsObject:(id)anObject","- (NSString *)description","- (NSString *)descriptionWithLocale:(id)locale","- (BOOL)intersectsSet:(NSSet *)otherSet","- (BOOL)isEqualToSet:(NSSet *)otherSet","- (BOOL)isSubsetOfSet:(NSSet *)otherSet","- (void)makeObjectsPerformSelector:(SEL)aSelector","- (void)makeObjectsPerformSelector:(SEL)aSelector withObject:(id)argument","+ (id)set","+ (id)setWithObject:(id)object","+ (id)setWithObjects:(const id *)objects count:(NSUInteger)cnt","+ (id)setWithSet:(NSSet *)set","+ (id)setWithArray:(NSArray *)array","- (id)initWithObjects:(const id *)objects count:(NSUInteger)cnt","- (id)initWithSet:(NSSet *)set","- (id)initWithSet:(NSSet *)set copyItems:(BOOL)flag","- (id)initWithArray:(NSArray *)array","- (void)addObject:(id)object","- (void)removeObject:(id)object","- (void)addObjectsFromArray:(NSArray *)array","- (void)intersectSet:(NSSet *)otherSet","- (void)minusSet:(NSSet *)otherSet","- (void)removeAllObjects","- (void)unionSet:(NSSet *)otherSet","- (void)setSet:(NSSet *)otherSet","+ (id)setWithCapacity:(NSUInteger)numItems","- (id)initWithCapacity:(NSUInteger)numItems","- (id)initWithCapacity:(NSUInteger)numItems","- (id)initWithArray:(NSArray *)array","- (id)initWithSet:(NSSet *)set","- (NSUInteger)countForObject:(id)object","- (NSEnumerator *)objectEnumerator","- (void)addObject:(id)object","- (void)removeObject:(id)object","- (id)initWithKey:(NSString *)key ascending:(BOOL)ascending","- (id)initWithKey:(NSString *)key ascending:(BOOL)ascending selector:(SEL)selector","- (NSString *)key","- (BOOL)ascending","- (SEL)selector","- (NSComparisonResult)compareObject:(id)object1 toObject:(id)object2","- (id)reversedSortDescriptor","- (NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors","- (void)sortUsingDescriptors:(NSArray *)sortDescriptors","- (void)setDelegate:(id <NSSpellServerDelegate>)anObject","- (id <NSSpellServerDelegate>)delegate","- (BOOL)registerLanguage:(NSString *)language byVendor:(NSString *)vendor","- (BOOL)isWordInUserDictionaries:(NSString *)word caseSensitive:(BOOL)flag","- (void)run","- (void)open","- (void)close","- (id <NSStreamDelegate>)delegate","- (void)setDelegate:(id <NSStreamDelegate>)delegate","- (id)propertyForKey:(NSString *)key","- (BOOL)setProperty:(id)property forKey:(NSString *)key","- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode","- (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode","- (NSStreamStatus)streamStatus","- (NSError *)streamError","- (BOOL)hasBytesAvailable","- (BOOL)hasSpaceAvailable","+ (void)getStreamsToHost:(NSHost *)host port:(NSInteger)port inputStream:(NSInputStream **)inputStream outputStream:(NSOutputStream **)outputStream","- (id)initWithData:(NSData *)data","- (id)initWithFileAtPath:(NSString *)path","+ (id)inputStreamWithData:(NSData *)data","+ (id)inputStreamWithFileAtPath:(NSString *)path","- (id)initToMemory","- (id)initToFileAtPath:(NSString *)path append:(BOOL)shouldAppend","+ (id)outputStreamToMemory","+ (id)outputStreamToFileAtPath:(NSString *)path append:(BOOL)shouldAppend","- (NSUInteger)length","- (unichar)characterAtIndex:(NSUInteger)index","- (void)getCharacters:(unichar *)buffer range:(NSRange)aRange","- (NSString *)substringFromIndex:(NSUInteger)from","- (NSString *)substringToIndex:(NSUInteger)to","- (NSString *)substringWithRange:(NSRange)range","- (NSComparisonResult)compare:(NSString *)string","- (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask","- (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask range:(NSRange)compareRange","- (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask range:(NSRange)compareRange locale:(id)locale","- (NSComparisonResult)caseInsensitiveCompare:(NSString *)string","- (NSComparisonResult)localizedCompare:(NSString *)string","- (NSComparisonResult)localizedCaseInsensitiveCompare:(NSString *)string","- (BOOL)isEqualToString:(NSString *)aString","- (BOOL)hasPrefix:(NSString *)aString","- (BOOL)hasSuffix:(NSString *)aString","- (NSRange)rangeOfString:(NSString *)aString","- (NSRange)rangeOfString:(NSString *)aString options:(NSStringCompareOptions)mask","- (NSRange)rangeOfString:(NSString *)aString options:(NSStringCompareOptions)mask range:(NSRange)searchRange","- (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)aSet","- (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)aSet options:(NSStringCompareOptions)mask","- (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)aSet options:(NSStringCompareOptions)mask range:(NSRange)searchRange","- (NSRange)rangeOfComposedCharacterSequenceAtIndex:(NSUInteger)index","- (NSString *)stringByAppendingString:(NSString *)aString","- (double)doubleValue","- (float)floatValue","- (int)intValue","- (NSArray *)componentsSeparatedByString:(NSString *)separator","- (NSString *)commonPrefixWithString:(NSString *)aString options:(NSStringCompareOptions)mask","- (NSString *)uppercaseString","- (NSString *)lowercaseString","- (NSString *)capitalizedString","- (NSString *)stringByTrimmingCharactersInSet:(NSCharacterSet *)set","- (NSString *)stringByPaddingToLength:(NSUInteger)newLength withString:(NSString *)padString startingAtIndex:(NSUInteger)padIndex","- (void)getLineStart:(NSUInteger *)startPtr end:(NSUInteger *)lineEndPtr contentsEnd:(NSUInteger *)contentsEndPtr forRange:(NSRange)range","- (NSRange)lineRangeForRange:(NSRange)range","- (void)getParagraphStart:(NSUInteger *)startPtr end:(NSUInteger *)parEndPtr contentsEnd:(NSUInteger *)contentsEndPtr forRange:(NSRange)range","- (NSRange)paragraphRangeForRange:(NSRange)range","- (NSString *)description","- (NSUInteger)hash","- (NSStringEncoding)fastestEncoding","- (NSStringEncoding)smallestEncoding","- (NSData *)dataUsingEncoding:(NSStringEncoding)encoding allowLossyConversion:(BOOL)lossy","- (NSData *)dataUsingEncoding:(NSStringEncoding)encoding","- (BOOL)canBeConvertedToEncoding:(NSStringEncoding)encoding","- (BOOL)getCString:(char *)buffer maxLength:(NSUInteger)maxBufferCount encoding:(NSStringEncoding)encoding","- (BOOL)getBytes:(void *)buffer maxLength:(NSUInteger)maxBufferCount usedLength:(NSUInteger *)usedBufferCount encoding:(NSStringEncoding)encoding options:(NSStringEncodingConversionOptions)options range:(NSRange)range remainingRange:(NSRangePointer)leftover","- (NSUInteger)maximumLengthOfBytesUsingEncoding:(NSStringEncoding)enc","- (NSUInteger)lengthOfBytesUsingEncoding:(NSStringEncoding)enc","- (NSString *)decomposedStringWithCanonicalMapping","- (NSString *)precomposedStringWithCanonicalMapping","- (NSString *)decomposedStringWithCompatibilityMapping","- (NSString *)precomposedStringWithCompatibilityMapping","+ (NSStringEncoding)defaultCStringEncoding","+ (const NSStringEncoding *)availableStringEncodings","+ (NSString *)localizedNameOfStringEncoding:(NSStringEncoding)encoding","- (id)init","- (id)initWithCharactersNoCopy:(unichar *)characters length:(NSUInteger)length freeWhenDone:(BOOL)freeBuffer","- (id)initWithCharacters:(const unichar *)characters length:(NSUInteger)length","- (id)initWithUTF8String:(const char *)nullTerminatedCString","- (id)initWithString:(NSString *)aString","- (id)initWithData:(NSData *)data encoding:(NSStringEncoding)encoding","- (id)initWithBytes:(const void *)bytes length:(NSUInteger)len encoding:(NSStringEncoding)encoding","- (id)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)len encoding:(NSStringEncoding)encoding freeWhenDone:(BOOL)freeBuffer","+ (id)string","+ (id)stringWithString:(NSString *)string","+ (id)stringWithCharacters:(const unichar *)characters length:(NSUInteger)length","+ (id)stringWithUTF8String:(const char *)nullTerminatedCString","- (id)initWithCString:(const char *)nullTerminatedCString encoding:(NSStringEncoding)encoding","+ (id)stringWithCString:(const char *)cString encoding:(NSStringEncoding)enc","- (id)initWithContentsOfURL:(NSURL *)url encoding:(NSStringEncoding)enc error:(NSError **)error","- (id)initWithContentsOfFile:(NSString *)path encoding:(NSStringEncoding)enc error:(NSError **)error","+ (id)stringWithContentsOfURL:(NSURL *)url encoding:(NSStringEncoding)enc error:(NSError **)error","+ (id)stringWithContentsOfFile:(NSString *)path encoding:(NSStringEncoding)enc error:(NSError **)error","- (id)initWithContentsOfURL:(NSURL *)url usedEncoding:(NSStringEncoding *)enc error:(NSError **)error","- (id)initWithContentsOfFile:(NSString *)path usedEncoding:(NSStringEncoding *)enc error:(NSError **)error","+ (id)stringWithContentsOfURL:(NSURL *)url usedEncoding:(NSStringEncoding *)enc error:(NSError **)error","+ (id)stringWithContentsOfFile:(NSString *)path usedEncoding:(NSStringEncoding *)enc error:(NSError **)error","- (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)useAuxiliaryFile encoding:(NSStringEncoding)enc error:(NSError **)error","- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile encoding:(NSStringEncoding)enc error:(NSError **)error","- (void)replaceCharactersInRange:(NSRange)range withString:(NSString *)aString","- (void)insertString:(NSString *)aString atIndex:(NSUInteger)loc","- (void)deleteCharactersInRange:(NSRange)range","- (void)appendString:(NSString *)aString","- (void)setString:(NSString *)aString","- (id)initWithCapacity:(NSUInteger)capacity","+ (id)stringWithCapacity:(NSUInteger)capacity","- (NSUInteger)replaceOccurrencesOfString:(NSString *)target withString:(NSString *)replacement options:(NSStringCompareOptions)options range:(NSRange)searchRange","- (id)propertyList","- (NSDictionary *)propertyListFromStringsFileFormat","- (void)getCharacters:(unichar *)buffer","- (id)init","- (void)setLaunchPath:(NSString *)path","- (void)setArguments:(NSArray *)arguments","- (void)setEnvironment:(NSDictionary *)dict","- (void)setCurrentDirectoryPath:(NSString *)path","- (void)setStandardInput:(id)input","- (void)setStandardOutput:(id)output","- (void)setStandardError:(id)error","- (NSString *)launchPath","- (NSArray *)arguments","- (NSDictionary *)environment","- (NSString *)currentDirectoryPath","- (id)standardInput","- (id)standardOutput","- (id)standardError","- (void)launch","- (void)interrupt","- (void)terminate","- (BOOL)suspend","- (BOOL)resume","- (int)processIdentifier","- (BOOL)isRunning","- (int)terminationStatus","+ (NSTask *)launchedTaskWithLaunchPath:(NSString *)path arguments:(NSArray *)arguments","- (void)waitUntilExit","+ (NSTextCheckingResult *)orthographyCheckingResultWithRange:(NSRange)range orthography:(NSOrthography *)orthography","+ (NSTextCheckingResult *)spellCheckingResultWithRange:(NSRange)range","+ (NSTextCheckingResult *)grammarCheckingResultWithRange:(NSRange)range details:(NSArray *)details","+ (NSTextCheckingResult *)dateCheckingResultWithRange:(NSRange)range date:(NSDate *)date","+ (NSTextCheckingResult *)dateCheckingResultWithRange:(NSRange)range date:(NSDate *)date timeZone:(NSTimeZone *)timeZone duration:(NSTimeInterval)duration","+ (NSTextCheckingResult *)addressCheckingResultWithRange:(NSRange)range components:(NSDictionary *)components","+ (NSTextCheckingResult *)linkCheckingResultWithRange:(NSRange)range URL:(NSURL *)url","+ (NSTextCheckingResult *)quoteCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString","+ (NSTextCheckingResult *)dashCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString","+ (NSTextCheckingResult *)replacementCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString","+ (NSTextCheckingResult *)correctionCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString","+ (NSThread *)currentThread","+ (void)detachNewThreadSelector:(SEL)selector toTarget:(id)target withObject:(id)argument","+ (BOOL)isMultiThreaded","- (NSMutableDictionary *)threadDictionary","+ (void)sleepUntilDate:(NSDate *)date","+ (void)sleepForTimeInterval:(NSTimeInterval)ti","+ (void)exit","+ (double)threadPriority","+ (BOOL)setThreadPriority:(double)p","- (void)performSelectorOnMainThread:(SEL)aSelector withObject:(id)arg waitUntilDone:(BOOL)wait modes:(NSArray *)array","- (void)performSelectorOnMainThread:(SEL)aSelector withObject:(id)arg waitUntilDone:(BOOL)wait","+ (NSTimer *)timerWithTimeInterval:(NSTimeInterval)ti invocation:(NSInvocation *)invocation repeats:(BOOL)yesOrNo","+ (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)ti invocation:(NSInvocation *)invocation repeats:(BOOL)yesOrNo","+ (NSTimer *)timerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(id)userInfo repeats:(BOOL)yesOrNo","+ (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(id)userInfo repeats:(BOOL)yesOrNo","- (id)initWithFireDate:(NSDate *)date interval:(NSTimeInterval)ti target:(id)t selector:(SEL)s userInfo:(id)ui repeats:(BOOL)rep","- (void)fire","- (NSDate *)fireDate","- (void)setFireDate:(NSDate *)date","- (NSTimeInterval)timeInterval","- (void)invalidate","- (BOOL)isValid","- (id)userInfo","- (NSString *)name","- (NSData *)data","- (NSInteger)secondsFromGMTForDate:(NSDate *)aDate","- (NSString *)abbreviationForDate:(NSDate *)aDate","- (BOOL)isDaylightSavingTimeForDate:(NSDate *)aDate","+ (NSTimeZone *)systemTimeZone","+ (void)resetSystemTimeZone","+ (NSTimeZone *)defaultTimeZone","+ (void)setDefaultTimeZone:(NSTimeZone *)aTimeZone","+ (NSTimeZone *)localTimeZone","+ (NSArray *)knownTimeZoneNames","+ (NSDictionary *)abbreviationDictionary","- (NSInteger)secondsFromGMT","- (NSString *)abbreviation","- (BOOL)isDaylightSavingTime","- (NSString *)description","- (BOOL)isEqualToTimeZone:(NSTimeZone *)aTimeZone","+ (id)timeZoneWithName:(NSString *)tzName","+ (id)timeZoneWithName:(NSString *)tzName data:(NSData *)aData","- (id)initWithName:(NSString *)tzName","- (id)initWithName:(NSString *)tzName data:(NSData *)aData","+ (id)timeZoneForSecondsFromGMT:(NSInteger)seconds","+ (id)timeZoneWithAbbreviation:(NSString *)abbreviation","+ (NSUbiquitousKeyValueStore *)defaultStore","- (id)objectForKey:(NSString *)aKey","- (void)setObject:(id)anObject forKey:(NSString *)aKey","- (void)removeObjectForKey:(NSString *)aKey","- (NSString *)stringForKey:(NSString *)aKey","- (NSArray *)arrayForKey:(NSString *)aKey","- (NSDictionary *)dictionaryForKey:(NSString *)aKey","- (NSData *)dataForKey:(NSString *)aKey","- (long long)longLongForKey:(NSString *)aKey","- (double)doubleForKey:(NSString *)aKey","- (BOOL)boolForKey:(NSString *)aKey","- (void)setString:(NSString *)aString forKey:(NSString *)aKey","- (void)setData:(NSData *)aData forKey:(NSString *)aKey","- (void)setArray:(NSArray *)anArray forKey:(NSString *)aKey","- (void)setDictionary:(NSDictionary *)aDictionary forKey:(NSString *)aKey","- (void)setLongLong:(long long)value forKey:(NSString *)aKey","- (void)setDouble:(double)value forKey:(NSString *)aKey","- (void)setBool:(BOOL)value forKey:(NSString *)aKey","- (NSDictionary *)dictionaryRepresentation","- (BOOL)synchronize","- (void)beginUndoGrouping","- (void)endUndoGrouping","- (NSInteger)groupingLevel","- (void)disableUndoRegistration","- (void)enableUndoRegistration","- (BOOL)isUndoRegistrationEnabled","- (BOOL)groupsByEvent","- (void)setGroupsByEvent:(BOOL)groupsByEvent","- (void)setLevelsOfUndo:(NSUInteger)levels","- (NSUInteger)levelsOfUndo","- (void)setRunLoopModes:(NSArray *)runLoopModes","- (NSArray *)runLoopModes","- (void)undo","- (void)redo","- (void)undoNestedGroup","- (BOOL)canUndo","- (BOOL)canRedo","- (BOOL)isUndoing","- (BOOL)isRedoing","- (void)removeAllActions","- (void)removeAllActionsWithTarget:(id)target","- (void)registerUndoWithTarget:(id)target selector:(SEL)selector object:(id)anObject","- (id)prepareWithInvocationTarget:(id)target","- (NSString *)undoActionName","- (NSString *)redoActionName","- (void)setActionName:(NSString *)actionName","- (NSString *)undoMenuItemTitle","- (NSString *)redoMenuItemTitle","- (NSString *)undoMenuTitleForUndoActionName:(NSString *)actionName","- (NSString *)redoMenuTitleForUndoActionName:(NSString *)actionName","- (id)initWithScheme:(NSString *)scheme host:(NSString *)host path:(NSString *)path","- (id)initFileURLWithPath:(NSString *)path","+ (id)fileURLWithPath:(NSString *)path","- initWithString:(NSString *)URLString","- initWithString:(NSString *)URLString relativeToURL:(NSURL *)baseURL","+ (id)URLWithString:(NSString *)URLString","+ (id)URLWithString:(NSString *)URLString relativeToURL:(NSURL *)baseURL","- (NSString *)absoluteString","- (NSString *)relativeString","- (NSURL *)baseURL","- (NSURL *)absoluteURL","- (NSString *)scheme","- (NSString *)resourceSpecifier","- (NSString *)host","- (NSNumber *)port","- (NSString *)user","- (NSString *)password","- (NSString *)path","- (NSString *)fragment","- (NSString *)parameterString","- (NSString *)query","- (NSString *)relativePath","- (BOOL)isFileURL","- (NSURL *)standardizedURL","- (NSString *)stringByAddingPercentEscapesUsingEncoding:(NSStringEncoding)enc","- (NSString *)stringByReplacingPercentEscapesUsingEncoding:(NSStringEncoding)enc","- (id)initWithProtectionSpace:(NSURLProtectionSpace *)space proposedCredential:(NSURLCredential *)credential previousFailureCount:(NSInteger)previousFailureCount failureResponse:(NSURLResponse *)response error:(NSError *)error sender:(id<NSURLAuthenticationChallengeSender>)sender","- (id)initWithAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge sender:(id<NSURLAuthenticationChallengeSender>)sender","- (NSURLProtectionSpace *)protectionSpace","- (NSURLCredential *)proposedCredential","- (NSInteger)previousFailureCount","- (NSURLResponse *)failureResponse","- (NSError *)error","- (id<NSURLAuthenticationChallengeSender>)sender","- (id)initWithResponse:(NSURLResponse *)response data:(NSData *)data","- (id)initWithResponse:(NSURLResponse *)response data:(NSData *)data userInfo:(NSDictionary *)userInfo storagePolicy:(NSURLCacheStoragePolicy)storagePolicy","- (NSURLResponse *)response","- (NSData *)data","- (NSDictionary *)userInfo","- (NSURLCacheStoragePolicy)storagePolicy","+ (NSURLCache *)sharedURLCache","+ (void)setSharedURLCache:(NSURLCache *)cache","- (id)initWithMemoryCapacity:(NSUInteger)memoryCapacity diskCapacity:(NSUInteger)diskCapacity diskPath:(NSString *)path","- (NSCachedURLResponse *)cachedResponseForRequest:(NSURLRequest *)request","- (void)storeCachedResponse:(NSCachedURLResponse *)cachedResponse forRequest:(NSURLRequest *)request","- (void)removeCachedResponseForRequest:(NSURLRequest *)request","- (void)removeAllCachedResponses","- (NSUInteger)memoryCapacity","- (NSUInteger)diskCapacity","- (void)setMemoryCapacity:(NSUInteger)memoryCapacity","- (void)setDiskCapacity:(NSUInteger)diskCapacity","- (NSUInteger)currentMemoryUsage","- (NSUInteger)currentDiskUsage","+ (BOOL)canHandleRequest:(NSURLRequest *)request","+ (NSURLConnection *)connectionWithRequest:(NSURLRequest *)request delegate:(id)delegate","- (id)initWithRequest:(NSURLRequest *)request delegate:(id)delegate","- (void)cancel","+ (NSData *)sendSynchronousRequest:(NSURLRequest *)request returningResponse:(NSURLResponse **)response error:(NSError **)error","- (NSURLCredentialPersistence)persistence","- (id)initWithUser:(NSString *)user password:(NSString *)password persistence:(NSURLCredentialPersistence)persistence","+ (NSURLCredential *)credentialWithUser:(NSString *)user password:(NSString *)password persistence:(NSURLCredentialPersistence)persistence","- (NSString *)user","- (NSString *)password","- (BOOL)hasPassword","- (SecIdentityRef)identity","+ (NSURLCredentialStorage *)sharedCredentialStorage","- (NSDictionary *)credentialsForProtectionSpace:(NSURLProtectionSpace *)space","- (NSDictionary *)allCredentials","- (void)setCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space","- (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space","- (NSURLCredential *)defaultCredentialForProtectionSpace:(NSURLProtectionSpace *)space","- (void)setDefaultCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space","+ (BOOL)canResumeDownloadDecodedWithEncodingMIMEType:(NSString *)MIMEType","- (id)initWithRequest:(NSURLRequest *)request delegate:(id <NSURLDownloadDelegate>)delegate","- (id)initWithResumeData:(NSData *)resumeData delegate:(id <NSURLDownloadDelegate>)delegate path:(NSString *)path","- (void)cancel","- (void)setDestination:(NSString *)path allowOverwrite:(BOOL)allowOverwrite","- (NSURLRequest *)request","- (NSData *)resumeData","- (void)setDeletesFileUponFailure:(BOOL)deletesFileUponFailure","- (BOOL)deletesFileUponFailure","- (id)initWithHost:(NSString *)host port:(NSInteger)port protocol:(NSString *)protocol realm:(NSString *)realm authenticationMethod:(NSString *)authenticationMethod","- (id)initWithProxyHost:(NSString *)host port:(NSInteger)port type:(NSString *)type realm:(NSString *)realm authenticationMethod:(NSString *)authenticationMethod","- (NSString *)realm","- (BOOL)receivesCredentialSecurely","- (BOOL)isProxy","- (NSString *)host","- (NSInteger)port","- (NSString *)proxyType","- (NSString *)protocol","- (NSString *)authenticationMethod","- (id)initWithRequest:(NSURLRequest *)request cachedResponse:(NSCachedURLResponse *)cachedResponse client:(id <NSURLProtocolClient>)client","- (id <NSURLProtocolClient>)client","- (NSURLRequest *)request","- (NSCachedURLResponse *)cachedResponse","+ (BOOL)canInitWithRequest:(NSURLRequest *)request","+ (NSURLRequest *)canonicalRequestForRequest:(NSURLRequest *)request","+ (BOOL)requestIsCacheEquivalent:(NSURLRequest *)a toRequest:(NSURLRequest *)b","- (void)startLoading","- (void)stopLoading","+ (id)propertyForKey:(NSString *)key inRequest:(NSURLRequest *)request","+ (void)setProperty:(id)value forKey:(NSString *)key inRequest:(NSMutableURLRequest *)request","+ (void)removePropertyForKey:(NSString *)key inRequest:(NSMutableURLRequest *)request","+ (BOOL)registerClass:(Class)protocolClass","+ (void)unregisterClass:(Class)protocolClass","+ (id)requestWithURL:(NSURL *)URL","+ (id)requestWithURL:(NSURL *)URL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval","- (id)initWithURL:(NSURL *)URL","- (id)initWithURL:(NSURL *)URL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval","- (NSURL *)URL","- (NSURLRequestCachePolicy)cachePolicy","- (NSTimeInterval)timeoutInterval","- (NSURL *)mainDocumentURL","- (void)setURL:(NSURL *)URL","- (void)setCachePolicy:(NSURLRequestCachePolicy)policy","- (void)setTimeoutInterval:(NSTimeInterval)seconds","- (void)setMainDocumentURL:(NSURL *)URL","- (NSString *)HTTPMethod","- (NSDictionary *)allHTTPHeaderFields","- (NSString *)valueForHTTPHeaderField:(NSString *)field","- (NSData *)HTTPBody","- (NSInputStream *)HTTPBodyStream","- (BOOL)HTTPShouldHandleCookies","- (void)setHTTPMethod:(NSString *)method","- (void)setAllHTTPHeaderFields:(NSDictionary *)headerFields","- (void)setValue:(NSString *)value forHTTPHeaderField:(NSString *)field","- (void)addValue:(NSString *)value forHTTPHeaderField:(NSString *)field","- (void)setHTTPBody:(NSData *)data","- (void)setHTTPBodyStream:(NSInputStream *)inputStream","- (void)setHTTPShouldHandleCookies:(BOOL)should","- (id)initWithURL:(NSURL *)URL MIMEType:(NSString *)MIMEType expectedContentLength:(NSInteger)length textEncodingName:(NSString *)name","- (NSURL *)URL","- (NSString *)MIMEType","- (long long)expectedContentLength","- (NSString *)textEncodingName","- (NSString *)suggestedFilename","- (NSInteger)statusCode","- (NSDictionary *)allHeaderFields","+ (NSString *)localizedStringForStatusCode:(NSInteger)statusCode","+ (NSUserDefaults *)standardUserDefaults","+ (void)resetStandardUserDefaults","- (id)init","- (id)initWithUser:(NSString *)username","- (id)objectForKey:(NSString *)defaultName","- (void)setObject:(id)value forKey:(NSString *)defaultName","- (void)removeObjectForKey:(NSString *)defaultName","- (NSString *)stringForKey:(NSString *)defaultName","- (NSArray *)arrayForKey:(NSString *)defaultName","- (NSDictionary *)dictionaryForKey:(NSString *)defaultName","- (NSData *)dataForKey:(NSString *)defaultName","- (NSArray *)stringArrayForKey:(NSString *)defaultName","- (NSInteger)integerForKey:(NSString *)defaultName","- (float)floatForKey:(NSString *)defaultName","- (double)doubleForKey:(NSString *)defaultName","- (BOOL)boolForKey:(NSString *)defaultName","- (void)setInteger:(NSInteger)value forKey:(NSString *)defaultName","- (void)setFloat:(float)value forKey:(NSString *)defaultName","- (void)setDouble:(double)value forKey:(NSString *)defaultName","- (void)setBool:(BOOL)value forKey:(NSString *)defaultName","- (void)registerDefaults:(NSDictionary *)registrationDictionary","- (void)addSuiteNamed:(NSString *)suiteName","- (void)removeSuiteNamed:(NSString *)suiteName","- (NSDictionary *)dictionaryRepresentation","- (NSArray *)volatileDomainNames","- (NSDictionary *)volatileDomainForName:(NSString *)domainName","- (void)setVolatileDomain:(NSDictionary *)domain forName:(NSString *)domainName","- (void)removeVolatileDomainForName:(NSString *)domainName","- (NSArray *)persistentDomainNames","- (NSDictionary *)persistentDomainForName:(NSString *)domainName","- (void)setPersistentDomain:(NSDictionary *)domain forName:(NSString *)domainName","- (void)removePersistentDomainForName:(NSString *)domainName","- (BOOL)synchronize","- (BOOL)objectIsForcedForKey:(NSString *)key","- (BOOL)objectIsForcedForKey:(NSString *)key inDomain:(NSString *)domain","- (void)getValue:(void *)value","- (const char *)objCType","- (id)initWithBytes:(const void *)value objCType:(const char *)type","+ (NSValue *)valueWithBytes:(const void *)value objCType:(const char *)type","+ (NSValue *)value:(const void *)value withObjCType:(const char *)type","+ (NSValue *)valueWithNonretainedObject:(id)anObject","- (id)nonretainedObjectValue","+ (NSValue *)valueWithPointer:(const void *)pointer","- (void *)pointerValue","- (BOOL)isEqualToValue:(NSValue *)value","- (char)charValue","- (unsigned char)unsignedCharValue","- (short)shortValue","- (unsigned short)unsignedShortValue","- (int)intValue","- (unsigned int)unsignedIntValue","- (long)longValue","- (unsigned long)unsignedLongValue","- (long long)longLongValue","- (unsigned long long)unsignedLongLongValue","- (float)floatValue","- (double)doubleValue","- (BOOL)boolValue","- (NSString *)stringValue","- (NSComparisonResult)compare:(NSNumber *)otherNumber","- (BOOL)isEqualToNumber:(NSNumber *)number","- (NSString *)descriptionWithLocale:(id)locale","- (id)initWithChar:(char)value","- (id)initWithUnsignedChar:(unsigned char)value","- (id)initWithShort:(short)value","- (id)initWithUnsignedShort:(unsigned short)value","- (id)initWithInt:(int)value","- (id)initWithUnsignedInt:(unsigned int)value","- (id)initWithLong:(long)value","- (id)initWithUnsignedLong:(unsigned long)value","- (id)initWithLongLong:(long long)value","- (id)initWithUnsignedLongLong:(unsigned long long)value","- (id)initWithFloat:(float)value","- (id)initWithDouble:(double)value","- (id)initWithBool:(BOOL)value","+ (NSNumber *)numberWithChar:(char)value","+ (NSNumber *)numberWithUnsignedChar:(unsigned char)value","+ (NSNumber *)numberWithShort:(short)value","+ (NSNumber *)numberWithUnsignedShort:(unsigned short)value","+ (NSNumber *)numberWithInt:(int)value","+ (NSNumber *)numberWithUnsignedInt:(unsigned int)value","+ (NSNumber *)numberWithLong:(long)value","+ (NSNumber *)numberWithUnsignedLong:(unsigned long)value","+ (NSNumber *)numberWithLongLong:(long long)value","+ (NSNumber *)numberWithUnsignedLongLong:(unsigned long long)value","+ (NSNumber *)numberWithFloat:(float)value","+ (NSNumber *)numberWithDouble:(double)value","+ (NSNumber *)numberWithBool:(BOOL)value","+ (void)setValueTransformer:(NSValueTransformer *)transformer forName:(NSString *)name","+ (NSValueTransformer *)valueTransformerForName:(NSString *)name","+ (NSArray *)valueTransformerNames","+ (Class)transformedValueClass","+ (BOOL)allowsReverseTransformation","- (id)transformedValue:(id)value","- (id)reverseTransformedValue:(id)value","- (id)initWithXMLString:(NSString *)string options:(NSUInteger)mask error:(NSError **)error","- (id)initWithContentsOfURL:(NSURL *)url options:(NSUInteger)mask error:(NSError **)error","- (id)initWithData:(NSData *)data options:(NSUInteger)mask error:(NSError **)error","- (id)initWithRootElement:(NSXMLElement *)element","+ (Class)replacementClassForClass:(Class)cls","- (void)setCharacterEncoding:(NSString *)encoding","- (NSString *)characterEncoding","- (void)setVersion:(NSString *)version","- (NSString *)version","- (void)setStandalone:(BOOL)standalone","- (BOOL)isStandalone","- (void)setDocumentContentKind:(NSXMLDocumentContentKind)kind","- (NSXMLDocumentContentKind)documentContentKind","- (void)setMIMEType:(NSString *)MIMEType","- (NSString *)MIMEType","- (void)setDTD:(NSXMLDTD *)documentTypeDeclaration","- (NSXMLDTD *)DTD","- (void)setRootElement:(NSXMLNode *)root","- (NSXMLElement *)rootElement","- (void)insertChild:(NSXMLNode *)child atIndex:(NSUInteger)index","- (void)insertChildren:(NSArray *)children atIndex:(NSUInteger)index","- (void)removeChildAtIndex:(NSUInteger)index","- (void)setChildren:(NSArray *)children","- (void)addChild:(NSXMLNode *)child","- (void)replaceChildAtIndex:(NSUInteger)index withNode:(NSXMLNode *)node","- (NSData *)XMLData","- (NSData *)XMLDataWithOptions:(NSUInteger)options","- (id)objectByApplyingXSLT:(NSData *)xslt arguments:(NSDictionary *)arguments error:(NSError **)error","- (id)objectByApplyingXSLTString:(NSString *)xslt arguments:(NSDictionary *)arguments error:(NSError **)error","- (id)objectByApplyingXSLTAtURL:(NSURL *)xsltURL arguments:(NSDictionary *)argument error:(NSError **)error","- (BOOL)validateAndReturnError:(NSError **)error","- (id)initWithContentsOfURL:(NSURL *)url options:(NSUInteger)mask error:(NSError **)error","- (id)initWithData:(NSData *)data options:(NSUInteger)mask error:(NSError **)error","- (void)setPublicID:(NSString *)publicID","- (NSString *)publicID","- (void)setSystemID:(NSString *)systemID","- (NSString *)systemID","- (void)insertChild:(NSXMLNode *)child atIndex:(NSUInteger)index","- (void)insertChildren:(NSArray *)children atIndex:(NSUInteger)index","- (void)removeChildAtIndex:(NSUInteger)index","- (void)setChildren:(NSArray *)children","- (void)addChild:(NSXMLNode *)child","- (void)replaceChildAtIndex:(NSUInteger)index withNode:(NSXMLNode *)node","- (NSXMLDTDNode *)entityDeclarationForName:(NSString *)name","- (NSXMLDTDNode *)notationDeclarationForName:(NSString *)name","- (NSXMLDTDNode *)elementDeclarationForName:(NSString *)name","- (NSXMLDTDNode *)attributeDeclarationForName:(NSString *)name elementName:(NSString *)elementName","+ (NSXMLDTDNode *)predefinedEntityDeclarationForName:(NSString *)name","- (id)initWithXMLString:(NSString *)string","- (void)setDTDKind:(NSXMLDTDNodeKind)kind","- (NSXMLDTDNodeKind)DTDKind","- (BOOL)isExternal","- (void)setPublicID:(NSString *)publicID","- (NSString *)publicID","- (void)setSystemID:(NSString *)systemID","- (NSString *)systemID","- (void)setNotationName:(NSString *)notationName","- (NSString *)notationName","- (id)initWithName:(NSString *)name","- (id)initWithName:(NSString *)name URI:(NSString *)URI","- (id)initWithName:(NSString *)name stringValue:(NSString *)string","- (id)initWithXMLString:(NSString *)string error:(NSError **)error","- (NSArray *)elementsForName:(NSString *)name","- (NSArray *)elementsForLocalName:(NSString *)localName URI:(NSString *)URI","- (void)addAttribute:(NSXMLNode *)attribute","- (void)removeAttributeForName:(NSString *)name","- (void)setAttributes:(NSArray *)attributes","- (void)setAttributesWithDictionary:(NSDictionary *)attributes","- (NSArray *)attributes","- (NSXMLNode *)attributeForName:(NSString *)name","- (NSXMLNode *)attributeForLocalName:(NSString *)localName URI:(NSString *)URI","- (void)addNamespace:(NSXMLNode *)aNamespace","- (void)removeNamespaceForPrefix:(NSString *)name","- (void)setNamespaces:(NSArray *)namespaces","- (NSArray *)namespaces","- (NSXMLNode *)namespaceForPrefix:(NSString *)name","- (NSXMLNode *)resolveNamespaceForName:(NSString *)name","- (NSString *)resolvePrefixForNamespaceURI:(NSString *)namespaceURI","- (void)insertChild:(NSXMLNode *)child atIndex:(NSUInteger)index","- (void)insertChildren:(NSArray *)children atIndex:(NSUInteger)index","- (void)removeChildAtIndex:(NSUInteger)index","- (void)setChildren:(NSArray *)children","- (void)addChild:(NSXMLNode *)child","- (void)replaceChildAtIndex:(NSUInteger)index withNode:(NSXMLNode *)node","- (void)normalizeAdjacentTextNodesPreservingCDATA:(BOOL)preserve","- (void)setAttributesAsDictionary:(NSDictionary *)attributes","- (id)initWithKind:(NSXMLNodeKind)kind","- (id)initWithKind:(NSXMLNodeKind)kind options:(NSUInteger)options","+ (id)document","+ (id)documentWithRootElement:(NSXMLElement *)element","+ (id)elementWithName:(NSString *)name","+ (id)elementWithName:(NSString *)name URI:(NSString *)URI","+ (id)elementWithName:(NSString *)name stringValue:(NSString *)string","+ (id)elementWithName:(NSString *)name children:(NSArray *)children attributes:(NSArray *)attributes","+ (id)attributeWithName:(NSString *)name stringValue:(NSString *)stringValue","+ (id)attributeWithName:(NSString *)name URI:(NSString *)URI stringValue:(NSString *)stringValue","+ (id)namespaceWithName:(NSString *)name stringValue:(NSString *)stringValue","+ (id)processingInstructionWithName:(NSString *)name stringValue:(NSString *)stringValue","+ (id)commentWithStringValue:(NSString *)stringValue","+ (id)textWithStringValue:(NSString *)stringValue","+ (id)DTDNodeWithXMLString:(NSString *)string","- (NSXMLNodeKind)kind","- (void)setName:(NSString *)name","- (NSString *)name","- (void)setObjectValue:(id)value","- (id)objectValue","- (void)setStringValue:(NSString *)string","- (void)setStringValue:(NSString *)string resolvingEntities:(BOOL)resolve","- (NSString *)stringValue","- (NSUInteger)index","- (NSUInteger)level","- (NSXMLDocument *)rootDocument","- (NSXMLNode *)parent","- (NSUInteger)childCount","- (NSArray *)children","- (NSXMLNode *)childAtIndex:(NSUInteger)index","- (NSXMLNode *)previousSibling","- (NSXMLNode *)nextSibling","- (NSXMLNode *)previousNode","- (NSXMLNode *)nextNode","- (void)detach","- (NSString *)XPath","- (NSString *)localName","- (NSString *)prefix","- (void)setURI:(NSString *)URI","- (NSString *)URI","+ (NSString *)localNameForName:(NSString *)name","+ (NSString *)prefixForName:(NSString *)name","+ (NSXMLNode *)predefinedNamespaceForPrefix:(NSString *)name","- (NSString *)description","- (NSString *)XMLString","- (NSString *)XMLStringWithOptions:(NSUInteger)options","- (NSString *)canonicalXMLStringPreservingComments:(BOOL)comments","- (NSArray *)nodesForXPath:(NSString *)xpath error:(NSError **)error","- (NSArray *)objectsForXQuery:(NSString *)xquery constants:(NSDictionary *)constants error:(NSError **)error","- (NSArray *)objectsForXQuery:(NSString *)xquery error:(NSError **)error","- (id)initWithContentsOfURL:(NSURL *)url","- (id)initWithData:(NSData *)data","- (id <NSXMLParserDelegate>)delegate","- (void)setDelegate:(id <NSXMLParserDelegate>)delegate","- (void)setShouldProcessNamespaces:(BOOL)shouldProcessNamespaces","- (void)setShouldReportNamespacePrefixes:(BOOL)shouldReportNamespacePrefixes","- (void)setShouldResolveExternalEntities:(BOOL)shouldResolveExternalEntities","- (BOOL)shouldProcessNamespaces","- (BOOL)shouldReportNamespacePrefixes","- (BOOL)shouldResolveExternalEntities","- (BOOL)parse","- (void)abortParsing","- (NSError *)parserError","- (NSString *)publicID","- (NSString *)systemID","- (NSInteger)lineNumber","- (NSInteger)columnNumber","- (NSArray*)filesOfType:(NSString*)fileUTType","- (void)requestSyncClock","- (void)requestEnableTethering","- (void)requestDisableTethering","- (void)requestTakePicture","- (void)requestDeleteFiles:(NSArray*)files","- (void)cancelDelete","- (void)requestDownloadFile:(ICCameraFile*)file options:(NSDictionary*)options downloadDelegate:(id<ICCameraDeviceDownloadDelegate>)downloadDelegate didDownloadSelector:(SEL)selector contextInfo:(void*)contextInfo","- (void)cancelDownload","- (void)requestUploadFile:(NSURL*)fileURL options:(NSDictionary*)options uploadDelegate:(id)uploadDelegate didUploadSelector:(SEL)selector contextInfo:(void*)contextInfo","- (void)requestSendPTPCommand:(NSData*)command outData:(NSData*)data sendCommandDelegate:(id)sendCommandDelegate didSendCommandSelector:(SEL)selector contextInfo:(void*)contextInfo","- (void)requestOpenSession","- (void)requestCloseSession","- (void)requestYield","- (void)requestSendMessage:(unsigned int)messageCode outData:(NSData*)data maxReturnedDataSize:(unsigned int)maxReturnedDataSize sendMessageDelegate:(id)sendMessageDelegate didSendMessageSelector:(SEL)selector contextInfo:(void*)contextInfo","- (void)requestEjectOrDisconnect","- (ICDevice*)preferredDevice","- (id)init","- (void)start","- (void)stop","- (void)requestSelectFunctionalUnit:(ICScannerFunctionalUnitType)type","- (void)requestOverviewScan","- (void)requestScan","- (void)cancelScan","+ (id) fileTransferWithPath: (NSString *) path type: (NSString *) type totalBytes: (unsigned long long) totalBytes","- (id) initWithPath: (NSString *) path type: (NSString *) type totalBytes: (unsigned long long) totalBytes","- (void) resetInputStream","- (void) resetOutputStream","- (IMServicePlugInOutgoingFileTransfer *) outgoingFileTransferForPath:(NSString *)path","- (void) setContainerName:(NSString *)containerName","- (void) addIncomingFileTransfer:(IMServicePlugInIncomingFileTransfer *)fileTransfer","- (NSArray *) incomingFileTransfers","- (IMServicePlugInIncomingFileTransfer *) incomingFileTransferForPath:(NSString *)path","+ (id) servicePlugInMessageWithContent:(NSAttributedString*)content","- (id) initWithContent:(NSAttributedString*)content","-(id)initWithServer:(IMKServer*)server panelType:(IMKCandidatePanelType)panelType","- (id)initWithServer:(IMKServer*)server panelType:(IMKCandidatePanelType)panelType styleType:(IMKStyleType)style","- (IMKCandidatePanelType)panelType","- (void)setPanelType:(IMKCandidatePanelType)panelType","- (void)show:(IMKCandidatesLocationHint)locationHint","- (void)hide","- (BOOL)isVisible","-(void)updateCandidates","-(void)showAnnotation:(NSAttributedString*)annotationString","-(void)showSublist:(NSArray *)candidates subListDelegate:(id)delegate","-(NSAttributedString*)selectedCandidateString","-(void) setCandidateFrameTopLeft:(NSPoint)point","-(NSRect)candidateFrame","-(void)setSelectionKeys:(NSArray*)keyCodes","-(NSArray*)selectionKeys","-(void)setSelectionKeysKeylayout:(TISInputSourceRef)layout","-(TISInputSourceRef)selectionKeysKeylayout","-(void)setAttributes:(NSDictionary*)attributes","-(NSDictionary*)attributes","-(void)setDismissesAutomatically:(BOOL)flag","-(BOOL)dismissesAutomatically","-(void)selectCandidate:(NSInteger)candidateIdentifier","- (BOOL)inputText:(NSString*)string key:(NSInteger)keyCode modifiers:(NSUInteger)flags client:(id)sender","- (BOOL)inputText:(NSString*)string client:(id)sender","- (BOOL)handleEvent:(NSEvent*)event client:(id)sender","- (BOOL)didCommandBySelector:(SEL)aSelector client:(id)sender","- (id)composedString:(id)sender","- (NSAttributedString*)originalString:(id)sender","- (void)commitComposition:(id)sender","- (NSArray*)candidates:(id)sender","- (id)initWithServer:(IMKServer*)server delegate:(id)delegate client:(id)inputClient","- (void)updateComposition","- (void)cancelComposition","- (NSMutableDictionary*) compositionAttributesAtRange:(NSRange)range","- (NSRange)selectionRange","- (NSRange)replacementRange","- (NSDictionary*)markForStyle:(NSInteger)style atRange:(NSRange)range","- (void)doCommandBySelector:(SEL)aSelector commandDictionary:(NSDictionary*)infoDictionary","- (void)hidePalettes","- (NSMenu*)menu","- (id)delegate","- (void)setDelegate:(id)newDelegate","- (IMKServer*)server","- (void)annotationSelected:(NSAttributedString*)annotationString forCandidate:(NSAttributedString*)candidateString","- (void)candidateSelectionChanged:(NSAttributedString*)candidateString","- (void)candidateSelected:(NSAttributedString*)candidateString","- (id)initWithName:(NSString*)name bundleIdentifier:(NSString*)bundleIdentifier","- (id)initWithName:(NSString*)name controllerClass:(Class)controllerClassID delegateClass:(Class)delegateClassID","- (NSBundle*)bundle","- (id)initWithSection:(id)parent","- (NSString *)title","- (InstallerSection *)section","- (NSView *)contentView","- (NSView *)initialKeyView","- (NSView *)firstKeyView","- (NSView *)lastKeyView","- (InstallerPane *)nextPane","- (void)willEnterPane:(InstallerSectionDirection)dir","- (void)didEnterPane:(InstallerSectionDirection)dir","- (BOOL)shouldExitPane:(InstallerSectionDirection)dir","- (void)willExitPane:(InstallerSectionDirection)dir","- (void)didExitPane:(InstallerSectionDirection)dir","- (void)setNextEnabled:(BOOL)enabled","- (BOOL)nextEnabled","- (void)setPreviousEnabled:(BOOL)enabled","- (BOOL)previousEnabled","- (BOOL)gotoNextPane","- (BOOL)gotoPreviousPane","- (NSBundle *)bundle","- (NSString *)title","- (InstallerPane *)firstPane","- (BOOL)shouldLoad","- (void)willLoadMainNib","- (void)didLoadMainNib","- (NSMutableDictionary *)sharedDictionary","- (InstallerState *)installerState","- (InstallerPane *)activePane","- (BOOL)gotoPane:(InstallerPane *)pane","- (BOOL)licenseAgreed","- (NSString *)licenseAgreedLanguage","- (NSString *)targetVolumePath","- (NSString *)targetPath","- (NSArray *)choiceDictionaries","- (NSDictionary *)choiceDictionaryForIdentifier:(NSString *)choiceIdentifier","- (BOOL)installStarted","- (BOOL)installSucceeded","- (id)target","- (void)setTarget:(id)anObject","- (SEL)action","- (void)setAction:(SEL)aSelector","- (NSInteger)tag","- (void)setTag:(NSInteger)anInt","- (BOOL)isEnabled","- (void)setEnabled:(BOOL)flag","- (NSInteger)integerValue","- (void)setIntegerValue:(NSInteger)anInteger","- (int)intValue","- (void)setIntValue:(int)anInt","- (float)floatValue","- (void)setFloatValue:(float)aFloat","- (double)doubleValue","- (void)setDoubleValue:(double)aDouble","- (NSInteger)state","- (void)setState:(NSInteger)value","+ (IMAVButton *) playPauseButton","+ (IMAVButton *) forwardButton","+ (IMAVButton *) backwardButton","+ (IMAVButton *) muteButton","- (double)minValue","- (void)setMinValue:(double)aDouble","- (double)maxValue","- (void)setMaxValue:(double)aDouble","+ (IMAVSlider *) timeSlider","- (NSArray *) controls","- (void) addControl: (IMAVControl *) control","- (void) removeControl: (IMAVControl *) control","- (void) removeAllControls","+ (IMAVManager *) sharedAVManager","- (IMAVManagerState) state","- (NSURL *) URLToShare","- (void) setVideoDataSource:(id)dataSource","- (id) videoDataSource","- (void) setVideoOptimizationOptions:(IMVideoOptimizationOptions)options","- (IMVideoOptimizationOptions) videoOptimizationOptions","- (void) setNumberOfAudioChannels:(NSInteger)count","- (NSInteger) numberOfAudioChannels","- (NSString *) audioDeviceUID","- (NSArray *) audioDeviceChannels","- (IMAVControlBar *) controlBar","- (void) start","- (void) stop","- (void) getPixelBufferPixelFormat:(OSType *)pixelFormatOut","- (BOOL) renderIntoPixelBuffer:(CVPixelBufferRef)buffer forTime:(CVTimeStamp *)timeStamp","- (void) getOpenGLBufferContext:(CGLContextObj *)contextOut pixelFormat:(CGLPixelFormatObj *)pixelFormatOut","- (BOOL) renderIntoOpenGLBuffer:(CVOpenGLBufferRef)buffer onScreen:(int *)screenInOut forTime:(CVTimeStamp *)timeStamp","+ (NSString *)imageNameForStatus:(IMPersonStatus)status","+ (NSArray *)allServices","+ (IMService *)serviceWithName:(NSString *)name","+ (NSNotificationCenter *)notificationCenter","+ (IMPersonStatus)myStatus","+ (NSDate*)myIdleTime","- (NSString *)localizedName","- (NSString *)localizedShortName","- (NSString*)name","- (IMServiceStatus)status","- (NSDictionary *)infoForScreenName: (NSString*)screenName","- (NSArray *)infoForAllScreenNames","- (NSArray *)infoForPreferredScreenNames","- (NSArray *)peopleWithScreenName:(NSString *)screenName","- (NSArray *)screenNamesForPerson:(ABPerson *)person","+ (void)setJavaStartupOptions:(NSArray *)inStartupOptions","- (id)initWithFrame:(NSRect)inFrameRect javaFrameClassName:(NSString *)inClassName","- (void)setJavaFrameClassName:(NSString *)inClassName","- (NSString *)javaFrameClassName","- (jobject)javaFrame","- (void)setDelegate:(id)anObject","- (id)delegate","- (void)javaFrameView:(JavaFrameView *)sender didCreateJavaFrame:(jobject)javaFrame withJNIEnv:(JNIEnv *)theEnv","+ (NSJavaConfiguration *) defaultConfiguration","+ (NSJavaConfiguration *) configurationForVendor:(NSString *)vendorName","+ (NSArray *) vendorNames","- init","- initWithVendor:(NSString *)vendorName","- (NSString *) vendorName","- valueForKey:(NSString *)keyName","- valueForKey:(NSString *)keyName expandEnvironmentVariables:(BOOL)flag","+ (id) defaultVirtualMachine","+ (NSString *) defaultClassPath","- initWithClassPath:(NSString *)classPath","- (void) attachCurrentThread","- (void) detachCurrentThread","- (Class)findClass:(NSString *)className","- (Class)defineClass:(NSData *)javaClassData withName:(NSString *)className","+ (id)nodeWithSession:(ODSession *)inSession type:(ODNodeType)inType error:(NSError **)outError","+ (id)nodeWithSession:(ODSession *)inSession name:(NSString *)inName error:(NSError **)outError","- (id)initWithSession:(ODSession *)inSession type:(ODNodeType)inType error:(NSError **)outError","- (id)initWithSession:(ODSession *)inSession name:(NSString *)inName error:(NSError **)outError","- (NSArray *)subnodeNamesAndReturnError:(NSError **)outError","- (NSArray *)unreachableSubnodeNamesAndReturnError:(NSError **)outError","- (NSDictionary *)nodeDetailsForKeys:(NSArray *)inKeys error:(NSError **)outError","- (NSArray *)supportedRecordTypesAndReturnError:(NSError **)outError","- (NSArray *)supportedAttributesForRecordType:(ODRecordType)inRecordType error:(NSError **)outError","- (BOOL)setCredentialsWithRecordType:(ODRecordType)inRecordType recordName:(NSString *)inRecordName password:(NSString *)inPassword error:(NSError **)outError","- (BOOL)setCredentialsWithRecordType:(ODRecordType)inRecordType authenticationType:(ODAuthenticationType)inType authenticationItems:(NSArray *)inItems continueItems:(NSArray **)outItems context:(id *)outContext error:(NSError **)outError","- (ODRecord *)createRecordWithRecordType:(ODRecordType)inRecordType name:(NSString *)inRecordName attributes:(NSDictionary *)inAttributes error:(NSError **)outError","- (ODRecord *)recordWithRecordType:(ODRecordType)inRecordType name:(NSString *)inRecordName attributes:(id)inAttributes error:(NSError **)outError","- (NSData *)customCall:(NSInteger)inCustomCode sendData:(NSData *)inSendData error:(NSError **)outError","+ (ODQuery *)queryWithNode:(ODNode *)inNode forRecordTypes:(id)inRecordTypeOrList attribute:(ODAttributeType)inAttribute matchType:(ODMatchType)inMatchType queryValues:(id)inQueryValueOrList returnAttributes:(id)inReturnAttributeOrList maximumResults:(NSInteger)inMaximumResults error:(NSError **)outError","- (id)initWithNode:(ODNode *)inNode forRecordTypes:(id)inRecordTypeOrList attribute:(ODAttributeType)inAttribute matchType:(ODMatchType)inMatchType queryValues:(id)inQueryValueOrList returnAttributes:(id)inReturnAttributeOrList maximumResults:(NSInteger)inMaximumResults error:(NSError **)outError","- (NSArray *)resultsAllowingPartial:(BOOL)inAllowPartialResults error:(NSError **)outError","- (void)scheduleInRunLoop:(NSRunLoop *)inRunLoop forMode:(NSString *)inMode","- (void)removeFromRunLoop:(NSRunLoop *)inRunLoop forMode:(NSString *)inMode","- (void)synchronize","- (BOOL)setNodeCredentials:(NSString *)inUsername password:(NSString *)inPassword error:(NSError **)outError","- (BOOL)setNodeCredentialsWithRecordType:(ODRecordType)inRecordType authenticationType:(ODAuthenticationType)inType authenticationItems:(NSArray *)inItems continueItems:(NSArray **)outItems context:(id *)outContext error:(NSError **)outError","- (NSDictionary *)passwordPolicyAndReturnError:(NSError **)outError","- (BOOL)verifyPassword:(NSString *)inPassword error:(NSError **)outError","- (BOOL)verifyExtendedWithAuthenticationType:(ODAuthenticationType)inType authenticationItems:(NSArray *)inItems continueItems:(NSArray **)outItems context:(id *)outContext error:(NSError **)outError","- (BOOL)changePassword:(NSString *)oldPassword toPassword:(NSString *)newPassword error:(NSError **)outError","- (BOOL)synchronizeAndReturnError:(NSError **)outError","- (NSDictionary *)recordDetailsForAttributes:(NSArray *)inAttributes error:(NSError **)outError","- (NSArray *)valuesForAttribute:(ODAttributeType)inAttribute error:(NSError **)outError","- (BOOL)setValue:(id)inValueOrValues forAttribute:(ODAttributeType)inAttribute error:(NSError **)outError","- (BOOL)removeValuesForAttribute:(ODAttributeType)inAttribute error:(NSError **)outError","- (BOOL)addValue:(id)inValue toAttribute:(ODAttributeType)inAttribute error:(NSError **)outError","- (BOOL)removeValue:(id)inValue fromAttribute:(ODAttributeType)inAttribute error:(NSError **)outError","- (BOOL)deleteRecordAndReturnError:(NSError **)outError","- (BOOL)addMemberRecord:(ODRecord *)inRecord error:(NSError **)outError","- (BOOL)removeMemberRecord:(ODRecord *)inRecord error:(NSError **)outError","- (BOOL)isMemberRecord:(ODRecord *)inRecord error:(NSError **)outError","+ (id)defaultSession","+ (id)sessionWithOptions:(NSDictionary *)inOptions error:(NSError **)outError","- (id)initWithOptions:(NSDictionary *)inOptions error:(NSError **)outError","- (NSArray *)nodeNamesAndReturnError:(NSError **)outError","+ (NSArray *)availableLanguages","+ (OSALanguage *)languageForName:(NSString *)name","+ (OSALanguage *)defaultLanguage","+ (void)setDefaultLanguage:(OSALanguage *)defaultLanguage","- (id)initWithComponent:(Component)component","- (ComponentInstance)componentInstance","- (NSString *)name","- (NSString *)info","- (NSString *)version","- (OSType)type","- (OSType)subType","- (OSType)manufacturer","- (OSALanguageFeatures)features","+ (id)languageInstanceWithLanguage:(OSALanguage *)language","- (id)initWithLanguage:(OSALanguage *)language","- (OSALanguage *)language","- (ComponentInstance)componentInstance","- (id)initWithSource:(NSString *)source","- (id)initWithContentsOfURL:(NSURL *)url error:(NSDictionary **)errorInfo","- (NSString *)source","- (NSURL *)url","- (OSALanguage *)language","- (void)setLanguage:(OSALanguage *)language","- (BOOL)isCompiled","- (BOOL)compileAndReturnError:(NSDictionary **)errorInfo","- (NSAppleEventDescriptor *)executeAndReturnError:(NSDictionary **)errorInfo","- (NSAppleEventDescriptor *)executeAppleEvent:(NSAppleEventDescriptor *)event error:(NSDictionary **)errorInfo","- (NSAppleEventDescriptor *)executeAndReturnDisplayValue:(NSAttributedString **)displayValue error:(NSDictionary **)errorInfo","- (NSAppleEventDescriptor *)executeHandlerWithName:(NSString *)name arguments:(NSArray *)arguments error:(NSDictionary **)errorInfo","- (NSAttributedString *)richTextSource","- (NSAttributedString *)richTextFromDescriptor:(NSAppleEventDescriptor *)descriptor","- (BOOL)writeToURL:(NSURL *)url ofType:(NSString *)type error:(NSDictionary **)errorInfo","- (BOOL)writeToURL:(NSURL *)url ofType:(NSString *)type usingStorageOptions:(OSAStorageOptions)storageOptions error:(NSDictionary **)errorInfo","- (NSData *)compiledDataForType:(NSString *)type usingStorageOptions:(OSAStorageOptions)storageOptions error:(NSDictionary **)errorInfo","- (OSAScriptView *)scriptView","- (void)setScriptView:(OSAScriptView *)newScriptView","- (NSTextView *)resultView","- (void)setResultView:(NSTextView *)newResultView","- (OSAScript *)script","- (void)setScript:(OSAScript *)newScript","- (OSALanguage *)language","- (void)setLanguage:(OSALanguage *)newLanguage","- (OSAScriptState)scriptState","- (BOOL)isCompiling","- (IBAction)compileScript:(id)sender","- (IBAction)recordScript:(id)sender","- (IBAction)runScript:(id)sender","- (IBAction)stopScript:(id)sender","- (NSString *)source","- (void)setSource:(NSString *)source","- (BOOL)usesScriptAssistant","- (void)setUsesScriptAssistant:(BOOL)usesScriptAssistant","- (BOOL)usesTabs","- (void)setUsesTabs:(BOOL)usesTabs","- (NSUInteger)tabWidth","- (void)setTabWidth:(NSUInteger)tabWidth","- (BOOL)wrapsLines","- (void)setWrapsLines:(BOOL)wrapsLines","- (BOOL)indentsWrappedLines","- (void)setIndentsWrappedLines:(BOOL)indentsWrappedLines","- (NSUInteger)indentWidth","- (void)setIndentWidth:(NSUInteger)indentWidth","- (id)initWithBundle:(NSBundle *) bundle","- (NSBundle *) bundle","- (NSView *) loadMainView","- (void) mainViewDidLoad","- (NSString *) mainNibName","- (void) assignMainView","- (void) willSelect","- (void) didSelect","- (NSPreferencePaneUnselectReply) shouldUnselect","- (void) replyToShouldUnselect:(BOOL)shouldUnselect","- (void) willUnselect","- (void) didUnselect","- (void) setMainView:(NSView *)view","- (NSView *) mainView","- (NSView *) initialKeyView","- (void) setInitialKeyView:(NSView *)view","- (NSView *) firstKeyView","- (void) setFirstKeyView:(NSView *)view","- (NSView *) lastKeyView","- (void) setLastKeyView:(NSView *)view","- (BOOL) autoSaveTextFields","- (BOOL) isSelected","- (void) updateHelpMenuWithArray:(NSArray *)inArrayOfMenuItems","+ (PSClient*) applicationClient","+ (PSClient*) clientForBundleIdentifier:(NSString *)bundleIdentifier","+ (NSArray*) allClientBundleIdentifiers","- (void) sendChangesSinceDate:(NSDate *)dateLastUpdated","- (BOOL) addFeed: (PSFeed*)feed","- (PSFeed *) addFeedWithURL: (NSURL*)url","- (BOOL) removeFeed:(PSFeed *)feed","- (PSFeed *) feedWithURL: (NSURL*)url","- (PSFeed *) feedWithIdentifier: (NSString*)identifier","- (PSEntry *) entryWithIdentifier: (NSString*)identifier","- (void) feedDidBeginRefresh:(PSFeed *)feed","- (void) feedDidEndRefresh:(PSFeed *)feed","- (void) feed:(PSFeed *)feed didAddEntries:(NSArray *)entries","- (void) feed:(PSFeed *)feed didRemoveEntriesWithIdentifiers:(NSArray *)identifiers","- (void) feed:(PSFeed *)feed didUpdateEntries:(NSArray *)entries","- (void) feed:(PSFeed *)feed didChangeFlagsInEntries:(NSArray *)entries","- (void) enclosure:(PSEnclosure *)enclosure downloadStateDidChange:(PSEnclosureDownloadState)state","- (BOOL) download: (NSError**)error","- (void) cancelDownload","- (void) deleteDownload","- (NSArray *) extensionXMLElementsUsingNamespace:(NSString *)nameSpace","- (id) initWithURL: (NSURL*)url","- (id) initWithData:(NSData *)data URL:(NSURL *)aURL","- (BOOL) refresh: (NSError**)error","- (void) setPassword: (NSString*)password","- (NSEnumerator*) entryEnumeratorSortedBy: (NSArray*)sortDescriptors","- (NSXMLElement *) XMLRepresentation","- (NSXMLElement *) XMLRepresentationWithEntries:(BOOL)withEntries","- (NSArray *) extensionXMLElementsUsingNamespace:(NSString *)nameSpace","+ (PSFeedSettings*) defaultFeedSettings","+ (PSFeedSettings*) defaultClientSettings","+ (NSArray*) linksInXML: (NSXMLElement*)root baseURL: (NSURL*)baseURL","- (NSString *)outputDeviceUniqueID","- (void)setOutputDeviceUniqueID:(NSString *)uniqueID","- (float)volume","- (void)setVolume:(float)volume","- (id)owner","- (NSString *)mediaType","- (QTFormatDescription *)formatDescription","- (BOOL)isEnabled","- (void)setEnabled:(BOOL)enabled","- (NSDictionary *)connectionAttributes","- (void)setConnectionAttributes:(NSDictionary *)connectionAttributes","- (BOOL)attributeIsReadOnly:(NSString *)attributeKey","- (id)attributeForKey:(NSString *)attributeKey","- (void)setAttribute:(id)attribute forKey:(NSString *)key","- (id)delegate","- (void)setDelegate:(id)delegate","- (void)outputAudioSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection","- (void)captureOutput:(QTCaptureOutput *)captureOutput didOutputAudioSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection","- (NSDictionary *)pixelBufferAttributes","- (void)setPixelBufferAttributes:(NSDictionary *)pixelBufferAttributes","- (NSTimeInterval)minimumVideoFrameInterval","- (void)setMinimumVideoFrameInterval:(NSTimeInterval)minimumVideoFrameInterval","- (BOOL)automaticallyDropsLateVideoFrames","- (void)setAutomaticallyDropsLateVideoFrames:(BOOL)automaticallyDropsLateVideoFrames","- (id)delegate","- (void)setDelegate:(id)delegate","- (void)outputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection","- (void)captureOutput:(QTCaptureOutput *)captureOutput didOutputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection","- (void)captureOutput:(QTCaptureOutput *)captureOutput didDropVideoFrameWithSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection","+ (NSArray *)inputDevices","+ (NSArray *)inputDevicesWithMediaType:(NSString *)mediaType","+ (QTCaptureDevice *)defaultInputDeviceWithMediaType:(NSString *)mediaType","+ (QTCaptureDevice *)deviceWithUniqueID:(NSString *)deviceUniqueID","- (NSString *)uniqueID","- (NSString *)modelUniqueID","- (NSString *)localizedDisplayName","- (NSArray *)formatDescriptions","- (BOOL)hasMediaType:(NSString *)mediaType","- (NSDictionary *)deviceAttributes","- (void)setDeviceAttributes:(NSDictionary *)deviceAttributes","- (BOOL)attributeIsReadOnly:(NSString *)attributeKey","- (id)attributeForKey:(NSString *)attributeKey","- (void)setAttribute:(id)attribute forKey:(NSString *)attributeKey","- (BOOL)isConnected","- (BOOL)isInUseByAnotherApplication","- (BOOL)isOpen","- (BOOL)open:(NSError **)errorPtr","- (void)close","+ (id)deviceInputWithDevice:(QTCaptureDevice *)device","- (id)initWithDevice:(QTCaptureDevice *)device","- (QTCaptureDevice *)device","- (NSURL *)outputFileURL","- (void)recordToOutputFileURL:(NSURL *)url","- (void)recordToOutputFileURL:(NSURL *)url bufferDestination:(QTCaptureFileOutputBufferDestination)bufferDestination","- (BOOL)isRecordingPaused","- (void)pauseRecording","- (void)resumeRecording","- (QTCompressionOptions *)compressionOptionsForConnection:(QTCaptureConnection *)connection","- (void)setCompressionOptions:(QTCompressionOptions *)compressionOptions forConnection:(QTCaptureConnection *)connection","- (NSSize)maximumVideoSize","- (void)setMaximumVideoSize:(NSSize)maximumVideoSize","- (NSTimeInterval)minimumVideoFrameInterval","- (void)setMinimumVideoFrameInterval:(NSTimeInterval)minimumVideoFrameInterval","- (QTTime)recordedDuration","- (UInt64)recordedFileSize","- (QTTime)maximumRecordedDuration","- (void)setMaximumRecordedDuration:(QTTime)maximumRecordedDuration","- (UInt64)maximumRecordedFileSize","- (void)setMaximumRecordedFileSize:(UInt64)maximumRecordedFileSize","- (id)delegate","- (void)setDelegate:(id)delegate","- (void)captureOutput:(QTCaptureFileOutput *)captureOutput didOutputSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection","- (void)captureOutput:(QTCaptureFileOutput *)captureOutput willStartRecordingToOutputFileAtURL:(NSURL *)fileURL forConnections:(NSArray *)connections","- (void)captureOutput:(QTCaptureFileOutput *)captureOutput didStartRecordingToOutputFileAtURL:(NSURL *)fileURL forConnections:(NSArray *)connections","- (BOOL)captureOutput:(QTCaptureFileOutput *)captureOutput shouldChangeOutputFileAtURL:(NSURL *)outputFileURL forConnections:(NSArray *)connections dueToError:(NSError *)error","- (void)captureOutput:(QTCaptureFileOutput *)captureOutput mustChangeOutputFileAtURL:(NSURL *)outputFileURL forConnections:(NSArray *)connections dueToError:(NSError *)error","- (void)captureOutput:(QTCaptureFileOutput *)captureOutput willFinishRecordingToOutputFileAtURL:(NSURL *)outputFileURL forConnections:(NSArray *)connections dueToError:(NSError *)error","- (void)captureOutput:(QTCaptureFileOutput *)captureOutput didFinishRecordingToOutputFileAtURL:(NSURL *)outputFileURL forConnections:(NSArray *)connections dueToError:(NSError *)error","- (void)captureOutput:(QTCaptureFileOutput *)captureOutput didPauseRecordingToOutputFileAtURL:(NSURL *)fileURL forConnections:(NSArray *)connections","- (void)captureOutput:(QTCaptureFileOutput *)captureOutput didResumeRecordingToOutputFileAtURL:(NSURL *)fileURL forConnections:(NSArray *)connections","- (NSArray *)connections","+ (id)layerWithSession:(QTCaptureSession *)session","- (id)initWithSession:(QTCaptureSession *)session","- (void)setSession:(QTCaptureSession *)session","- (QTCaptureSession *)session","- (NSArray *)connections","- (NSArray *)inputs","- (BOOL)addInput:(QTCaptureInput *)input error:(NSError **)errorPtr","- (void)removeInput:(QTCaptureInput *)input","- (NSArray *)outputs","- (BOOL)addOutput:(QTCaptureOutput *)output error:(NSError **)errorPtr","- (void)removeOutput:(QTCaptureOutput *)output","- (BOOL)isRunning","- (void)startRunning","- (void)stopRunning","- (NSDictionary *)pixelBufferAttributes","- (void)setPixelBufferAttributes:(NSDictionary *)pixelBufferAttributes","- (QTVisualContextRef)visualContextForConnection:(QTCaptureConnection *)connection","- (void)setVisualContext:(QTVisualContextRef)visualContext forConnection:(QTCaptureConnection *)connection","- (id)delegate","- (void)setDelegate:(id)delegate","- (void)outputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection","- (void)captureOutput:(QTCaptureOutput *)captureOutput didOutputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection","- (QTCaptureSession *)captureSession","- (void)setCaptureSession:(QTCaptureSession *)captureSession","- (NSArray *)availableVideoPreviewConnections","- (QTCaptureConnection *)videoPreviewConnection","- (void)setVideoPreviewConnection:(QTCaptureConnection *)videoPreviewConnection","- (NSColor *)fillColor","- (void)setFillColor:(NSColor *)fillColor","- (BOOL)preservesAspectRatio","- (void)setPreservesAspectRatio:(BOOL)preservesAspectRatio","- (NSRect)previewBounds","- (id)delegate","- (void)setDelegate:(id)delegate","- (CIImage *)view:(QTCaptureView *)view willDisplayImage:(CIImage *)image","+ (NSArray *)compressionOptionsIdentifiersForMediaType:(NSString *)mediaType","+ (id)compressionOptionsWithIdentifier:(NSString *)identifier","- (NSString *)mediaType","- (NSString *)localizedDisplayName","- (NSString *)localizedCompressionOptionsSummary","- (BOOL)isEqualToCompressionOptions:(QTCompressionOptions *)compressionOptions","+ (id)dataReferenceWithDataRef:(Handle)dataRef type:(NSString *)type","+ (id)dataReferenceWithDataRefData:(NSData *)dataRefData type:(NSString *)type","+ (id)dataReferenceWithReferenceToFile:(NSString *)fileName","+ (id)dataReferenceWithReferenceToURL:(NSURL *)url","+ (id)dataReferenceWithReferenceToData:(NSData *)data","+ (id)dataReferenceWithReferenceToData:(NSData *)data name:(NSString *)name MIMEType:(NSString *)MIMEType","- (id)initWithDataRef:(Handle)dataRef type:(NSString *)type","- (id)initWithDataRefData:(NSData *)dataRefData type:(NSString *)type","- (id)initWithReferenceToFile:(NSString *)fileName","- (id)initWithReferenceToURL:(NSURL *)url","- (id)initWithReferenceToData:(NSData *)data","- (id)initWithReferenceToData:(NSData *)data name:(NSString *)name MIMEType:(NSString *)MIMEType","- (Handle)dataRef","- (NSData *)dataRefData","- (NSString *)dataRefType","- (NSString *)referenceFile","- (NSURL *)referenceURL","- (NSData *)referenceData","- (NSString *)name","- (NSString *)MIMEType","- (void)setDataRef:(Handle)dataRef","- (void)setDataRefType:(NSString *)type","+ (NSArray *)allExportOptionsIdentifiers","+ (NSArray *)exportOptionsIdentifiersCompatibleWithMovie:(QTMovie *)movie","+ (NSString *)localizedNameForExportOptionsIdentifier:(NSString *)identifier","+ (id)exportOptionsWithIdentifier:(NSString *)identifier","- (NSString *)localizedExportOptionsSummary","- (NSArray *)recommendedFileTypesForExportedFile","- (id)initWithMovie:(QTMovie *)movie exportOptions:(QTExportOptions *)exportOptions outputURL:(NSURL *)outputURL error:(NSError **)outError","- (void)run","- (void)cancel","- (BOOL)waitUntilFinished:(NSError **)error","- (NSString *)localizedExportSessionOutputSummary","- (NSString *)mediaType","- (UInt32)formatType","- (NSString *)localizedFormatSummary","- (NSData *)quickTimeSampleDescription","- (NSDictionary *)formatDescriptionAttributes","- (id)attributeForKey:(NSString *)key","- (BOOL)isEqualToFormatDescription:(QTFormatDescription *)formatDescription","+ (id)mediaWithQuickTimeMedia:(Media)media error:(NSError **)errorPtr","- (id)initWithQuickTimeMedia:(Media)media error:(NSError **)errorPtr","- (QTTrack *)track","- (NSDictionary *)mediaAttributes","- (void)setMediaAttributes:(NSDictionary *)attributes","- (id)attributeForKey:(NSString *)attributeKey","- (void)setAttribute:(id)value forKey:(NSString *)attributeKey","- (BOOL)hasCharacteristic:(NSString *)characteristic","- (Media)quickTimeMedia","+ (NSArray *)metadataItemsFromArray:(NSArray *)array withLocale:(NSLocale *)locale","+ (NSArray *)metadataItemsFromArray:(NSArray *)array withKey:(id)key keySpace:(NSString *)keySpace","- (BOOL)movie:(QTMovie *)movie linkToURL:(NSURL *)url","- (BOOL)movieShouldLoadData:(id)sender","- (BOOL)movieShouldTask:(id)movie","- (QTMovie *)externalMovie:(NSDictionary *)dictionary","- (BOOL)movie:(QTMovie *)movie shouldContinueOperation:(NSString *)op withPhase:(QTMovieOperationPhase)phase atPercent:(NSNumber *)percent withAttributes:(NSDictionary *)attributes","- (QTTime)duration","+ (BOOL)canInitWithPasteboard:(NSPasteboard *)pasteboard","+ (BOOL)canInitWithFile:(NSString *)fileName","+ (BOOL)canInitWithURL:(NSURL *)url","+ (BOOL)canInitWithDataReference:(QTDataReference *)dataReference","+ (NSArray *)movieFileTypes:(QTMovieFileTypeOptions)types","+ (NSArray *)movieUnfilteredFileTypes","+ (NSArray *)movieUnfilteredPasteboardTypes","+ (NSArray *)movieTypesWithOptions:(QTMovieFileTypeOptions)types","+ (id)movie","+ (id)movieWithFile:(NSString *)fileName error:(NSError **)errorPtr","+ (id)movieWithURL:(NSURL *)url error:(NSError **)errorPtr","+ (id)movieWithDataReference:(QTDataReference *)dataReference error:(NSError **)errorPtr","+ (id)movieWithPasteboard:(NSPasteboard *)pasteboard error:(NSError **)errorPtr","+ (id)movieWithData:(NSData *)data error:(NSError **)errorPtr","+ (id)movieWithQuickTimeMovie:(Movie)movie disposeWhenDone:(BOOL)dispose error:(NSError **)errorPtr","+ (id)movieWithAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr","+ (id)movieNamed:(NSString *)name error:(NSError **)errorPtr","- (id)initWithFile:(NSString *)fileName error:(NSError **)errorPtr","- (id)initWithURL:(NSURL *)url error:(NSError **)errorPtr","- (id)initWithDataReference:(QTDataReference *)dataReference error:(NSError **)errorPtr","- (id)initWithPasteboard:(NSPasteboard *)pasteboard error:(NSError **)errorPtr","- (id)initWithData:(NSData *)data error:(NSError **)errorPtr","- (id)initWithMovie:(QTMovie *)movie timeRange:(QTTimeRange)range error:(NSError **)errorPtr","- (id)initWithQuickTimeMovie:(Movie)movie disposeWhenDone:(BOOL)dispose error:(NSError **)errorPtr","- (id)initWithAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr","- (id)movieWithTimeRange:(QTTimeRange)range error:(NSError **)errorPtr","- (id)initToWritableFile:(NSString *)filename error:(NSError **)errorPtr","- (id)initToWritableData:(NSMutableData *)data error:(NSError **)errorPtr","- (id)initToWritableDataReference:(QTDataReference *)dataReference error:(NSError **)errorPtr","- (void)invalidate","- (NSDictionary *)movieAttributes","- (void)setMovieAttributes:(NSDictionary *)attributes","- (id)attributeForKey:(NSString *)attributeKey","- (void)setAttribute:(id)value forKey:(NSString *)attributeKey","- (NSArray *)tracks","- (NSArray *)tracksOfMediaType:(NSString *)type","- (NSImage *)posterImage","- (NSImage *)currentFrameImage","- (NSImage *)frameImageAtTime:(QTTime)time","- (void *)frameImageAtTime:(QTTime)time withAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr","- (NSData *)movieFormatRepresentation","- (BOOL)writeToFile:(NSString *)fileName withAttributes:(NSDictionary *)attributes","- (BOOL)writeToFile:(NSString *)fileName withAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr","- (BOOL)canUpdateMovieFile","- (BOOL)updateMovieFile","- (void)autoplay","- (void)play","- (void)stop","- (QTTime)currentTime","- (void)setCurrentTime:(QTTime)time","- (void)gotoBeginning","- (void)gotoEnd","- (void)gotoNextSelectionPoint","- (void)gotoPreviousSelectionPoint","- (void)gotoPosterTime","- (void)stepForward","- (void)stepBackward","- (float)rate","- (void)setRate:(float)rate","- (float)volume","- (void)setVolume:(float)volume","- (BOOL)muted","- (void)setMuted:(BOOL)mute","- (void)setSelection:(QTTimeRange)selection","- (QTTime)selectionStart","- (QTTime)selectionEnd","- (QTTime)selectionDuration","- (void)replaceSelectionWithSelectionFromMovie:(id)movie","- (void)appendSelectionFromMovie:(id)movie","- (void)insertSegmentOfMovie:(QTMovie *)movie timeRange:(QTTimeRange)range atTime:(QTTime)time","- (void)insertSegmentOfMovie:(QTMovie *)movie fromRange:(QTTimeRange)srcRange scaledToRange:(QTTimeRange)dstRange","- (void)insertEmptySegmentAt:(QTTimeRange)range","- (void)deleteSegment:(QTTimeRange)segment","- (void)scaleSegment:(QTTimeRange)segment newDuration:(QTTime)newDuration","- (void)addImage:(NSImage *)image forDuration:(QTTime)duration withAttributes:(NSDictionary *)attributes","- (QTTrack *)insertSegmentOfTrack:(QTTrack *)track timeRange:(QTTimeRange)range atTime:(QTTime)time","- (QTTrack *)insertSegmentOfTrack:(QTTrack *)track fromRange:(QTTimeRange)srcRange scaledToRange:(QTTimeRange)dstRange","- (void)removeTrack:(QTTrack *)track","- (QTTrack *)trackByInsertingSegmentOfTrack:(QTTrack *)track timeRange:(QTTimeRange)range atTime:(QTTime)time","- (QTTrack *)trackByInsertingSegmentOfTrack:(QTTrack *)track fromRange:(QTTimeRange)srcRange scaledToRange:(QTTimeRange)dstRange","- (id)delegate","- (void)setDelegate:(id)delegate","- (Movie)quickTimeMovie","- (MovieController)quickTimeMovieController","- (void)generateApertureModeDimensions","- (void)removeApertureModeDimensions","- (void)setVisualContext:(QTVisualContextRef)visualContext","- (QTVisualContextRef)visualContext","+ (void)enterQTKitOnThread","+ (void)enterQTKitOnThreadDisablingThreadSafetyProtection","+ (void)exitQTKitOnThread","- (BOOL)attachToCurrentThread","- (BOOL)detachFromCurrentThread","- (void)setIdling:(BOOL)state","- (BOOL)isIdling","- (BOOL)hasChapters","- (NSInteger)chapterCount","- (NSArray *)chapters","- (void)addChapters:(NSArray *)chapters withAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr","- (BOOL)removeChapters","- (QTTime)startTimeOfChapter:(NSInteger)chapterIndex","- (NSInteger)chapterIndexForTime:(QTTime)time","- (NSArray *)commonMetadata","- (NSArray *)availableMetadataFormats","- (NSArray *)metadataForFormat:(NSString *)format","+ (id)layerWithMovie:(QTMovie *)movie","- (id)initWithMovie:(QTMovie *)movie","- (void)setMovie:(QTMovie *)movie","- (QTMovie *)movie","- (QTMovie *)movie","- (void)setMovie:(QTMovie *)movie","- (BOOL)preservesAspectRatio","- (void)setPreservesAspectRatio:(BOOL)preservesAspectRatio","- (NSColor *)fillColor","- (void)setFillColor:(NSColor *)fillColor","- (BOOL)isControllerVisible","- (void)setControllerVisible:(BOOL)controllerVisible","- (void)setShowsResizeIndicator:(BOOL)show","- (BOOL)isBackButtonVisible","- (void)setBackButtonVisible:(BOOL)state","- (BOOL)isCustomButtonVisible","- (void)setCustomButtonVisible:(BOOL)state","- (BOOL)isHotSpotButtonVisible","- (void)setHotSpotButtonVisible:(BOOL)state","- (BOOL)areStepButtonsVisible","- (void)setStepButtonsVisible:(BOOL)state","- (BOOL)isTranslateButtonVisible","- (void)setTranslateButtonVisible:(BOOL)state","- (BOOL)isVolumeButtonVisible","- (void)setVolumeButtonVisible:(BOOL)state","- (BOOL)areZoomButtonsVisible","- (void)setZoomButtonsVisible:(BOOL)state","- (NSRect)movieBounds","- (NSRect)movieControllerBounds","- (float)controllerBarHeight","- (IBAction)play:(id)sender","- (IBAction)pause:(id)sender","- (IBAction)gotoBeginning:(id)sender","- (IBAction)gotoEnd:(id)sender","- (IBAction)gotoNextSelectionPoint:(id)sender","- (IBAction)gotoPreviousSelectionPoint:(id)sender","- (IBAction)gotoPosterFrame:(id)sender","- (IBAction)stepForward:(id)sender","- (IBAction)stepBackward:(id)sender","- (BOOL)isEditable","- (void)setEditable:(BOOL)editable","- (IBAction)cut:(id)sender","- (IBAction)copy:(id)sender","- (IBAction)paste:(id)sender","- (IBAction)selectAll:(id)sender","- (IBAction)selectNone:(id)sender","- (IBAction)delete:(id)sender","- (IBAction)add:(id)sender","- (IBAction)addScaled:(id)sender","- (IBAction)replace:(id)sender","- (IBAction)trim:(id)sender","- (id)delegate","- (void)setDelegate:(id)delegate","- (CIImage *)view:(QTMovieView *)view willDisplayImage:(CIImage *)image","- (NSMenu *)menuForEventDelegate:(NSEvent *)event","- (void *)bytesForAllSamples","- (NSUInteger)lengthForAllSamples","- (QTFormatDescription *)formatDescription","- (QTTime)duration","- (QTTime)decodeTime","- (QTTime)presentationTime","- (NSUInteger)numberOfSamples","- (NSDictionary *)sampleBufferAttributes","- (id)attributeForKey:(NSString *)key","- (NSUInteger)sampleUseCount","- (void)incrementSampleUseCount","- (void)decrementSampleUseCount","- (AudioBufferList *)audioBufferListWithOptions:(QTSampleBufferAudioBufferListOptions)options","- (BOOL)getAudioStreamPacketDescriptions:(AudioStreamPacketDescription *)audioStreamPacketDescriptions inRange:(NSRange)range","+ (NSValue *)valueWithQTTime:(QTTime)time","- (QTTime)QTTimeValue","- (void)encodeQTTime:(QTTime)time forKey:(NSString *)key","- (QTTime)decodeQTTimeForKey:(NSString *)key","+ (NSValue *)valueWithSMPTETime:(SMPTETime)time","- (SMPTETime)SMPTETimeValue","- (void)encodeSMPTETime:(SMPTETime)time forKey:(NSString *)key","- (SMPTETime)decodeSMPTETimeForKey:(NSString *)key","+ (NSValue *)valueWithQTTimeRange:(QTTimeRange)range","- (QTTimeRange)QTTimeRangeValue","- (void)encodeQTTimeRange:(QTTimeRange)range forKey:(NSString *)key","- (QTTimeRange)decodeQTTimeRangeForKey:(NSString *)key","+ (id)trackWithQuickTimeTrack:(Track)track error:(NSError **)errorPtr","- (id)initWithQuickTimeTrack:(Track)track error:(NSError **)errorPtr","- (QTMovie *)movie","- (QTMedia *)media","- (BOOL)isEnabled","- (void)setEnabled:(BOOL)enabled","- (float)volume","- (void)setVolume:(float)volume","- (NSDictionary *)trackAttributes","- (void)setTrackAttributes:(NSDictionary *)attributes","- (id)attributeForKey:(NSString *)attributeKey","- (void)setAttribute:(id)value forKey:(NSString *)attributeKey","- (Track)quickTimeTrack","- (void)insertSegmentOfTrack:(QTTrack *)track timeRange:(QTTimeRange)range atTime:(QTTime)time","- (void)insertSegmentOfTrack:(QTTrack *)track fromRange:(QTTimeRange)srcRange scaledToRange:(QTTimeRange)dstRange","- (void)insertEmptySegmentAt:(QTTimeRange)range","- (void)deleteSegment:(QTTimeRange)segment","- (void)scaleSegment:(QTTimeRange)segment newDuration:(QTTime)newDuration","- (void)addImage:(NSImage *)image forDuration:(QTTime)duration withAttributes:(NSDictionary *)attributes","- (NSSize)apertureModeDimensionsForMode:(NSString *)mode","- (void)setApertureModeDimensions:(NSSize)dimensions forMode:(NSString *)mode","- (void)generateApertureModeDimensions","- (void)removeApertureModeDimensions","- (NSArray *)commonMetadata","- (NSArray *)availableMetadataFormats","- (NSArray *)metadataForFormat:(NSString *)format","+ (id)animation","+ (id)defaultValueForKey:(NSString *)key","- (BOOL)shouldArchiveValueForKey:(NSString *)key","- (void)animationDidStart:(CAAnimation *)anim","- (void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag","+ (id)animationWithKeyPath:(NSString *)path","- (void)addConstraint:(CAConstraint *)c","+ (id)layoutManager","+ (id)constraintWithAttribute:(CAConstraintAttribute)attr relativeTo:(NSString *)srcId attribute:(CAConstraintAttribute)srcAttr scale:(CGFloat)m offset:(CGFloat)c","+ (id)constraintWithAttribute:(CAConstraintAttribute)attr relativeTo:(NSString *)srcId attribute:(CAConstraintAttribute)srcAttr offset:(CGFloat)c","+ (id)constraintWithAttribute:(CAConstraintAttribute)attr relativeTo:(NSString *)srcId attribute:(CAConstraintAttribute)srcAttr","- (id)initWithAttribute:(CAConstraintAttribute)attr relativeTo:(NSString *)srcId attribute:(CAConstraintAttribute)srcAttr scale:(CGFloat)m offset:(CGFloat)c","+ (id)emitterCell","+ (id)defaultValueForKey:(NSString *)key","- (BOOL)shouldArchiveValueForKey:(NSString *)key","+ (id)layer","- (id)init","- (id)initWithLayer:(id)layer","- (id)presentationLayer","- (id)modelLayer","+ (id)defaultValueForKey:(NSString *)key","+ (BOOL)needsDisplayForKey:(NSString *)key","- (BOOL)shouldArchiveValueForKey:(NSString *)key","- (CGAffineTransform)affineTransform","- (void)setAffineTransform:(CGAffineTransform)m","- (BOOL)contentsAreFlipped","- (void)removeFromSuperlayer","- (void)addSublayer:(CALayer *)layer","- (void)insertSublayer:(CALayer *)layer atIndex:(unsigned)idx","- (void)insertSublayer:(CALayer *)layer below:(CALayer *)sibling","- (void)insertSublayer:(CALayer *)layer above:(CALayer *)sibling","- (void)replaceSublayer:(CALayer *)layer with:(CALayer *)layer2","- (CGPoint)convertPoint:(CGPoint)p fromLayer:(CALayer *)l","- (CGPoint)convertPoint:(CGPoint)p toLayer:(CALayer *)l","- (CGRect)convertRect:(CGRect)r fromLayer:(CALayer *)l","- (CGRect)convertRect:(CGRect)r toLayer:(CALayer *)l","- (CFTimeInterval)convertTime:(CFTimeInterval)t fromLayer:(CALayer *)l","- (CFTimeInterval)convertTime:(CFTimeInterval)t toLayer:(CALayer *)l","- (CALayer *)hitTest:(CGPoint)p","- (BOOL)containsPoint:(CGPoint)p","- (void)display","- (void)setNeedsDisplay","- (void)setNeedsDisplayInRect:(CGRect)r","- (BOOL)needsDisplay","- (void)displayIfNeeded","- (void)drawInContext:(CGContextRef)ctx","- (void)renderInContext:(CGContextRef)ctx","- (CGSize)preferredFrameSize","- (void)setNeedsLayout","- (BOOL)needsLayout","- (void)layoutIfNeeded","- (void)layoutSublayers","- (void)resizeSublayersWithOldSize:(CGSize)size","- (void)resizeWithOldSuperlayerSize:(CGSize)size","+ (id<CAAction>)defaultActionForKey:(NSString *)event","- (id<CAAction>)actionForKey:(NSString *)event","- (void)addAnimation:(CAAnimation *)anim forKey:(NSString *)key","- (void)removeAllAnimations","- (void)removeAnimationForKey:(NSString *)key","- (NSArray *)animationKeys","- (CAAnimation *)animationForKey:(NSString *)key","- (CGSize)preferredSizeOfLayer:(CALayer *)layer","- (void)invalidateLayoutOfLayer:(CALayer *)layer","- (void)layoutSublayersOfLayer:(CALayer *)layer","- (void)displayLayer:(CALayer *)layer","- (void)drawLayer:(CALayer *)layer inContext:(CGContextRef)ctx","- (void)layoutSublayersOfLayer:(CALayer *)layer","- (id<CAAction>)actionForLayer:(CALayer *)layer forKey:(NSString *)event","+ (id)functionWithName:(NSString *)name","+ (id)functionWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y","- (id)initWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y","- (BOOL)canDrawInCGLContext:(CGLContextObj)ctx pixelFormat:(CGLPixelFormatObj)pf forLayerTime:(CFTimeInterval)t displayTime:(const CVTimeStamp *)ts","- (void)drawInCGLContext:(CGLContextObj)ctx pixelFormat:(CGLPixelFormatObj)pf forLayerTime:(CFTimeInterval)t displayTime:(const CVTimeStamp *)ts","- (void)releaseCGLPixelFormat:(CGLPixelFormatObj)pf","- (CGLContextObj)copyCGLContextForPixelFormat:(CGLPixelFormatObj)pf","- (void)releaseCGLContext:(CGLContextObj)ctx","- (void)invalidate","+ (CARemoteLayerServer *)sharedServer","+ (CARenderer *)rendererWithCGLContext:(void *)ctx options:(NSDictionary *)dict","- (void)beginFrameAtTime:(CFTimeInterval)t timeStamp:(CVTimeStamp *)ts","- (CGRect)updateBounds","- (void)addUpdateRect:(CGRect)r","- (void)render","- (CFTimeInterval)nextFrameTime","- (void)endFrame","- (void)scrollToPoint:(CGPoint)p","- (void)scrollToRect:(CGRect)r","- (void)scrollPoint:(CGPoint)p","- (void)scrollRectToVisible:(CGRect)r","+ (CFTimeInterval)fadeDuration","+ (void)begin","+ (void)commit","+ (void)flush","+ (void)lock","+ (void)unlock","+ (CFTimeInterval)animationDuration","+ (void)setAnimationDuration:(CFTimeInterval)dur","+ (CAMediaTimingFunction *)animationTimingFunction","+ (void)setAnimationTimingFunction:(CAMediaTimingFunction *)function","+ (BOOL)disableActions","+ (void)setDisableActions:(BOOL)flag","+ (void (^)(void))completionBlock","+ (void)setCompletionBlock:(void (^)(void))block","+ (id)valueForKey:(NSString *)key","+ (void)setValue:(id)anObject forKey:(NSString *)key","+ (NSValue *)valueWithCATransform3D:(CATransform3D)t","- (CATransform3D)CATransform3DValue","+ (id)functionWithName:(NSString *)name","+ RBObjectWithRubyScriptCString: (const char*) cstr","+ RBObjectWithRubyScriptString: (NSString*) str","- initWithRubyObject: (VALUE) rbobj","- initWithRubyScriptCString: (const char*) cstr","- initWithRubyScriptString: (NSString*) str","- (BOOL) isKindOfClass:(Class)aClass","- (BOOL) isRBObject","- (BOOL) isRBObject","+ (id) defaultsForModuleWithName:(NSString *)inModuleName","+ (NSBackingStoreType)backingStoreType","+ (BOOL)performGammaFade","- (id)initWithFrame:(NSRect)frame","- (id)initWithFrame:(NSRect)frame isPreview:(BOOL)isPreview","- (NSTimeInterval)animationTimeInterval","- (void)setAnimationTimeInterval:(NSTimeInterval)timeInterval","- (void)startAnimation","- (void)stopAnimation","- (BOOL)isAnimating","- (void)drawRect:(NSRect)rect","- (void)animateOneFrame","- (BOOL)hasConfigureSheet","- (NSWindow*)configureSheet","- (BOOL)isPreview","- (id) initWithBundleIdentifier:(NSString *)ident","- (id) initWithURL:(NSURL *)url","+ (id) applicationWithBundleIdentifier:(NSString *) ident","+ (id) applicationWithURL:(NSURL *) url","- (Class) classForScriptingClass:(NSString *) className","- (BOOL) isRunning","- (void) activate","- (id <SBApplicationDelegate>) delegate","- (void) setDelegate:(id <SBApplicationDelegate>) delegate","- (LSLaunchFlags) launchFlags","- (void) setLaunchFlags:(LSLaunchFlags) flags","- (AESendMode) sendMode","- (void) setSendMode:(AESendMode) sendMode","- (long) timeout","- (void) setTimeout:(long) timeout","- (id) objectWithName:(NSString *)name","- (id) objectWithID:(id)identifier","- (id) objectAtLocation:(id)location","- (NSArray *) arrayByApplyingSelector:(SEL)selector","- (NSArray *) arrayByApplyingSelector:(SEL)aSelector withObject:(id)argument","- (NSArray *) get","- (id) init","- (id) initWithProperties:(NSDictionary *)properties","- (id) initWithData:(id)data","- (id) get","- (NSError *) lastError","- (id) initWithElementCode:(DescType)code properties:(NSDictionary *)properties data:(id)data","- (SBObject *) propertyWithCode:(AEKeyword)code","- (SBObject *) propertyWithClass:(Class)cls code:(AEKeyword)code","- (SBElementArray *) elementArrayWithCode:(DescType)code","- (void) setTo:(id)value","+ (id)authorization","- (AuthorizationRef)authorizationRef","+ (id)authorizationWithFlags:(AuthorizationFlags)flags rights:(const AuthorizationRights *)rights environment:(const AuthorizationEnvironment *)environment","- (id)initWithFlags:(AuthorizationFlags)flags rights:(const AuthorizationRights *)rights environment:(const AuthorizationEnvironment *)environment","-(id)init","- (void)invalidateCredentials","- (BOOL)obtainWithRight:(AuthorizationString)rightName flags:(AuthorizationFlags)flags error:(NSError**)error","- (BOOL)obtainWithRights:(const AuthorizationRights *)rights flags:(AuthorizationFlags)flags environment:(const AuthorizationEnvironment *)environment authorizedRights:(AuthorizationRights **)authorizedRights error:(NSError**)error","- (id)initWithCallbacks:(const AuthorizationCallbacks *)callbacks andEngineRef:(AuthorizationEngineRef)engineRef","- (AuthorizationEngineRef)engineRef","- (const AuthorizationCallbacks *)callbacks","- (void)buttonPressed:(SFButtonType)inButtonType","- (NSError*)lastError","- (void)didActivate","- (void)willActivateWithUser:(NSDictionary *)inUserInformation","- (void)didDeactivate","- (NSView*)firstKeyView","- (NSResponder*)firstResponder","- (NSView*)lastKeyView","- (void)setEnabled:(BOOL)inEnabled","- (NSView*)viewForType:(SFViewType)inType","- (void)displayView","- (void)setButton:(SFButtonType)inButtonType enabled:(BOOL)inEnabled","- (void)updateView","- (void)setString:(AuthorizationString)authorizationString","- (void)setAuthorizationRights:(const AuthorizationRights *)authorizationRights","- (AuthorizationRights *)authorizationRights","- (SFAuthorization *)authorization","- (BOOL)updateStatus:(id)inSender","- (void)setAutoupdate:(BOOL)autoupdate","- (void)setAutoupdate:(BOOL)autoupdate interval:(NSTimeInterval)interval","- (SFAuthorizationViewState)authorizationState","- (void)setEnabled:(BOOL)enabled","- (BOOL)isEnabled","- (void)setFlags:(AuthorizationFlags)flags","- (void)setDelegate:(id)delegate","- (id)delegate","- (BOOL)authorize:(id)inSender","- (BOOL)deauthorize:(id)inSender","- (void)authorizationViewDidAuthorize:(SFAuthorizationView *)view","- (void)authorizationViewDidDeauthorize:(SFAuthorizationView *)view","- (BOOL)authorizationViewShouldDeauthorize:(SFAuthorizationView *)view","- (void)authorizationViewCreatedAuthorization:(SFAuthorizationView *)view","- (void)authorizationViewReleasedAuthorization:(SFAuthorizationView *)view","- (void)authorizationViewDidHide:(SFAuthorizationView *)view","+ (SFCertificatePanel *)sharedCertificatePanel","- (NSInteger)runModalForTrust:(SecTrustRef)trust showGroup:(BOOL)showGroup","- (NSInteger)runModalForCertificates:(NSArray *)certificates showGroup:(BOOL)showGroup","- (void)beginSheetForWindow:(NSWindow *)docWindow modalDelegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo trust:(SecTrustRef)trust showGroup:(BOOL)showGroup","- (void)beginSheetForWindow:(NSWindow *)docWindow modalDelegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo certificates:(NSArray *)certificates showGroup:(BOOL)showGroup","- (void)setPolicies:(id)policies","- (NSArray *)policies","- (void)setDefaultButtonTitle:(NSString *)title","- (void)setAlternateButtonTitle:(NSString *)title","- (void)setShowsHelp:(BOOL)showsHelp","- (BOOL)showsHelp","- (void)setHelpAnchor:(NSString *)anchor","- (NSString *)helpAnchor","- (SFCertificateView *)certificateView","- (BOOL)certificatePanelShowHelp:(SFCertificatePanel *)sender","+ (SFCertificateTrustPanel *)sharedCertificateTrustPanel","- (NSInteger)runModalForTrust:(SecTrustRef)trust message:(NSString *)message","- (void)beginSheetForWindow:(NSWindow *)docWindow modalDelegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo trust:(SecTrustRef)trust message:(NSString *)message","- (void)setInformativeText:(NSString *)informativeText","- (NSString *)informativeText","- (void)setCertificate:(SecCertificateRef)certificate","- (SecCertificateRef)certificate","- (void)setPolicies:(id)policies","- (NSArray *)policies","- (void)setEditableTrust:(BOOL)editable","- (BOOL)isEditable","- (void)setDisplayTrust:(BOOL)display","- (BOOL)isTrustDisplayed","- (void)saveTrustSettings","- (void)setDisplayDetails:(BOOL)display","- (BOOL)detailsDisplayed","- (void)setDetailsDisclosed:(BOOL)disclosed","- (BOOL)detailsDisclosed","- (void)setPoliciesDisclosed:(BOOL)disclosed","- (BOOL)policiesDisclosed","+ (SFChooseIdentityPanel *)sharedChooseIdentityPanel","- (NSInteger)runModalForIdentities:(NSArray *)identities message:(NSString *)message","- (void)beginSheetForWindow:(NSWindow *)docWindow modalDelegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo identities:(NSArray *)identities message:(NSString *)message","- (SecIdentityRef)identity","- (void)setPolicies:(id)policies","- (NSArray *)policies","- (void)setDefaultButtonTitle:(NSString *)title","- (void)setAlternateButtonTitle:(NSString *)title","- (void)setShowsHelp:(BOOL)showsHelp","- (BOOL)showsHelp","- (void)setHelpAnchor:(NSString *)anchor","- (NSString *)helpAnchor","- (void)setInformativeText:(NSString *)informativeText","- (NSString *)informativeText","- (void)setDomain:(NSString *)domainString","- (NSString *)domain","- (BOOL)chooseIdentityPanelShowHelp:(SFChooseIdentityPanel *)sender","+ (SFKeychainSavePanel *)sharedKeychainSavePanel","- (NSInteger)runModalForDirectory:(NSString *)path file:(NSString *)name","- (void)setPassword:(NSString *)password","- (SecKeychainRef)keychain","- (NSError *)error","- (void)createPanelDidEnd:(NSWindow *)sheet returnCode:(NSInteger)returnCode contextInfo:(void *)contextInfo","- (void)beginSheetForDirectory:(NSString *)path file:(NSString *)name modalForWindow:(NSWindow *)docWindow modalDelegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo","+ (SFKeychainSettingsPanel *)sharedKeychainSettingsPanel","- (NSInteger)runModalForSettings:(SecKeychainSettings *)settings keychain:(SecKeychainRef)keychain","- (void)settingsPanelDidEnd:(NSWindow *)sheet returnCode:(NSInteger)returnCode contextInfo:(void *)contextInfo","- (void)beginSheetForWindow:(NSWindow *)docWindow modalDelegate:(id)delegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo settings:(SecKeychainSettings *)settings keychain:(SecKeychainRef)keychain","+ (id)centerForService:(NSString *)serviceHost","- (NSString *)serviceHost","- (void)addObserver:(id)observer selector:(SEL)aSelector name:(NSString *)aName object:(id)anObject","- (void)postNotification:(NSNotification *)notification","- (void)postNotificationName:(NSString *)aName object:(id)anObject","- (void)postNotificationName:(NSString *)aName object:(id)anObject userInfo:(NSDictionary *)aUserInfo","- (void)removeObserver:(id)observer","- (void)removeObserver:(id)observer name:(NSString *)aName object:(id)anObject","+ (id)paymentWithProduct:(SKProduct *)product","+ (SKPaymentQueue *)defaultQueue","+ (BOOL)canMakePayments","- (void)addPayment:(SKPayment *)payment","- (void)restoreCompletedTransactions","- (void)finishTransaction:(SKPaymentTransaction *)transaction","- (void)addTransactionObserver:(id <SKPaymentTransactionObserver>)observer","- (void)removeTransactionObserver:(id <SKPaymentTransactionObserver>)observer","- (id)initWithProductIdentifiers:(NSSet *)productIdentifiers","- (void)cancel","- (void)start","-(void)client:(ISyncClient *)can beginSession:(ISyncSession *)session","- (void)sessionDriverDidFinishSession:(ISyncSessionDriver *)sender","- (void)sessionDriverDidCancelSession:(ISyncSessionDriver *)sender","- (void)appendData:(NSString *)data","- (NSString *)azimuth","- (void)setAzimuth:(NSString *)azimuth","- (NSString *)background","- (void)setBackground:(NSString *)background","- (NSString *)backgroundAttachment","- (void)setBackgroundAttachment:(NSString *)backgroundAttachment","- (NSString *)backgroundColor","- (void)setBackgroundColor:(NSString *)backgroundColor","- (NSString *)backgroundImage","- (void)setBackgroundImage:(NSString *)backgroundImage","- (NSString *)backgroundPosition","- (void)setBackgroundPosition:(NSString *)backgroundPosition","- (NSString *)backgroundRepeat","- (void)setBackgroundRepeat:(NSString *)backgroundRepeat","- (NSString *)border","- (void)setBorder:(NSString *)border","- (NSString *)borderCollapse","- (void)setBorderCollapse:(NSString *)borderCollapse","- (NSString *)borderColor","- (void)setBorderColor:(NSString *)borderColor","- (NSString *)borderSpacing","- (void)setBorderSpacing:(NSString *)borderSpacing","- (NSString *)borderStyle","- (void)setBorderStyle:(NSString *)borderStyle","- (NSString *)borderTop","- (void)setBorderTop:(NSString *)borderTop","- (NSString *)borderRight","- (void)setBorderRight:(NSString *)borderRight","- (NSString *)borderBottom","- (void)setBorderBottom:(NSString *)borderBottom","- (NSString *)borderLeft","- (void)setBorderLeft:(NSString *)borderLeft","- (NSString *)borderTopColor","- (void)setBorderTopColor:(NSString *)borderTopColor","- (NSString *)borderRightColor","- (void)setBorderRightColor:(NSString *)borderRightColor","- (NSString *)borderBottomColor","- (void)setBorderBottomColor:(NSString *)borderBottomColor","- (NSString *)borderLeftColor","- (void)setBorderLeftColor:(NSString *)borderLeftColor","- (NSString *)borderTopStyle","- (void)setBorderTopStyle:(NSString *)borderTopStyle","- (NSString *)borderRightStyle","- (void)setBorderRightStyle:(NSString *)borderRightStyle","- (NSString *)borderBottomStyle","- (void)setBorderBottomStyle:(NSString *)borderBottomStyle","- (NSString *)borderLeftStyle","- (void)setBorderLeftStyle:(NSString *)borderLeftStyle","- (NSString *)borderTopWidth","- (void)setBorderTopWidth:(NSString *)borderTopWidth","- (NSString *)borderRightWidth","- (void)setBorderRightWidth:(NSString *)borderRightWidth","- (NSString *)borderBottomWidth","- (void)setBorderBottomWidth:(NSString *)borderBottomWidth","- (NSString *)borderLeftWidth","- (void)setBorderLeftWidth:(NSString *)borderLeftWidth","- (NSString *)borderWidth","- (void)setBorderWidth:(NSString *)borderWidth","- (NSString *)bottom","- (void)setBottom:(NSString *)bottom","- (NSString *)captionSide","- (void)setCaptionSide:(NSString *)captionSide","- (NSString *)clear","- (void)setClear:(NSString *)clear","- (NSString *)clip","- (void)setClip:(NSString *)clip","- (NSString *)color","- (void)setColor:(NSString *)color","- (NSString *)content","- (void)setContent:(NSString *)content","- (NSString *)counterIncrement","- (void)setCounterIncrement:(NSString *)counterIncrement","- (NSString *)counterReset","- (void)setCounterReset:(NSString *)counterReset","- (NSString *)cue","- (void)setCue:(NSString *)cue","- (NSString *)cueAfter","- (void)setCueAfter:(NSString *)cueAfter","- (NSString *)cueBefore","- (void)setCueBefore:(NSString *)cueBefore","- (NSString *)cursor","- (void)setCursor:(NSString *)cursor","- (NSString *)direction","- (void)setDirection:(NSString *)direction","- (NSString *)display","- (void)setDisplay:(NSString *)display","- (NSString *)elevation","- (void)setElevation:(NSString *)elevation","- (NSString *)emptyCells","- (void)setEmptyCells:(NSString *)emptyCells","- (NSString *)cssFloat","- (void)setCssFloat:(NSString *)cssFloat","- (NSString *)font","- (void)setFont:(NSString *)font","- (NSString *)fontFamily","- (void)setFontFamily:(NSString *)fontFamily","- (NSString *)fontSize","- (void)setFontSize:(NSString *)fontSize","- (NSString *)fontSizeAdjust","- (void)setFontSizeAdjust:(NSString *)fontSizeAdjust","- (NSString *)fontStretch","- (void)setFontStretch:(NSString *)fontStretch","- (NSString *)fontStyle","- (void)setFontStyle:(NSString *)fontStyle","- (NSString *)fontVariant","- (void)setFontVariant:(NSString *)fontVariant","- (NSString *)fontWeight","- (void)setFontWeight:(NSString *)fontWeight","- (NSString *)height","- (void)setHeight:(NSString *)height","- (NSString *)left","- (void)setLeft:(NSString *)left","- (NSString *)letterSpacing","- (void)setLetterSpacing:(NSString *)letterSpacing","- (NSString *)lineHeight","- (void)setLineHeight:(NSString *)lineHeight","- (NSString *)listStyle","- (void)setListStyle:(NSString *)listStyle","- (NSString *)listStyleImage","- (void)setListStyleImage:(NSString *)listStyleImage","- (NSString *)listStylePosition","- (void)setListStylePosition:(NSString *)listStylePosition","- (NSString *)listStyleType","- (void)setListStyleType:(NSString *)listStyleType","- (NSString *)margin","- (void)setMargin:(NSString *)margin","- (NSString *)marginTop","- (void)setMarginTop:(NSString *)marginTop","- (NSString *)marginRight","- (void)setMarginRight:(NSString *)marginRight","- (NSString *)marginBottom","- (void)setMarginBottom:(NSString *)marginBottom","- (NSString *)marginLeft","- (void)setMarginLeft:(NSString *)marginLeft","- (NSString *)markerOffset","- (void)setMarkerOffset:(NSString *)markerOffset","- (NSString *)marks","- (void)setMarks:(NSString *)marks","- (NSString *)maxHeight","- (void)setMaxHeight:(NSString *)maxHeight","- (NSString *)maxWidth","- (void)setMaxWidth:(NSString *)maxWidth","- (NSString *)minHeight","- (void)setMinHeight:(NSString *)minHeight","- (NSString *)minWidth","- (void)setMinWidth:(NSString *)minWidth","- (NSString *)orphans","- (void)setOrphans:(NSString *)orphans","- (NSString *)outline","- (void)setOutline:(NSString *)outline","- (NSString *)outlineColor","- (void)setOutlineColor:(NSString *)outlineColor","- (NSString *)outlineStyle","- (void)setOutlineStyle:(NSString *)outlineStyle","- (NSString *)outlineWidth","- (void)setOutlineWidth:(NSString *)outlineWidth","- (NSString *)overflow","- (void)setOverflow:(NSString *)overflow","- (NSString *)padding","- (void)setPadding:(NSString *)padding","- (NSString *)paddingTop","- (void)setPaddingTop:(NSString *)paddingTop","- (NSString *)paddingRight","- (void)setPaddingRight:(NSString *)paddingRight","- (NSString *)paddingBottom","- (void)setPaddingBottom:(NSString *)paddingBottom","- (NSString *)paddingLeft","- (void)setPaddingLeft:(NSString *)paddingLeft","- (NSString *)page","- (void)setPage:(NSString *)page","- (NSString *)pageBreakAfter","- (void)setPageBreakAfter:(NSString *)pageBreakAfter","- (NSString *)pageBreakBefore","- (void)setPageBreakBefore:(NSString *)pageBreakBefore","- (NSString *)pageBreakInside","- (void)setPageBreakInside:(NSString *)pageBreakInside","- (NSString *)pause","- (void)setPause:(NSString *)pause","- (NSString *)pauseAfter","- (void)setPauseAfter:(NSString *)pauseAfter","- (NSString *)pauseBefore","- (void)setPauseBefore:(NSString *)pauseBefore","- (NSString *)pitch","- (void)setPitch:(NSString *)pitch","- (NSString *)pitchRange","- (void)setPitchRange:(NSString *)pitchRange","- (NSString *)playDuring","- (void)setPlayDuring:(NSString *)playDuring","- (NSString *)position","- (void)setPosition:(NSString *)position","- (NSString *)quotes","- (void)setQuotes:(NSString *)quotes","- (NSString *)richness","- (void)setRichness:(NSString *)richness","- (NSString *)right","- (void)setRight:(NSString *)right","- (NSString *)size","- (void)setSize:(NSString *)size","- (NSString *)speak","- (void)setSpeak:(NSString *)speak","- (NSString *)speakHeader","- (void)setSpeakHeader:(NSString *)speakHeader","- (NSString *)speakNumeral","- (void)setSpeakNumeral:(NSString *)speakNumeral","- (NSString *)speakPunctuation","- (void)setSpeakPunctuation:(NSString *)speakPunctuation","- (NSString *)speechRate","- (void)setSpeechRate:(NSString *)speechRate","- (NSString *)stress","- (void)setStress:(NSString *)stress","- (NSString *)tableLayout","- (void)setTableLayout:(NSString *)tableLayout","- (NSString *)textAlign","- (void)setTextAlign:(NSString *)textAlign","- (NSString *)textDecoration","- (void)setTextDecoration:(NSString *)textDecoration","- (NSString *)textIndent","- (void)setTextIndent:(NSString *)textIndent","- (NSString *)textShadow","- (void)setTextShadow:(NSString *)textShadow","- (NSString *)textTransform","- (void)setTextTransform:(NSString *)textTransform","- (NSString *)top","- (void)setTop:(NSString *)top","- (NSString *)unicodeBidi","- (void)setUnicodeBidi:(NSString *)unicodeBidi","- (NSString *)verticalAlign","- (void)setVerticalAlign:(NSString *)verticalAlign","- (NSString *)visibility","- (void)setVisibility:(NSString *)visibility","- (NSString *)voiceFamily","- (void)setVoiceFamily:(NSString *)voiceFamily","- (NSString *)volume","- (void)setVolume:(NSString *)volume","- (NSString *)whiteSpace","- (void)setWhiteSpace:(NSString *)whiteSpace","- (NSString *)widows","- (void)setWidows:(NSString *)widows","- (NSString *)width","- (void)setWidth:(NSString *)width","- (NSString *)wordSpacing","- (void)setWordSpacing:(NSString *)wordSpacing","- (NSString *)zIndex","- (void)setZIndex:(NSString *)zIndex","- (void)deleteRule:(unsigned)index","- (float)getFloatValue:(unsigned short)unitType","- (NSString *)getStringValue","- (DOMCounter *)getCounterValue","- (DOMRect *)getRectValue","- (DOMRGBColor *)getRGBColorValue","- (DOMCSSRule *)item:(unsigned)index","- (NSString *)getPropertyValue:(NSString *)propertyName","- (DOMCSSValue *)getPropertyCSSValue:(NSString *)propertyName","- (NSString *)removeProperty:(NSString *)propertyName","- (NSString *)getPropertyPriority:(NSString *)propertyName","- (NSString *)item:(unsigned)index","- (void)deleteRule:(unsigned)index","- (DOMCSSValue *)item:(unsigned)index","- (DOMElement *)createElement:(NSString *)tagName","- (DOMDocumentFragment *)createDocumentFragment","- (DOMText *)createTextNode:(NSString *)data","- (DOMComment *)createComment:(NSString *)data","- (DOMCDATASection *)createCDATASection:(NSString *)data","- (DOMAttr *)createAttribute:(NSString *)name","- (DOMEntityReference *)createEntityReference:(NSString *)name","- (DOMNodeList *)getElementsByTagName:(NSString *)tagname","- (DOMElement *)getElementById:(NSString *)elementId","- (DOMEvent *)createEvent:(NSString *)eventType","- (DOMRange *)createRange","- (DOMNodeList *)getElementsByName:(NSString *)elementName","- (NSString *)getAttribute:(NSString *)name","- (void)removeAttribute:(NSString *)name","- (DOMAttr *)getAttributeNode:(NSString *)name","- (DOMAttr *)setAttributeNode:(DOMAttr *)newAttr","- (DOMAttr *)removeAttributeNode:(DOMAttr *)oldAttr","- (DOMNodeList *)getElementsByTagName:(NSString *)name","- (DOMAttr *)setAttributeNodeNS:(DOMAttr *)newAttr","- (BOOL)hasAttribute:(NSString *)name","- (void)stopPropagation","- (void)preventDefault","- (DOMFile *)item:(unsigned)index","- (DOMNode *)item:(unsigned)index","- (DOMNode *)namedItem:(NSString *)name","- (void)open","- (void)close","- (void)write:(NSString *)text","- (void)writeln:(NSString *)text","- (void)submit","- (void)reset","- (void)select","- (void)click","- (void)start","- (void)stop","- (DOMNode *)item:(unsigned)index","- (DOMNode *)namedItem:(NSString *)name","- (void)remove:(int)index","- (DOMHTMLElement *)createTHead","- (void)deleteTHead","- (DOMHTMLElement *)createTFoot","- (void)deleteTFoot","- (DOMHTMLElement *)createCaption","- (void)deleteCaption","- (DOMHTMLElement *)insertRow:(int)index","- (void)deleteRow:(int)index","- (DOMHTMLElement *)insertCell:(int)index","- (void)deleteCell:(int)index","- (DOMHTMLElement *)insertRow:(int)index","- (void)deleteRow:(int)index","- (void)select","- (BOOL)getModifierState:(NSString *)keyIdentifierArg","- (NSString *)item:(unsigned)index","- (void)deleteMedium:(NSString *)oldMedium","- (void)appendMedium:(NSString *)newMedium","- (DOMNode *)getNamedItem:(NSString *)name","- (DOMNode *)setNamedItem:(DOMNode *)node","- (DOMNode *)removeNamedItem:(NSString *)name","- (DOMNode *)item:(unsigned)index","- (DOMNode *)setNamedItemNS:(DOMNode *)node","- (DOMNode *)removeChild:(DOMNode *)oldChild","- (DOMNode *)appendChild:(DOMNode *)newChild","- (BOOL)hasChildNodes","- (DOMNode *)cloneNode:(BOOL)deep","- (void)normalize","- (BOOL)hasAttributes","- (DOMNode *)nextNode","- (DOMNode *)previousNode","- (void)detach","- (DOMNode *)item:(unsigned)index","- (void)initOverflowEvent:(unsigned short)orient horizontalOverflow:(BOOL)horizontalOverflow verticalOverflow:(BOOL)verticalOverflow","- (void)initProgressEvent:(NSString *)typeArg canBubbleArg:(BOOL)canBubbleArg cancelableArg:(BOOL)cancelableArg lengthComputableArg:(BOOL)lengthComputableArg loadedArg:(unsigned long long)loadedArg totalArg:(unsigned long long)totalArg","- (void)setStartBefore:(DOMNode *)refNode","- (void)setStartAfter:(DOMNode *)refNode","- (void)setEndBefore:(DOMNode *)refNode","- (void)setEndAfter:(DOMNode *)refNode","- (void)collapse:(BOOL)toStart","- (void)selectNode:(DOMNode *)refNode","- (void)selectNodeContents:(DOMNode *)refNode","- (void)deleteContents","- (DOMDocumentFragment *)extractContents","- (DOMDocumentFragment *)cloneContents","- (void)insertNode:(DOMNode *)newNode","- (void)surroundContents:(DOMNode *)newParent","- (DOMRange *)cloneRange","- (NSString *)toString","- (void)detach","- (DOMStyleSheet *)item:(unsigned)index","- (DOMText *)splitText:(unsigned)offset","- (DOMNode *)parentNode","- (DOMNode *)firstChild","- (DOMNode *)lastChild","- (DOMNode *)previousSibling","- (DOMNode *)nextSibling","- (DOMNode *)previousNode","- (DOMNode *)nextNode","- (DOMNode *)iterateNext","- (DOMNode *)snapshotItem:(unsigned)index","- (id)initWithMainResource:(WebResource *)mainResource subresources:(NSArray *)subresources subframeArchives:(NSArray *)subframeArchives","- (id)initWithData:(NSData *)data","- (WebResource *)mainResource","- (NSArray *)subresources","- (NSArray *)subframeArchives","- (NSData *)data","- (void)addItem:(WebHistoryItem *)item","- (void)goBack","- (void)goForward","- (void)goToItem:(WebHistoryItem *)item","- (WebHistoryItem *)backItem","- (WebHistoryItem *)currentItem","- (WebHistoryItem *)forwardItem","- (NSArray *)backListWithLimit:(int)limit","- (NSArray *)forwardListWithLimit:(int)limit","- (int)capacity","- (void)setCapacity:(int)size","- (int)backListCount","- (int)forwardListCount","- (BOOL)containsItem:(WebHistoryItem *)item","- (WebHistoryItem *)itemAtIndex:(int)index","- (void)setPageCacheSize:(WebNSUInteger)size","- (WebNSUInteger)pageCacheSize","- (id)initWithRequest:(NSURLRequest *)request","- (NSData *)data","- (id <WebDocumentRepresentation>)representation","- (WebFrame *)webFrame","- (NSURLRequest *)initialRequest","- (NSMutableURLRequest *)request","- (NSURLResponse *)response","- (NSString *)textEncodingName","- (BOOL)isLoading","- (NSString *)pageTitle","- (NSURL *)unreachableURL","- (WebArchive *)webArchive","- (WebResource *)mainResource","- (NSArray *)subresources","- (WebResource *)subresourceForURL:(NSURL *)URL","- (void)addSubresource:(WebResource *)subresource","- (WebArchive *)webArchive","- (WebFrame *)webFrame","- (NSURL *)URLWithAttributeString:(NSString *)string","- (WebArchive *)webArchive","- (NSString *)markupString","- (WebFrame *)contentFrame","- (WebFrame *)contentFrame","- (WebFrame *)contentFrame","- (NSWindow *)downloadWindowForAuthenticationSheet:(WebDownload *)download","- (BOOL)webView:(WebView *)webView shouldBeginEditingInDOMRange:(DOMRange *)range","- (BOOL)webView:(WebView *)webView shouldEndEditingInDOMRange:(DOMRange *)range","- (BOOL)webView:(WebView *)webView shouldInsertNode:(DOMNode *)node replacingDOMRange:(DOMRange *)range givenAction:(WebViewInsertAction)action","- (BOOL)webView:(WebView *)webView shouldInsertText:(NSString *)text replacingDOMRange:(DOMRange *)range givenAction:(WebViewInsertAction)action","- (BOOL)webView:(WebView *)webView shouldDeleteDOMRange:(DOMRange *)range","- (BOOL)webView:(WebView *)webView shouldChangeSelectedDOMRange:(DOMRange *)currentRange toDOMRange:(DOMRange *)proposedRange affinity:(NSSelectionAffinity)selectionAffinity stillSelecting:(BOOL)flag","- (BOOL)webView:(WebView *)webView shouldApplyStyle:(DOMCSSStyleDeclaration *)style toElementsInDOMRange:(DOMRange *)range","- (BOOL)webView:(WebView *)webView shouldChangeTypingStyle:(DOMCSSStyleDeclaration *)currentStyle toStyle:(DOMCSSStyleDeclaration *)proposedStyle","- (BOOL)webView:(WebView *)webView doCommandBySelector:(SEL)selector","- (void)webViewDidBeginEditing:(NSNotification *)notification","- (void)webViewDidChange:(NSNotification *)notification","- (void)webViewDidEndEditing:(NSNotification *)notification","- (void)webViewDidChangeTypingStyle:(NSNotification *)notification","- (void)webViewDidChangeSelection:(NSNotification *)notification","- (NSUndoManager *)undoManagerForWebView:(WebView *)webView","- (id)initWithName:(NSString *)name webFrameView:(WebFrameView *)view webView:(WebView *)webView","- (NSString *)name","- (WebView *)webView","- (WebFrameView *)frameView","- (DOMDocument *)DOMDocument","- (DOMHTMLElement *)frameElement","- (void)loadRequest:(NSURLRequest *)request","- (void)loadData:(NSData *)data MIMEType:(NSString *)MIMEType textEncodingName:(NSString *)encodingName baseURL:(NSURL *)URL","- (void)loadHTMLString:(NSString *)string baseURL:(NSURL *)URL","- (void)loadAlternateHTMLString:(NSString *)string baseURL:(NSURL *)baseURL forUnreachableURL:(NSURL *)unreachableURL","- (void)loadArchive:(WebArchive *)archive","- (WebDataSource *)dataSource","- (WebDataSource *)provisionalDataSource","- (void)stopLoading","- (void)reload","- (void)reloadFromOrigin","- (WebFrame *)findFrameNamed:(NSString *)name","- (WebFrame *)parentFrame","- (NSArray *)childFrames","- (WebScriptObject *)windowObject","- (JSGlobalContextRef)globalContext","- (void)webView:(WebView *)sender didStartProvisionalLoadForFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender didReceiveServerRedirectForProvisionalLoadForFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender didFailProvisionalLoadWithError:(NSError *)error forFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender didCommitLoadForFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender didReceiveTitle:(NSString *)title forFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender didReceiveIcon:(NSImage *)image forFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender didFinishLoadForFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender didFailLoadWithError:(NSError *)error forFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender didChangeLocationWithinPageForFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender willPerformClientRedirectToURL:(NSURL *)URL delay:(NSTimeInterval)seconds fireDate:(NSDate *)date forFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender didCancelClientRedirectForFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender willCloseFrame:(WebFrame *)frame","- (void)webView:(WebView *)webView didClearWindowObject:(WebScriptObject *)windowObject forFrame:(WebFrame *)frame","- (WebFrame *)webFrame","- (NSView <WebDocumentView> *)documentView","- (void)setAllowsScrolling:(BOOL)flag","- (BOOL)allowsScrolling","- (BOOL)canPrintHeadersAndFooters","- (NSPrintOperation *)printOperationWithPrintInfo:(NSPrintInfo *)printInfo","- (BOOL)documentViewShouldHandlePrint","- (void)printDocumentView","+ (WebHistory *)optionalSharedHistory","+ (void)setOptionalSharedHistory:(WebHistory *)history","- (BOOL)loadFromURL:(NSURL *)URL error:(NSError **)error","- (BOOL)saveToURL:(NSURL *)URL error:(NSError **)error","- (void)addItems:(NSArray *)newItems","- (void)removeItems:(NSArray *)items","- (void)removeAllItems","- (NSArray *)orderedLastVisitedDays","- (NSArray *)orderedItemsLastVisitedOnDay:(NSCalendarDate *)calendarDate","- (WebHistoryItem *)itemForURL:(NSURL *)URL","- (void)setHistoryItemLimit:(int)limit","- (int)historyItemLimit","- (void)setHistoryAgeInDaysLimit:(int)limit","- (int)historyAgeInDaysLimit","- (id)initWithURLString:(NSString *)URLString title:(NSString *)title lastVisitedTimeInterval:(NSTimeInterval)time","- (NSString *)originalURLString","- (NSString *)URLString","- (NSString *)title","- (NSTimeInterval)lastVisitedTimeInterval","- (void)setAlternateTitle:(NSString *)alternateTitle","- (NSString *)alternateTitle","- (NSImage *)icon","- (jobject)webPlugInGetApplet","- (jvalue)webPlugInCallJava:(jobject)object isStatic:(BOOL)isStatic returnType:(WebJNIReturnType)returnType method:(jmethodID)method arguments:(jvalue*)args callingURL:(NSURL *)url exceptionDescription:(NSString **)exceptionString","- (void)webPlugInInitialize","- (void)webPlugInStart","- (void)webPlugInStop","- (void)webPlugInDestroy","- (void)webPlugInSetIsSelected:(BOOL)isSelected","- (id)objectForWebScript","- (void)webPlugInContainerLoadRequest:(NSURLRequest *)request inFrame:(NSString *)target","- (void)webPlugInContainerShowStatus:(NSString *)message","- (NSColor *)webPlugInContainerSelectionColor","- (WebFrame *)webFrame","- (void)webView:(WebView *)webView decidePolicyForNavigationAction:(NSDictionary *)actionInformation request:(NSURLRequest *)request frame:(WebFrame *)frame decisionListener:(id<WebPolicyDecisionListener>)listener","- (void)webView:(WebView *)webView decidePolicyForNewWindowAction:(NSDictionary *)actionInformation request:(NSURLRequest *)request newFrameName:(NSString *)frameName decisionListener:(id<WebPolicyDecisionListener>)listener","- (void)webView:(WebView *)webView decidePolicyForMIMEType:(NSString *)type request:(NSURLRequest *)request frame:(WebFrame *)frame decisionListener:(id<WebPolicyDecisionListener>)listener","- (void)webView:(WebView *)webView unableToImplementPolicyWithError:(NSError *)error frame:(WebFrame *)frame","+ (WebPreferences *)standardPreferences","- (id)initWithIdentifier:(NSString *)anIdentifier","- (NSString *)identifier","- (NSString *)standardFontFamily","- (void)setStandardFontFamily:(NSString *)family","- (NSString *)fixedFontFamily","- (void)setFixedFontFamily:(NSString *)family","- (NSString *)serifFontFamily","- (void)setSerifFontFamily:(NSString *)family","- (NSString *)sansSerifFontFamily","- (void)setSansSerifFontFamily:(NSString *)family","- (NSString *)cursiveFontFamily","- (void)setCursiveFontFamily:(NSString *)family","- (NSString *)fantasyFontFamily","- (void)setFantasyFontFamily:(NSString *)family","- (int)defaultFontSize","- (void)setDefaultFontSize:(int)size","- (int)defaultFixedFontSize","- (void)setDefaultFixedFontSize:(int)size","- (int)minimumFontSize","- (void)setMinimumFontSize:(int)size","- (int)minimumLogicalFontSize","- (void)setMinimumLogicalFontSize:(int)size","- (NSString *)defaultTextEncodingName","- (void)setDefaultTextEncodingName:(NSString *)encoding","- (BOOL)userStyleSheetEnabled","- (void)setUserStyleSheetEnabled:(BOOL)flag","- (NSURL *)userStyleSheetLocation","- (void)setUserStyleSheetLocation:(NSURL *)URL","- (BOOL)isJavaEnabled","- (void)setJavaEnabled:(BOOL)flag","- (BOOL)isJavaScriptEnabled","- (void)setJavaScriptEnabled:(BOOL)flag","- (BOOL)javaScriptCanOpenWindowsAutomatically","- (void)setJavaScriptCanOpenWindowsAutomatically:(BOOL)flag","- (BOOL)arePlugInsEnabled","- (void)setPlugInsEnabled:(BOOL)flag","- (BOOL)allowsAnimatedImages","- (void)setAllowsAnimatedImages:(BOOL)flag","- (BOOL)allowsAnimatedImageLooping","- (void)setAllowsAnimatedImageLooping: (BOOL)flag","- (void)setLoadsImagesAutomatically: (BOOL)flag","- (BOOL)loadsImagesAutomatically","- (void)setAutosaves:(BOOL)flag","- (BOOL)autosaves","- (void)setShouldPrintBackgrounds:(BOOL)flag","- (BOOL)shouldPrintBackgrounds","- (void)setPrivateBrowsingEnabled:(BOOL)flag","- (BOOL)privateBrowsingEnabled","- (void)setTabsToLinks:(BOOL)flag","- (BOOL)tabsToLinks","- (void)setUsesPageCache:(BOOL)usesPageCache","- (BOOL)usesPageCache","- (void)setCacheModel:(WebCacheModel)cacheModel","- (WebCacheModel)cacheModel","- (id)initWithData:(NSData *)data URL:(NSURL *)URL MIMEType:(NSString *)MIMEType textEncodingName:(NSString *)textEncodingName frameName:(NSString *)frameName","- (NSData *)data","- (NSURL *)URL","- (NSString *)MIMEType","- (NSString *)textEncodingName","- (NSString *)frameName","- (id)webView:(WebView *)sender identifierForInitialRequest:(NSURLRequest *)request fromDataSource:(WebDataSource *)dataSource","- (NSURLRequest *)webView:(WebView *)sender resource:(id)identifier willSendRequest:(NSURLRequest *)request redirectResponse:(NSURLResponse *)redirectResponse fromDataSource:(WebDataSource *)dataSource","- (void)webView:(WebView *)sender resource:(id)identifier didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge fromDataSource:(WebDataSource *)dataSource","- (void)webView:(WebView *)sender resource:(id)identifier didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge fromDataSource:(WebDataSource *)dataSource","- (void)webView:(WebView *)sender resource:(id)identifier didReceiveResponse:(NSURLResponse *)response fromDataSource:(WebDataSource *)dataSource","- (void)webView:(WebView *)sender resource:(id)identifier didReceiveContentLength:(WebNSInteger)length fromDataSource:(WebDataSource *)dataSource","- (void)webView:(WebView *)sender resource:(id)identifier didFinishLoadingFromDataSource:(WebDataSource *)dataSource","- (void)webView:(WebView *)sender resource:(id)identifier didFailLoadingWithError:(NSError *)error fromDataSource:(WebDataSource *)dataSource","- (void)webView:(WebView *)sender plugInFailedWithError:(NSError *)error dataSource:(WebDataSource *)dataSource","+ (NSString *)webScriptNameForSelector:(SEL)selector","+ (BOOL)isSelectorExcludedFromWebScript:(SEL)selector","+ (NSString *)webScriptNameForKey:(const char *)name","+ (BOOL)isKeyExcludedFromWebScript:(const char *)name","- (id)invokeUndefinedMethodFromWebScript:(NSString *)name withArguments:(NSArray *)arguments","- (id)invokeDefaultMethodWithArguments:(NSArray *)arguments","- (void)finalizeForWebScript","+ (BOOL)throwException:(NSString *)exceptionMessage","- (id)callWebScriptMethod:(NSString *)name withArguments:(NSArray *)arguments","- (id)evaluateWebScript:(NSString *)script","- (void)removeWebScriptKey:(NSString *)name","- (NSString *)stringRepresentation","- (id)webScriptValueAtIndex:(unsigned)index","- (void)setWebScriptValueAtIndex:(unsigned)index value:(id)value","- (void)setException:(NSString *)description","+ (WebUndefined *)undefined","- (WebView *)webView:(WebView *)sender createWebViewWithRequest:(NSURLRequest *)request","- (void)webViewShow:(WebView *)sender","- (WebView *)webView:(WebView *)sender createWebViewModalDialogWithRequest:(NSURLRequest *)request","- (void)webViewRunModal:(WebView *)sender","- (void)webViewClose:(WebView *)sender","- (void)webViewFocus:(WebView *)sender","- (void)webViewUnfocus:(WebView *)sender","- (NSResponder *)webViewFirstResponder:(WebView *)sender","- (void)webView:(WebView *)sender makeFirstResponder:(NSResponder *)responder","- (void)webView:(WebView *)sender setStatusText:(NSString *)text","- (NSString *)webViewStatusText:(WebView *)sender","- (BOOL)webViewAreToolbarsVisible:(WebView *)sender","- (void)webView:(WebView *)sender setToolbarsVisible:(BOOL)visible","- (BOOL)webViewIsStatusBarVisible:(WebView *)sender","- (void)webView:(WebView *)sender setStatusBarVisible:(BOOL)visible","- (BOOL)webViewIsResizable:(WebView *)sender","- (void)webView:(WebView *)sender setResizable:(BOOL)resizable","- (void)webView:(WebView *)sender setFrame:(NSRect)frame","- (NSRect)webViewFrame:(WebView *)sender","- (void)webView:(WebView *)sender runJavaScriptAlertPanelWithMessage:(NSString *)message initiatedByFrame:(WebFrame *)frame","- (BOOL)webView:(WebView *)sender runJavaScriptConfirmPanelWithMessage:(NSString *)message initiatedByFrame:(WebFrame *)frame","- (NSString *)webView:(WebView *)sender runJavaScriptTextInputPanelWithPrompt:(NSString *)prompt defaultText:(NSString *)defaultText initiatedByFrame:(WebFrame *)frame","- (BOOL)webView:(WebView *)sender runBeforeUnloadConfirmPanelWithMessage:(NSString *)message initiatedByFrame:(WebFrame *)frame","- (void)webView:(WebView *)sender runOpenPanelForFileButtonWithResultListener:(id<WebOpenPanelResultListener>)resultListener","- (void)webView:(WebView *)sender mouseDidMoveOverElement:(NSDictionary *)elementInformation modifierFlags:(WebNSUInteger)modifierFlags","- (NSArray *)webView:(WebView *)sender contextMenuItemsForElement:(NSDictionary *)element defaultMenuItems:(NSArray *)defaultMenuItems","- (BOOL)webView:(WebView *)webView validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)item defaultValidation:(BOOL)defaultValidation","- (BOOL)webView:(WebView *)webView shouldPerformAction:(SEL)action fromSender:(id)sender","- (WebNSUInteger)webView:(WebView *)webView dragDestinationActionMaskForDraggingInfo:(id <NSDraggingInfo>)draggingInfo","- (void)webView:(WebView *)webView willPerformDragDestinationAction:(WebDragDestinationAction)action forDraggingInfo:(id <NSDraggingInfo>)draggingInfo","- (WebNSUInteger)webView:(WebView *)webView dragSourceActionMaskForPoint:(NSPoint)point","- (void)webView:(WebView *)webView willPerformDragSourceAction:(WebDragSourceAction)action fromPoint:(NSPoint)point withPasteboard:(NSPasteboard *)pasteboard","- (void)webView:(WebView *)sender printFrameView:(WebFrameView *)frameView","- (float)webViewHeaderHeight:(WebView *)sender","- (float)webViewFooterHeight:(WebView *)sender","- (void)webView:(WebView *)sender drawHeaderInRect:(NSRect)rect","- (void)webView:(WebView *)sender drawFooterInRect:(NSRect)rect","+ (BOOL)canShowMIMEType:(NSString *)MIMEType","+ (BOOL)canShowMIMETypeAsHTML:(NSString *)MIMEType","+ (NSArray *)MIMETypesShownAsHTML","+ (void)setMIMETypesShownAsHTML:(NSArray *)MIMETypes","+ (NSURL *)URLFromPasteboard:(NSPasteboard *)pasteboard","+ (NSString *)URLTitleFromPasteboard:(NSPasteboard *)pasteboard","+ (void)registerURLSchemeAsLocal:(NSString *)scheme","- (id)initWithFrame:(NSRect)frame frameName:(NSString *)frameName groupName:(NSString *)groupName","- (void)close","- (void)setShouldCloseWithWindow:(BOOL)close","- (BOOL)shouldCloseWithWindow","- (void)setUIDelegate:(id)delegate","- (id)UIDelegate","- (void)setResourceLoadDelegate:(id)delegate","- (id)resourceLoadDelegate","- (void)setDownloadDelegate:(id)delegate","- (id)downloadDelegate","- (void)setFrameLoadDelegate:(id)delegate","- (id)frameLoadDelegate","- (void)setPolicyDelegate:(id)delegate","- (id)policyDelegate","- (WebFrame *)mainFrame","- (WebFrame *)selectedFrame","- (WebBackForwardList *)backForwardList","- (void)setMaintainsBackForwardList:(BOOL)flag","- (BOOL)goBack","- (BOOL)goForward","- (BOOL)goToBackForwardItem:(WebHistoryItem *)item","- (void)setTextSizeMultiplier:(float)multiplier","- (float)textSizeMultiplier","- (void)setApplicationNameForUserAgent:(NSString *)applicationName","- (NSString *)applicationNameForUserAgent","- (void)setCustomUserAgent:(NSString *)userAgentString","- (NSString *)customUserAgent","- (NSString *)userAgentForURL:(NSURL *)URL","- (BOOL)supportsTextEncoding","- (void)setCustomTextEncodingName:(NSString *)encodingName","- (NSString *)customTextEncodingName","- (void)setMediaStyle:(NSString *)mediaStyle","- (NSString *)mediaStyle","- (NSString *)stringByEvaluatingJavaScriptFromString:(NSString *)script","- (WebScriptObject *)windowScriptObject","- (void)setPreferences: (WebPreferences *)prefs","- (WebPreferences *)preferences","- (void)setPreferencesIdentifier:(NSString *)anIdentifier","- (NSString *)preferencesIdentifier","- (void)setHostWindow:(NSWindow *)hostWindow","- (NSWindow *)hostWindow","- (BOOL)searchFor:(NSString *)string direction:(BOOL)forward caseSensitive:(BOOL)caseFlag wrap:(BOOL)wrapFlag","+ (void)registerViewClass:(Class)viewClass representationClass:(Class)representationClass forMIMEType:(NSString *)MIMEType","- (void)setGroupName:(NSString *)groupName","- (NSString *)groupName","- (double)estimatedProgress","- (BOOL)isLoading","- (NSDictionary *)elementAtPoint:(NSPoint)point","- (NSArray *)pasteboardTypesForSelection","- (void)writeSelectionWithPasteboardTypes:(NSArray *)types toPasteboard:(NSPasteboard *)pasteboard","- (NSArray *)pasteboardTypesForElement:(NSDictionary *)element","- (void)writeElement:(NSDictionary *)element withPasteboardTypes:(NSArray *)types toPasteboard:(NSPasteboard *)pasteboard","- (void)moveDragCaretToPoint:(NSPoint)point","- (void)removeDragCaret","- (void)setDrawsBackground:(BOOL)drawsBackround","- (BOOL)drawsBackground","- (void)setShouldUpdateWhileOffscreen:(BOOL)updateWhileOffscreen","- (BOOL)shouldUpdateWhileOffscreen","- (void)setMainFrameURL:(NSString *)URLString","- (NSString *)mainFrameURL","- (DOMDocument *)mainFrameDocument","- (NSString *)mainFrameTitle","- (NSImage *)mainFrameIcon","- (IBAction)takeStringURLFrom:(id)sender","- (IBAction)stopLoading:(id)sender","- (IBAction)reload:(id)sender","- (IBAction)reloadFromOrigin:(id)sender","- (BOOL)canGoBack","- (IBAction)goBack:(id)sender","- (BOOL)canGoForward","- (IBAction)goForward:(id)sender","- (BOOL)canMakeTextLarger","- (IBAction)makeTextLarger:(id)sender","- (BOOL)canMakeTextSmaller","- (IBAction)makeTextSmaller:(id)sender","- (BOOL)canMakeTextStandardSize","- (IBAction)makeTextStandardSize:(id)sender","- (IBAction)toggleContinuousSpellChecking:(id)sender","- (IBAction)toggleSmartInsertDelete:(id)sender","- (DOMCSSStyleDeclaration *)computedStyleForElement:(DOMElement *)element pseudoElement:(NSString *)pseudoElement","- (DOMRange *)editableDOMRangeForPoint:(NSPoint)point","- (void)setSelectedDOMRange:(DOMRange *)range affinity:(NSSelectionAffinity)selectionAffinity","- (DOMRange *)selectedDOMRange","- (NSSelectionAffinity)selectionAffinity","- (BOOL)maintainsInactiveSelection","- (void)setEditable:(BOOL)flag","- (BOOL)isEditable","- (void)setTypingStyle:(DOMCSSStyleDeclaration *)style","- (DOMCSSStyleDeclaration *)typingStyle","- (void)setSmartInsertDeleteEnabled:(BOOL)flag","- (BOOL)smartInsertDeleteEnabled","- (void)setContinuousSpellCheckingEnabled:(BOOL)flag","- (BOOL)isContinuousSpellCheckingEnabled","- (WebNSInteger)spellCheckerDocumentTag","- (NSUndoManager *)undoManager","- (void)setEditingDelegate:(id)delegate","- (id)editingDelegate","- (DOMCSSStyleDeclaration *)styleDeclarationWithText:(NSString *)text","- (void)replaceSelectionWithNode:(DOMNode *)node","- (void)replaceSelectionWithText:(NSString *)text","- (void)replaceSelectionWithMarkupString:(NSString *)markupString","- (void)replaceSelectionWithArchive:(WebArchive *)archive","- (void)deleteSelection","- (void)applyStyle:(DOMCSSStyleDeclaration *)style","- (void)copy:(id)sender","- (void)cut:(id)sender","- (void)paste:(id)sender","- (void)copyFont:(id)sender","- (void)pasteFont:(id)sender","- (void)delete:(id)sender","- (void)pasteAsPlainText:(id)sender","- (void)pasteAsRichText:(id)sender","- (void)changeFont:(id)sender","- (void)changeAttributes:(id)sender","- (void)changeDocumentBackgroundColor:(id)sender","- (void)changeColor:(id)sender","- (void)alignCenter:(id)sender","- (void)alignJustified:(id)sender","- (void)alignLeft:(id)sender","- (void)alignRight:(id)sender","- (void)checkSpelling:(id)sender","- (void)showGuessPanel:(id)sender","- (void)performFindPanelAction:(id)sender","- (void)startSpeaking:(id)sender","- (void)stopSpeaking:(id)sender","- (void)moveToBeginningOfSentence:(id)sender","- (void)moveToBeginningOfSentenceAndModifySelection:(id)sender","- (void)moveToEndOfSentence:(id)sender","- (void)moveToEndOfSentenceAndModifySelection:(id)sender","- (void)selectSentence:(id)sender","- (void)capitalizeWord:(id)sender","- (void)centerSelectionInVisibleArea:(id)sender","- (void)changeCaseOfLetter:(id)sender","- (void)complete:(id)sender","- (void)deleteBackward:(id)sender","- (void)deleteBackwardByDecomposingPreviousCharacter:(id)sender","- (void)deleteForward:(id)sender","- (void)deleteToBeginningOfLine:(id)sender","- (void)deleteToBeginningOfParagraph:(id)sender","- (void)deleteToEndOfLine:(id)sender","- (void)deleteToEndOfParagraph:(id)sender","- (void)deleteWordBackward:(id)sender","- (void)deleteWordForward:(id)sender","- (void)indent:(id)sender","- (void)insertBacktab:(id)sender","- (void)insertNewline:(id)sender","- (void)insertParagraphSeparator:(id)sender","- (void)insertTab:(id)sender","- (void)lowercaseWord:(id)sender","- (void)moveBackward:(id)sender","- (void)moveBackwardAndModifySelection:(id)sender","- (void)moveDown:(id)sender","- (void)moveDownAndModifySelection:(id)sender","- (void)moveForward:(id)sender","- (void)moveForwardAndModifySelection:(id)sender","- (void)moveLeft:(id)sender","- (void)moveLeftAndModifySelection:(id)sender","- (void)moveRight:(id)sender","- (void)moveRightAndModifySelection:(id)sender","- (void)moveToBeginningOfDocument:(id)sender","- (void)moveToBeginningOfDocumentAndModifySelection:(id)sender","- (void)moveToBeginningOfLine:(id)sender","- (void)moveToBeginningOfLineAndModifySelection:(id)sender","- (void)moveToBeginningOfParagraph:(id)sender","- (void)moveToBeginningOfParagraphAndModifySelection:(id)sender","- (void)moveToEndOfDocument:(id)sender","- (void)moveToEndOfDocumentAndModifySelection:(id)sender","- (void)moveToEndOfLine:(id)sender","- (void)moveToEndOfLineAndModifySelection:(id)sender","- (void)moveToEndOfParagraph:(id)sender","- (void)moveToEndOfParagraphAndModifySelection:(id)sender","- (void)moveUp:(id)sender","- (void)moveUpAndModifySelection:(id)sender","- (void)moveWordBackward:(id)sender","- (void)moveWordBackwardAndModifySelection:(id)sender","- (void)moveWordForward:(id)sender","- (void)moveWordForwardAndModifySelection:(id)sender","- (void)moveWordLeft:(id)sender","- (void)moveWordLeftAndModifySelection:(id)sender","- (void)moveWordRight:(id)sender","- (void)moveWordRightAndModifySelection:(id)sender","- (void)pageDown:(id)sender","- (void)pageUp:(id)sender","- (void)scrollLineDown:(id)sender","- (void)scrollLineUp:(id)sender","- (void)scrollPageDown:(id)sender","- (void)scrollPageUp:(id)sender","- (void)selectAll:(id)sender","- (void)selectLine:(id)sender","- (void)selectParagraph:(id)sender","- (void)selectWord:(id)sender","- (void)uppercaseWord:(id)sender"]}
