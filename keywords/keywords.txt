[ada]
abort else new return abs elsif not reverse abstract end null accept entry select access exception of separate aliased exit or some all others subtype and for out synchronized array function overriding at tagged generic package task begin goto pragma terminate body private then if procedure type case in protected constant interface until is raise use declare range delay limited record when delta loop rem while digits renames with do mod requeue xor

[arduino]
???

[c]
auto break case char const continue default do double else enum extern float for goto if inline int long register restrict return short signed sizeof static struct switch typedef union unsigned void volatile while _Alignas _Alignof _Atomic _Bool _Complex _Generic _Imaginary _Noreturn _Static_assert _Thread_local

[c++]
alignas alignof and and_eq asm auto bitand bitor bool break case catch char char16_t char32_t class compl const constexpr const_cast continue decltype default delete do double dynamic_cast else enum explicit export extern false float for friend goto if inline int long mutable namespace new noexcept not not_eq nullptr operator or or_eq private protected public register reinterpret_cast return short signed sizeof static static_assert static_cast struct switch template this thread_local throw true try typedef typeid typename union unsigned using virtual void volatile wchar_t while xor xor_eq

[csharp]
abstract event new struct as explicit null switch base extern object this bool false operator throw break finally out true byte fixed override try case float params typeof catch for private uint char foreach protected ulong checked goto public unchecked class if readonly unsafe const implicit ref ushort continue in return using decimal int sbyte virtual default interface sealed volatile delegate internal short void do is sizeof while double lock stackalloc else long static enum namespace string

[clojure]
???

[css]
???

[d]
abstract alias align asm assert auto body bool break byte case cast catch cdouble cent cfloat char class const continue creal dchar debug default delegate delete deprecated do double else enum export extern false final finally float for foreach foreach_reverse function goto idouble if ifloat immutable import in inout int interface invariant ireal is lazy long mixin module new nothrow null out override package pragma private protected public pure real ref return scope shared short static string struct super switch synchronized template this throw true try typedef typeid typeof ubyte ucent uint ulong union unittest ushort version void volatile wchar while with __FILE__ __LINE__ __gshared __traits __vector __parameters

[fortran]
???

[go]
break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var

[groovy]
???

[haskell]
as case of class data family default deriving do forall foreign hiding if then else import infix infixl infixr instance let in mdo module newtype proc qualified rec type where

[io]


[java]
abstract assert boolean break byte case catch char class continue default do double else enum extends final finally float for if implements import instanceof int interface long native new package private protected public return short static strictfp super switch synchronized this throw throws transient try void volatile while false null true

[js]
break case catch continue debugger default delete do else finally for function if in instanceof new return switch this throw try typeof var void while with

[latex]
???

[less]
???

[lisp]
???

[lua]
and break do else elseif end false for function if in local nil not or repeat return then true until while

[matlab]
???

[ml]
abstype and andalso as case datatype do else end eqtype exception fn fun functor handle if in include infix infixr let local nonfix of op open orelse raise rec sharing sig signature struct structure then type val where with withtype while

[objc]
???

[objj]
???

[ocaml]
and as assert begin class constraint do done downto else end exception external false for fun function functor if in include inherit inherit! initializer lazy let match method method! module mutable new object of open or private rec sig struct then to true try type val val! virtual when while with

[pascal]
???

[perl]
__DATA__ else lock qw __END__ elsif lt qx __FILE__ eq m s __LINE__ exp ne sub __PACKAGE__ for no tr and foreach or unless cmp ge package until continue gt q while CORE if qq xor do le qr y

[php]
abstract and as break callable case catch class clone const continue declare default do echo else elseif enddeclare endfor endforeach endif endswitch endwhile extends final for foreach function global goto if implements include include_once instanceof insteadof interface namespace new or print private protected public require require_once return static switch throw trait try use var while xor __CLASS__ __DIR__ __FILE__ __FUNCTION__ __LINE__ __METHOD__ __NAMESPACE__ __TRAIT__

[prolog]

[python]
and del from not while as elif global or with assert else if pass yield break except import print class exec in raise continue finally is return def for lambda try

[ruby]
BEGIN END __ENCODING__ __END__ __FILE__ __LINE__ alias and begin break case class def defined? do else elsif end ensure false for if in module next nil not or redo rescue retry return self super then true undef unless until when while yield 

[sass]
???

[stylus]
???

[scheme]
???

[scss]
???

[tex]
???

[xml]
???
